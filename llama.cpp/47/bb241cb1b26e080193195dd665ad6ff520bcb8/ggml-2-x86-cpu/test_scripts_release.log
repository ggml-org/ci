+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.539 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.022.017 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.066 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.076 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.081 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.083 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.086 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.086 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.087 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.088 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.089 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.090 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.095 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.095 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.096 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.096 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.097 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.430 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.448 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.214 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.220 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.220 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.221 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.222 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.222 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.223 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.233 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.233 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.234 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.235 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.236 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.238 I llama_model_loader: - type  f32:   37 tensors
0.00.133.241 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.949 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.129 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.674 I llm_load_vocab: special tokens cache size = 5
0.00.269.549 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.565 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.566 I llm_load_print_meta: arch             = gemma
0.00.269.567 I llm_load_print_meta: vocab type       = SPM
0.00.269.568 I llm_load_print_meta: n_vocab          = 256000
0.00.269.568 I llm_load_print_meta: n_merges         = 0
0.00.269.568 I llm_load_print_meta: vocab_only       = 0
0.00.269.569 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.569 I llm_load_print_meta: n_embd           = 2048
0.00.269.569 I llm_load_print_meta: n_layer          = 18
0.00.269.581 I llm_load_print_meta: n_head           = 8
0.00.269.583 I llm_load_print_meta: n_head_kv        = 1
0.00.269.583 I llm_load_print_meta: n_rot            = 256
0.00.269.584 I llm_load_print_meta: n_swa            = 0
0.00.269.584 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.584 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.585 I llm_load_print_meta: n_gqa            = 8
0.00.269.586 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.587 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.588 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.589 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.589 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.590 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.590 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.591 I llm_load_print_meta: n_ff             = 16384
0.00.269.591 I llm_load_print_meta: n_expert         = 0
0.00.269.592 I llm_load_print_meta: n_expert_used    = 0
0.00.269.592 I llm_load_print_meta: causal attn      = 1
0.00.269.592 I llm_load_print_meta: pooling type     = 0
0.00.269.592 I llm_load_print_meta: rope type        = 2
0.00.269.593 I llm_load_print_meta: rope scaling     = linear
0.00.269.595 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.595 I llm_load_print_meta: freq_scale_train = 1
0.00.269.595 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.596 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.596 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.596 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.596 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.596 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.597 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.597 I llm_load_print_meta: model type       = 2B
0.00.269.598 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.599 I llm_load_print_meta: model params     = 2.51 B
0.00.269.600 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.600 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.600 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.601 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.601 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.602 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.602 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.602 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.603 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.603 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.603 I llm_load_print_meta: max token length = 93
0.00.269.621 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.003 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.369.010 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.369.010 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.369.011 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.369.012 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.369.012 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.374.067 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.072 I llama_new_context_with_model: n_batch    = 2048
0.00.374.073 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.073 I llama_new_context_with_model: flash_attn = 0
0.00.374.076 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.077 I llama_new_context_with_model: freq_scale = 1
0.00.402.120 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.133 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.402.223 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.081 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.403.088 I llama_new_context_with_model: graph nodes  = 601
0.00.403.089 I llama_new_context_with_model: graph splits = 1
0.00.403.090 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.610 I main: llama threadpool init, n_threads = 4
0.00.493.623 I 
0.00.493.702 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.705 I 
0.00.493.745 I sampler seed: 3861379301
0.00.493.755 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.763 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.493.765 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.765 I 
 increasities. [end of text]


0.00.773.430 I llama_perf_sampler_print:    sampling time =       0.58 ms /     5 runs   (    0.12 ms per token,  8547.01 tokens per second)
0.00.773.433 I llama_perf_context_print:        load time =     491.73 ms
0.00.773.434 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.773.437 I llama_perf_context_print:        eval time =     276.64 ms /     4 runs   (   69.16 ms per token,    14.46 tokens per second)
0.00.773.438 I llama_perf_context_print:       total time =     279.83 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.571 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.271 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.288 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.295 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.296 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.301 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.302 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.302 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.303 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.304 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.304 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.309 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.310 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.311 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.311 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.312 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.174 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.155 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.933 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.939 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.939 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.940 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.941 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.941 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.942 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.944 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.945 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.945 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.946 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.947 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.950 I llama_model_loader: - type  f32:   37 tensors
0.00.133.953 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.114 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.092 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.644 I llm_load_vocab: special tokens cache size = 5
0.00.271.372 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.388 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.389 I llm_load_print_meta: arch             = gemma
0.00.271.389 I llm_load_print_meta: vocab type       = SPM
0.00.271.390 I llm_load_print_meta: n_vocab          = 256000
0.00.271.390 I llm_load_print_meta: n_merges         = 0
0.00.271.391 I llm_load_print_meta: vocab_only       = 0
0.00.271.391 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.391 I llm_load_print_meta: n_embd           = 2048
0.00.271.391 I llm_load_print_meta: n_layer          = 18
0.00.271.403 I llm_load_print_meta: n_head           = 8
0.00.271.404 I llm_load_print_meta: n_head_kv        = 1
0.00.271.404 I llm_load_print_meta: n_rot            = 256
0.00.271.404 I llm_load_print_meta: n_swa            = 0
0.00.271.405 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.405 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.406 I llm_load_print_meta: n_gqa            = 8
0.00.271.407 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.408 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.409 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.410 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.411 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.412 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.412 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.413 I llm_load_print_meta: n_ff             = 16384
0.00.271.414 I llm_load_print_meta: n_expert         = 0
0.00.271.414 I llm_load_print_meta: n_expert_used    = 0
0.00.271.415 I llm_load_print_meta: causal attn      = 1
0.00.271.415 I llm_load_print_meta: pooling type     = 0
0.00.271.418 I llm_load_print_meta: rope type        = 2
0.00.271.418 I llm_load_print_meta: rope scaling     = linear
0.00.271.420 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.421 I llm_load_print_meta: freq_scale_train = 1
0.00.271.421 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.421 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.422 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.422 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.423 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.423 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.423 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.424 I llm_load_print_meta: model type       = 2B
0.00.271.425 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.426 I llm_load_print_meta: model params     = 2.51 B
0.00.271.426 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.427 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.428 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.428 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.428 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.429 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.429 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.430 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.430 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.431 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.431 I llm_load_print_meta: max token length = 93
0.00.271.449 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.006 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.371.974 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.981 I llama_new_context_with_model: n_batch    = 2048
0.00.371.981 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.982 I llama_new_context_with_model: flash_attn = 0
0.00.371.985 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.986 I llama_new_context_with_model: freq_scale = 1
0.00.401.464 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.401.477 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.401.571 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.417 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.402.424 I llama_new_context_with_model: graph nodes  = 601
0.00.402.425 I llama_new_context_with_model: graph splits = 1
0.00.402.427 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.645 I main: llama threadpool init, n_threads = 4
0.00.489.659 I 
0.00.489.737 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.740 I 
0.00.489.781 I sampler seed: 2414023180
0.00.489.791 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.799 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.489.801 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.801 I 
 increasities, which involve the simultaneous activation of multiple sensory neurons in the peripheral nervous system. The implications of these findings for understanding sensory processing and disorders are discussed.

0.02.649.976 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6692.35 tokens per second)
0.02.649.979 I llama_perf_context_print:        load time =     487.75 ms
0.02.649.980 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.649.982 I llama_perf_context_print:        eval time =    2140.87 ms /    32 runs   (   66.90 ms per token,    14.95 tokens per second)
0.02.649.983 I llama_perf_context_print:       total time =    2160.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.535 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.022.013 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.072 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.079 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.084 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.086 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.091 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.092 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.093 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.094 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.095 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.096 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.102 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.102 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.103 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.104 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.105 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.721 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.756 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.620 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.628 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.628 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.629 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.630 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.631 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.631 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.634 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.635 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.635 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.636 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.637 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.641 I llama_model_loader: - type  f32:   37 tensors
0.00.133.644 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.505 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.853 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.354 I llm_load_vocab: special tokens cache size = 5
0.00.283.169 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.185 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.186 I llm_load_print_meta: arch             = gemma
0.00.283.186 I llm_load_print_meta: vocab type       = SPM
0.00.283.187 I llm_load_print_meta: n_vocab          = 256000
0.00.283.187 I llm_load_print_meta: n_merges         = 0
0.00.283.187 I llm_load_print_meta: vocab_only       = 0
0.00.283.188 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.188 I llm_load_print_meta: n_embd           = 2048
0.00.283.188 I llm_load_print_meta: n_layer          = 18
0.00.283.199 I llm_load_print_meta: n_head           = 8
0.00.283.200 I llm_load_print_meta: n_head_kv        = 1
0.00.283.200 I llm_load_print_meta: n_rot            = 256
0.00.283.201 I llm_load_print_meta: n_swa            = 0
0.00.283.201 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.201 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.202 I llm_load_print_meta: n_gqa            = 8
0.00.283.203 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.204 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.205 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.207 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.207 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.207 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.207 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.208 I llm_load_print_meta: n_ff             = 16384
0.00.283.209 I llm_load_print_meta: n_expert         = 0
0.00.283.209 I llm_load_print_meta: n_expert_used    = 0
0.00.283.209 I llm_load_print_meta: causal attn      = 1
0.00.283.210 I llm_load_print_meta: pooling type     = 0
0.00.283.210 I llm_load_print_meta: rope type        = 2
0.00.283.210 I llm_load_print_meta: rope scaling     = linear
0.00.283.212 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.213 I llm_load_print_meta: freq_scale_train = 1
0.00.283.214 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.214 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.214 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.214 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.214 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.215 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.215 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.215 I llm_load_print_meta: model type       = 2B
0.00.283.216 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.217 I llm_load_print_meta: model params     = 2.51 B
0.00.283.217 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.218 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.218 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.218 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.219 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.219 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.219 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.220 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.220 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.220 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.221 I llm_load_print_meta: max token length = 93
0.00.283.242 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.134 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.359.141 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.359.142 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.359.143 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.359.143 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.359.144 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.364.235 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.242 I llama_new_context_with_model: n_batch    = 2048
0.00.364.242 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.243 I llama_new_context_with_model: flash_attn = 0
0.00.364.245 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.246 I llama_new_context_with_model: freq_scale = 1
0.00.393.413 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.430 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.393.540 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.484 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.491 I llama_new_context_with_model: graph nodes  = 601
0.00.394.492 I llama_new_context_with_model: graph splits = 1
0.00.394.493 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.751 I main: llama threadpool init, n_threads = 4
0.00.486.763 I 
0.00.486.851 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.855 I 
0.00.486.899 I sampler seed: 557582410
0.00.486.910 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.913 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.486.914 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.915 I 
 increasities with an audience of young people to promote positive body image and self-esteem. [end of text]


0.01.856.013 I llama_perf_sampler_print:    sampling time =       3.03 ms /    20 runs   (    0.15 ms per token,  6591.96 tokens per second)
0.01.856.015 I llama_perf_context_print:        load time =     484.84 ms
0.01.856.016 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.856.018 I llama_perf_context_print:        eval time =    1356.90 ms /    19 runs   (   71.42 ms per token,    14.00 tokens per second)
0.01.856.018 I llama_perf_context_print:       total time =    1369.27 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.572 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.021.714 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.761 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.772 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.780 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.781 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.784 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.787 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.788 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.789 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.789 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.789 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.794 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.794 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.795 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.795 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.796 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.373 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.294 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.110 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.116 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.117 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.118 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.119 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.120 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.120 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.123 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.124 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.125 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.125 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.126 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.129 I llama_model_loader: - type  f32:   37 tensors
0.00.133.131 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.349 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.804 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.355 I llm_load_vocab: special tokens cache size = 5
0.00.267.123 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.139 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.139 I llm_load_print_meta: arch             = gemma
0.00.267.140 I llm_load_print_meta: vocab type       = SPM
0.00.267.140 I llm_load_print_meta: n_vocab          = 256000
0.00.267.141 I llm_load_print_meta: n_merges         = 0
0.00.267.141 I llm_load_print_meta: vocab_only       = 0
0.00.267.141 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.142 I llm_load_print_meta: n_embd           = 2048
0.00.267.142 I llm_load_print_meta: n_layer          = 18
0.00.267.152 I llm_load_print_meta: n_head           = 8
0.00.267.153 I llm_load_print_meta: n_head_kv        = 1
0.00.267.154 I llm_load_print_meta: n_rot            = 256
0.00.267.154 I llm_load_print_meta: n_swa            = 0
0.00.267.154 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.155 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.156 I llm_load_print_meta: n_gqa            = 8
0.00.267.157 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.158 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.158 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.160 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.160 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.161 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.161 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.162 I llm_load_print_meta: n_ff             = 16384
0.00.267.162 I llm_load_print_meta: n_expert         = 0
0.00.267.162 I llm_load_print_meta: n_expert_used    = 0
0.00.267.163 I llm_load_print_meta: causal attn      = 1
0.00.267.163 I llm_load_print_meta: pooling type     = 0
0.00.267.163 I llm_load_print_meta: rope type        = 2
0.00.267.164 I llm_load_print_meta: rope scaling     = linear
0.00.267.165 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.166 I llm_load_print_meta: freq_scale_train = 1
0.00.267.166 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.166 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.166 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.166 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.167 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.167 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.167 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.168 I llm_load_print_meta: model type       = 2B
0.00.267.168 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.169 I llm_load_print_meta: model params     = 2.51 B
0.00.267.170 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.170 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.171 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.171 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.171 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.172 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.172 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.172 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.172 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.173 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.173 I llm_load_print_meta: max token length = 93
0.00.267.191 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.337.015 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.337.021 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.341.934 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.940 I llama_new_context_with_model: n_batch    = 2048
0.00.341.940 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.941 I llama_new_context_with_model: flash_attn = 0
0.00.341.943 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.944 I llama_new_context_with_model: freq_scale = 1
0.00.372.086 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.372.101 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.372.196 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.105 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.373.113 I llama_new_context_with_model: graph nodes  = 601
0.00.373.114 I llama_new_context_with_model: graph splits = 1
0.00.373.116 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.351 I main: llama threadpool init, n_threads = 4
0.00.469.363 I 
0.00.469.441 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.444 I 
0.00.469.484 I sampler seed: 2378793107
0.00.469.493 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.496 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.469.497 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.497 I 
 increasities to a more inclusive and respectful tone, acknowledging the complexities and nuances of human experience. [end of text]


0.01.979.765 I llama_perf_sampler_print:    sampling time =       3.21 ms /    21 runs   (    0.15 ms per token,  6535.95 tokens per second)
0.01.979.768 I llama_perf_context_print:        load time =     467.49 ms
0.01.979.769 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.979.770 I llama_perf_context_print:        eval time =    1497.24 ms /    20 runs   (   74.86 ms per token,    13.36 tokens per second)
0.01.979.771 I llama_perf_context_print:       total time =    1510.42 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.886s
user	0m24.161s
sys	0m9.371s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3944 (47bb241c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31997.27 ms
main:    total time = 31997.27 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.021.901 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.951 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.962 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.972 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.974 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.978 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.978 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.979 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.980 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.980 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.987 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.987 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.988 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.988 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.989 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.448 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.255 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.027 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.033 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.033 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.034 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.035 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.035 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.036 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.038 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.039 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.039 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.040 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.041 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.044 I llama_model_loader: - type  f32:   37 tensors
0.00.133.046 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.047 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.470 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.752 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.226 I llm_load_vocab: special tokens cache size = 5
0.00.262.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.982 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.982 I llm_load_print_meta: arch             = gemma
0.00.262.983 I llm_load_print_meta: vocab type       = SPM
0.00.262.983 I llm_load_print_meta: n_vocab          = 256000
0.00.262.984 I llm_load_print_meta: n_merges         = 0
0.00.262.984 I llm_load_print_meta: vocab_only       = 0
0.00.262.985 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.985 I llm_load_print_meta: n_embd           = 2048
0.00.262.985 I llm_load_print_meta: n_layer          = 18
0.00.262.997 I llm_load_print_meta: n_head           = 8
0.00.262.998 I llm_load_print_meta: n_head_kv        = 1
0.00.262.998 I llm_load_print_meta: n_rot            = 256
0.00.262.998 I llm_load_print_meta: n_swa            = 0
0.00.262.999 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.999 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.000 I llm_load_print_meta: n_gqa            = 8
0.00.263.001 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.002 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.003 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.004 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.005 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.005 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.005 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.006 I llm_load_print_meta: n_ff             = 16384
0.00.263.007 I llm_load_print_meta: n_expert         = 0
0.00.263.007 I llm_load_print_meta: n_expert_used    = 0
0.00.263.007 I llm_load_print_meta: causal attn      = 1
0.00.263.008 I llm_load_print_meta: pooling type     = 0
0.00.263.008 I llm_load_print_meta: rope type        = 2
0.00.263.008 I llm_load_print_meta: rope scaling     = linear
0.00.263.010 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.010 I llm_load_print_meta: freq_scale_train = 1
0.00.263.011 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.011 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.011 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.011 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.012 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.012 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.012 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.013 I llm_load_print_meta: model type       = 2B
0.00.263.013 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.014 I llm_load_print_meta: model params     = 2.51 B
0.00.263.015 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.015 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.016 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.016 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.016 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.016 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.017 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.017 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.017 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.018 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.018 I llm_load_print_meta: max token length = 93
0.00.263.037 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.991 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.321.997 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.321.998 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.321.998 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.321.999 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.322.000 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.326.952 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.958 I llama_new_context_with_model: n_batch    = 2048
0.00.326.959 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.959 I llama_new_context_with_model: flash_attn = 0
0.00.326.961 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.961 I llama_new_context_with_model: freq_scale = 1
0.00.356.868 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.884 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.972 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.824 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.831 I llama_new_context_with_model: graph nodes  = 601
0.00.357.831 I llama_new_context_with_model: graph splits = 1
0.00.357.833 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.641 I main: llama threadpool init, n_threads = 4
0.00.440.656 I 
0.00.440.757 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.761 I 
0.00.440.806 I sampler seed: 3931798413
0.00.440.816 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.818 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.440.819 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.819 I 
 increasities of the species Homo erectus to Homo sapiens:

**a) Homo erectus developed complex tool use and language.**
**b) Homo erect

0.02.050.780 I llama_perf_sampler_print:    sampling time =       5.96 ms /    33 runs   (    0.18 ms per token,  5534.13 tokens per second)
0.02.050.782 I llama_perf_context_print:        load time =     438.75 ms
0.02.050.783 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.050.785 I llama_perf_context_print:        eval time =    1588.24 ms /    32 runs   (   49.63 ms per token,    20.15 tokens per second)
0.02.050.786 I llama_perf_context_print:       total time =    1610.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3944 (47bb241c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32087.27 ms
main:    total time = 32087.27 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.576 I build: 3944 (47bb241c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.021.884 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.899 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.905 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.906 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.909 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.911 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.911 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.912 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.912 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.913 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.916 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.917 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.917 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.918 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.918 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.294 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.606 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.469 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.476 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.477 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.477 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.478 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.480 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.480 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.483 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.483 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.487 I llama_model_loader: - type  f32:   37 tensors
0.00.133.490 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.490 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.313 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.208 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.792 I llm_load_vocab: special tokens cache size = 5
0.00.273.660 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.677 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.678 I llm_load_print_meta: arch             = gemma
0.00.273.679 I llm_load_print_meta: vocab type       = SPM
0.00.273.680 I llm_load_print_meta: n_vocab          = 256000
0.00.273.680 I llm_load_print_meta: n_merges         = 0
0.00.273.681 I llm_load_print_meta: vocab_only       = 0
0.00.273.681 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.681 I llm_load_print_meta: n_embd           = 2048
0.00.273.682 I llm_load_print_meta: n_layer          = 18
0.00.273.693 I llm_load_print_meta: n_head           = 8
0.00.273.694 I llm_load_print_meta: n_head_kv        = 1
0.00.273.695 I llm_load_print_meta: n_rot            = 256
0.00.273.696 I llm_load_print_meta: n_swa            = 0
0.00.273.696 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.696 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.697 I llm_load_print_meta: n_gqa            = 8
0.00.273.699 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.700 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.700 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.702 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.702 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.702 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.703 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.704 I llm_load_print_meta: n_ff             = 16384
0.00.273.704 I llm_load_print_meta: n_expert         = 0
0.00.273.704 I llm_load_print_meta: n_expert_used    = 0
0.00.273.704 I llm_load_print_meta: causal attn      = 1
0.00.273.706 I llm_load_print_meta: pooling type     = 0
0.00.273.706 I llm_load_print_meta: rope type        = 2
0.00.273.707 I llm_load_print_meta: rope scaling     = linear
0.00.273.708 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.709 I llm_load_print_meta: freq_scale_train = 1
0.00.273.710 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.710 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.711 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.711 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.714 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.714 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.714 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.715 I llm_load_print_meta: model type       = 2B
0.00.273.715 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.716 I llm_load_print_meta: model params     = 2.51 B
0.00.273.717 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.717 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.718 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.719 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.720 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.720 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.720 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.721 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.721 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.722 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.722 I llm_load_print_meta: max token length = 93
0.00.273.741 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.138 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.335.127 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.133 I llama_new_context_with_model: n_batch    = 2048
0.00.335.133 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.134 I llama_new_context_with_model: flash_attn = 0
0.00.335.136 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.137 I llama_new_context_with_model: freq_scale = 1
0.00.364.215 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.231 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.320 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.131 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.138 I llama_new_context_with_model: graph nodes  = 601
0.00.365.139 I llama_new_context_with_model: graph splits = 1
0.00.365.140 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.950 I main: llama threadpool init, n_threads = 4
0.00.446.964 I 
0.00.447.042 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.046 I 
0.00.447.087 I sampler seed: 2263448875
0.00.447.097 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.101 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.447.101 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.102 I 
 increasities are a common symptom of aging and are often associated with changes in the brain and nervous system.

**What is the purpose of this passage?**

0.02.045.730 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6695.07 tokens per second)
0.02.045.733 I llama_perf_context_print:        load time =     445.05 ms
0.02.045.734 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.045.735 I llama_perf_context_print:        eval time =    1579.41 ms /    32 runs   (   49.36 ms per token,    20.26 tokens per second)
0.02.045.736 I llama_perf_context_print:       total time =    1598.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.038s
user	8m13.902s
sys	0m6.976s
