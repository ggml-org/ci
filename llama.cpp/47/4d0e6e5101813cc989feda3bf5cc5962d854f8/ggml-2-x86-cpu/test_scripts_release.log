+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.525 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.577 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.585 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.591 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.592 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.597 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.600 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.601 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.601 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.602 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.602 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.607 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.608 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.608 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.609 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.609 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.579 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.620 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.589 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.596 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.596 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.597 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.597 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.598 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.599 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.602 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.602 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.603 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.603 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.604 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.610 I llama_model_loader: - type  f32:   37 tensors
0.00.134.613 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.555 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.337 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.127 I llm_load_vocab: special tokens cache size = 5
0.00.288.649 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.668 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.669 I llm_load_print_meta: arch             = gemma
0.00.288.669 I llm_load_print_meta: vocab type       = SPM
0.00.288.670 I llm_load_print_meta: n_vocab          = 256000
0.00.288.671 I llm_load_print_meta: n_merges         = 0
0.00.288.672 I llm_load_print_meta: vocab_only       = 0
0.00.288.672 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.672 I llm_load_print_meta: n_embd           = 2048
0.00.288.673 I llm_load_print_meta: n_layer          = 18
0.00.288.686 I llm_load_print_meta: n_head           = 8
0.00.288.687 I llm_load_print_meta: n_head_kv        = 1
0.00.288.687 I llm_load_print_meta: n_rot            = 256
0.00.288.688 I llm_load_print_meta: n_swa            = 0
0.00.288.688 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.688 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.689 I llm_load_print_meta: n_gqa            = 8
0.00.288.691 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.692 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.693 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.694 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.694 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.695 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.696 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.697 I llm_load_print_meta: n_ff             = 16384
0.00.288.697 I llm_load_print_meta: n_expert         = 0
0.00.288.698 I llm_load_print_meta: n_expert_used    = 0
0.00.288.698 I llm_load_print_meta: causal attn      = 1
0.00.288.699 I llm_load_print_meta: pooling type     = 0
0.00.288.699 I llm_load_print_meta: rope type        = 2
0.00.288.699 I llm_load_print_meta: rope scaling     = linear
0.00.288.700 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.701 I llm_load_print_meta: freq_scale_train = 1
0.00.288.706 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.706 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.706 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.707 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.707 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.707 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.708 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.708 I llm_load_print_meta: model type       = 2B
0.00.288.708 I llm_load_print_meta: model ftype      = Q8_0
0.00.288.710 I llm_load_print_meta: model params     = 2.51 B
0.00.288.710 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.288.711 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.711 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.711 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.712 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.713 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.713 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.714 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.715 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.715 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.715 I llm_load_print_meta: max token length = 93
0.00.288.738 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.387.554 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.387.564 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.387.565 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.387.565 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.387.566 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.387.566 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.392.812 I llama_new_context_with_model: n_ctx      = 8192
0.00.392.819 I llama_new_context_with_model: n_batch    = 2048
0.00.392.819 I llama_new_context_with_model: n_ubatch   = 512
0.00.392.820 I llama_new_context_with_model: flash_attn = 0
0.00.392.823 I llama_new_context_with_model: freq_base  = 10000.0
0.00.392.824 I llama_new_context_with_model: freq_scale = 1
0.00.422.681 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.422.698 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.422.797 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.423.707 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.423.715 I llama_new_context_with_model: graph nodes  = 601
0.00.423.715 I llama_new_context_with_model: graph splits = 1
0.00.423.717 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.517.792 I main: llama threadpool init, n_threads = 4
0.00.517.804 I 
0.00.517.884 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.517.888 I 
0.00.517.933 I sampler seed: 3959009767
0.00.517.952 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.517.955 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.517.955 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.517.955 I 
 increasities.
I cannot answer the question as it contains sexually suggestive and inappropriate content. [end of text]


0.01.898.871 I llama_perf_sampler_print:    sampling time =       3.00 ms /    20 runs   (    0.15 ms per token,  6675.57 tokens per second)
0.01.898.873 I llama_perf_context_print:        load time =     515.82 ms
0.01.898.874 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.898.876 I llama_perf_context_print:        eval time =    1369.67 ms /    19 runs   (   72.09 ms per token,    13.87 tokens per second)
0.01.898.876 I llama_perf_context_print:       total time =    1381.08 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.601 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.834 I main: llama backend init
0.00.001.951 I main: load the model and apply lora adapter, if any
0.00.022.364 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.378 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.385 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.386 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.390 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.391 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.392 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.394 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.394 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.395 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.399 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.400 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.400 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.401 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.401 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.568 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.712 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.637 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.644 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.644 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.645 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.646 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.646 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.647 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.650 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.651 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.652 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.652 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.653 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.657 I llama_model_loader: - type  f32:   37 tensors
0.00.134.660 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.044 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.318 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.117 I llm_load_vocab: special tokens cache size = 5
0.00.272.569 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.583 I llm_load_print_meta: arch             = gemma
0.00.272.583 I llm_load_print_meta: vocab type       = SPM
0.00.272.584 I llm_load_print_meta: n_vocab          = 256000
0.00.272.584 I llm_load_print_meta: n_merges         = 0
0.00.272.585 I llm_load_print_meta: vocab_only       = 0
0.00.272.585 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.585 I llm_load_print_meta: n_embd           = 2048
0.00.272.586 I llm_load_print_meta: n_layer          = 18
0.00.272.597 I llm_load_print_meta: n_head           = 8
0.00.272.598 I llm_load_print_meta: n_head_kv        = 1
0.00.272.598 I llm_load_print_meta: n_rot            = 256
0.00.272.598 I llm_load_print_meta: n_swa            = 0
0.00.272.599 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.599 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.600 I llm_load_print_meta: n_gqa            = 8
0.00.272.601 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.602 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.602 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.604 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.605 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.605 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.606 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.607 I llm_load_print_meta: n_ff             = 16384
0.00.272.607 I llm_load_print_meta: n_expert         = 0
0.00.272.607 I llm_load_print_meta: n_expert_used    = 0
0.00.272.607 I llm_load_print_meta: causal attn      = 1
0.00.272.607 I llm_load_print_meta: pooling type     = 0
0.00.272.608 I llm_load_print_meta: rope type        = 2
0.00.272.608 I llm_load_print_meta: rope scaling     = linear
0.00.272.609 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.610 I llm_load_print_meta: freq_scale_train = 1
0.00.272.610 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.611 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.611 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.612 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.612 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.612 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.613 I llm_load_print_meta: model type       = 2B
0.00.272.613 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.614 I llm_load_print_meta: model params     = 2.51 B
0.00.272.615 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.615 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.616 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.616 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.616 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.617 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.617 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.617 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.618 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.618 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.618 I llm_load_print_meta: max token length = 93
0.00.272.636 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.432 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.372.679 I llama_new_context_with_model: n_ctx      = 8192
0.00.372.685 I llama_new_context_with_model: n_batch    = 2048
0.00.372.686 I llama_new_context_with_model: n_ubatch   = 512
0.00.372.687 I llama_new_context_with_model: flash_attn = 0
0.00.372.690 I llama_new_context_with_model: freq_base  = 10000.0
0.00.372.691 I llama_new_context_with_model: freq_scale = 1
0.00.402.847 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.862 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.402.955 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.834 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.403.842 I llama_new_context_with_model: graph nodes  = 601
0.00.403.842 I llama_new_context_with_model: graph splits = 1
0.00.403.844 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.640 I main: llama threadpool init, n_threads = 4
0.00.492.653 I 
0.00.492.766 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.770 I 
0.00.492.815 I sampler seed: 4274793947
0.00.492.827 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.836 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.492.837 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.837 I 
 increasities, and herculean efforts are all metaphors for the relentless pursuit of knowledge and understanding. [end of text]


0.01.953.081 I llama_perf_sampler_print:    sampling time =       3.12 ms /    22 runs   (    0.14 ms per token,  7044.51 tokens per second)
0.01.953.084 I llama_perf_context_print:        load time =     490.62 ms
0.01.953.086 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.953.088 I llama_perf_context_print:        eval time =    1447.36 ms /    21 runs   (   68.92 ms per token,    14.51 tokens per second)
0.01.953.089 I llama_perf_context_print:       total time =    1460.45 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.682 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.921 I main: llama backend init
0.00.002.722 I main: load the model and apply lora adapter, if any
0.00.026.699 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.026.751 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.026.758 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.768 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.769 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.774 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.775 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.776 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.777 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.777 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.778 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.783 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.783 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.784 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.785 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.785 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.608 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.668 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.630 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.637 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.638 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.639 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.639 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.640 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.641 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.644 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.644 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.645 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.647 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.144.648 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.651 I llama_model_loader: - type  f32:   37 tensors
0.00.144.653 I llama_model_loader: - type q8_0:  127 tensors
0.00.223.457 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.267.767 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.563 I llm_load_vocab: special tokens cache size = 5
0.00.290.167 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.185 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.186 I llm_load_print_meta: arch             = gemma
0.00.290.186 I llm_load_print_meta: vocab type       = SPM
0.00.290.187 I llm_load_print_meta: n_vocab          = 256000
0.00.290.187 I llm_load_print_meta: n_merges         = 0
0.00.290.188 I llm_load_print_meta: vocab_only       = 0
0.00.290.188 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.188 I llm_load_print_meta: n_embd           = 2048
0.00.290.189 I llm_load_print_meta: n_layer          = 18
0.00.290.202 I llm_load_print_meta: n_head           = 8
0.00.290.203 I llm_load_print_meta: n_head_kv        = 1
0.00.290.203 I llm_load_print_meta: n_rot            = 256
0.00.290.204 I llm_load_print_meta: n_swa            = 0
0.00.290.204 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.204 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.205 I llm_load_print_meta: n_gqa            = 8
0.00.290.206 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.207 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.208 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.210 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.210 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.210 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.211 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.212 I llm_load_print_meta: n_ff             = 16384
0.00.290.212 I llm_load_print_meta: n_expert         = 0
0.00.290.213 I llm_load_print_meta: n_expert_used    = 0
0.00.290.213 I llm_load_print_meta: causal attn      = 1
0.00.290.214 I llm_load_print_meta: pooling type     = 0
0.00.290.214 I llm_load_print_meta: rope type        = 2
0.00.290.214 I llm_load_print_meta: rope scaling     = linear
0.00.290.215 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.216 I llm_load_print_meta: freq_scale_train = 1
0.00.290.217 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.218 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.218 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.219 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.219 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.219 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.219 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.220 I llm_load_print_meta: model type       = 2B
0.00.290.221 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.222 I llm_load_print_meta: model params     = 2.51 B
0.00.290.222 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.223 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.223 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.223 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.224 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.225 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.225 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.226 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.226 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.227 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.227 I llm_load_print_meta: max token length = 93
0.00.290.248 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.130 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.369.139 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.369.140 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.369.141 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.369.141 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.369.142 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.374.921 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.928 I llama_new_context_with_model: n_batch    = 2048
0.00.374.928 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.929 I llama_new_context_with_model: flash_attn = 0
0.00.374.932 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.933 I llama_new_context_with_model: freq_scale = 1
0.00.405.924 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.941 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.406.036 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.958 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.968 I llama_new_context_with_model: graph nodes  = 601
0.00.406.969 I llama_new_context_with_model: graph splits = 1
0.00.406.972 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.500.117 I main: llama threadpool init, n_threads = 4
0.00.500.130 I 
0.00.500.212 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.500.215 I 
0.00.500.251 I sampler seed: 3880299933
0.00.500.260 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.500.263 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.500.263 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.500.263 I 
 increasities, an act of kindness, is a heartwarming story of a young girl and her grandmother.

**Summary:**

The story follows Lily, a bright

0.02.804.089 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6588.14 tokens per second)
0.02.804.092 I llama_perf_context_print:        load time =     497.30 ms
0.02.804.094 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.804.096 I llama_perf_context_print:        eval time =    2284.85 ms /    32 runs   (   71.40 ms per token,    14.01 tokens per second)
0.02.804.097 I llama_perf_context_print:       total time =    2303.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.577 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.080 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.166 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.174 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.180 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.181 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.185 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.186 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.187 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.188 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.189 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.190 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.195 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.196 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.197 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.197 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.198 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.960 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.491 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.507 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.515 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.515 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.516 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.517 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.518 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.518 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.522 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.523 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.524 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.524 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.525 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.530 I llama_model_loader: - type  f32:   37 tensors
0.00.134.532 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.972 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.799 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.565 I llm_load_vocab: special tokens cache size = 5
0.00.268.880 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.895 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.895 I llm_load_print_meta: arch             = gemma
0.00.268.896 I llm_load_print_meta: vocab type       = SPM
0.00.268.896 I llm_load_print_meta: n_vocab          = 256000
0.00.268.897 I llm_load_print_meta: n_merges         = 0
0.00.268.897 I llm_load_print_meta: vocab_only       = 0
0.00.268.898 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.898 I llm_load_print_meta: n_embd           = 2048
0.00.268.898 I llm_load_print_meta: n_layer          = 18
0.00.268.910 I llm_load_print_meta: n_head           = 8
0.00.268.911 I llm_load_print_meta: n_head_kv        = 1
0.00.268.911 I llm_load_print_meta: n_rot            = 256
0.00.268.911 I llm_load_print_meta: n_swa            = 0
0.00.268.912 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.912 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.913 I llm_load_print_meta: n_gqa            = 8
0.00.268.914 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.915 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.915 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.917 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.917 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.917 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.918 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.919 I llm_load_print_meta: n_ff             = 16384
0.00.268.919 I llm_load_print_meta: n_expert         = 0
0.00.268.919 I llm_load_print_meta: n_expert_used    = 0
0.00.268.919 I llm_load_print_meta: causal attn      = 1
0.00.268.919 I llm_load_print_meta: pooling type     = 0
0.00.268.920 I llm_load_print_meta: rope type        = 2
0.00.268.920 I llm_load_print_meta: rope scaling     = linear
0.00.268.921 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.922 I llm_load_print_meta: freq_scale_train = 1
0.00.268.922 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.922 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.923 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.923 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.923 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.923 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.924 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.924 I llm_load_print_meta: model type       = 2B
0.00.268.925 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.926 I llm_load_print_meta: model params     = 2.51 B
0.00.268.927 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.927 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.928 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.928 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.928 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.929 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.929 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.929 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.930 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.930 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.931 I llm_load_print_meta: max token length = 93
0.00.268.951 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.959 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.339.967 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.345.063 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.071 I llama_new_context_with_model: n_batch    = 2048
0.00.345.071 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.072 I llama_new_context_with_model: flash_attn = 0
0.00.345.074 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.075 I llama_new_context_with_model: freq_scale = 1
0.00.375.411 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.428 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.527 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.402 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.410 I llama_new_context_with_model: graph nodes  = 601
0.00.376.410 I llama_new_context_with_model: graph splits = 1
0.00.376.412 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.173 I main: llama threadpool init, n_threads = 4
0.00.474.187 I 
0.00.474.267 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.474.270 I 
0.00.474.308 I sampler seed: 2595035276
0.00.474.317 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.320 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.474.320 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.474.320 I 
 increably. It is a common misconception that scientists have complete control over the outcomes of scientific research.

**Part 1: The Illusion of Control**



0.02.906.784 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7025.76 tokens per second)
0.02.906.786 I llama_perf_context_print:        load time =     472.20 ms
0.02.906.788 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.906.790 I llama_perf_context_print:        eval time =    2414.75 ms /    32 runs   (   75.46 ms per token,    13.25 tokens per second)
0.02.906.790 I llama_perf_context_print:       total time =    2432.62 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.546s
user	0m33.372s
sys	0m9.659s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3901 (474d0e6e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32073.63 ms
main:    total time = 32073.63 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.588 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.937 I main: load the model and apply lora adapter, if any
0.00.022.350 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.400 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.408 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.414 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.415 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.455 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.460 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.461 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.462 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.463 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.468 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.469 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.469 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.470 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.471 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.636 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.599 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.576 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.584 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.585 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.586 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.587 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.588 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.589 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.592 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.592 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.593 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.593 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.594 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.599 I llama_model_loader: - type  f32:   37 tensors
0.00.134.602 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.602 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.977 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.244 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.146 I llm_load_vocab: special tokens cache size = 5
0.00.288.739 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.757 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.757 I llm_load_print_meta: arch             = gemma
0.00.288.758 I llm_load_print_meta: vocab type       = SPM
0.00.288.758 I llm_load_print_meta: n_vocab          = 256000
0.00.288.759 I llm_load_print_meta: n_merges         = 0
0.00.288.760 I llm_load_print_meta: vocab_only       = 0
0.00.288.760 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.760 I llm_load_print_meta: n_embd           = 2048
0.00.288.761 I llm_load_print_meta: n_layer          = 18
0.00.288.777 I llm_load_print_meta: n_head           = 8
0.00.288.778 I llm_load_print_meta: n_head_kv        = 1
0.00.288.778 I llm_load_print_meta: n_rot            = 256
0.00.288.778 I llm_load_print_meta: n_swa            = 0
0.00.288.779 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.779 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.780 I llm_load_print_meta: n_gqa            = 8
0.00.288.781 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.782 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.783 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.785 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.785 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.786 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.786 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.787 I llm_load_print_meta: n_ff             = 16384
0.00.288.787 I llm_load_print_meta: n_expert         = 0
0.00.288.787 I llm_load_print_meta: n_expert_used    = 0
0.00.288.788 I llm_load_print_meta: causal attn      = 1
0.00.288.788 I llm_load_print_meta: pooling type     = 0
0.00.288.788 I llm_load_print_meta: rope type        = 2
0.00.288.788 I llm_load_print_meta: rope scaling     = linear
0.00.288.790 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.791 I llm_load_print_meta: freq_scale_train = 1
0.00.288.791 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.791 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.792 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.792 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.792 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.792 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.792 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.793 I llm_load_print_meta: model type       = 2B
0.00.288.793 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.288.794 I llm_load_print_meta: model params     = 2.51 B
0.00.288.795 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.288.796 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.796 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.796 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.797 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.797 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.797 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.798 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.798 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.799 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.799 I llm_load_print_meta: max token length = 93
0.00.288.827 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.346.446 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.346.453 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.346.454 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.346.454 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.346.455 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.346.455 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.351.685 I llama_new_context_with_model: n_ctx      = 8192
0.00.351.692 I llama_new_context_with_model: n_batch    = 2048
0.00.351.693 I llama_new_context_with_model: n_ubatch   = 512
0.00.351.694 I llama_new_context_with_model: flash_attn = 0
0.00.351.697 I llama_new_context_with_model: freq_base  = 10000.0
0.00.351.697 I llama_new_context_with_model: freq_scale = 1
0.00.382.991 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.383.004 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.383.099 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.987 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.383.994 I llama_new_context_with_model: graph nodes  = 601
0.00.383.995 I llama_new_context_with_model: graph splits = 1
0.00.383.997 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.218 I main: llama threadpool init, n_threads = 4
0.00.469.231 I 
0.00.469.308 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.312 I 
0.00.469.348 I sampler seed: 1323522764
0.00.469.357 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.360 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.469.360 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.361 I 
 seconally in a sentence.

The scientist's experiment demonstrated the importance of careful observation and data analysis in scientific research. [end of text]


0.01.827.819 I llama_perf_sampler_print:    sampling time =       3.95 ms /    27 runs   (    0.15 ms per token,  6840.64 tokens per second)
0.01.827.821 I llama_perf_context_print:        load time =     467.21 ms
0.01.827.823 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.827.825 I llama_perf_context_print:        eval time =    1343.53 ms /    26 runs   (   51.67 ms per token,    19.35 tokens per second)
0.01.827.826 I llama_perf_context_print:       total time =    1358.61 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3901 (474d0e6e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32111.34 ms
main:    total time = 32111.34 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.565 I build: 3901 (474d0e6e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.539 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.550 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.558 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.558 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.565 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.565 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.566 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.567 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.567 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.568 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.572 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.572 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.573 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.574 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.574 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.210 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.005 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.925 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.931 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.932 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.933 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.934 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.934 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.935 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.938 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.939 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.943 I llama_model_loader: - type  f32:   37 tensors
0.00.133.945 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.946 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.598 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.786 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.645 I llm_load_vocab: special tokens cache size = 5
0.00.273.115 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.130 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.130 I llm_load_print_meta: arch             = gemma
0.00.273.131 I llm_load_print_meta: vocab type       = SPM
0.00.273.131 I llm_load_print_meta: n_vocab          = 256000
0.00.273.132 I llm_load_print_meta: n_merges         = 0
0.00.273.132 I llm_load_print_meta: vocab_only       = 0
0.00.273.132 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.133 I llm_load_print_meta: n_embd           = 2048
0.00.273.133 I llm_load_print_meta: n_layer          = 18
0.00.273.145 I llm_load_print_meta: n_head           = 8
0.00.273.146 I llm_load_print_meta: n_head_kv        = 1
0.00.273.146 I llm_load_print_meta: n_rot            = 256
0.00.273.146 I llm_load_print_meta: n_swa            = 0
0.00.273.147 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.147 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.148 I llm_load_print_meta: n_gqa            = 8
0.00.273.149 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.150 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.151 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.152 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.153 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.153 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.153 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.155 I llm_load_print_meta: n_ff             = 16384
0.00.273.155 I llm_load_print_meta: n_expert         = 0
0.00.273.155 I llm_load_print_meta: n_expert_used    = 0
0.00.273.156 I llm_load_print_meta: causal attn      = 1
0.00.273.156 I llm_load_print_meta: pooling type     = 0
0.00.273.156 I llm_load_print_meta: rope type        = 2
0.00.273.156 I llm_load_print_meta: rope scaling     = linear
0.00.273.158 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.158 I llm_load_print_meta: freq_scale_train = 1
0.00.273.159 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.159 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.159 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.160 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.160 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.160 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.161 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.161 I llm_load_print_meta: model type       = 2B
0.00.273.162 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.163 I llm_load_print_meta: model params     = 2.51 B
0.00.273.163 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.164 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.164 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.165 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.165 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.165 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.165 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.166 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.166 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.167 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.167 I llm_load_print_meta: max token length = 93
0.00.273.186 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.655.695 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.660.817 I llama_new_context_with_model: n_ctx      = 8192
0.00.660.824 I llama_new_context_with_model: n_batch    = 2048
0.00.660.824 I llama_new_context_with_model: n_ubatch   = 512
0.00.660.825 I llama_new_context_with_model: flash_attn = 0
0.00.660.829 I llama_new_context_with_model: freq_base  = 10000.0
0.00.660.830 I llama_new_context_with_model: freq_scale = 1
0.00.691.534 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.691.549 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.691.644 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.692.505 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.692.514 I llama_new_context_with_model: graph nodes  = 601
0.00.692.514 I llama_new_context_with_model: graph splits = 1
0.00.692.516 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.775.483 I main: llama threadpool init, n_threads = 4
0.00.775.495 I 
0.00.775.575 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.775.578 I 
0.00.775.613 I sampler seed: 3793393942
0.00.775.622 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.775.625 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.775.625 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.775.625 I 
 squaRED 3 29.

The number 29 is significant because it is the square of 3.

Therefore, the significance of the

0.02.405.436 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6849.32 tokens per second)
0.02.405.439 I llama_perf_context_print:        load time =     773.55 ms
0.02.405.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.405.442 I llama_perf_context_print:        eval time =    1611.75 ms /    32 runs   (   50.37 ms per token,    19.85 tokens per second)
0.02.405.443 I llama_perf_context_print:       total time =    1629.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.253s
user	8m13.926s
sys	0m7.090s
