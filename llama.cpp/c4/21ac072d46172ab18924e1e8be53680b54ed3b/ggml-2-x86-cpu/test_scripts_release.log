+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.843 I main: load the model and apply lora adapter, if any
0.00.022.120 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.169 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.177 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.182 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.184 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.188 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.188 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.189 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.190 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.191 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.192 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.196 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.197 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.198 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.199 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.199 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.464 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.154 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.051 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.058 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.059 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.060 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.060 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.062 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.062 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.066 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.067 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.068 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.069 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.070 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.074 I llama_model_loader: - type  f32:   37 tensors
0.00.132.077 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.176 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.750 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.470 I llm_load_vocab: special tokens cache size = 5
0.00.284.284 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.303 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.303 I llm_load_print_meta: arch             = gemma
0.00.284.304 I llm_load_print_meta: vocab type       = SPM
0.00.284.305 I llm_load_print_meta: n_vocab          = 256000
0.00.284.305 I llm_load_print_meta: n_merges         = 0
0.00.284.305 I llm_load_print_meta: vocab_only       = 0
0.00.284.306 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.306 I llm_load_print_meta: n_embd           = 2048
0.00.284.307 I llm_load_print_meta: n_layer          = 18
0.00.284.319 I llm_load_print_meta: n_head           = 8
0.00.284.320 I llm_load_print_meta: n_head_kv        = 1
0.00.284.321 I llm_load_print_meta: n_rot            = 256
0.00.284.321 I llm_load_print_meta: n_swa            = 0
0.00.284.321 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.321 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.322 I llm_load_print_meta: n_gqa            = 8
0.00.284.323 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.324 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.325 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.326 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.327 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.327 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.327 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.328 I llm_load_print_meta: n_ff             = 16384
0.00.284.328 I llm_load_print_meta: n_expert         = 0
0.00.284.329 I llm_load_print_meta: n_expert_used    = 0
0.00.284.329 I llm_load_print_meta: causal attn      = 1
0.00.284.329 I llm_load_print_meta: pooling type     = 0
0.00.284.330 I llm_load_print_meta: rope type        = 2
0.00.284.330 I llm_load_print_meta: rope scaling     = linear
0.00.284.331 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.332 I llm_load_print_meta: freq_scale_train = 1
0.00.284.332 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.333 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.333 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.333 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.333 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.333 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.334 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.334 I llm_load_print_meta: model type       = 2B
0.00.284.335 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.336 I llm_load_print_meta: model params     = 2.51 B
0.00.284.337 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.337 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.338 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.339 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.340 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.344 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.344 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.345 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.345 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.346 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.347 I llm_load_print_meta: max token length = 93
0.00.284.367 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.382.241 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.382.249 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.382.250 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.382.250 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.382.251 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.382.252 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.387.415 I llama_new_context_with_model: n_ctx      = 8192
0.00.387.422 I llama_new_context_with_model: n_batch    = 2048
0.00.387.423 I llama_new_context_with_model: n_ubatch   = 512
0.00.387.423 I llama_new_context_with_model: flash_attn = 0
0.00.387.425 I llama_new_context_with_model: freq_base  = 10000.0
0.00.387.426 I llama_new_context_with_model: freq_scale = 1
0.00.416.537 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.554 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.645 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.525 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.532 I llama_new_context_with_model: graph nodes  = 601
0.00.417.533 I llama_new_context_with_model: graph splits = 1
0.00.417.534 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.508.389 I main: llama threadpool init, n_threads = 4
0.00.508.403 I 
0.00.508.478 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.508.481 I 
0.00.508.518 I sampler seed: 2416923549
0.00.508.530 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.532 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.508.533 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.533 I 
 increasities, and a mischievous boy named Billy.

In the quaint village of Willow Creek, nestled amidst rolling hills and verdant meadows, there lived a mischievous

0.02.769.438 I llama_perf_sampler_print:    sampling time =       4.78 ms /    33 runs   (    0.14 ms per token,  6897.99 tokens per second)
0.02.769.440 I llama_perf_context_print:        load time =     506.52 ms
0.02.769.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.769.443 I llama_perf_context_print:        eval time =    2240.63 ms /    32 runs   (   70.02 ms per token,    14.28 tokens per second)
0.02.769.443 I llama_perf_context_print:       total time =    2261.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.531 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.835 I main: load the model and apply lora adapter, if any
0.00.022.858 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.869 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.875 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.876 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.880 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.881 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.882 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.882 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.883 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.883 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.888 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.888 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.889 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.889 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.890 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.737 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.170 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.054 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.060 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.061 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.061 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.062 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.063 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.063 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.066 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.067 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.068 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.069 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.070 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.074 I llama_model_loader: - type  f32:   37 tensors
0.00.133.077 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.037 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.788 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.456 I llm_load_vocab: special tokens cache size = 5
0.00.280.199 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.217 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.218 I llm_load_print_meta: arch             = gemma
0.00.280.218 I llm_load_print_meta: vocab type       = SPM
0.00.280.219 I llm_load_print_meta: n_vocab          = 256000
0.00.280.219 I llm_load_print_meta: n_merges         = 0
0.00.280.220 I llm_load_print_meta: vocab_only       = 0
0.00.280.220 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.220 I llm_load_print_meta: n_embd           = 2048
0.00.280.221 I llm_load_print_meta: n_layer          = 18
0.00.280.232 I llm_load_print_meta: n_head           = 8
0.00.280.233 I llm_load_print_meta: n_head_kv        = 1
0.00.280.234 I llm_load_print_meta: n_rot            = 256
0.00.280.234 I llm_load_print_meta: n_swa            = 0
0.00.280.234 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.234 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.235 I llm_load_print_meta: n_gqa            = 8
0.00.280.237 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.237 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.238 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.239 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.240 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.240 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.240 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.241 I llm_load_print_meta: n_ff             = 16384
0.00.280.241 I llm_load_print_meta: n_expert         = 0
0.00.280.242 I llm_load_print_meta: n_expert_used    = 0
0.00.280.242 I llm_load_print_meta: causal attn      = 1
0.00.280.242 I llm_load_print_meta: pooling type     = 0
0.00.280.243 I llm_load_print_meta: rope type        = 2
0.00.280.243 I llm_load_print_meta: rope scaling     = linear
0.00.280.244 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.245 I llm_load_print_meta: freq_scale_train = 1
0.00.280.245 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.245 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.246 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.246 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.246 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.246 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.246 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.247 I llm_load_print_meta: model type       = 2B
0.00.280.247 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.249 I llm_load_print_meta: model params     = 2.51 B
0.00.280.250 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.250 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.251 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.251 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.251 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.252 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.252 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.252 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.252 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.253 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.253 I llm_load_print_meta: max token length = 93
0.00.280.282 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.373.726 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.378.936 I llama_new_context_with_model: n_ctx      = 8192
0.00.378.943 I llama_new_context_with_model: n_batch    = 2048
0.00.378.943 I llama_new_context_with_model: n_ubatch   = 512
0.00.378.944 I llama_new_context_with_model: flash_attn = 0
0.00.378.947 I llama_new_context_with_model: freq_base  = 10000.0
0.00.378.948 I llama_new_context_with_model: freq_scale = 1
0.00.409.980 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.409.996 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.410.089 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.410.967 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.410.975 I llama_new_context_with_model: graph nodes  = 601
0.00.410.975 I llama_new_context_with_model: graph splits = 1
0.00.410.977 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.499.307 I main: llama threadpool init, n_threads = 4
0.00.499.320 I 
0.00.499.403 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.499.407 I 
0.00.499.448 I sampler seed: 2833938274
0.00.499.458 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.499.463 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.499.463 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.499.464 I 
 increasities from various cultures. [end of text]


0.00.981.894 I llama_perf_sampler_print:    sampling time =       1.14 ms /     8 runs   (    0.14 ms per token,  7005.25 tokens per second)
0.00.981.897 I llama_perf_context_print:        load time =     497.45 ms
0.00.981.898 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.981.899 I llama_perf_context_print:        eval time =     477.07 ms /     7 runs   (   68.15 ms per token,    14.67 tokens per second)
0.00.981.900 I llama_perf_context_print:       total time =     482.60 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.544 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.825 I main: load the model and apply lora adapter, if any
0.00.021.820 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.869 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.876 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.881 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.882 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.886 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.886 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.887 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.888 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.888 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.889 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.892 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.893 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.893 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.894 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.895 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.954 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.506 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.357 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.365 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.366 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.367 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.367 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.368 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.369 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.371 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.372 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.372 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.373 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.374 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.378 I llama_model_loader: - type  f32:   37 tensors
0.00.131.381 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.934 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.397 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.023 I llm_load_vocab: special tokens cache size = 5
0.00.268.797 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.812 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.812 I llm_load_print_meta: arch             = gemma
0.00.268.813 I llm_load_print_meta: vocab type       = SPM
0.00.268.814 I llm_load_print_meta: n_vocab          = 256000
0.00.268.814 I llm_load_print_meta: n_merges         = 0
0.00.268.815 I llm_load_print_meta: vocab_only       = 0
0.00.268.815 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.815 I llm_load_print_meta: n_embd           = 2048
0.00.268.816 I llm_load_print_meta: n_layer          = 18
0.00.268.828 I llm_load_print_meta: n_head           = 8
0.00.268.829 I llm_load_print_meta: n_head_kv        = 1
0.00.268.829 I llm_load_print_meta: n_rot            = 256
0.00.268.829 I llm_load_print_meta: n_swa            = 0
0.00.268.830 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.830 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.831 I llm_load_print_meta: n_gqa            = 8
0.00.268.832 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.833 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.834 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.835 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.836 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.836 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.836 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.837 I llm_load_print_meta: n_ff             = 16384
0.00.268.838 I llm_load_print_meta: n_expert         = 0
0.00.268.839 I llm_load_print_meta: n_expert_used    = 0
0.00.268.840 I llm_load_print_meta: causal attn      = 1
0.00.268.840 I llm_load_print_meta: pooling type     = 0
0.00.268.840 I llm_load_print_meta: rope type        = 2
0.00.268.842 I llm_load_print_meta: rope scaling     = linear
0.00.268.844 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.844 I llm_load_print_meta: freq_scale_train = 1
0.00.268.845 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.845 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.845 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.845 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.846 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.846 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.846 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.847 I llm_load_print_meta: model type       = 2B
0.00.268.847 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.848 I llm_load_print_meta: model params     = 2.51 B
0.00.268.849 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.849 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.850 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.850 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.851 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.852 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.852 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.852 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.853 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.854 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.854 I llm_load_print_meta: max token length = 93
0.00.268.882 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.204 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.345.213 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.214 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.345.215 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.345.215 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.345.216 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.350.369 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.376 I llama_new_context_with_model: n_batch    = 2048
0.00.350.377 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.377 I llama_new_context_with_model: flash_attn = 0
0.00.350.381 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.382 I llama_new_context_with_model: freq_scale = 1
0.00.379.477 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.492 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.584 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.460 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.468 I llama_new_context_with_model: graph nodes  = 601
0.00.380.469 I llama_new_context_with_model: graph splits = 1
0.00.380.471 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.914 I main: llama threadpool init, n_threads = 4
0.00.470.928 I 
0.00.471.003 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.471.005 I 
0.00.471.043 I sampler seed: 3830113125
0.00.471.052 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.055 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.056 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.057 I 
 increably.

I am sorry, but I am unable to generate responses that contain inappropriate or sexually suggestive content. [end of text]


0.02.180.851 I llama_perf_sampler_print:    sampling time =       3.69 ms /    25 runs   (    0.15 ms per token,  6782.42 tokens per second)
0.02.180.853 I llama_perf_context_print:        load time =     469.07 ms
0.02.180.855 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.180.856 I llama_perf_context_print:        eval time =    1695.10 ms /    24 runs   (   70.63 ms per token,    14.16 tokens per second)
0.02.180.857 I llama_perf_context_print:       total time =    1709.94 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.532 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.826 I main: load the model and apply lora adapter, if any
0.00.022.290 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.337 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.344 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.349 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.350 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.354 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.355 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.356 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.357 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.357 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.358 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.363 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.363 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.365 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.858 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.431 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.311 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.319 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.319 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.320 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.321 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.321 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.322 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.324 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.325 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.325 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.326 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.327 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.330 I llama_model_loader: - type  f32:   37 tensors
0.00.132.333 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.934 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.176 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.772 I llm_load_vocab: special tokens cache size = 5
0.00.281.562 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.580 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.581 I llm_load_print_meta: arch             = gemma
0.00.281.582 I llm_load_print_meta: vocab type       = SPM
0.00.281.582 I llm_load_print_meta: n_vocab          = 256000
0.00.281.582 I llm_load_print_meta: n_merges         = 0
0.00.281.583 I llm_load_print_meta: vocab_only       = 0
0.00.281.583 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.583 I llm_load_print_meta: n_embd           = 2048
0.00.281.584 I llm_load_print_meta: n_layer          = 18
0.00.281.596 I llm_load_print_meta: n_head           = 8
0.00.281.597 I llm_load_print_meta: n_head_kv        = 1
0.00.281.597 I llm_load_print_meta: n_rot            = 256
0.00.281.598 I llm_load_print_meta: n_swa            = 0
0.00.281.598 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.598 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.599 I llm_load_print_meta: n_gqa            = 8
0.00.281.600 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.601 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.602 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.603 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.603 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.604 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.604 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.605 I llm_load_print_meta: n_ff             = 16384
0.00.281.605 I llm_load_print_meta: n_expert         = 0
0.00.281.606 I llm_load_print_meta: n_expert_used    = 0
0.00.281.606 I llm_load_print_meta: causal attn      = 1
0.00.281.606 I llm_load_print_meta: pooling type     = 0
0.00.281.607 I llm_load_print_meta: rope type        = 2
0.00.281.607 I llm_load_print_meta: rope scaling     = linear
0.00.281.608 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.609 I llm_load_print_meta: freq_scale_train = 1
0.00.281.609 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.610 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.610 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.610 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.611 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.611 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.612 I llm_load_print_meta: model type       = 2B
0.00.281.612 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.613 I llm_load_print_meta: model params     = 2.51 B
0.00.281.614 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.614 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.615 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.615 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.615 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.616 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.616 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.616 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.617 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.617 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.617 I llm_load_print_meta: max token length = 93
0.00.281.637 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.351.766 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.351.773 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.356.791 I llama_new_context_with_model: n_ctx      = 8192
0.00.356.798 I llama_new_context_with_model: n_batch    = 2048
0.00.356.798 I llama_new_context_with_model: n_ubatch   = 512
0.00.356.799 I llama_new_context_with_model: flash_attn = 0
0.00.356.801 I llama_new_context_with_model: freq_base  = 10000.0
0.00.356.801 I llama_new_context_with_model: freq_scale = 1
0.00.385.183 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.385.196 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.385.288 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.141 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.386.149 I llama_new_context_with_model: graph nodes  = 601
0.00.386.149 I llama_new_context_with_model: graph splits = 1
0.00.386.151 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.304 I main: llama threadpool init, n_threads = 4
0.00.481.318 I 
0.00.481.397 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.401 I 
0.00.481.440 I sampler seed: 4125033062
0.00.481.450 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.452 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.453 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.453 I 
 increasities with a fiery passion that ignites the soul. [end of text]


0.01.474.326 I llama_perf_sampler_print:    sampling time =       2.14 ms /    14 runs   (    0.15 ms per token,  6548.18 tokens per second)
0.01.474.328 I llama_perf_context_print:        load time =     479.45 ms
0.01.474.329 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.474.331 I llama_perf_context_print:        eval time =     984.31 ms /    13 runs   (   75.72 ms per token,    13.21 tokens per second)
0.01.474.332 I llama_perf_context_print:       total time =     993.03 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.249s
user	0m24.658s
sys	0m9.481s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3959 (c421ac07)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32265.09 ms
main:    total time = 32265.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.524 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.838 I main: load the model and apply lora adapter, if any
0.00.022.423 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.471 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.479 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.484 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.485 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.489 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.492 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.493 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.493 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.494 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.494 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.497 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.498 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.498 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.499 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.499 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.992 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.021 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.889 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.895 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.896 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.897 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.897 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.898 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.899 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.901 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.902 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.903 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.903 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.905 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.908 I llama_model_loader: - type  f32:   37 tensors
0.00.132.911 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.912 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.624 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.674 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.284 I llm_load_vocab: special tokens cache size = 5
0.00.271.078 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.093 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.093 I llm_load_print_meta: arch             = gemma
0.00.271.094 I llm_load_print_meta: vocab type       = SPM
0.00.271.094 I llm_load_print_meta: n_vocab          = 256000
0.00.271.095 I llm_load_print_meta: n_merges         = 0
0.00.271.095 I llm_load_print_meta: vocab_only       = 0
0.00.271.095 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.096 I llm_load_print_meta: n_embd           = 2048
0.00.271.096 I llm_load_print_meta: n_layer          = 18
0.00.271.108 I llm_load_print_meta: n_head           = 8
0.00.271.109 I llm_load_print_meta: n_head_kv        = 1
0.00.271.109 I llm_load_print_meta: n_rot            = 256
0.00.271.109 I llm_load_print_meta: n_swa            = 0
0.00.271.110 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.110 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.111 I llm_load_print_meta: n_gqa            = 8
0.00.271.112 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.113 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.113 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.114 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.115 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.115 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.115 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.116 I llm_load_print_meta: n_ff             = 16384
0.00.271.116 I llm_load_print_meta: n_expert         = 0
0.00.271.117 I llm_load_print_meta: n_expert_used    = 0
0.00.271.117 I llm_load_print_meta: causal attn      = 1
0.00.271.117 I llm_load_print_meta: pooling type     = 0
0.00.271.118 I llm_load_print_meta: rope type        = 2
0.00.271.118 I llm_load_print_meta: rope scaling     = linear
0.00.271.119 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.120 I llm_load_print_meta: freq_scale_train = 1
0.00.271.120 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.120 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.121 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.121 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.121 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.121 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.122 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.122 I llm_load_print_meta: model type       = 2B
0.00.271.123 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.123 I llm_load_print_meta: model params     = 2.51 B
0.00.271.124 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.124 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.125 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.125 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.125 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.125 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.126 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.126 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.126 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.127 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.127 I llm_load_print_meta: max token length = 93
0.00.271.152 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.168 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.329.176 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.329.177 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.329.177 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.329.178 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.329.179 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.334.303 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.310 I llama_new_context_with_model: n_batch    = 2048
0.00.334.310 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.311 I llama_new_context_with_model: flash_attn = 0
0.00.334.312 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.313 I llama_new_context_with_model: freq_scale = 1
0.00.363.086 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.099 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.191 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.070 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.078 I llama_new_context_with_model: graph nodes  = 601
0.00.364.078 I llama_new_context_with_model: graph splits = 1
0.00.364.080 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.217 I main: llama threadpool init, n_threads = 4
0.00.445.230 I 
0.00.445.309 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.312 I 
0.00.445.352 I sampler seed: 1630566405
0.00.445.362 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.365 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.445.365 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.365 I 
 squaRED, the new music platform where music discovery is an adventure.

**SquaRED's mission is to make finding new music effortless and engaging.

0.02.021.122 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6615.88 tokens per second)
0.02.021.124 I llama_perf_context_print:        load time =     443.36 ms
0.02.021.125 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.021.126 I llama_perf_context_print:        eval time =    1555.89 ms /    32 runs   (   48.62 ms per token,    20.57 tokens per second)
0.02.021.127 I llama_perf_context_print:       total time =    1575.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3959 (c421ac07)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31997.99 ms
main:    total time = 31997.99 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.564 I build: 3959 (c421ac07) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.884 I main: load the model and apply lora adapter, if any
0.00.022.016 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.027 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.033 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.034 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.038 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.038 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.039 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.039 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.040 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.040 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.043 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.044 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.044 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.045 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.045 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.058 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.509 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.318 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.325 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.325 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.326 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.327 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.328 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.328 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.331 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.331 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.336 I llama_model_loader: - type  f32:   37 tensors
0.00.131.338 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.339 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.758 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.186 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.701 I llm_load_vocab: special tokens cache size = 5
0.00.277.132 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.149 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.150 I llm_load_print_meta: arch             = gemma
0.00.277.150 I llm_load_print_meta: vocab type       = SPM
0.00.277.153 I llm_load_print_meta: n_vocab          = 256000
0.00.277.153 I llm_load_print_meta: n_merges         = 0
0.00.277.154 I llm_load_print_meta: vocab_only       = 0
0.00.277.154 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.154 I llm_load_print_meta: n_embd           = 2048
0.00.277.155 I llm_load_print_meta: n_layer          = 18
0.00.277.166 I llm_load_print_meta: n_head           = 8
0.00.277.167 I llm_load_print_meta: n_head_kv        = 1
0.00.277.167 I llm_load_print_meta: n_rot            = 256
0.00.277.167 I llm_load_print_meta: n_swa            = 0
0.00.277.168 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.168 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.170 I llm_load_print_meta: n_gqa            = 8
0.00.277.171 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.172 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.173 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.174 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.175 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.175 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.175 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.176 I llm_load_print_meta: n_ff             = 16384
0.00.277.177 I llm_load_print_meta: n_expert         = 0
0.00.277.177 I llm_load_print_meta: n_expert_used    = 0
0.00.277.177 I llm_load_print_meta: causal attn      = 1
0.00.277.178 I llm_load_print_meta: pooling type     = 0
0.00.277.178 I llm_load_print_meta: rope type        = 2
0.00.277.178 I llm_load_print_meta: rope scaling     = linear
0.00.277.180 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.181 I llm_load_print_meta: freq_scale_train = 1
0.00.277.181 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.182 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.182 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.183 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.185 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.185 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.186 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.186 I llm_load_print_meta: model type       = 2B
0.00.277.186 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.187 I llm_load_print_meta: model params     = 2.51 B
0.00.277.188 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.188 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.189 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.189 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.190 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.190 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.190 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.190 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.191 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.191 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.191 I llm_load_print_meta: max token length = 93
0.00.277.220 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.853 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.339.819 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.826 I llama_new_context_with_model: n_batch    = 2048
0.00.339.827 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.827 I llama_new_context_with_model: flash_attn = 0
0.00.339.829 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.830 I llama_new_context_with_model: freq_scale = 1
0.00.368.663 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.677 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.771 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.630 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.638 I llama_new_context_with_model: graph nodes  = 601
0.00.369.638 I llama_new_context_with_model: graph splits = 1
0.00.369.641 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.871 I main: llama threadpool init, n_threads = 4
0.00.449.885 I 
0.00.449.960 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.963 I 
0.00.450.001 I sampler seed: 1629448934
0.00.450.014 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.017 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.018 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.018 I 
 seconally.

**Assistant**

I am unable to provide assistance with sexually suggestive or inappropriate content. [end of text]


0.01.519.821 I llama_perf_sampler_print:    sampling time =       3.29 ms /    23 runs   (    0.14 ms per token,  6997.26 tokens per second)
0.01.519.824 I llama_perf_context_print:        load time =     447.97 ms
0.01.519.825 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.519.826 I llama_perf_context_print:        eval time =    1056.03 ms /    22 runs   (   48.00 ms per token,    20.83 tokens per second)
0.01.519.827 I llama_perf_context_print:       total time =    1069.96 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.836s
user	8m12.463s
sys	0m6.983s
