+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.528 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.877 I main: load the model and apply lora adapter, if any
0.00.021.228 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.239 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.246 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.255 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.259 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.262 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.263 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.265 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.265 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.266 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.266 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.271 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.272 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.272 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.273 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.274 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.671 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.523 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.556 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.563 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.563 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.564 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.565 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.566 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.567 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.569 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.570 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.571 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.572 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.573 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.577 I llama_model_loader: - type  f32:   37 tensors
0.00.131.578 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.912 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.605 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.223 I llm_load_vocab: special tokens cache size = 5
0.00.270.805 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.821 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.822 I llm_load_print_meta: arch             = gemma
0.00.270.822 I llm_load_print_meta: vocab type       = SPM
0.00.270.823 I llm_load_print_meta: n_vocab          = 256000
0.00.270.823 I llm_load_print_meta: n_merges         = 0
0.00.270.824 I llm_load_print_meta: vocab_only       = 0
0.00.270.824 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.824 I llm_load_print_meta: n_embd           = 2048
0.00.270.824 I llm_load_print_meta: n_layer          = 18
0.00.270.837 I llm_load_print_meta: n_head           = 8
0.00.270.837 I llm_load_print_meta: n_head_kv        = 1
0.00.270.838 I llm_load_print_meta: n_rot            = 256
0.00.270.838 I llm_load_print_meta: n_swa            = 0
0.00.270.838 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.839 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.840 I llm_load_print_meta: n_gqa            = 8
0.00.270.841 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.842 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.843 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.844 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.844 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.844 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.845 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.846 I llm_load_print_meta: n_ff             = 16384
0.00.270.846 I llm_load_print_meta: n_expert         = 0
0.00.270.846 I llm_load_print_meta: n_expert_used    = 0
0.00.270.847 I llm_load_print_meta: causal attn      = 1
0.00.270.847 I llm_load_print_meta: pooling type     = 0
0.00.270.847 I llm_load_print_meta: rope type        = 2
0.00.270.848 I llm_load_print_meta: rope scaling     = linear
0.00.270.849 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.850 I llm_load_print_meta: freq_scale_train = 1
0.00.270.850 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.850 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.851 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.851 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.851 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.851 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.852 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.852 I llm_load_print_meta: model type       = 2B
0.00.270.853 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.854 I llm_load_print_meta: model params     = 2.51 B
0.00.270.855 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.855 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.855 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.856 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.856 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.856 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.857 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.857 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.857 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.858 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.858 I llm_load_print_meta: max token length = 93
0.00.370.737 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.370.747 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.370.747 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.370.748 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.370.749 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.370.749 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.375.966 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.972 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.972 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.972 I llama_new_context_with_model: n_batch       = 2048
0.00.375.973 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.973 I llama_new_context_with_model: flash_attn    = 0
0.00.375.976 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.977 I llama_new_context_with_model: freq_scale    = 1
0.00.375.978 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.391.276 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.391.291 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.391.380 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.618 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.392.625 I llama_new_context_with_model: graph nodes  = 601
0.00.392.626 I llama_new_context_with_model: graph splits = 1
0.00.392.627 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.388 I main: llama threadpool init, n_threads = 4
0.00.477.403 I 
0.00.477.498 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.502 I 
0.00.477.554 I sampler seed: 3396618054
0.00.477.567 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.573 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.477.574 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.575 I 
 increasities?

I am unable to generate a response as the provided context contains sexually suggestive language and concepts that are inappropriate for me to generate content about. [end of text]


0.02.730.123 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6966.43 tokens per second)
0.02.730.126 I llama_perf_context_print:        load time =     476.49 ms
0.02.730.128 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.730.131 I llama_perf_context_print:        eval time =    2233.02 ms /    32 runs   (   69.78 ms per token,    14.33 tokens per second)
0.02.730.132 I llama_perf_context_print:       total time =    2252.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.484 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.706 I main: llama backend init
0.00.000.849 I main: load the model and apply lora adapter, if any
0.00.020.841 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.857 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.863 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.865 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.868 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.869 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.869 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.870 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.870 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.871 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.877 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.878 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.879 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.880 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.881 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.290 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.677 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.684 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.684 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.685 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.685 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.686 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.689 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.691 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.691 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.692 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.696 I llama_model_loader: - type  f32:   37 tensors
0.00.131.697 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.560 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.447 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.131 I llm_load_vocab: special tokens cache size = 5
0.00.271.955 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.973 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.973 I llm_load_print_meta: arch             = gemma
0.00.271.974 I llm_load_print_meta: vocab type       = SPM
0.00.271.975 I llm_load_print_meta: n_vocab          = 256000
0.00.271.975 I llm_load_print_meta: n_merges         = 0
0.00.271.976 I llm_load_print_meta: vocab_only       = 0
0.00.271.976 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.976 I llm_load_print_meta: n_embd           = 2048
0.00.271.977 I llm_load_print_meta: n_layer          = 18
0.00.271.988 I llm_load_print_meta: n_head           = 8
0.00.271.989 I llm_load_print_meta: n_head_kv        = 1
0.00.271.990 I llm_load_print_meta: n_rot            = 256
0.00.271.990 I llm_load_print_meta: n_swa            = 0
0.00.271.990 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.991 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.992 I llm_load_print_meta: n_gqa            = 8
0.00.271.993 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.993 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.994 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.995 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.996 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.996 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.996 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.997 I llm_load_print_meta: n_ff             = 16384
0.00.271.998 I llm_load_print_meta: n_expert         = 0
0.00.271.998 I llm_load_print_meta: n_expert_used    = 0
0.00.271.998 I llm_load_print_meta: causal attn      = 1
0.00.271.999 I llm_load_print_meta: pooling type     = 0
0.00.271.999 I llm_load_print_meta: rope type        = 2
0.00.272.000 I llm_load_print_meta: rope scaling     = linear
0.00.272.002 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.003 I llm_load_print_meta: freq_scale_train = 1
0.00.272.004 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.005 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.005 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.005 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.005 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.006 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.007 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.007 I llm_load_print_meta: model type       = 2B
0.00.272.008 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.009 I llm_load_print_meta: model params     = 2.51 B
0.00.272.010 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.010 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.010 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.011 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.011 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.012 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.012 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.013 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.013 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.013 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.014 I llm_load_print_meta: max token length = 93
0.00.366.827 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.372.057 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.063 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.063 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.064 I llama_new_context_with_model: n_batch       = 2048
0.00.372.064 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.065 I llama_new_context_with_model: flash_attn    = 0
0.00.372.068 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.069 I llama_new_context_with_model: freq_scale    = 1
0.00.372.070 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.303 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.388.320 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.388.417 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.389.643 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.389.651 I llama_new_context_with_model: graph nodes  = 601
0.00.389.651 I llama_new_context_with_model: graph splits = 1
0.00.389.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.323 I main: llama threadpool init, n_threads = 4
0.00.473.341 I 
0.00.473.422 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.427 I 
0.00.473.478 I sampler seed: 3717212435
0.00.473.489 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.494 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.494 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.494 I 
 increasities and explain their role in the development of modern science.

**Answer:**

**1. Discovery and Observation:**

* The exploratory nature of scientific

0.02.660.881 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6705.95 tokens per second)
0.02.660.884 I llama_perf_context_print:        load time =     472.45 ms
0.02.660.885 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.660.886 I llama_perf_context_print:        eval time =    2168.74 ms /    32 runs   (   67.77 ms per token,    14.76 tokens per second)
0.02.660.887 I llama_perf_context_print:       total time =    2187.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.572 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.802 I main: llama backend init
0.00.000.943 I main: load the model and apply lora adapter, if any
0.00.021.497 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.507 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.515 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.520 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.521 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.525 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.526 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.526 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.527 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.527 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.528 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.533 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.533 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.534 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.535 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.536 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.634 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.891 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.776 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.783 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.783 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.784 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.785 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.786 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.786 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.789 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.790 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.791 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.792 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.792 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.796 I llama_model_loader: - type  f32:   37 tensors
0.00.132.797 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.560 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.960 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.541 I llm_load_vocab: special tokens cache size = 5
0.00.264.181 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.199 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.200 I llm_load_print_meta: arch             = gemma
0.00.264.200 I llm_load_print_meta: vocab type       = SPM
0.00.264.201 I llm_load_print_meta: n_vocab          = 256000
0.00.264.201 I llm_load_print_meta: n_merges         = 0
0.00.264.202 I llm_load_print_meta: vocab_only       = 0
0.00.264.202 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.203 I llm_load_print_meta: n_embd           = 2048
0.00.264.203 I llm_load_print_meta: n_layer          = 18
0.00.264.215 I llm_load_print_meta: n_head           = 8
0.00.264.216 I llm_load_print_meta: n_head_kv        = 1
0.00.264.218 I llm_load_print_meta: n_rot            = 256
0.00.264.218 I llm_load_print_meta: n_swa            = 0
0.00.264.219 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.219 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.220 I llm_load_print_meta: n_gqa            = 8
0.00.264.222 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.222 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.223 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.225 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.225 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.225 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.226 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.227 I llm_load_print_meta: n_ff             = 16384
0.00.264.227 I llm_load_print_meta: n_expert         = 0
0.00.264.228 I llm_load_print_meta: n_expert_used    = 0
0.00.264.231 I llm_load_print_meta: causal attn      = 1
0.00.264.231 I llm_load_print_meta: pooling type     = 0
0.00.264.231 I llm_load_print_meta: rope type        = 2
0.00.264.232 I llm_load_print_meta: rope scaling     = linear
0.00.264.234 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.235 I llm_load_print_meta: freq_scale_train = 1
0.00.264.235 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.236 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.236 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.237 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.237 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.237 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.238 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.238 I llm_load_print_meta: model type       = 2B
0.00.264.239 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.240 I llm_load_print_meta: model params     = 2.51 B
0.00.264.241 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.241 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.242 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.244 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.244 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.245 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.245 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.245 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.246 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.246 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.246 I llm_load_print_meta: max token length = 93
0.00.347.398 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.347.406 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.347.407 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.347.407 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.347.408 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.347.409 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.352.805 I llama_new_context_with_model: n_seq_max     = 1
0.00.352.811 I llama_new_context_with_model: n_ctx         = 4096
0.00.352.811 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.352.811 I llama_new_context_with_model: n_batch       = 2048
0.00.352.812 I llama_new_context_with_model: n_ubatch      = 512
0.00.352.812 I llama_new_context_with_model: flash_attn    = 0
0.00.352.814 I llama_new_context_with_model: freq_base     = 10000.0
0.00.352.815 I llama_new_context_with_model: freq_scale    = 1
0.00.352.816 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.369.003 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.020 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.116 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.376 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.383 I llama_new_context_with_model: graph nodes  = 601
0.00.370.384 I llama_new_context_with_model: graph splits = 1
0.00.370.386 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.961 I main: llama threadpool init, n_threads = 4
0.00.458.974 I 
0.00.459.058 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.459.062 I 
0.00.459.118 I sampler seed: 3559437674
0.00.459.129 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.133 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.459.133 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.133 I 
 increasities, and other forms of sexual harassment.

Sexual harassment is a serious issue that affects individuals and society as a whole. It can have devastating consequences for

0.02.644.020 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6556.73 tokens per second)
0.02.644.023 I llama_perf_context_print:        load time =     458.00 ms
0.02.644.024 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.644.025 I llama_perf_context_print:        eval time =    2165.18 ms /    32 runs   (   67.66 ms per token,    14.78 tokens per second)
0.02.644.026 I llama_perf_context_print:       total time =    2185.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.604 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.823 I main: llama backend init
0.00.000.967 I main: load the model and apply lora adapter, if any
0.00.027.287 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.027.299 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.027.308 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.317 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.318 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.323 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.324 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.324 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.325 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.330 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.331 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.331 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.332 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.332 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.831 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.945 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.881 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.889 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.890 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.890 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.891 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.892 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.892 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.895 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.895 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.897 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.898 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.899 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.902 I llama_model_loader: - type  f32:   37 tensors
0.00.144.903 I llama_model_loader: - type q8_0:  127 tensors
0.00.220.325 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.273.505 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.107 I llm_load_vocab: special tokens cache size = 5
0.00.294.867 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.888 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.888 I llm_load_print_meta: arch             = gemma
0.00.294.889 I llm_load_print_meta: vocab type       = SPM
0.00.294.889 I llm_load_print_meta: n_vocab          = 256000
0.00.294.890 I llm_load_print_meta: n_merges         = 0
0.00.294.890 I llm_load_print_meta: vocab_only       = 0
0.00.294.891 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.891 I llm_load_print_meta: n_embd           = 2048
0.00.294.891 I llm_load_print_meta: n_layer          = 18
0.00.294.902 I llm_load_print_meta: n_head           = 8
0.00.294.903 I llm_load_print_meta: n_head_kv        = 1
0.00.294.904 I llm_load_print_meta: n_rot            = 256
0.00.294.904 I llm_load_print_meta: n_swa            = 0
0.00.294.904 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.905 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.906 I llm_load_print_meta: n_gqa            = 8
0.00.294.907 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.907 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.908 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.910 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.910 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.910 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.911 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.911 I llm_load_print_meta: n_ff             = 16384
0.00.294.912 I llm_load_print_meta: n_expert         = 0
0.00.294.912 I llm_load_print_meta: n_expert_used    = 0
0.00.294.912 I llm_load_print_meta: causal attn      = 1
0.00.294.913 I llm_load_print_meta: pooling type     = 0
0.00.294.913 I llm_load_print_meta: rope type        = 2
0.00.294.913 I llm_load_print_meta: rope scaling     = linear
0.00.294.915 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.916 I llm_load_print_meta: freq_scale_train = 1
0.00.294.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.916 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.916 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.917 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.917 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.917 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.918 I llm_load_print_meta: model type       = 2B
0.00.294.918 I llm_load_print_meta: model ftype      = Q8_0
0.00.294.919 I llm_load_print_meta: model params     = 2.51 B
0.00.294.920 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.294.921 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.921 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.921 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.922 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.922 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.923 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.923 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.923 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.924 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.924 I llm_load_print_meta: max token length = 93
0.00.372.844 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.372.851 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.378.072 I llama_new_context_with_model: n_seq_max     = 1
0.00.378.079 I llama_new_context_with_model: n_ctx         = 4096
0.00.378.079 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.378.079 I llama_new_context_with_model: n_batch       = 2048
0.00.378.080 I llama_new_context_with_model: n_ubatch      = 512
0.00.378.080 I llama_new_context_with_model: flash_attn    = 0
0.00.378.082 I llama_new_context_with_model: freq_base     = 10000.0
0.00.378.083 I llama_new_context_with_model: freq_scale    = 1
0.00.378.084 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.393.619 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.393.633 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.393.731 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.999 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.395.006 I llama_new_context_with_model: graph nodes  = 601
0.00.395.006 I llama_new_context_with_model: graph splits = 1
0.00.395.008 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.955 I main: llama threadpool init, n_threads = 4
0.00.483.969 I 
0.00.484.044 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.047 I 
0.00.484.089 I sampler seed: 332909926
0.00.484.100 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.103 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.103 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.103 I 
 increably in my heart, and in my soul, an insatiable desire for adventure.

I yearn for the thrill of the unknown, the challenge of pushing my

0.02.932.130 I llama_perf_sampler_print:    sampling time =       5.33 ms /    33 runs   (    0.16 ms per token,  6191.37 tokens per second)
0.02.932.133 I llama_perf_context_print:        load time =     482.96 ms
0.02.932.134 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.932.135 I llama_perf_context_print:        eval time =    2428.01 ms /    32 runs   (   75.88 ms per token,    13.18 tokens per second)
0.02.932.136 I llama_perf_context_print:       total time =    2448.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.561s
user	0m39.188s
sys	0m9.425s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4065 (b141e5f6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31979.66 ms
main:    total time = 31979.66 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.591 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.926 I main: load the model and apply lora adapter, if any
0.00.021.507 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.517 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.525 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.534 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.535 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.538 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.539 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.540 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.544 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.545 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.545 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.549 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.549 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.550 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.550 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.551 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.308 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.825 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.739 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.745 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.745 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.746 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.746 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.747 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.748 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.750 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.750 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.751 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.752 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.753 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.756 I llama_model_loader: - type  f32:   37 tensors
0.00.131.756 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.757 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.797 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.072 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.600 I llm_load_vocab: special tokens cache size = 5
0.00.263.186 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.203 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.204 I llm_load_print_meta: arch             = gemma
0.00.263.205 I llm_load_print_meta: vocab type       = SPM
0.00.263.205 I llm_load_print_meta: n_vocab          = 256000
0.00.263.206 I llm_load_print_meta: n_merges         = 0
0.00.263.206 I llm_load_print_meta: vocab_only       = 0
0.00.263.206 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.207 I llm_load_print_meta: n_embd           = 2048
0.00.263.207 I llm_load_print_meta: n_layer          = 18
0.00.263.219 I llm_load_print_meta: n_head           = 8
0.00.263.220 I llm_load_print_meta: n_head_kv        = 1
0.00.263.220 I llm_load_print_meta: n_rot            = 256
0.00.263.220 I llm_load_print_meta: n_swa            = 0
0.00.263.220 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.221 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.222 I llm_load_print_meta: n_gqa            = 8
0.00.263.222 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.223 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.224 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.226 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.226 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.226 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.226 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.227 I llm_load_print_meta: n_ff             = 16384
0.00.263.228 I llm_load_print_meta: n_expert         = 0
0.00.263.228 I llm_load_print_meta: n_expert_used    = 0
0.00.263.228 I llm_load_print_meta: causal attn      = 1
0.00.263.229 I llm_load_print_meta: pooling type     = 0
0.00.263.229 I llm_load_print_meta: rope type        = 2
0.00.263.229 I llm_load_print_meta: rope scaling     = linear
0.00.263.231 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.231 I llm_load_print_meta: freq_scale_train = 1
0.00.263.231 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.232 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.232 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.232 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.232 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.233 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.233 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.233 I llm_load_print_meta: model type       = 2B
0.00.263.234 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.235 I llm_load_print_meta: model params     = 2.51 B
0.00.263.236 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.236 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.237 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.237 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.238 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.238 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.239 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.240 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.240 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.241 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.241 I llm_load_print_meta: max token length = 93
0.00.324.239 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.324.247 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.324.248 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.324.248 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.324.249 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.324.250 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.329.386 I llama_new_context_with_model: n_seq_max     = 1
0.00.329.392 I llama_new_context_with_model: n_ctx         = 4096
0.00.329.392 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.329.393 I llama_new_context_with_model: n_batch       = 2048
0.00.329.393 I llama_new_context_with_model: n_ubatch      = 512
0.00.329.394 I llama_new_context_with_model: flash_attn    = 0
0.00.329.395 I llama_new_context_with_model: freq_base     = 10000.0
0.00.329.396 I llama_new_context_with_model: freq_scale    = 1
0.00.329.397 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.344.645 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.344.658 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.344.744 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.961 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.345.967 I llama_new_context_with_model: graph nodes  = 601
0.00.345.968 I llama_new_context_with_model: graph splits = 1
0.00.345.969 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.420.994 I main: llama threadpool init, n_threads = 4
0.00.421.007 I 
0.00.421.083 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.086 I 
0.00.421.127 I sampler seed: 2104619265
0.00.421.139 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.142 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.421.143 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.145 I 
 fufilling music in the background.

**Scene:** A bustling street market in Marrakech, Morocco.

**Characters:**

* A young woman named Fatima,

0.02.054.772 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6852.16 tokens per second)
0.02.054.774 I llama_perf_context_print:        load time =     420.05 ms
0.02.054.776 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.054.777 I llama_perf_context_print:        eval time =    1614.56 ms /    32 runs   (   50.45 ms per token,    19.82 tokens per second)
0.02.054.778 I llama_perf_context_print:       total time =    1633.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4065 (b141e5f6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32040.28 ms
main:    total time = 32040.28 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.723 I main: llama backend init
0.00.000.855 I main: load the model and apply lora adapter, if any
0.00.021.298 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.315 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.324 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.327 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.331 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.332 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.332 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.333 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.334 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.334 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.337 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.338 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.339 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.340 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.340 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.688 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.532 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.355 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.361 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.362 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.363 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.364 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.366 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.367 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.370 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.371 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.375 I llama_model_loader: - type  f32:   37 tensors
0.00.131.376 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.377 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.828 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.292 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.781 I llm_load_vocab: special tokens cache size = 5
0.00.262.137 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.152 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.153 I llm_load_print_meta: arch             = gemma
0.00.262.153 I llm_load_print_meta: vocab type       = SPM
0.00.262.154 I llm_load_print_meta: n_vocab          = 256000
0.00.262.155 I llm_load_print_meta: n_merges         = 0
0.00.262.167 I llm_load_print_meta: vocab_only       = 0
0.00.262.168 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.169 I llm_load_print_meta: n_embd           = 2048
0.00.262.169 I llm_load_print_meta: n_layer          = 18
0.00.262.181 I llm_load_print_meta: n_head           = 8
0.00.262.182 I llm_load_print_meta: n_head_kv        = 1
0.00.262.183 I llm_load_print_meta: n_rot            = 256
0.00.262.184 I llm_load_print_meta: n_swa            = 0
0.00.262.184 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.185 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.186 I llm_load_print_meta: n_gqa            = 8
0.00.262.187 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.188 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.189 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.193 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.194 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.194 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.195 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.195 I llm_load_print_meta: n_ff             = 16384
0.00.262.196 I llm_load_print_meta: n_expert         = 0
0.00.262.196 I llm_load_print_meta: n_expert_used    = 0
0.00.262.196 I llm_load_print_meta: causal attn      = 1
0.00.262.197 I llm_load_print_meta: pooling type     = 0
0.00.262.197 I llm_load_print_meta: rope type        = 2
0.00.262.197 I llm_load_print_meta: rope scaling     = linear
0.00.262.198 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.199 I llm_load_print_meta: freq_scale_train = 1
0.00.262.199 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.200 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.200 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.200 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.201 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.201 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.202 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.202 I llm_load_print_meta: model type       = 2B
0.00.262.203 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.203 I llm_load_print_meta: model params     = 2.51 B
0.00.262.204 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.205 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.205 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.206 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.206 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.209 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.209 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.210 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.210 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.211 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.211 I llm_load_print_meta: max token length = 93
0.00.319.832 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.325.042 I llama_new_context_with_model: n_seq_max     = 1
0.00.325.048 I llama_new_context_with_model: n_ctx         = 4096
0.00.325.048 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.325.049 I llama_new_context_with_model: n_batch       = 2048
0.00.325.049 I llama_new_context_with_model: n_ubatch      = 512
0.00.325.050 I llama_new_context_with_model: flash_attn    = 0
0.00.325.052 I llama_new_context_with_model: freq_base     = 10000.0
0.00.325.053 I llama_new_context_with_model: freq_scale    = 1
0.00.325.054 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.988 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.341.002 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.341.092 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.336 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.341 I llama_new_context_with_model: graph nodes  = 601
0.00.342.342 I llama_new_context_with_model: graph splits = 1
0.00.342.344 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.416.224 I main: llama threadpool init, n_threads = 4
0.00.416.237 I 
0.00.416.315 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.318 I 
0.00.416.358 I sampler seed: 3230400650
0.00.416.372 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.375 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.416.375 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.375 I 
 seconally.

I am a big fan of the show "The Office" and I enjoy watching it. It makes me laugh and makes me feel happy.

0.02.003.383 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6769.23 tokens per second)
0.02.003.387 I llama_perf_context_print:        load time =     415.35 ms
0.02.003.388 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.003.390 I llama_perf_context_print:        eval time =    1567.82 ms /    32 runs   (   48.99 ms per token,    20.41 tokens per second)
0.02.003.391 I llama_perf_context_print:       total time =    1587.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.095s
user	8m14.391s
sys	0m6.965s
