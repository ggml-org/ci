+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.001.132 I main: load the model and apply lora adapter, if any
0.00.023.682 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.691 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.782 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.793 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.794 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.799 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.803 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.804 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.805 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.806 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.807 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.814 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.816 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.817 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.818 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.819 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.590 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.105 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.174 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.182 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.183 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.184 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.185 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.186 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.187 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.191 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.192 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.193 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.194 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.265.195 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.203 I llama_model_loader: - type  f32:   37 tensors
0.00.265.205 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.400 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.560 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.525 I llm_load_vocab: special tokens cache size = 5
0.00.600.215 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.600.288 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.600.289 I llm_load_print_meta: arch             = gemma
0.00.600.290 I llm_load_print_meta: vocab type       = SPM
0.00.600.291 I llm_load_print_meta: n_vocab          = 256000
0.00.600.293 I llm_load_print_meta: n_merges         = 0
0.00.600.294 I llm_load_print_meta: vocab_only       = 0
0.00.600.294 I llm_load_print_meta: n_ctx_train      = 8192
0.00.600.295 I llm_load_print_meta: n_embd           = 2048
0.00.600.295 I llm_load_print_meta: n_layer          = 18
0.00.600.362 I llm_load_print_meta: n_head           = 8
0.00.600.369 I llm_load_print_meta: n_head_kv        = 1
0.00.600.370 I llm_load_print_meta: n_rot            = 256
0.00.600.370 I llm_load_print_meta: n_swa            = 0
0.00.600.371 I llm_load_print_meta: n_embd_head_k    = 256
0.00.600.371 I llm_load_print_meta: n_embd_head_v    = 256
0.00.600.376 I llm_load_print_meta: n_gqa            = 8
0.00.600.381 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.600.386 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.600.388 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.600.389 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.600.390 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.600.390 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.600.390 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.600.395 I llm_load_print_meta: n_ff             = 16384
0.00.600.396 I llm_load_print_meta: n_expert         = 0
0.00.600.396 I llm_load_print_meta: n_expert_used    = 0
0.00.600.396 I llm_load_print_meta: causal attn      = 1
0.00.600.397 I llm_load_print_meta: pooling type     = 0
0.00.600.397 I llm_load_print_meta: rope type        = 2
0.00.600.398 I llm_load_print_meta: rope scaling     = linear
0.00.600.399 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.600.399 I llm_load_print_meta: freq_scale_train = 1
0.00.600.400 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.600.400 I llm_load_print_meta: rope_finetuned   = unknown
0.00.600.400 I llm_load_print_meta: ssm_d_conv       = 0
0.00.600.401 I llm_load_print_meta: ssm_d_inner      = 0
0.00.600.401 I llm_load_print_meta: ssm_d_state      = 0
0.00.600.401 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.600.402 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.600.402 I llm_load_print_meta: model type       = 2B
0.00.600.403 I llm_load_print_meta: model ftype      = Q8_0
0.00.600.404 I llm_load_print_meta: model params     = 2.51 B
0.00.600.432 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.600.433 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.600.434 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.600.434 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.600.435 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.600.435 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.600.436 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.600.436 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.600.443 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.600.445 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.600.445 I llm_load_print_meta: max token length = 93
0.00.704.283 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.704.292 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.704.293 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.704.294 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.704.295 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.704.295 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.710.111 I llama_new_context_with_model: n_seq_max     = 1
0.00.710.119 I llama_new_context_with_model: n_ctx         = 4096
0.00.710.119 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.710.119 I llama_new_context_with_model: n_batch       = 2048
0.00.710.120 I llama_new_context_with_model: n_ubatch      = 512
0.00.710.120 I llama_new_context_with_model: flash_attn    = 0
0.00.710.122 I llama_new_context_with_model: freq_base     = 10000.0
0.00.710.123 I llama_new_context_with_model: freq_scale    = 1
0.00.710.124 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.726.452 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.726.491 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.726.614 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.729.169 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.729.173 I llama_new_context_with_model: graph nodes  = 601
0.00.729.173 I llama_new_context_with_model: graph splits = 1
0.00.729.197 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.334.342 I main: llama threadpool init, n_threads = 4
0.01.334.355 I 
0.01.334.461 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.334.464 I 
0.01.334.695 I sampler seed: 2218762510
0.01.334.707 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.334.713 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.334.717 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.334.717 I 
 increamentalism. [end of text]


0.03.434.771 I llama_perf_sampler_print:    sampling time =       7.48 ms /     6 runs   (    1.25 ms per token,   802.14 tokens per second)
0.03.434.775 I llama_perf_context_print:        load time =    1333.11 ms
0.03.434.777 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.434.779 I llama_perf_context_print:        eval time =    2085.08 ms /     5 runs   (  417.02 ms per token,     2.40 tokens per second)
0.03.434.780 I llama_perf_context_print:       total time =    2100.44 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.659 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.001.111 I main: load the model and apply lora adapter, if any
0.00.023.512 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.603 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.617 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.618 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.623 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.624 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.625 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.627 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.628 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.629 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.636 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.637 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.638 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.639 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.640 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.816 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.780 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.992 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.001 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.002 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.003 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.004 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.007 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.008 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.012 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.013 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.015 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.016 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.265.017 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.025 I llama_model_loader: - type  f32:   37 tensors
0.00.265.027 I llama_model_loader: - type q8_0:  127 tensors
0.00.444.197 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.507.437 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.477 I llm_load_vocab: special tokens cache size = 5
0.00.620.642 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.719 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.720 I llm_load_print_meta: arch             = gemma
0.00.620.721 I llm_load_print_meta: vocab type       = SPM
0.00.620.722 I llm_load_print_meta: n_vocab          = 256000
0.00.620.724 I llm_load_print_meta: n_merges         = 0
0.00.620.725 I llm_load_print_meta: vocab_only       = 0
0.00.620.725 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.726 I llm_load_print_meta: n_embd           = 2048
0.00.620.726 I llm_load_print_meta: n_layer          = 18
0.00.620.792 I llm_load_print_meta: n_head           = 8
0.00.620.799 I llm_load_print_meta: n_head_kv        = 1
0.00.620.801 I llm_load_print_meta: n_rot            = 256
0.00.620.802 I llm_load_print_meta: n_swa            = 0
0.00.620.803 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.804 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.813 I llm_load_print_meta: n_gqa            = 8
0.00.620.818 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.620.823 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.620.825 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.620.827 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.620.828 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.620.828 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.620.829 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.620.834 I llm_load_print_meta: n_ff             = 16384
0.00.620.835 I llm_load_print_meta: n_expert         = 0
0.00.620.835 I llm_load_print_meta: n_expert_used    = 0
0.00.620.836 I llm_load_print_meta: causal attn      = 1
0.00.620.836 I llm_load_print_meta: pooling type     = 0
0.00.620.836 I llm_load_print_meta: rope type        = 2
0.00.620.837 I llm_load_print_meta: rope scaling     = linear
0.00.620.839 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.620.840 I llm_load_print_meta: freq_scale_train = 1
0.00.620.840 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.620.841 I llm_load_print_meta: rope_finetuned   = unknown
0.00.620.842 I llm_load_print_meta: ssm_d_conv       = 0
0.00.620.842 I llm_load_print_meta: ssm_d_inner      = 0
0.00.620.842 I llm_load_print_meta: ssm_d_state      = 0
0.00.620.842 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.620.843 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.620.844 I llm_load_print_meta: model type       = 2B
0.00.620.846 I llm_load_print_meta: model ftype      = Q8_0
0.00.620.872 I llm_load_print_meta: model params     = 2.51 B
0.00.620.881 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.620.882 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.620.883 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.620.883 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.620.884 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.620.885 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.620.885 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.620.886 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.893 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.894 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.895 I llm_load_print_meta: max token length = 93
0.00.717.626 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.723.465 I llama_new_context_with_model: n_seq_max     = 1
0.00.723.472 I llama_new_context_with_model: n_ctx         = 4096
0.00.723.472 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.723.473 I llama_new_context_with_model: n_batch       = 2048
0.00.723.473 I llama_new_context_with_model: n_ubatch      = 512
0.00.723.473 I llama_new_context_with_model: flash_attn    = 0
0.00.723.475 I llama_new_context_with_model: freq_base     = 10000.0
0.00.723.476 I llama_new_context_with_model: freq_scale    = 1
0.00.723.477 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.740.390 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.740.434 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.740.561 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.743.055 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.743.060 I llama_new_context_with_model: graph nodes  = 601
0.00.743.060 I llama_new_context_with_model: graph splits = 1
0.00.743.084 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.362 I main: llama threadpool init, n_threads = 4
0.01.350.375 I 
0.01.350.484 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.350.488 I 
0.01.350.747 I sampler seed: 1666832936
0.01.350.759 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.350.766 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.350.770 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.350.770 I 
 increasities?
I am unable to answer the question as it contains sexually suggestive content. I am designed to provide safe and appropriate information. [end of text]


0.13.494.031 I llama_perf_sampler_print:    sampling time =      42.46 ms /    30 runs   (    1.42 ms per token,   706.60 tokens per second)
0.13.494.034 I llama_perf_context_print:        load time =    1349.16 ms
0.13.494.036 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.494.038 I llama_perf_context_print:        eval time =   12063.65 ms /    29 runs   (  415.99 ms per token,     2.40 tokens per second)
0.13.494.040 I llama_perf_context_print:       total time =   12143.68 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.628 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.833 I main: llama backend init
0.00.001.089 I main: load the model and apply lora adapter, if any
0.00.023.021 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.032 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.114 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.125 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.127 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.131 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.133 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.135 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.136 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.137 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.139 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.144 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.146 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.147 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.149 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.150 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.439 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.768 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.965 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.968 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.969 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.971 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.975 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.976 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.977 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.264.978 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.264.979 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.264.987 I llama_model_loader: - type  f32:   37 tensors
0.00.264.990 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.406 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.343 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.334 I llm_load_vocab: special tokens cache size = 5
0.00.601.326 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.397 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.398 I llm_load_print_meta: arch             = gemma
0.00.601.399 I llm_load_print_meta: vocab type       = SPM
0.00.601.400 I llm_load_print_meta: n_vocab          = 256000
0.00.601.402 I llm_load_print_meta: n_merges         = 0
0.00.601.402 I llm_load_print_meta: vocab_only       = 0
0.00.601.403 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.403 I llm_load_print_meta: n_embd           = 2048
0.00.601.403 I llm_load_print_meta: n_layer          = 18
0.00.601.466 I llm_load_print_meta: n_head           = 8
0.00.601.473 I llm_load_print_meta: n_head_kv        = 1
0.00.601.474 I llm_load_print_meta: n_rot            = 256
0.00.601.474 I llm_load_print_meta: n_swa            = 0
0.00.601.475 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.475 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.480 I llm_load_print_meta: n_gqa            = 8
0.00.601.484 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.489 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.491 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.492 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.493 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.493 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.493 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.498 I llm_load_print_meta: n_ff             = 16384
0.00.601.499 I llm_load_print_meta: n_expert         = 0
0.00.601.499 I llm_load_print_meta: n_expert_used    = 0
0.00.601.500 I llm_load_print_meta: causal attn      = 1
0.00.601.500 I llm_load_print_meta: pooling type     = 0
0.00.601.500 I llm_load_print_meta: rope type        = 2
0.00.601.501 I llm_load_print_meta: rope scaling     = linear
0.00.601.502 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.503 I llm_load_print_meta: freq_scale_train = 1
0.00.601.503 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.504 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.504 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.504 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.504 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.505 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.505 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.506 I llm_load_print_meta: model type       = 2B
0.00.601.507 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.508 I llm_load_print_meta: model params     = 2.51 B
0.00.601.517 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.517 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.518 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.518 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.519 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.519 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.520 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.520 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.526 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.527 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.527 I llm_load_print_meta: max token length = 93
0.00.688.162 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.688.170 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.688.171 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.688.172 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.688.173 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.688.174 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.694.027 I llama_new_context_with_model: n_seq_max     = 1
0.00.694.034 I llama_new_context_with_model: n_ctx         = 4096
0.00.694.034 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.694.035 I llama_new_context_with_model: n_batch       = 2048
0.00.694.035 I llama_new_context_with_model: n_ubatch      = 512
0.00.694.035 I llama_new_context_with_model: flash_attn    = 0
0.00.694.038 I llama_new_context_with_model: freq_base     = 10000.0
0.00.694.039 I llama_new_context_with_model: freq_scale    = 1
0.00.694.040 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.710.521 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.710.563 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.710.688 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.713.205 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.713.209 I llama_new_context_with_model: graph nodes  = 601
0.00.713.210 I llama_new_context_with_model: graph splits = 1
0.00.713.235 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.325.039 I main: llama threadpool init, n_threads = 4
0.01.325.051 I 
0.01.325.163 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.325.167 I 
0.01.325.400 I sampler seed: 3914183932
0.01.325.412 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.325.419 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.325.422 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.325.422 I 
 increasities and all of that. 😅 [end of text]


0.05.092.327 I llama_perf_sampler_print:    sampling time =      13.59 ms /    10 runs   (    1.36 ms per token,   735.62 tokens per second)
0.05.092.330 I llama_perf_context_print:        load time =    1323.86 ms
0.05.092.332 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.092.347 I llama_perf_context_print:        eval time =    3740.43 ms /     9 runs   (  415.60 ms per token,     2.41 tokens per second)
0.05.092.348 I llama_perf_context_print:       total time =    3767.30 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.694 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.910 I main: llama backend init
0.00.001.173 I main: load the model and apply lora adapter, if any
0.00.023.827 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.841 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.939 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.953 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.957 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.963 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.964 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.967 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.968 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.969 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.971 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.980 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.981 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.983 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.984 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.985 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.803 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.282 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.644 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.653 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.654 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.656 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.657 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.658 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.659 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.662 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.663 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.664 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.665 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.667 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.674 I llama_model_loader: - type  f32:   37 tensors
0.00.268.677 I llama_model_loader: - type q8_0:  127 tensors
0.00.444.700 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.503.217 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.335 I llm_load_vocab: special tokens cache size = 5
0.00.599.964 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.600.032 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.600.033 I llm_load_print_meta: arch             = gemma
0.00.600.034 I llm_load_print_meta: vocab type       = SPM
0.00.600.035 I llm_load_print_meta: n_vocab          = 256000
0.00.600.037 I llm_load_print_meta: n_merges         = 0
0.00.600.038 I llm_load_print_meta: vocab_only       = 0
0.00.600.038 I llm_load_print_meta: n_ctx_train      = 8192
0.00.600.039 I llm_load_print_meta: n_embd           = 2048
0.00.600.039 I llm_load_print_meta: n_layer          = 18
0.00.600.114 I llm_load_print_meta: n_head           = 8
0.00.600.121 I llm_load_print_meta: n_head_kv        = 1
0.00.600.122 I llm_load_print_meta: n_rot            = 256
0.00.600.122 I llm_load_print_meta: n_swa            = 0
0.00.600.123 I llm_load_print_meta: n_embd_head_k    = 256
0.00.600.123 I llm_load_print_meta: n_embd_head_v    = 256
0.00.600.128 I llm_load_print_meta: n_gqa            = 8
0.00.600.132 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.600.138 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.600.140 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.600.142 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.600.142 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.600.142 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.600.143 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.600.149 I llm_load_print_meta: n_ff             = 16384
0.00.600.149 I llm_load_print_meta: n_expert         = 0
0.00.600.149 I llm_load_print_meta: n_expert_used    = 0
0.00.600.150 I llm_load_print_meta: causal attn      = 1
0.00.600.150 I llm_load_print_meta: pooling type     = 0
0.00.600.150 I llm_load_print_meta: rope type        = 2
0.00.600.159 I llm_load_print_meta: rope scaling     = linear
0.00.600.160 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.600.161 I llm_load_print_meta: freq_scale_train = 1
0.00.600.161 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.600.162 I llm_load_print_meta: rope_finetuned   = unknown
0.00.600.163 I llm_load_print_meta: ssm_d_conv       = 0
0.00.600.163 I llm_load_print_meta: ssm_d_inner      = 0
0.00.600.163 I llm_load_print_meta: ssm_d_state      = 0
0.00.600.164 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.600.164 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.600.183 I llm_load_print_meta: model type       = 2B
0.00.600.185 I llm_load_print_meta: model ftype      = Q8_0
0.00.600.186 I llm_load_print_meta: model params     = 2.51 B
0.00.600.194 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.600.195 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.600.195 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.600.196 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.600.197 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.600.197 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.600.198 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.600.198 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.600.208 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.600.209 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.600.210 I llm_load_print_meta: max token length = 93
0.00.672.934 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.672.944 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.678.697 I llama_new_context_with_model: n_seq_max     = 1
0.00.678.705 I llama_new_context_with_model: n_ctx         = 4096
0.00.678.705 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.678.706 I llama_new_context_with_model: n_batch       = 2048
0.00.678.706 I llama_new_context_with_model: n_ubatch      = 512
0.00.678.707 I llama_new_context_with_model: flash_attn    = 0
0.00.678.709 I llama_new_context_with_model: freq_base     = 10000.0
0.00.678.710 I llama_new_context_with_model: freq_scale    = 1
0.00.678.710 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.694.845 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.694.882 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.695.009 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.697.563 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.697.567 I llama_new_context_with_model: graph nodes  = 601
0.00.697.567 I llama_new_context_with_model: graph splits = 1
0.00.697.592 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.339.946 I main: llama threadpool init, n_threads = 4
0.01.339.960 I 
0.01.340.088 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.340.092 I 
0.01.340.322 I sampler seed: 3092479061
0.01.340.334 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.340.341 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.340.344 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.340.344 I 
 increasities. [end of text]


0.03.029.505 I llama_perf_sampler_print:    sampling time =       5.85 ms /     5 runs   (    1.17 ms per token,   854.99 tokens per second)
0.03.029.510 I llama_perf_context_print:        load time =    1338.67 ms
0.03.029.512 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.029.514 I llama_perf_context_print:        eval time =    1677.03 ms /     4 runs   (  419.26 ms per token,     2.39 tokens per second)
0.03.029.514 I llama_perf_context_print:       total time =    1689.57 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m34.651s
user	1m31.533s
sys	0m9.410s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4065 (b141e5f6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198805.06 ms
main:    total time = 198805.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.665 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.878 I main: llama backend init
0.00.001.140 I main: load the model and apply lora adapter, if any
0.00.023.750 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.761 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.853 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.865 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.867 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.872 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.874 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.875 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.877 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.878 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.880 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.891 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.896 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.898 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.899 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.901 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.866 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.179 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.431 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.445 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.446 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.447 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.448 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.449 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.450 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.454 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.456 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.457 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.458 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.459 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.467 I llama_model_loader: - type  f32:   37 tensors
0.00.272.470 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.471 I llama_model_loader: - type q6_K:   19 tensors
0.00.470.663 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.538.031 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.539.020 I llm_load_vocab: special tokens cache size = 5
0.00.633.999 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.634.072 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.634.073 I llm_load_print_meta: arch             = gemma
0.00.634.074 I llm_load_print_meta: vocab type       = SPM
0.00.634.075 I llm_load_print_meta: n_vocab          = 256000
0.00.634.078 I llm_load_print_meta: n_merges         = 0
0.00.634.078 I llm_load_print_meta: vocab_only       = 0
0.00.634.079 I llm_load_print_meta: n_ctx_train      = 8192
0.00.634.079 I llm_load_print_meta: n_embd           = 2048
0.00.634.079 I llm_load_print_meta: n_layer          = 18
0.00.634.143 I llm_load_print_meta: n_head           = 8
0.00.634.150 I llm_load_print_meta: n_head_kv        = 1
0.00.634.151 I llm_load_print_meta: n_rot            = 256
0.00.634.151 I llm_load_print_meta: n_swa            = 0
0.00.634.152 I llm_load_print_meta: n_embd_head_k    = 256
0.00.634.152 I llm_load_print_meta: n_embd_head_v    = 256
0.00.634.157 I llm_load_print_meta: n_gqa            = 8
0.00.634.161 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.634.166 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.634.167 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.634.168 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.634.169 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.634.169 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.634.169 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.634.174 I llm_load_print_meta: n_ff             = 16384
0.00.634.175 I llm_load_print_meta: n_expert         = 0
0.00.634.175 I llm_load_print_meta: n_expert_used    = 0
0.00.634.176 I llm_load_print_meta: causal attn      = 1
0.00.634.176 I llm_load_print_meta: pooling type     = 0
0.00.634.176 I llm_load_print_meta: rope type        = 2
0.00.634.177 I llm_load_print_meta: rope scaling     = linear
0.00.634.178 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.634.179 I llm_load_print_meta: freq_scale_train = 1
0.00.634.179 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.634.200 I llm_load_print_meta: rope_finetuned   = unknown
0.00.634.201 I llm_load_print_meta: ssm_d_conv       = 0
0.00.634.201 I llm_load_print_meta: ssm_d_inner      = 0
0.00.634.201 I llm_load_print_meta: ssm_d_state      = 0
0.00.634.202 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.634.202 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.634.203 I llm_load_print_meta: model type       = 2B
0.00.634.204 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.634.205 I llm_load_print_meta: model params     = 2.51 B
0.00.634.214 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.634.215 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.634.215 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.634.216 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.634.217 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.634.217 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.634.218 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.634.218 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.634.228 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.634.230 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.634.230 I llm_load_print_meta: max token length = 93
0.00.697.921 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.697.928 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.697.929 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.697.929 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.697.930 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.697.931 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.704.066 I llama_new_context_with_model: n_seq_max     = 1
0.00.704.074 I llama_new_context_with_model: n_ctx         = 4096
0.00.704.074 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.704.074 I llama_new_context_with_model: n_batch       = 2048
0.00.704.075 I llama_new_context_with_model: n_ubatch      = 512
0.00.704.075 I llama_new_context_with_model: flash_attn    = 0
0.00.704.078 I llama_new_context_with_model: freq_base     = 10000.0
0.00.704.078 I llama_new_context_with_model: freq_scale    = 1
0.00.704.079 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.720.537 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.720.575 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.720.702 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.723.266 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.723.270 I llama_new_context_with_model: graph nodes  = 601
0.00.723.270 I llama_new_context_with_model: graph splits = 1
0.00.723.297 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.296.448 I main: llama threadpool init, n_threads = 4
0.01.296.464 I 
0.01.296.578 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.296.582 I 
0.01.296.848 I sampler seed: 2675799200
0.01.296.860 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.296.866 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.296.867 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.296.869 I 
 seconally.

I am unable to access the internet or any online resources to retrieve information. I do not have access to a computer or smartphone.

I

0.12.208.371 I llama_perf_sampler_print:    sampling time =      46.97 ms /    33 runs   (    1.42 ms per token,   702.52 tokens per second)
0.12.208.374 I llama_perf_context_print:        load time =    1295.22 ms
0.12.208.376 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.208.391 I llama_perf_context_print:        eval time =   10823.22 ms /    32 runs   (  338.23 ms per token,     2.96 tokens per second)
0.12.208.393 I llama_perf_context_print:       total time =   10911.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4065 (b141e5f6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199671.77 ms
main:    total time = 199671.77 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.681 I build: 4065 (b141e5f6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.919 I main: llama backend init
0.00.001.190 I main: load the model and apply lora adapter, if any
0.00.023.374 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.489 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.504 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.506 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.511 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.513 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.515 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.517 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.519 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.521 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.530 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.535 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.537 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.538 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.540 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.986 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.366 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.454 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.465 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.467 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.468 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.470 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.471 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.472 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.476 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.477 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.487 I llama_model_loader: - type  f32:   37 tensors
0.00.265.490 I llama_model_loader: - type q4_K:  108 tensors
0.00.265.492 I llama_model_loader: - type q6_K:   19 tensors
0.00.462.950 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.779 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.526.693 I llm_load_vocab: special tokens cache size = 5
0.00.621.780 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.621.855 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.621.860 I llm_load_print_meta: arch             = gemma
0.00.621.861 I llm_load_print_meta: vocab type       = SPM
0.00.621.862 I llm_load_print_meta: n_vocab          = 256000
0.00.621.865 I llm_load_print_meta: n_merges         = 0
0.00.621.866 I llm_load_print_meta: vocab_only       = 0
0.00.621.866 I llm_load_print_meta: n_ctx_train      = 8192
0.00.621.867 I llm_load_print_meta: n_embd           = 2048
0.00.621.878 I llm_load_print_meta: n_layer          = 18
0.00.621.955 I llm_load_print_meta: n_head           = 8
0.00.621.966 I llm_load_print_meta: n_head_kv        = 1
0.00.621.968 I llm_load_print_meta: n_rot            = 256
0.00.621.968 I llm_load_print_meta: n_swa            = 0
0.00.621.969 I llm_load_print_meta: n_embd_head_k    = 256
0.00.621.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.621.983 I llm_load_print_meta: n_gqa            = 8
0.00.621.991 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.621.999 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.004 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.006 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.007 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.008 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.008 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.015 I llm_load_print_meta: n_ff             = 16384
0.00.622.015 I llm_load_print_meta: n_expert         = 0
0.00.622.016 I llm_load_print_meta: n_expert_used    = 0
0.00.622.016 I llm_load_print_meta: causal attn      = 1
0.00.622.017 I llm_load_print_meta: pooling type     = 0
0.00.622.017 I llm_load_print_meta: rope type        = 2
0.00.622.017 I llm_load_print_meta: rope scaling     = linear
0.00.622.026 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.027 I llm_load_print_meta: freq_scale_train = 1
0.00.622.028 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.029 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.029 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.029 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.030 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.030 I llm_load_print_meta: model type       = 2B
0.00.622.032 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.622.032 I llm_load_print_meta: model params     = 2.51 B
0.00.622.040 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.622.040 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.041 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.050 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.052 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.053 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.054 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.055 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.062 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.064 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.065 I llm_load_print_meta: max token length = 93
0.00.682.594 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.688.468 I llama_new_context_with_model: n_seq_max     = 1
0.00.688.475 I llama_new_context_with_model: n_ctx         = 4096
0.00.688.475 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.688.475 I llama_new_context_with_model: n_batch       = 2048
0.00.688.476 I llama_new_context_with_model: n_ubatch      = 512
0.00.688.477 I llama_new_context_with_model: flash_attn    = 0
0.00.688.480 I llama_new_context_with_model: freq_base     = 10000.0
0.00.688.481 I llama_new_context_with_model: freq_scale    = 1
0.00.688.482 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.705.200 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.705.239 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.705.360 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.707.904 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.707.908 I llama_new_context_with_model: graph nodes  = 601
0.00.707.908 I llama_new_context_with_model: graph splits = 1
0.00.707.932 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.278.953 I main: llama threadpool init, n_threads = 4
0.01.278.966 I 
0.01.279.088 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.279.093 I 
0.01.279.331 I sampler seed: 2982603374
0.01.279.344 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.279.351 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.279.354 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.279.354 I 
 seconded to me "Hello, I'm just checking in on you. How are things going?"

Is there anything I should do or say in response

0.12.129.381 I llama_perf_sampler_print:    sampling time =      46.58 ms /    33 runs   (    1.41 ms per token,   708.50 tokens per second)
0.12.129.384 I llama_perf_context_print:        load time =    1277.66 ms
0.12.129.385 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.129.387 I llama_perf_context_print:        eval time =   10762.11 ms /    32 runs   (  336.32 ms per token,     2.97 tokens per second)
0.12.129.388 I llama_perf_context_print:       total time =   10850.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.639s
user	50m16.850s
sys	0m6.529s
