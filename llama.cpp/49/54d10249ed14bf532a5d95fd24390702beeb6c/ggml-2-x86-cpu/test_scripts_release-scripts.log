+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.000.873 I main: load the model and apply lora adapter, if any
0.00.021.432 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.443 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.450 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.455 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.457 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.460 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.462 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.463 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.463 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.464 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.468 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.469 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.470 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.471 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.472 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.853 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.631 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.509 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.516 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.516 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.517 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.517 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.518 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.519 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.523 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.524 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.525 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.525 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.526 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.529 I llama_model_loader: - type  f32:   37 tensors
0.00.131.533 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.893 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.206 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.758 I llm_load_vocab: special tokens cache size = 5
0.00.262.327 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.342 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.342 I llm_load_print_meta: arch             = gemma
0.00.262.343 I llm_load_print_meta: vocab type       = SPM
0.00.262.343 I llm_load_print_meta: n_vocab          = 256000
0.00.262.343 I llm_load_print_meta: n_merges         = 0
0.00.262.344 I llm_load_print_meta: vocab_only       = 0
0.00.262.344 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.345 I llm_load_print_meta: n_embd           = 2048
0.00.262.345 I llm_load_print_meta: n_layer          = 18
0.00.262.356 I llm_load_print_meta: n_head           = 8
0.00.262.357 I llm_load_print_meta: n_head_kv        = 1
0.00.262.357 I llm_load_print_meta: n_rot            = 256
0.00.262.358 I llm_load_print_meta: n_swa            = 0
0.00.262.358 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.359 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.360 I llm_load_print_meta: n_gqa            = 8
0.00.262.360 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.361 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.362 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.364 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.364 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.364 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.365 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.366 I llm_load_print_meta: n_ff             = 16384
0.00.262.366 I llm_load_print_meta: n_expert         = 0
0.00.262.366 I llm_load_print_meta: n_expert_used    = 0
0.00.262.367 I llm_load_print_meta: causal attn      = 1
0.00.262.367 I llm_load_print_meta: pooling type     = 0
0.00.262.367 I llm_load_print_meta: rope type        = 2
0.00.262.368 I llm_load_print_meta: rope scaling     = linear
0.00.262.369 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.369 I llm_load_print_meta: freq_scale_train = 1
0.00.262.370 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.370 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.371 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.371 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.371 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.371 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.372 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.373 I llm_load_print_meta: model type       = 2B
0.00.262.373 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.374 I llm_load_print_meta: model params     = 2.51 B
0.00.262.375 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.375 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.376 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.376 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.377 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.377 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.377 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.377 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.378 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.379 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.379 I llm_load_print_meta: max token length = 93
0.00.363.003 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.363.011 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.363.012 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.363.013 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.363.013 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.363.014 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.368.191 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.197 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.198 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.198 I llama_new_context_with_model: n_batch       = 2048
0.00.368.199 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.199 I llama_new_context_with_model: flash_attn    = 0
0.00.368.202 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.202 I llama_new_context_with_model: freq_scale    = 1
0.00.368.203 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.199 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.212 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.299 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.526 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.532 I llama_new_context_with_model: graph nodes  = 601
0.00.384.533 I llama_new_context_with_model: graph splits = 1
0.00.384.534 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.236 I main: llama threadpool init, n_threads = 4
0.00.468.248 I 
0.00.468.323 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.326 I 
0.00.468.366 I sampler seed: 2002351245
0.00.468.377 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.380 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.383 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.383 I 
 increasities on the internet and their potential impact.

**Discussion Points:**

* Definition and characteristics of online harassment
* Prevalence and impact of online harassment


0.02.708.093 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6934.23 tokens per second)
0.02.708.096 I llama_perf_context_print:        load time =     467.34 ms
0.02.708.097 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.708.099 I llama_perf_context_print:        eval time =    2221.16 ms /    32 runs   (   69.41 ms per token,    14.41 tokens per second)
0.02.708.099 I llama_perf_context_print:       total time =    2239.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.539 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.875 I main: load the model and apply lora adapter, if any
0.00.021.538 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.551 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.558 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.559 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.562 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.563 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.565 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.566 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.566 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.566 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.571 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.572 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.572 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.573 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.573 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.197 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.934 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.781 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.786 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.787 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.788 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.788 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.789 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.790 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.792 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.792 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.794 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.796 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.797 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.800 I llama_model_loader: - type  f32:   37 tensors
0.00.131.801 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.362 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.102 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.602 I llm_load_vocab: special tokens cache size = 5
0.00.265.184 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.200 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.200 I llm_load_print_meta: arch             = gemma
0.00.265.201 I llm_load_print_meta: vocab type       = SPM
0.00.265.201 I llm_load_print_meta: n_vocab          = 256000
0.00.265.202 I llm_load_print_meta: n_merges         = 0
0.00.265.202 I llm_load_print_meta: vocab_only       = 0
0.00.265.203 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.203 I llm_load_print_meta: n_embd           = 2048
0.00.265.203 I llm_load_print_meta: n_layer          = 18
0.00.265.215 I llm_load_print_meta: n_head           = 8
0.00.265.216 I llm_load_print_meta: n_head_kv        = 1
0.00.265.216 I llm_load_print_meta: n_rot            = 256
0.00.265.217 I llm_load_print_meta: n_swa            = 0
0.00.265.217 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.217 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.218 I llm_load_print_meta: n_gqa            = 8
0.00.265.219 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.220 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.221 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.222 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.222 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.223 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.223 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.224 I llm_load_print_meta: n_ff             = 16384
0.00.265.224 I llm_load_print_meta: n_expert         = 0
0.00.265.225 I llm_load_print_meta: n_expert_used    = 0
0.00.265.225 I llm_load_print_meta: causal attn      = 1
0.00.265.225 I llm_load_print_meta: pooling type     = 0
0.00.265.226 I llm_load_print_meta: rope type        = 2
0.00.265.226 I llm_load_print_meta: rope scaling     = linear
0.00.265.227 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.228 I llm_load_print_meta: freq_scale_train = 1
0.00.265.228 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.229 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.229 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.229 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.229 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.230 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.230 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.230 I llm_load_print_meta: model type       = 2B
0.00.265.231 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.232 I llm_load_print_meta: model params     = 2.51 B
0.00.265.232 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.233 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.233 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.234 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.234 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.235 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.235 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.235 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.236 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.236 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.236 I llm_load_print_meta: max token length = 93
0.00.361.040 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.366.347 I llama_new_context_with_model: n_seq_max     = 1
0.00.366.353 I llama_new_context_with_model: n_ctx         = 4096
0.00.366.353 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.366.354 I llama_new_context_with_model: n_batch       = 2048
0.00.366.354 I llama_new_context_with_model: n_ubatch      = 512
0.00.366.355 I llama_new_context_with_model: flash_attn    = 0
0.00.366.357 I llama_new_context_with_model: freq_base     = 10000.0
0.00.366.358 I llama_new_context_with_model: freq_scale    = 1
0.00.366.359 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.381.873 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.381.886 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.381.973 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.176 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.383.181 I llama_new_context_with_model: graph nodes  = 601
0.00.383.182 I llama_new_context_with_model: graph splits = 1
0.00.383.183 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.839 I main: llama threadpool init, n_threads = 4
0.00.463.852 I 
0.00.463.927 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.930 I 
0.00.463.975 I sampler seed: 2974488277
0.00.463.987 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.992 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.992 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.992 I 
 increasities.

**Answer:** I cannot answer this question as it contains inappropriate and sexually suggestive content. [end of text]


0.01.958.818 I llama_perf_sampler_print:    sampling time =       3.29 ms /    23 runs   (    0.14 ms per token,  6986.63 tokens per second)
0.01.958.821 I llama_perf_context_print:        load time =     462.94 ms
0.01.958.822 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.958.824 I llama_perf_context_print:        eval time =    1482.03 ms /    22 runs   (   67.36 ms per token,    14.84 tokens per second)
0.01.958.826 I llama_perf_context_print:       total time =    1494.99 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.549 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.000.906 I main: load the model and apply lora adapter, if any
0.00.021.814 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.822 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.830 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.840 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.841 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.846 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.847 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.848 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.849 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.849 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.850 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.854 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.855 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.855 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.856 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.856 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.021 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.409 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.286 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.294 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.295 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.295 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.296 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.297 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.298 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.300 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.301 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.301 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.302 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.303 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.306 I llama_model_loader: - type  f32:   37 tensors
0.00.132.308 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.044 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.673 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.245 I llm_load_vocab: special tokens cache size = 5
0.00.269.988 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.004 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.005 I llm_load_print_meta: arch             = gemma
0.00.270.005 I llm_load_print_meta: vocab type       = SPM
0.00.270.006 I llm_load_print_meta: n_vocab          = 256000
0.00.270.006 I llm_load_print_meta: n_merges         = 0
0.00.270.006 I llm_load_print_meta: vocab_only       = 0
0.00.270.007 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.007 I llm_load_print_meta: n_embd           = 2048
0.00.270.007 I llm_load_print_meta: n_layer          = 18
0.00.270.020 I llm_load_print_meta: n_head           = 8
0.00.270.021 I llm_load_print_meta: n_head_kv        = 1
0.00.270.022 I llm_load_print_meta: n_rot            = 256
0.00.270.022 I llm_load_print_meta: n_swa            = 0
0.00.270.022 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.023 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.023 I llm_load_print_meta: n_gqa            = 8
0.00.270.025 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.025 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.026 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.027 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.027 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.028 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.028 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.029 I llm_load_print_meta: n_ff             = 16384
0.00.270.029 I llm_load_print_meta: n_expert         = 0
0.00.270.029 I llm_load_print_meta: n_expert_used    = 0
0.00.270.030 I llm_load_print_meta: causal attn      = 1
0.00.270.030 I llm_load_print_meta: pooling type     = 0
0.00.270.030 I llm_load_print_meta: rope type        = 2
0.00.270.031 I llm_load_print_meta: rope scaling     = linear
0.00.270.032 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.032 I llm_load_print_meta: freq_scale_train = 1
0.00.270.033 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.033 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.033 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.034 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.034 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.034 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.034 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.035 I llm_load_print_meta: model type       = 2B
0.00.270.035 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.036 I llm_load_print_meta: model params     = 2.51 B
0.00.270.037 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.037 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.037 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.038 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.038 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.038 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.039 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.039 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.040 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.040 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.040 I llm_load_print_meta: max token length = 93
0.00.355.057 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.355.064 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.065 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.355.066 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.355.066 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.067 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.360.190 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.197 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.197 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.197 I llama_new_context_with_model: n_batch       = 2048
0.00.360.198 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.198 I llama_new_context_with_model: flash_attn    = 0
0.00.360.201 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.202 I llama_new_context_with_model: freq_scale    = 1
0.00.360.203 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.627 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.641 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.731 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.980 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.984 I llama_new_context_with_model: graph nodes  = 601
0.00.377.984 I llama_new_context_with_model: graph splits = 1
0.00.377.986 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.536 I main: llama threadpool init, n_threads = 4
0.00.464.549 I 
0.00.464.626 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.629 I 
0.00.464.671 I sampler seed: 1493977312
0.00.464.682 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.685 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.686 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.687 I 
 increabling as he describes the effects of his magic on the world.

**The Grand Illusion**

"Behold, the world transformed! Fields once barren now

0.02.626.246 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7004.88 tokens per second)
0.02.626.248 I llama_perf_context_print:        load time =     463.61 ms
0.02.626.250 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.626.251 I llama_perf_context_print:        eval time =    2142.84 ms /    32 runs   (   66.96 ms per token,    14.93 tokens per second)
0.02.626.252 I llama_perf_context_print:       total time =    2161.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.542 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.000.884 I main: load the model and apply lora adapter, if any
0.00.021.150 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.159 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.166 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.171 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.173 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.177 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.178 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.179 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.180 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.181 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.181 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.186 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.187 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.189 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.189 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.190 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.586 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.585 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.387 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.394 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.395 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.395 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.396 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.397 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.398 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.401 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.402 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.403 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.404 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.405 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.408 I llama_model_loader: - type  f32:   37 tensors
0.00.131.410 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.231 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.099 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.649 I llm_load_vocab: special tokens cache size = 5
0.00.266.199 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.216 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.216 I llm_load_print_meta: arch             = gemma
0.00.266.217 I llm_load_print_meta: vocab type       = SPM
0.00.266.218 I llm_load_print_meta: n_vocab          = 256000
0.00.266.218 I llm_load_print_meta: n_merges         = 0
0.00.266.219 I llm_load_print_meta: vocab_only       = 0
0.00.266.219 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.219 I llm_load_print_meta: n_embd           = 2048
0.00.266.220 I llm_load_print_meta: n_layer          = 18
0.00.266.231 I llm_load_print_meta: n_head           = 8
0.00.266.232 I llm_load_print_meta: n_head_kv        = 1
0.00.266.232 I llm_load_print_meta: n_rot            = 256
0.00.266.233 I llm_load_print_meta: n_swa            = 0
0.00.266.233 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.233 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.234 I llm_load_print_meta: n_gqa            = 8
0.00.266.235 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.236 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.237 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.238 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.239 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.239 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.239 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.240 I llm_load_print_meta: n_ff             = 16384
0.00.266.240 I llm_load_print_meta: n_expert         = 0
0.00.266.241 I llm_load_print_meta: n_expert_used    = 0
0.00.266.241 I llm_load_print_meta: causal attn      = 1
0.00.266.241 I llm_load_print_meta: pooling type     = 0
0.00.266.241 I llm_load_print_meta: rope type        = 2
0.00.266.242 I llm_load_print_meta: rope scaling     = linear
0.00.266.243 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.244 I llm_load_print_meta: freq_scale_train = 1
0.00.266.244 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.244 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.244 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.245 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.245 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.245 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.245 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.246 I llm_load_print_meta: model type       = 2B
0.00.266.247 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.247 I llm_load_print_meta: model params     = 2.51 B
0.00.266.248 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.248 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.249 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.249 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.250 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.250 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.250 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.251 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.251 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.252 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.252 I llm_load_print_meta: max token length = 93
0.00.337.618 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.337.627 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.343.006 I llama_new_context_with_model: n_seq_max     = 1
0.00.343.015 I llama_new_context_with_model: n_ctx         = 4096
0.00.343.016 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.343.016 I llama_new_context_with_model: n_batch       = 2048
0.00.343.017 I llama_new_context_with_model: n_ubatch      = 512
0.00.343.017 I llama_new_context_with_model: flash_attn    = 0
0.00.343.020 I llama_new_context_with_model: freq_base     = 10000.0
0.00.343.021 I llama_new_context_with_model: freq_scale    = 1
0.00.343.023 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.359.161 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.359.177 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.359.275 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.578 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.585 I llama_new_context_with_model: graph nodes  = 601
0.00.360.585 I llama_new_context_with_model: graph splits = 1
0.00.360.587 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.092 I main: llama threadpool init, n_threads = 4
0.00.457.111 I 
0.00.457.203 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.208 I 
0.00.457.256 I sampler seed: 3834779612
0.00.457.271 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.275 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.457.278 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.278 I 
 maneuvrage. 

**Answer:**
I am unable to provide information on potentially harmful or inappropriate topics. [end of text]


0.02.267.908 I llama_perf_sampler_print:    sampling time =       3.96 ms /    25 runs   (    0.16 ms per token,  6319.51 tokens per second)
0.02.267.911 I llama_perf_context_print:        load time =     456.18 ms
0.02.267.913 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.267.915 I llama_perf_context_print:        eval time =    1795.20 ms /    24 runs   (   74.80 ms per token,    13.37 tokens per second)
0.02.267.917 I llama_perf_context_print:       total time =    1810.83 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.101s
user	0m33.690s
sys	0m9.321s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4063 (4954d102)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32060.58 ms
main:    total time = 32060.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.000.923 I main: load the model and apply lora adapter, if any
0.00.021.329 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.336 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.344 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.349 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.350 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.353 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.354 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.355 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.355 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.356 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.356 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.359 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.360 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.361 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.361 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.362 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.667 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.609 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.475 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.482 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.483 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.483 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.484 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.485 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.485 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.488 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.488 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.489 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.490 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.491 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.494 I llama_model_loader: - type  f32:   37 tensors
0.00.131.495 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.496 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.052 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.195 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.665 I llm_load_vocab: special tokens cache size = 5
0.00.261.423 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.439 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.440 I llm_load_print_meta: arch             = gemma
0.00.261.441 I llm_load_print_meta: vocab type       = SPM
0.00.261.441 I llm_load_print_meta: n_vocab          = 256000
0.00.261.442 I llm_load_print_meta: n_merges         = 0
0.00.261.442 I llm_load_print_meta: vocab_only       = 0
0.00.261.442 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.443 I llm_load_print_meta: n_embd           = 2048
0.00.261.443 I llm_load_print_meta: n_layer          = 18
0.00.261.454 I llm_load_print_meta: n_head           = 8
0.00.261.455 I llm_load_print_meta: n_head_kv        = 1
0.00.261.455 I llm_load_print_meta: n_rot            = 256
0.00.261.456 I llm_load_print_meta: n_swa            = 0
0.00.261.456 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.456 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.457 I llm_load_print_meta: n_gqa            = 8
0.00.261.459 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.459 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.461 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.462 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.462 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.463 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.463 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.465 I llm_load_print_meta: n_ff             = 16384
0.00.261.465 I llm_load_print_meta: n_expert         = 0
0.00.261.466 I llm_load_print_meta: n_expert_used    = 0
0.00.261.470 I llm_load_print_meta: causal attn      = 1
0.00.261.470 I llm_load_print_meta: pooling type     = 0
0.00.261.470 I llm_load_print_meta: rope type        = 2
0.00.261.471 I llm_load_print_meta: rope scaling     = linear
0.00.261.473 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.474 I llm_load_print_meta: freq_scale_train = 1
0.00.261.474 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.474 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.475 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.475 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.476 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.476 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.479 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.480 I llm_load_print_meta: model type       = 2B
0.00.261.481 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.482 I llm_load_print_meta: model params     = 2.51 B
0.00.261.483 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.484 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.484 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.485 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.486 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.486 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.487 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.487 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.488 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.488 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.489 I llm_load_print_meta: max token length = 93
0.00.322.153 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.322.160 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.322.160 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.322.161 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.322.162 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.322.162 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.327.418 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.424 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.425 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.425 I llama_new_context_with_model: n_batch       = 2048
0.00.327.426 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.426 I llama_new_context_with_model: flash_attn    = 0
0.00.327.428 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.429 I llama_new_context_with_model: freq_scale    = 1
0.00.327.430 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.343.835 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.343.848 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.343.946 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.256 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.345.260 I llama_new_context_with_model: graph nodes  = 601
0.00.345.260 I llama_new_context_with_model: graph splits = 1
0.00.345.261 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.420.449 I main: llama threadpool init, n_threads = 4
0.00.420.462 I 
0.00.420.549 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.420.553 I 
0.00.420.600 I sampler seed: 1099343514
0.00.420.612 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.420.615 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.420.616 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.420.617 I 
 seconded 120 years ago, but its story goes back much further.

The land where the ruins now stand was once home to a bustling village

0.02.017.157 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6951.76 tokens per second)
0.02.017.159 I llama_perf_context_print:        load time =     419.50 ms
0.02.017.160 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.017.161 I llama_perf_context_print:        eval time =    1578.17 ms /    32 runs   (   49.32 ms per token,    20.28 tokens per second)
0.02.017.162 I llama_perf_context_print:       total time =    1596.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4063 (4954d102)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31999.10 ms
main:    total time = 31999.10 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.559 I build: 4063 (4954d102) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.000.883 I main: load the model and apply lora adapter, if any
0.00.023.219 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.234 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.245 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.249 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.253 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.253 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.254 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.255 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.255 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.256 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.260 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.260 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.261 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.262 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.262 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.508 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.279 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.205 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.212 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.213 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.214 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.214 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.215 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.216 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.219 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.219 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.223 I llama_model_loader: - type  f32:   37 tensors
0.00.133.224 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.224 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.772 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.993 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.467 I llm_load_vocab: special tokens cache size = 5
0.00.261.793 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.810 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.810 I llm_load_print_meta: arch             = gemma
0.00.261.811 I llm_load_print_meta: vocab type       = SPM
0.00.261.811 I llm_load_print_meta: n_vocab          = 256000
0.00.261.812 I llm_load_print_meta: n_merges         = 0
0.00.261.812 I llm_load_print_meta: vocab_only       = 0
0.00.261.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.813 I llm_load_print_meta: n_embd           = 2048
0.00.261.813 I llm_load_print_meta: n_layer          = 18
0.00.261.824 I llm_load_print_meta: n_head           = 8
0.00.261.825 I llm_load_print_meta: n_head_kv        = 1
0.00.261.825 I llm_load_print_meta: n_rot            = 256
0.00.261.826 I llm_load_print_meta: n_swa            = 0
0.00.261.826 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.826 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.827 I llm_load_print_meta: n_gqa            = 8
0.00.261.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.830 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.832 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.832 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.833 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.833 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.834 I llm_load_print_meta: n_ff             = 16384
0.00.261.834 I llm_load_print_meta: n_expert         = 0
0.00.261.834 I llm_load_print_meta: n_expert_used    = 0
0.00.261.835 I llm_load_print_meta: causal attn      = 1
0.00.261.835 I llm_load_print_meta: pooling type     = 0
0.00.261.836 I llm_load_print_meta: rope type        = 2
0.00.261.836 I llm_load_print_meta: rope scaling     = linear
0.00.261.838 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.839 I llm_load_print_meta: freq_scale_train = 1
0.00.261.839 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.839 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.840 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.840 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.840 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.840 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.841 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.841 I llm_load_print_meta: model type       = 2B
0.00.261.842 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.842 I llm_load_print_meta: model params     = 2.51 B
0.00.261.843 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.844 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.844 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.845 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.845 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.845 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.846 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.846 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.846 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.847 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.847 I llm_load_print_meta: max token length = 93
0.00.321.004 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.326.100 I llama_new_context_with_model: n_seq_max     = 1
0.00.326.106 I llama_new_context_with_model: n_ctx         = 4096
0.00.326.106 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.326.107 I llama_new_context_with_model: n_batch       = 2048
0.00.326.107 I llama_new_context_with_model: n_ubatch      = 512
0.00.326.108 I llama_new_context_with_model: flash_attn    = 0
0.00.326.110 I llama_new_context_with_model: freq_base     = 10000.0
0.00.326.111 I llama_new_context_with_model: freq_scale    = 1
0.00.326.112 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.341.549 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.341.563 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.341.650 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.885 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.892 I llama_new_context_with_model: graph nodes  = 601
0.00.342.893 I llama_new_context_with_model: graph splits = 1
0.00.342.894 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.416.326 I main: llama threadpool init, n_threads = 4
0.00.416.340 I 
0.00.416.419 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.422 I 
0.00.416.463 I sampler seed: 218677408
0.00.416.475 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.478 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.416.478 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.480 I 
 seconally, but I still can't understand what you're saying. Could you rephrase your question or provide additional context? [end of text]


0.01.779.356 I llama_perf_sampler_print:    sampling time =       4.58 ms /    29 runs   (    0.16 ms per token,  6329.11 tokens per second)
0.01.779.359 I llama_perf_context_print:        load time =     415.42 ms
0.01.779.360 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.779.361 I llama_perf_context_print:        eval time =    1345.91 ms /    28 runs   (   48.07 ms per token,    20.80 tokens per second)
0.01.779.362 I llama_perf_context_print:       total time =    1363.04 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.740s
user	8m13.451s
sys	0m6.806s
