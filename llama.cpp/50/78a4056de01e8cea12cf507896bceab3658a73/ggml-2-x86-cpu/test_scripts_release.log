+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.597 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.906 I main: load the model and apply lora adapter, if any
0.00.022.140 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.188 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.206 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.207 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.210 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.211 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.211 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.212 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.212 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.213 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.217 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.218 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.218 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.219 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.220 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.275 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.898 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.810 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.817 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.818 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.819 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.819 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.820 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.821 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.823 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.824 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.824 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.825 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.826 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.831 I llama_model_loader: - type  f32:   37 tensors
0.00.132.834 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.098 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.236.901 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.237.632 I llm_load_vocab: special tokens cache size = 5
0.00.258.195 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.208 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.209 I llm_load_print_meta: arch             = gemma
0.00.258.209 I llm_load_print_meta: vocab type       = SPM
0.00.258.210 I llm_load_print_meta: n_vocab          = 256000
0.00.258.211 I llm_load_print_meta: n_merges         = 0
0.00.258.211 I llm_load_print_meta: vocab_only       = 0
0.00.258.211 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.211 I llm_load_print_meta: n_embd           = 2048
0.00.258.212 I llm_load_print_meta: n_layer          = 18
0.00.258.223 I llm_load_print_meta: n_head           = 8
0.00.258.224 I llm_load_print_meta: n_head_kv        = 1
0.00.258.225 I llm_load_print_meta: n_rot            = 256
0.00.258.225 I llm_load_print_meta: n_swa            = 0
0.00.258.225 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.226 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.226 I llm_load_print_meta: n_gqa            = 8
0.00.258.227 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.228 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.229 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.231 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.231 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.232 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.232 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.233 I llm_load_print_meta: n_ff             = 16384
0.00.258.233 I llm_load_print_meta: n_expert         = 0
0.00.258.233 I llm_load_print_meta: n_expert_used    = 0
0.00.258.233 I llm_load_print_meta: causal attn      = 1
0.00.258.234 I llm_load_print_meta: pooling type     = 0
0.00.258.234 I llm_load_print_meta: rope type        = 2
0.00.258.234 I llm_load_print_meta: rope scaling     = linear
0.00.258.235 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.236 I llm_load_print_meta: freq_scale_train = 1
0.00.258.236 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.237 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.237 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.237 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.237 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.238 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.238 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.238 I llm_load_print_meta: model type       = 2B
0.00.258.239 I llm_load_print_meta: model ftype      = Q8_0
0.00.258.240 I llm_load_print_meta: model params     = 2.51 B
0.00.258.241 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.258.241 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.241 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.241 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.242 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.242 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.242 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.243 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.243 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.244 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.244 I llm_load_print_meta: max token length = 93
0.00.258.262 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.952 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.359.959 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.359.960 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.359.960 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.359.961 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.359.961 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.365.147 I llama_new_context_with_model: n_ctx      = 8192
0.00.365.152 I llama_new_context_with_model: n_batch    = 2048
0.00.365.153 I llama_new_context_with_model: n_ubatch   = 512
0.00.365.153 I llama_new_context_with_model: flash_attn = 0
0.00.365.156 I llama_new_context_with_model: freq_base  = 10000.0
0.00.365.157 I llama_new_context_with_model: freq_scale = 1
0.00.393.926 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.939 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.394.035 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.907 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.915 I llama_new_context_with_model: graph nodes  = 601
0.00.394.915 I llama_new_context_with_model: graph splits = 1
0.00.394.917 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.262 I main: llama threadpool init, n_threads = 4
0.00.487.275 I 
0.00.487.350 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.487.353 I 
0.00.487.395 I sampler seed: 4087826715
0.00.487.404 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.407 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.487.408 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.408 I 
 increasities in the workplace, and the potential consequences of such behavior.

**1. Interpersonal Conflict**

* Employees engaging in narcissistic behavior may become emotionally distant

0.02.754.016 I llama_perf_sampler_print:    sampling time =       5.56 ms /    33 runs   (    0.17 ms per token,  5932.05 tokens per second)
0.02.754.018 I llama_perf_context_print:        load time =     485.29 ms
0.02.754.019 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.754.021 I llama_perf_context_print:        eval time =    2247.94 ms /    32 runs   (   70.25 ms per token,    14.24 tokens per second)
0.02.754.022 I llama_perf_context_print:       total time =    2266.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.541 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.021.860 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.878 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.886 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.889 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.892 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.893 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.894 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.894 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.895 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.895 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.900 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.900 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.901 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.902 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.903 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.241 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.117 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.996 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.002 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.003 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.003 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.004 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.005 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.006 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.009 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.011 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.011 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.012 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.012 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.015 I llama_model_loader: - type  f32:   37 tensors
0.00.133.019 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.251 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.287 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.105 I llm_load_vocab: special tokens cache size = 5
0.00.278.198 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.214 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.214 I llm_load_print_meta: arch             = gemma
0.00.278.215 I llm_load_print_meta: vocab type       = SPM
0.00.278.216 I llm_load_print_meta: n_vocab          = 256000
0.00.278.217 I llm_load_print_meta: n_merges         = 0
0.00.278.217 I llm_load_print_meta: vocab_only       = 0
0.00.278.218 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.218 I llm_load_print_meta: n_embd           = 2048
0.00.278.218 I llm_load_print_meta: n_layer          = 18
0.00.278.231 I llm_load_print_meta: n_head           = 8
0.00.278.232 I llm_load_print_meta: n_head_kv        = 1
0.00.278.232 I llm_load_print_meta: n_rot            = 256
0.00.278.233 I llm_load_print_meta: n_swa            = 0
0.00.278.233 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.233 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.234 I llm_load_print_meta: n_gqa            = 8
0.00.278.235 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.236 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.237 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.238 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.238 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.239 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.239 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.240 I llm_load_print_meta: n_ff             = 16384
0.00.278.240 I llm_load_print_meta: n_expert         = 0
0.00.278.241 I llm_load_print_meta: n_expert_used    = 0
0.00.278.241 I llm_load_print_meta: causal attn      = 1
0.00.278.241 I llm_load_print_meta: pooling type     = 0
0.00.278.241 I llm_load_print_meta: rope type        = 2
0.00.278.242 I llm_load_print_meta: rope scaling     = linear
0.00.278.243 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.243 I llm_load_print_meta: freq_scale_train = 1
0.00.278.244 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.244 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.244 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.245 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.245 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.245 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.246 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.246 I llm_load_print_meta: model type       = 2B
0.00.278.247 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.247 I llm_load_print_meta: model params     = 2.51 B
0.00.278.248 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.248 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.249 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.249 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.250 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.250 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.250 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.251 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.251 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.252 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.252 I llm_load_print_meta: max token length = 93
0.00.278.276 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.370.894 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.375.915 I llama_new_context_with_model: n_ctx      = 8192
0.00.375.921 I llama_new_context_with_model: n_batch    = 2048
0.00.375.922 I llama_new_context_with_model: n_ubatch   = 512
0.00.375.922 I llama_new_context_with_model: flash_attn = 0
0.00.375.925 I llama_new_context_with_model: freq_base  = 10000.0
0.00.375.926 I llama_new_context_with_model: freq_scale = 1
0.00.404.788 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.802 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.896 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.751 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.760 I llama_new_context_with_model: graph nodes  = 601
0.00.405.760 I llama_new_context_with_model: graph splits = 1
0.00.405.762 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.985 I main: llama threadpool init, n_threads = 4
0.00.493.997 I 
0.00.494.074 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.077 I 
0.00.494.112 I sampler seed: 3839246782
0.00.494.122 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.131 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.494.133 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.133 I 
 increasities

I am unable to generate a response as the provided context contains sexually suggestive or inappropriate content. [end of text]


0.01.994.830 I llama_perf_sampler_print:    sampling time =       3.82 ms /    23 runs   (    0.17 ms per token,  6025.67 tokens per second)
0.01.994.833 I llama_perf_context_print:        load time =     492.08 ms
0.01.994.835 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.994.837 I llama_perf_context_print:        eval time =    1487.47 ms /    22 runs   (   67.61 ms per token,    14.79 tokens per second)
0.01.994.839 I llama_perf_context_print:       total time =    1500.85 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.585 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.793 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.148 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.198 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.209 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.215 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.218 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.222 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.223 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.223 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.224 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.225 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.225 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.230 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.231 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.232 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.233 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.233 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.447 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.541 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.399 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.405 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.406 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.406 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.407 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.408 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.409 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.412 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.412 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.413 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.413 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.136.414 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.418 I llama_model_loader: - type  f32:   37 tensors
0.00.136.421 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.165 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.011 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.792 I llm_load_vocab: special tokens cache size = 5
0.00.277.436 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.450 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.451 I llm_load_print_meta: arch             = gemma
0.00.277.451 I llm_load_print_meta: vocab type       = SPM
0.00.277.452 I llm_load_print_meta: n_vocab          = 256000
0.00.277.453 I llm_load_print_meta: n_merges         = 0
0.00.277.453 I llm_load_print_meta: vocab_only       = 0
0.00.277.453 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.454 I llm_load_print_meta: n_embd           = 2048
0.00.277.454 I llm_load_print_meta: n_layer          = 18
0.00.277.467 I llm_load_print_meta: n_head           = 8
0.00.277.468 I llm_load_print_meta: n_head_kv        = 1
0.00.277.468 I llm_load_print_meta: n_rot            = 256
0.00.277.469 I llm_load_print_meta: n_swa            = 0
0.00.277.469 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.469 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.470 I llm_load_print_meta: n_gqa            = 8
0.00.277.472 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.473 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.473 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.475 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.475 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.475 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.476 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.477 I llm_load_print_meta: n_ff             = 16384
0.00.277.477 I llm_load_print_meta: n_expert         = 0
0.00.277.477 I llm_load_print_meta: n_expert_used    = 0
0.00.277.477 I llm_load_print_meta: causal attn      = 1
0.00.277.477 I llm_load_print_meta: pooling type     = 0
0.00.277.478 I llm_load_print_meta: rope type        = 2
0.00.277.478 I llm_load_print_meta: rope scaling     = linear
0.00.277.479 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.480 I llm_load_print_meta: freq_scale_train = 1
0.00.277.481 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.482 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.482 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.482 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.482 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.483 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.483 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.483 I llm_load_print_meta: model type       = 2B
0.00.277.484 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.485 I llm_load_print_meta: model params     = 2.51 B
0.00.277.486 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.486 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.487 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.487 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.487 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.487 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.488 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.489 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.489 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.490 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.490 I llm_load_print_meta: max token length = 93
0.00.277.513 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.355.108 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.355.117 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.355.118 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.355.119 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.355.120 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.355.121 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.361.705 I llama_new_context_with_model: n_ctx      = 8192
0.00.361.712 I llama_new_context_with_model: n_batch    = 2048
0.00.361.712 I llama_new_context_with_model: n_ubatch   = 512
0.00.361.713 I llama_new_context_with_model: flash_attn = 0
0.00.361.716 I llama_new_context_with_model: freq_base  = 10000.0
0.00.361.717 I llama_new_context_with_model: freq_scale = 1
0.00.391.536 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.391.553 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.391.644 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.498 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.392.506 I llama_new_context_with_model: graph nodes  = 601
0.00.392.507 I llama_new_context_with_model: graph splits = 1
0.00.392.508 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.485.992 I main: llama threadpool init, n_threads = 4
0.00.486.003 I 
0.00.486.079 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.083 I 
0.00.486.122 I sampler seed: 895967694
0.00.486.132 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.135 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.486.136 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.136 I 
 increamically with the following conditions:
$$y(0)=1$$

$$y'(0)=0$$

$$y(t) > 0

0.02.768.761 I llama_perf_sampler_print:    sampling time =       5.41 ms /    33 runs   (    0.16 ms per token,  6103.20 tokens per second)
0.02.768.763 I llama_perf_context_print:        load time =     484.04 ms
0.02.768.765 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.768.780 I llama_perf_context_print:        eval time =    2263.24 ms /    32 runs   (   70.73 ms per token,    14.14 tokens per second)
0.02.768.781 I llama_perf_context_print:       total time =    2282.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.561 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.453 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.504 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.514 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.520 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.522 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.527 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.528 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.529 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.529 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.530 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.531 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.544 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.545 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.546 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.547 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.548 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.548 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.582 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.458 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.464 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.465 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.466 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.467 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.467 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.468 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.471 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.472 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.472 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.473 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.473 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.476 I llama_model_loader: - type  f32:   37 tensors
0.00.144.479 I llama_model_loader: - type q8_0:  127 tensors
0.00.220.897 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.592 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.369 I llm_load_vocab: special tokens cache size = 5
0.00.279.342 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.356 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.357 I llm_load_print_meta: arch             = gemma
0.00.279.358 I llm_load_print_meta: vocab type       = SPM
0.00.279.358 I llm_load_print_meta: n_vocab          = 256000
0.00.279.359 I llm_load_print_meta: n_merges         = 0
0.00.279.359 I llm_load_print_meta: vocab_only       = 0
0.00.279.359 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.360 I llm_load_print_meta: n_embd           = 2048
0.00.279.360 I llm_load_print_meta: n_layer          = 18
0.00.279.373 I llm_load_print_meta: n_head           = 8
0.00.279.374 I llm_load_print_meta: n_head_kv        = 1
0.00.279.375 I llm_load_print_meta: n_rot            = 256
0.00.279.375 I llm_load_print_meta: n_swa            = 0
0.00.279.375 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.376 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.377 I llm_load_print_meta: n_gqa            = 8
0.00.279.378 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.379 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.379 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.381 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.381 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.382 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.382 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.383 I llm_load_print_meta: n_ff             = 16384
0.00.279.383 I llm_load_print_meta: n_expert         = 0
0.00.279.384 I llm_load_print_meta: n_expert_used    = 0
0.00.279.384 I llm_load_print_meta: causal attn      = 1
0.00.279.384 I llm_load_print_meta: pooling type     = 0
0.00.279.384 I llm_load_print_meta: rope type        = 2
0.00.279.385 I llm_load_print_meta: rope scaling     = linear
0.00.279.386 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.386 I llm_load_print_meta: freq_scale_train = 1
0.00.279.387 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.387 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.387 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.388 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.388 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.388 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.389 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.389 I llm_load_print_meta: model type       = 2B
0.00.279.390 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.390 I llm_load_print_meta: model params     = 2.51 B
0.00.279.391 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.391 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.392 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.392 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.392 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.393 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.393 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.393 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.394 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.395 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.395 I llm_load_print_meta: max token length = 93
0.00.279.422 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.356.295 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.356.302 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.361.359 I llama_new_context_with_model: n_ctx      = 8192
0.00.361.365 I llama_new_context_with_model: n_batch    = 2048
0.00.361.366 I llama_new_context_with_model: n_ubatch   = 512
0.00.361.366 I llama_new_context_with_model: flash_attn = 0
0.00.361.368 I llama_new_context_with_model: freq_base  = 10000.0
0.00.361.369 I llama_new_context_with_model: freq_scale = 1
0.00.390.109 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.390.127 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.390.217 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.061 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.391.068 I llama_new_context_with_model: graph nodes  = 601
0.00.391.069 I llama_new_context_with_model: graph splits = 1
0.00.391.070 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.488.241 I main: llama threadpool init, n_threads = 4
0.00.488.253 I 
0.00.488.328 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.488.331 I 
0.00.488.371 I sampler seed: 4051709663
0.00.488.381 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.383 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.488.384 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.385 I 
 increasities of the mind, and the like.

I am unable to access the provided text, therefore I am unable to extract the requested data from it.

0.02.922.290 I llama_perf_sampler_print:    sampling time =       6.03 ms /    33 runs   (    0.18 ms per token,  5471.73 tokens per second)
0.02.922.294 I llama_perf_context_print:        load time =     486.26 ms
0.02.922.296 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.922.298 I llama_perf_context_print:        eval time =    2414.39 ms /    32 runs   (   75.45 ms per token,    13.25 tokens per second)
0.02.922.299 I llama_perf_context_print:       total time =    2434.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.884s
user	0m36.848s
sys	0m9.388s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3902 (5078a405)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31998.34 ms
main:    total time = 31998.34 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.535 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.021.985 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.032 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.040 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.045 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.046 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.049 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.049 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.050 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.051 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.052 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.053 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.056 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.057 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.058 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.058 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.059 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.251 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.552 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.419 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.426 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.427 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.428 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.428 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.429 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.430 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.434 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.435 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.435 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.436 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.436 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.441 I llama_model_loader: - type  f32:   37 tensors
0.00.132.443 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.443 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.516 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.533 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.285 I llm_load_vocab: special tokens cache size = 5
0.00.261.035 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.051 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.051 I llm_load_print_meta: arch             = gemma
0.00.261.052 I llm_load_print_meta: vocab type       = SPM
0.00.261.053 I llm_load_print_meta: n_vocab          = 256000
0.00.261.054 I llm_load_print_meta: n_merges         = 0
0.00.261.054 I llm_load_print_meta: vocab_only       = 0
0.00.261.054 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.055 I llm_load_print_meta: n_embd           = 2048
0.00.261.055 I llm_load_print_meta: n_layer          = 18
0.00.261.068 I llm_load_print_meta: n_head           = 8
0.00.261.069 I llm_load_print_meta: n_head_kv        = 1
0.00.261.069 I llm_load_print_meta: n_rot            = 256
0.00.261.070 I llm_load_print_meta: n_swa            = 0
0.00.261.070 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.070 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.071 I llm_load_print_meta: n_gqa            = 8
0.00.261.072 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.073 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.074 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.075 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.075 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.076 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.076 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.077 I llm_load_print_meta: n_ff             = 16384
0.00.261.077 I llm_load_print_meta: n_expert         = 0
0.00.261.077 I llm_load_print_meta: n_expert_used    = 0
0.00.261.078 I llm_load_print_meta: causal attn      = 1
0.00.261.078 I llm_load_print_meta: pooling type     = 0
0.00.261.078 I llm_load_print_meta: rope type        = 2
0.00.261.078 I llm_load_print_meta: rope scaling     = linear
0.00.261.080 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.080 I llm_load_print_meta: freq_scale_train = 1
0.00.261.081 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.081 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.082 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.082 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.082 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.083 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.083 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.083 I llm_load_print_meta: model type       = 2B
0.00.261.084 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.084 I llm_load_print_meta: model params     = 2.51 B
0.00.261.085 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.085 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.086 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.086 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.087 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.087 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.087 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.088 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.088 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.089 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.089 I llm_load_print_meta: max token length = 93
0.00.261.109 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.552 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.319.558 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.319.558 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.319.559 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.319.560 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.319.560 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.324.578 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.584 I llama_new_context_with_model: n_batch    = 2048
0.00.324.584 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.585 I llama_new_context_with_model: flash_attn = 0
0.00.324.587 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.588 I llama_new_context_with_model: freq_scale = 1
0.00.353.806 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.823 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.922 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.835 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.843 I llama_new_context_with_model: graph nodes  = 601
0.00.354.844 I llama_new_context_with_model: graph splits = 1
0.00.354.845 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.060 I main: llama threadpool init, n_threads = 4
0.00.436.071 I 
0.00.436.148 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.151 I 
0.00.436.185 I sampler seed: 2341426375
0.00.436.194 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.197 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.198 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.198 I 
 seconally.

**Assistant**

I am unable to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.616.217 I llama_perf_sampler_print:    sampling time =       4.88 ms /    24 runs   (    0.20 ms per token,  4915.01 tokens per second)
0.01.616.219 I llama_perf_context_print:        load time =     434.13 ms
0.01.616.220 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.616.222 I llama_perf_context_print:        eval time =    1164.05 ms /    23 runs   (   50.61 ms per token,    19.76 tokens per second)
0.01.616.223 I llama_perf_context_print:       total time =    1180.16 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3902 (5078a405)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32102.65 ms
main:    total time = 32102.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.555 I build: 3902 (5078a405) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.022.103 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.114 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.121 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.122 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.125 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.126 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.127 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.128 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.128 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.129 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.132 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.133 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.135 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.139 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.421 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.655 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.662 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.662 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.663 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.664 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.665 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.665 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.668 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.669 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.672 I llama_model_loader: - type  f32:   37 tensors
0.00.134.675 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.676 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.944 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.721 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.451 I llm_load_vocab: special tokens cache size = 5
0.00.261.274 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.287 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.288 I llm_load_print_meta: arch             = gemma
0.00.261.289 I llm_load_print_meta: vocab type       = SPM
0.00.261.290 I llm_load_print_meta: n_vocab          = 256000
0.00.261.291 I llm_load_print_meta: n_merges         = 0
0.00.261.291 I llm_load_print_meta: vocab_only       = 0
0.00.261.291 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.292 I llm_load_print_meta: n_embd           = 2048
0.00.261.292 I llm_load_print_meta: n_layer          = 18
0.00.261.303 I llm_load_print_meta: n_head           = 8
0.00.261.304 I llm_load_print_meta: n_head_kv        = 1
0.00.261.305 I llm_load_print_meta: n_rot            = 256
0.00.261.305 I llm_load_print_meta: n_swa            = 0
0.00.261.306 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.306 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.307 I llm_load_print_meta: n_gqa            = 8
0.00.261.308 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.309 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.309 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.311 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.312 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.312 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.312 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.313 I llm_load_print_meta: n_ff             = 16384
0.00.261.314 I llm_load_print_meta: n_expert         = 0
0.00.261.314 I llm_load_print_meta: n_expert_used    = 0
0.00.261.315 I llm_load_print_meta: causal attn      = 1
0.00.261.315 I llm_load_print_meta: pooling type     = 0
0.00.261.315 I llm_load_print_meta: rope type        = 2
0.00.261.315 I llm_load_print_meta: rope scaling     = linear
0.00.261.317 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.317 I llm_load_print_meta: freq_scale_train = 1
0.00.261.317 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.318 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.318 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.319 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.319 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.319 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.319 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.320 I llm_load_print_meta: model type       = 2B
0.00.261.320 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.321 I llm_load_print_meta: model params     = 2.51 B
0.00.261.322 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.322 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.323 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.323 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.323 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.323 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.324 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.324 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.324 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.325 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.325 I llm_load_print_meta: max token length = 93
0.00.261.342 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.230 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.324.261 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.267 I llama_new_context_with_model: n_batch    = 2048
0.00.324.268 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.268 I llama_new_context_with_model: flash_attn = 0
0.00.324.270 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.271 I llama_new_context_with_model: freq_scale = 1
0.00.353.414 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.428 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.522 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.366 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.375 I llama_new_context_with_model: graph nodes  = 601
0.00.354.375 I llama_new_context_with_model: graph splits = 1
0.00.354.377 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.940 I main: llama threadpool init, n_threads = 4
0.00.434.952 I 
0.00.435.028 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.032 I 
0.00.435.068 I sampler seed: 4281670962
0.00.435.078 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.080 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.081 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.081 I 
 increasities by the sea and the surrounding coastal regions.

**Causes:**

* **Oceanic processes:** Waves and currents interact with the seabed to create ripples

0.02.055.206 I llama_perf_sampler_print:    sampling time =       5.98 ms /    33 runs   (    0.18 ms per token,  5515.63 tokens per second)
0.02.055.209 I llama_perf_context_print:        load time =     433.01 ms
0.02.055.210 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.055.211 I llama_perf_context_print:        eval time =    1601.03 ms /    32 runs   (   50.03 ms per token,    19.99 tokens per second)
0.02.055.212 I llama_perf_context_print:       total time =    1620.27 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.959s
user	8m13.267s
sys	0m6.881s
