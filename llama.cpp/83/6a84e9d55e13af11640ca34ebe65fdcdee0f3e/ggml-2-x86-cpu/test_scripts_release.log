+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.523 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.814 I main: load the model and apply lora adapter, if any
0.00.022.104 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.159 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.164 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.164 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.168 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.168 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.169 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.170 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.170 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.171 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.176 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.176 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.177 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.177 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.178 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.852 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.517 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.400 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.406 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.406 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.407 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.408 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.409 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.409 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.412 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.412 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.413 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.414 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.414 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.418 I llama_model_loader: - type  f32:   37 tensors
0.00.132.421 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.285 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.900 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.799 I llm_load_vocab: special tokens cache size = 5
0.00.269.918 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.930 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.931 I llm_load_print_meta: arch             = gemma
0.00.269.931 I llm_load_print_meta: vocab type       = SPM
0.00.269.931 I llm_load_print_meta: n_vocab          = 256000
0.00.269.932 I llm_load_print_meta: n_merges         = 0
0.00.269.932 I llm_load_print_meta: vocab_only       = 0
0.00.269.932 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.933 I llm_load_print_meta: n_embd           = 2048
0.00.269.933 I llm_load_print_meta: n_layer          = 18
0.00.269.944 I llm_load_print_meta: n_head           = 8
0.00.269.945 I llm_load_print_meta: n_head_kv        = 1
0.00.269.946 I llm_load_print_meta: n_rot            = 256
0.00.269.946 I llm_load_print_meta: n_swa            = 0
0.00.269.946 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.946 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.947 I llm_load_print_meta: n_gqa            = 8
0.00.269.948 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.949 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.950 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.951 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.952 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.952 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.952 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.953 I llm_load_print_meta: n_ff             = 16384
0.00.269.954 I llm_load_print_meta: n_expert         = 0
0.00.269.954 I llm_load_print_meta: n_expert_used    = 0
0.00.269.954 I llm_load_print_meta: causal attn      = 1
0.00.269.954 I llm_load_print_meta: pooling type     = 0
0.00.269.954 I llm_load_print_meta: rope type        = 2
0.00.269.955 I llm_load_print_meta: rope scaling     = linear
0.00.269.956 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.957 I llm_load_print_meta: freq_scale_train = 1
0.00.269.957 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.957 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.958 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.958 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.958 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.958 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.959 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.959 I llm_load_print_meta: model type       = 2B
0.00.269.960 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.960 I llm_load_print_meta: model params     = 2.51 B
0.00.269.961 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.961 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.962 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.962 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.962 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.963 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.963 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.963 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.964 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.964 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.965 I llm_load_print_meta: max token length = 93
0.00.269.984 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.370.670 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.370.679 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.370.680 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.370.680 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.370.681 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.370.682 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.375.834 I llama_new_context_with_model: n_ctx      = 8192
0.00.375.840 I llama_new_context_with_model: n_batch    = 2048
0.00.375.840 I llama_new_context_with_model: n_ubatch   = 512
0.00.375.841 I llama_new_context_with_model: flash_attn = 0
0.00.375.843 I llama_new_context_with_model: freq_base  = 10000.0
0.00.375.844 I llama_new_context_with_model: freq_scale = 1
0.00.404.785 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.800 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.902 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.792 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.800 I llama_new_context_with_model: graph nodes  = 601
0.00.405.801 I llama_new_context_with_model: graph splits = 1
0.00.405.803 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.496.689 I main: llama threadpool init, n_threads = 4
0.00.496.700 I 
0.00.496.773 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.496.776 I 
0.00.496.811 I sampler seed: 1971258516
0.00.496.820 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.496.822 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.496.822 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.496.823 I 
 increasities, it is important to:

A. Address the underlying issues of the conflict.
B. Focus on short-term solutions.
C.

0.02.757.963 I llama_perf_sampler_print:    sampling time =       5.41 ms /    33 runs   (    0.16 ms per token,  6102.07 tokens per second)
0.02.757.965 I llama_perf_context_print:        load time =     494.81 ms
0.02.757.967 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.757.968 I llama_perf_context_print:        eval time =    2241.97 ms /    32 runs   (   70.06 ms per token,    14.27 tokens per second)
0.02.757.969 I llama_perf_context_print:       total time =    2261.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.539 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.021.982 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.995 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.002 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.003 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.006 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.007 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.008 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.008 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.009 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.009 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.013 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.014 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.014 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.015 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.015 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.618 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.046 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.873 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.879 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.880 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.881 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.881 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.882 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.883 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.885 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.885 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.886 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.888 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.889 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.891 I llama_model_loader: - type  f32:   37 tensors
0.00.131.893 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.926 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.234.702 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.235.424 I llm_load_vocab: special tokens cache size = 5
0.00.256.426 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.256.440 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.256.441 I llm_load_print_meta: arch             = gemma
0.00.256.441 I llm_load_print_meta: vocab type       = SPM
0.00.256.443 I llm_load_print_meta: n_vocab          = 256000
0.00.256.443 I llm_load_print_meta: n_merges         = 0
0.00.256.444 I llm_load_print_meta: vocab_only       = 0
0.00.256.444 I llm_load_print_meta: n_ctx_train      = 8192
0.00.256.444 I llm_load_print_meta: n_embd           = 2048
0.00.256.445 I llm_load_print_meta: n_layer          = 18
0.00.256.456 I llm_load_print_meta: n_head           = 8
0.00.256.457 I llm_load_print_meta: n_head_kv        = 1
0.00.256.457 I llm_load_print_meta: n_rot            = 256
0.00.256.458 I llm_load_print_meta: n_swa            = 0
0.00.256.458 I llm_load_print_meta: n_embd_head_k    = 256
0.00.256.458 I llm_load_print_meta: n_embd_head_v    = 256
0.00.256.459 I llm_load_print_meta: n_gqa            = 8
0.00.256.460 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.256.461 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.256.462 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.256.463 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.256.464 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.256.464 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.256.465 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.256.467 I llm_load_print_meta: n_ff             = 16384
0.00.256.467 I llm_load_print_meta: n_expert         = 0
0.00.256.467 I llm_load_print_meta: n_expert_used    = 0
0.00.256.468 I llm_load_print_meta: causal attn      = 1
0.00.256.469 I llm_load_print_meta: pooling type     = 0
0.00.256.469 I llm_load_print_meta: rope type        = 2
0.00.256.469 I llm_load_print_meta: rope scaling     = linear
0.00.256.471 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.256.471 I llm_load_print_meta: freq_scale_train = 1
0.00.256.472 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.256.472 I llm_load_print_meta: rope_finetuned   = unknown
0.00.256.472 I llm_load_print_meta: ssm_d_conv       = 0
0.00.256.473 I llm_load_print_meta: ssm_d_inner      = 0
0.00.256.474 I llm_load_print_meta: ssm_d_state      = 0
0.00.256.474 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.256.474 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.256.475 I llm_load_print_meta: model type       = 2B
0.00.256.475 I llm_load_print_meta: model ftype      = Q8_0
0.00.256.476 I llm_load_print_meta: model params     = 2.51 B
0.00.256.477 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.256.478 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.256.478 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.256.478 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.256.479 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.256.479 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.256.480 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.256.480 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.256.481 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.256.481 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.256.482 I llm_load_print_meta: max token length = 93
0.00.256.502 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.352.002 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.357.091 I llama_new_context_with_model: n_ctx      = 8192
0.00.357.099 I llama_new_context_with_model: n_batch    = 2048
0.00.357.099 I llama_new_context_with_model: n_ubatch   = 512
0.00.357.100 I llama_new_context_with_model: flash_attn = 0
0.00.357.103 I llama_new_context_with_model: freq_base  = 10000.0
0.00.357.104 I llama_new_context_with_model: freq_scale = 1
0.00.388.264 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.388.280 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.388.373 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.389.247 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.389.255 I llama_new_context_with_model: graph nodes  = 601
0.00.389.255 I llama_new_context_with_model: graph splits = 1
0.00.389.257 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.644 I main: llama threadpool init, n_threads = 4
0.00.475.655 I 
0.00.475.730 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.734 I 
0.00.475.774 I sampler seed: 2081188587
0.00.475.783 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.786 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.475.786 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.787 I 
 increasities from a variety of sources.

**Answer:**
I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks and

0.02.644.417 I llama_perf_sampler_print:    sampling time =       5.52 ms /    33 runs   (    0.17 ms per token,  5976.10 tokens per second)
0.02.644.419 I llama_perf_context_print:        load time =     473.74 ms
0.02.644.420 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.644.422 I llama_perf_context_print:        eval time =    2150.40 ms /    32 runs   (   67.20 ms per token,    14.88 tokens per second)
0.02.644.436 I llama_perf_context_print:       total time =    2168.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.568 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.892 I main: load the model and apply lora adapter, if any
0.00.021.922 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.973 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.977 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.982 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.983 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.987 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.988 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.988 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.989 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.989 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.990 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.994 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.994 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.995 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.995 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.996 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.491 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.430 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.438 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.438 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.439 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.439 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.440 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.441 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.444 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.444 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.445 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.446 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.447 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.450 I llama_model_loader: - type  f32:   37 tensors
0.00.132.453 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.243 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.135 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.842 I llm_load_vocab: special tokens cache size = 5
0.00.259.732 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.746 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.747 I llm_load_print_meta: arch             = gemma
0.00.259.747 I llm_load_print_meta: vocab type       = SPM
0.00.259.748 I llm_load_print_meta: n_vocab          = 256000
0.00.259.749 I llm_load_print_meta: n_merges         = 0
0.00.259.749 I llm_load_print_meta: vocab_only       = 0
0.00.259.749 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.749 I llm_load_print_meta: n_embd           = 2048
0.00.259.750 I llm_load_print_meta: n_layer          = 18
0.00.259.762 I llm_load_print_meta: n_head           = 8
0.00.259.763 I llm_load_print_meta: n_head_kv        = 1
0.00.259.763 I llm_load_print_meta: n_rot            = 256
0.00.259.763 I llm_load_print_meta: n_swa            = 0
0.00.259.763 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.764 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.764 I llm_load_print_meta: n_gqa            = 8
0.00.259.765 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.766 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.767 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.769 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.769 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.770 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.770 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.771 I llm_load_print_meta: n_ff             = 16384
0.00.259.771 I llm_load_print_meta: n_expert         = 0
0.00.259.771 I llm_load_print_meta: n_expert_used    = 0
0.00.259.771 I llm_load_print_meta: causal attn      = 1
0.00.259.772 I llm_load_print_meta: pooling type     = 0
0.00.259.772 I llm_load_print_meta: rope type        = 2
0.00.259.772 I llm_load_print_meta: rope scaling     = linear
0.00.259.773 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.774 I llm_load_print_meta: freq_scale_train = 1
0.00.259.774 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.775 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.775 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.776 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.776 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.777 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.777 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.778 I llm_load_print_meta: model type       = 2B
0.00.259.779 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.780 I llm_load_print_meta: model params     = 2.51 B
0.00.259.781 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.782 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.784 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.784 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.785 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.785 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.785 I llm_load_print_meta: max token length = 93
0.00.259.813 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.800 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.335.806 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.335.807 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.335.808 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.335.808 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.335.809 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.340.776 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.782 I llama_new_context_with_model: n_batch    = 2048
0.00.340.782 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.783 I llama_new_context_with_model: flash_attn = 0
0.00.340.785 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.786 I llama_new_context_with_model: freq_scale = 1
0.00.369.547 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.561 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.652 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.522 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.530 I llama_new_context_with_model: graph nodes  = 601
0.00.370.530 I llama_new_context_with_model: graph splits = 1
0.00.370.532 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.587 I main: llama threadpool init, n_threads = 4
0.00.460.600 I 
0.00.460.676 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.679 I 
0.00.460.713 I sampler seed: 3489619567
0.00.460.722 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.727 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.727 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.727 I 
 increasities:

I'm confused about the usage of the phrase "certai sign of the times".

**Context:**

A news article discussing climate

0.02.729.878 I llama_perf_sampler_print:    sampling time =       5.58 ms /    33 runs   (    0.17 ms per token,  5913.98 tokens per second)
0.02.729.881 I llama_perf_context_print:        load time =     458.63 ms
0.02.729.882 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.729.883 I llama_perf_context_print:        eval time =    2250.76 ms /    32 runs   (   70.34 ms per token,    14.22 tokens per second)
0.02.729.884 I llama_perf_context_print:       total time =    2269.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.548 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.813 I main: load the model and apply lora adapter, if any
0.00.021.726 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.772 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.788 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.793 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.797 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.800 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.800 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.801 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.802 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.802 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.803 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.807 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.807 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.808 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.808 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.808 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.760 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.795 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.817 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.824 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.825 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.826 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.826 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.827 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.828 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.831 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.831 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.832 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.832 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.833 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.837 I llama_model_loader: - type  f32:   37 tensors
0.00.132.839 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.017 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.667 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.457 I llm_load_vocab: special tokens cache size = 5
0.00.262.466 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.480 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.481 I llm_load_print_meta: arch             = gemma
0.00.262.481 I llm_load_print_meta: vocab type       = SPM
0.00.262.482 I llm_load_print_meta: n_vocab          = 256000
0.00.262.483 I llm_load_print_meta: n_merges         = 0
0.00.262.483 I llm_load_print_meta: vocab_only       = 0
0.00.262.484 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.484 I llm_load_print_meta: n_embd           = 2048
0.00.262.484 I llm_load_print_meta: n_layer          = 18
0.00.262.497 I llm_load_print_meta: n_head           = 8
0.00.262.498 I llm_load_print_meta: n_head_kv        = 1
0.00.262.498 I llm_load_print_meta: n_rot            = 256
0.00.262.499 I llm_load_print_meta: n_swa            = 0
0.00.262.499 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.500 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.501 I llm_load_print_meta: n_gqa            = 8
0.00.262.502 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.503 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.504 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.507 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.507 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.508 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.508 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.509 I llm_load_print_meta: n_ff             = 16384
0.00.262.510 I llm_load_print_meta: n_expert         = 0
0.00.262.510 I llm_load_print_meta: n_expert_used    = 0
0.00.262.511 I llm_load_print_meta: causal attn      = 1
0.00.262.511 I llm_load_print_meta: pooling type     = 0
0.00.262.511 I llm_load_print_meta: rope type        = 2
0.00.262.511 I llm_load_print_meta: rope scaling     = linear
0.00.262.513 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.513 I llm_load_print_meta: freq_scale_train = 1
0.00.262.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.514 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.514 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.515 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.517 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.518 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.518 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.519 I llm_load_print_meta: model type       = 2B
0.00.262.519 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.520 I llm_load_print_meta: model params     = 2.51 B
0.00.262.521 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.521 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.522 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.522 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.523 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.523 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.524 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.524 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.525 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.525 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.526 I llm_load_print_meta: max token length = 93
0.00.262.548 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.214 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.333.222 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.338.241 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.248 I llama_new_context_with_model: n_batch    = 2048
0.00.338.248 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.248 I llama_new_context_with_model: flash_attn = 0
0.00.338.251 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.252 I llama_new_context_with_model: freq_scale = 1
0.00.367.795 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.809 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.902 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.763 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.771 I llama_new_context_with_model: graph nodes  = 601
0.00.368.772 I llama_new_context_with_model: graph splits = 1
0.00.368.773 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.878 I main: llama threadpool init, n_threads = 4
0.00.463.891 I 
0.00.463.965 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.968 I 
0.00.464.009 I sampler seed: 2205869954
0.00.464.018 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.021 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.022 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.022 I 
 increasities in the realm of science fiction:

**1. The sentient AI:**

* Introduced the possibility of AI consciousness existing beyond human control.
*

0.02.877.012 I llama_perf_sampler_print:    sampling time =       5.58 ms /    33 runs   (    0.17 ms per token,  5917.16 tokens per second)
0.02.877.014 I llama_perf_context_print:        load time =     462.00 ms
0.02.877.015 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.877.017 I llama_perf_context_print:        eval time =    2393.70 ms /    32 runs   (   74.80 ms per token,    13.37 tokens per second)
0.02.877.017 I llama_perf_context_print:       total time =    2413.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.420s
user	0m39.259s
sys	0m9.428s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3900 (836a84e9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32032.69 ms
main:    total time = 32032.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.865 I main: load the model and apply lora adapter, if any
0.00.022.108 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.154 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.165 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.170 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.171 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.176 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.177 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.178 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.178 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.179 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.180 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.183 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.184 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.184 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.185 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.185 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.265 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.177 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.905 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.912 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.913 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.913 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.914 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.915 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.916 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.918 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.919 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.919 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.921 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.137.922 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.925 I llama_model_loader: - type  f32:   37 tensors
0.00.137.928 I llama_model_loader: - type q4_K:  108 tensors
0.00.137.928 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.555 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.059 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.817 I llm_load_vocab: special tokens cache size = 5
0.00.266.735 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.749 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.749 I llm_load_print_meta: arch             = gemma
0.00.266.750 I llm_load_print_meta: vocab type       = SPM
0.00.266.751 I llm_load_print_meta: n_vocab          = 256000
0.00.266.751 I llm_load_print_meta: n_merges         = 0
0.00.266.751 I llm_load_print_meta: vocab_only       = 0
0.00.266.752 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.752 I llm_load_print_meta: n_embd           = 2048
0.00.266.752 I llm_load_print_meta: n_layer          = 18
0.00.266.764 I llm_load_print_meta: n_head           = 8
0.00.266.765 I llm_load_print_meta: n_head_kv        = 1
0.00.266.766 I llm_load_print_meta: n_rot            = 256
0.00.266.766 I llm_load_print_meta: n_swa            = 0
0.00.266.766 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.766 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.767 I llm_load_print_meta: n_gqa            = 8
0.00.266.768 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.769 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.769 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.771 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.771 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.772 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.772 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.773 I llm_load_print_meta: n_ff             = 16384
0.00.266.773 I llm_load_print_meta: n_expert         = 0
0.00.266.773 I llm_load_print_meta: n_expert_used    = 0
0.00.266.774 I llm_load_print_meta: causal attn      = 1
0.00.266.774 I llm_load_print_meta: pooling type     = 0
0.00.266.774 I llm_load_print_meta: rope type        = 2
0.00.266.775 I llm_load_print_meta: rope scaling     = linear
0.00.266.776 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.777 I llm_load_print_meta: freq_scale_train = 1
0.00.266.777 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.777 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.778 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.778 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.778 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.778 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.779 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.779 I llm_load_print_meta: model type       = 2B
0.00.266.780 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.781 I llm_load_print_meta: model params     = 2.51 B
0.00.266.781 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.783 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.783 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.784 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.784 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.784 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.785 I llm_load_print_meta: max token length = 93
0.00.266.805 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.037 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.328.045 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.328.046 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.328.046 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.328.047 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.328.047 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.333.288 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.296 I llama_new_context_with_model: n_batch    = 2048
0.00.333.297 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.298 I llama_new_context_with_model: flash_attn = 0
0.00.333.301 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.303 I llama_new_context_with_model: freq_scale = 1
0.00.363.352 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.369 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.461 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.330 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.338 I llama_new_context_with_model: graph nodes  = 601
0.00.364.338 I llama_new_context_with_model: graph splits = 1
0.00.364.340 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.455 I main: llama threadpool init, n_threads = 4
0.00.446.467 I 
0.00.446.541 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.544 I 
0.00.446.579 I sampler seed: 650510096
0.00.446.588 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.596 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.446.598 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.598 I 
 squaRE:

## The Squaring of the Circle

Squaring the circle is a classic geometry problem that has been solved for centuries. The question is:

0.02.070.065 I llama_perf_sampler_print:    sampling time =       5.72 ms /    33 runs   (    0.17 ms per token,  5767.21 tokens per second)
0.02.070.067 I llama_perf_context_print:        load time =     444.53 ms
0.02.070.069 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.070.070 I llama_perf_context_print:        eval time =    1604.64 ms /    32 runs   (   50.14 ms per token,    19.94 tokens per second)
0.02.070.072 I llama_perf_context_print:       total time =    1623.62 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3900 (836a84e9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32197.56 ms
main:    total time = 32197.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.554 I build: 3900 (836a84e9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.905 I main: load the model and apply lora adapter, if any
0.00.022.133 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.153 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.160 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.165 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.170 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.171 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.172 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.172 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.173 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.174 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.181 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.182 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.184 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.889 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.247 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.117 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.124 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.125 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.126 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.127 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.128 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.129 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.133 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.133 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.137 I llama_model_loader: - type  f32:   37 tensors
0.00.137.140 I llama_model_loader: - type q4_K:  108 tensors
0.00.137.141 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.237 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.428 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.291 I llm_load_vocab: special tokens cache size = 5
0.00.268.204 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.218 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.219 I llm_load_print_meta: arch             = gemma
0.00.268.219 I llm_load_print_meta: vocab type       = SPM
0.00.268.220 I llm_load_print_meta: n_vocab          = 256000
0.00.268.221 I llm_load_print_meta: n_merges         = 0
0.00.268.221 I llm_load_print_meta: vocab_only       = 0
0.00.268.221 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.222 I llm_load_print_meta: n_embd           = 2048
0.00.268.222 I llm_load_print_meta: n_layer          = 18
0.00.268.234 I llm_load_print_meta: n_head           = 8
0.00.268.235 I llm_load_print_meta: n_head_kv        = 1
0.00.268.235 I llm_load_print_meta: n_rot            = 256
0.00.268.236 I llm_load_print_meta: n_swa            = 0
0.00.268.236 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.237 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.238 I llm_load_print_meta: n_gqa            = 8
0.00.268.239 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.241 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.242 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.244 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.244 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.246 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.246 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.248 I llm_load_print_meta: n_ff             = 16384
0.00.268.248 I llm_load_print_meta: n_expert         = 0
0.00.268.249 I llm_load_print_meta: n_expert_used    = 0
0.00.268.250 I llm_load_print_meta: causal attn      = 1
0.00.268.250 I llm_load_print_meta: pooling type     = 0
0.00.268.251 I llm_load_print_meta: rope type        = 2
0.00.268.251 I llm_load_print_meta: rope scaling     = linear
0.00.268.253 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.254 I llm_load_print_meta: freq_scale_train = 1
0.00.268.255 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.255 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.256 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.256 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.256 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.257 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.258 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.259 I llm_load_print_meta: model type       = 2B
0.00.268.260 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.268.261 I llm_load_print_meta: model params     = 2.51 B
0.00.268.262 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.268.263 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.264 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.266 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.267 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.268 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.268 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.269 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.269 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.271 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.271 I llm_load_print_meta: max token length = 93
0.00.268.302 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.529.027 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.533.998 I llama_new_context_with_model: n_ctx      = 8192
0.00.534.004 I llama_new_context_with_model: n_batch    = 2048
0.00.534.005 I llama_new_context_with_model: n_ubatch   = 512
0.00.534.005 I llama_new_context_with_model: flash_attn = 0
0.00.534.008 I llama_new_context_with_model: freq_base  = 10000.0
0.00.534.008 I llama_new_context_with_model: freq_scale = 1
0.00.565.038 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.565.058 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.565.166 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.566.058 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.566.067 I llama_new_context_with_model: graph nodes  = 601
0.00.566.067 I llama_new_context_with_model: graph splits = 1
0.00.566.069 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.648.360 I main: llama threadpool init, n_threads = 4
0.00.648.371 I 
0.00.648.462 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.648.466 I 
0.00.648.512 I sampler seed: 1205402891
0.00.648.522 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.648.524 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.648.525 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.648.525 I 
 increasities, and the like.

I apologize if my question contains inappropriate content. I am not responsible for the content of any user's account. [end of text]


0.02.243.908 I llama_perf_sampler_print:    sampling time =       5.61 ms /    33 runs   (    0.17 ms per token,  5879.21 tokens per second)
0.02.243.911 I llama_perf_context_print:        load time =     646.37 ms
0.02.243.912 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.243.914 I llama_perf_context_print:        eval time =    1576.50 ms /    32 runs   (   49.27 ms per token,    20.30 tokens per second)
0.02.243.914 I llama_perf_context_print:       total time =    1595.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.319s
user	8m14.774s
sys	0m6.893s
