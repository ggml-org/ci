+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.597 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.954 I main: load the model and apply lora adapter, if any
0.00.021.763 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.774 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.782 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.787 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.788 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.792 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.793 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.794 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.795 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.795 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.796 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.800 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.801 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.801 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.802 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.803 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.063 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.163 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.040 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.046 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.047 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.048 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.048 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.049 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.050 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.052 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.053 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.054 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.054 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.055 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.058 I llama_model_loader: - type  f32:   37 tensors
0.00.131.060 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.845 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.098 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.680 I llm_load_vocab: special tokens cache size = 5
0.00.265.289 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.307 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.308 I llm_load_print_meta: arch             = gemma
0.00.265.309 I llm_load_print_meta: vocab type       = SPM
0.00.265.309 I llm_load_print_meta: n_vocab          = 256000
0.00.265.310 I llm_load_print_meta: n_merges         = 0
0.00.265.310 I llm_load_print_meta: vocab_only       = 0
0.00.265.310 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.311 I llm_load_print_meta: n_embd           = 2048
0.00.265.311 I llm_load_print_meta: n_layer          = 18
0.00.265.324 I llm_load_print_meta: n_head           = 8
0.00.265.325 I llm_load_print_meta: n_head_kv        = 1
0.00.265.325 I llm_load_print_meta: n_rot            = 256
0.00.265.325 I llm_load_print_meta: n_swa            = 0
0.00.265.326 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.326 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.327 I llm_load_print_meta: n_gqa            = 8
0.00.265.328 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.329 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.329 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.331 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.331 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.331 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.331 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.332 I llm_load_print_meta: n_ff             = 16384
0.00.265.333 I llm_load_print_meta: n_expert         = 0
0.00.265.333 I llm_load_print_meta: n_expert_used    = 0
0.00.265.333 I llm_load_print_meta: causal attn      = 1
0.00.265.334 I llm_load_print_meta: pooling type     = 0
0.00.265.334 I llm_load_print_meta: rope type        = 2
0.00.265.335 I llm_load_print_meta: rope scaling     = linear
0.00.265.336 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.336 I llm_load_print_meta: freq_scale_train = 1
0.00.265.337 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.337 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.337 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.337 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.338 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.338 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.338 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.339 I llm_load_print_meta: model type       = 2B
0.00.265.339 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.340 I llm_load_print_meta: model params     = 2.51 B
0.00.265.341 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.341 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.341 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.342 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.342 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.342 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.343 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.343 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.344 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.344 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.344 I llm_load_print_meta: max token length = 93
0.00.365.272 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.365.278 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.365.279 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.365.280 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.365.280 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.365.281 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.370.713 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.720 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.720 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.721 I llama_new_context_with_model: n_batch       = 2048
0.00.370.721 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.722 I llama_new_context_with_model: flash_attn    = 0
0.00.370.724 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.725 I llama_new_context_with_model: freq_scale    = 1
0.00.370.726 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.912 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.925 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.011 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.217 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.224 I llama_new_context_with_model: graph nodes  = 601
0.00.387.224 I llama_new_context_with_model: graph splits = 1
0.00.387.226 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.896 I main: llama threadpool init, n_threads = 4
0.00.472.908 I 
0.00.472.982 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.985 I 
0.00.473.027 I sampler seed: 3329816213
0.00.473.037 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.046 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.049 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.049 I 
 increasities, and other sexual misconduct allegations have rocked the entertainment industry in recent years.

**Discuss the impact of sexual misconduct allegations on the entertainment industry.**



0.02.722.906 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6545.02 tokens per second)
0.02.722.910 I llama_perf_context_print:        load time =     471.92 ms
0.02.722.911 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.722.913 I llama_perf_context_print:        eval time =    2230.48 ms /    32 runs   (   69.70 ms per token,    14.35 tokens per second)
0.02.722.914 I llama_perf_context_print:       total time =    2250.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.555 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.000.881 I main: load the model and apply lora adapter, if any
0.00.021.556 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.570 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.576 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.578 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.581 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.582 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.583 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.583 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.584 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.585 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.590 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.590 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.591 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.592 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.592 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.824 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.543 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.340 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.347 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.347 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.348 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.348 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.349 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.350 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.352 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.352 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.353 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.354 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.354 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.357 I llama_model_loader: - type  f32:   37 tensors
0.00.131.358 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.475 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.923 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.505 I llm_load_vocab: special tokens cache size = 5
0.00.267.050 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.065 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.066 I llm_load_print_meta: arch             = gemma
0.00.267.066 I llm_load_print_meta: vocab type       = SPM
0.00.267.067 I llm_load_print_meta: n_vocab          = 256000
0.00.267.067 I llm_load_print_meta: n_merges         = 0
0.00.267.068 I llm_load_print_meta: vocab_only       = 0
0.00.267.068 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.068 I llm_load_print_meta: n_embd           = 2048
0.00.267.068 I llm_load_print_meta: n_layer          = 18
0.00.267.080 I llm_load_print_meta: n_head           = 8
0.00.267.080 I llm_load_print_meta: n_head_kv        = 1
0.00.267.081 I llm_load_print_meta: n_rot            = 256
0.00.267.081 I llm_load_print_meta: n_swa            = 0
0.00.267.081 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.082 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.083 I llm_load_print_meta: n_gqa            = 8
0.00.267.084 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.085 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.086 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.087 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.088 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.088 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.088 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.089 I llm_load_print_meta: n_ff             = 16384
0.00.267.089 I llm_load_print_meta: n_expert         = 0
0.00.267.090 I llm_load_print_meta: n_expert_used    = 0
0.00.267.090 I llm_load_print_meta: causal attn      = 1
0.00.267.090 I llm_load_print_meta: pooling type     = 0
0.00.267.091 I llm_load_print_meta: rope type        = 2
0.00.267.091 I llm_load_print_meta: rope scaling     = linear
0.00.267.093 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.093 I llm_load_print_meta: freq_scale_train = 1
0.00.267.094 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.094 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.094 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.094 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.095 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.095 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.095 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.095 I llm_load_print_meta: model type       = 2B
0.00.267.096 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.097 I llm_load_print_meta: model params     = 2.51 B
0.00.267.098 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.098 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.098 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.099 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.099 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.099 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.100 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.100 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.100 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.101 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.101 I llm_load_print_meta: max token length = 93
0.00.362.195 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.367.404 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.409 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.410 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.410 I llama_new_context_with_model: n_batch       = 2048
0.00.367.411 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.411 I llama_new_context_with_model: flash_attn    = 0
0.00.367.413 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.414 I llama_new_context_with_model: freq_scale    = 1
0.00.367.415 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.368 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.382 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.469 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.673 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.680 I llama_new_context_with_model: graph nodes  = 601
0.00.384.680 I llama_new_context_with_model: graph splits = 1
0.00.384.682 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.196 I main: llama threadpool init, n_threads = 4
0.00.466.210 I 
0.00.466.283 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.286 I 
0.00.466.326 I sampler seed: 659985037
0.00.466.337 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.342 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.466.342 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.342 I 
 increasities by framing them within a narrative of a forgotten world.

**Step 1: Setting**

The narrative is set in a mythical realm known as

0.02.657.891 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6623.85 tokens per second)
0.02.657.893 I llama_perf_context_print:        load time =     465.29 ms
0.02.657.894 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.657.896 I llama_perf_context_print:        eval time =    2172.91 ms /    32 runs   (   67.90 ms per token,    14.73 tokens per second)
0.02.657.896 I llama_perf_context_print:       total time =    2191.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.665 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.921 I main: llama backend init
0.00.001.094 I main: load the model and apply lora adapter, if any
0.00.026.705 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.026.713 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.026.720 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.726 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.728 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.732 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.732 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.733 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.733 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.735 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.735 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.739 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.739 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.740 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.740 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.741 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.069 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.136.134 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.143.007 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.143.015 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.143.016 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.143.016 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.143.017 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.143.018 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.143.019 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.143.021 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.143.022 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.143.023 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.143.023 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.143.024 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.143.028 I llama_model_loader: - type  f32:   37 tensors
0.00.143.029 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.202 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.275 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.885 I llm_load_vocab: special tokens cache size = 5
0.00.286.531 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.547 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.548 I llm_load_print_meta: arch             = gemma
0.00.286.548 I llm_load_print_meta: vocab type       = SPM
0.00.286.549 I llm_load_print_meta: n_vocab          = 256000
0.00.286.549 I llm_load_print_meta: n_merges         = 0
0.00.286.549 I llm_load_print_meta: vocab_only       = 0
0.00.286.550 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.550 I llm_load_print_meta: n_embd           = 2048
0.00.286.550 I llm_load_print_meta: n_layer          = 18
0.00.286.563 I llm_load_print_meta: n_head           = 8
0.00.286.564 I llm_load_print_meta: n_head_kv        = 1
0.00.286.564 I llm_load_print_meta: n_rot            = 256
0.00.286.565 I llm_load_print_meta: n_swa            = 0
0.00.286.565 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.565 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.566 I llm_load_print_meta: n_gqa            = 8
0.00.286.567 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.568 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.569 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.570 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.570 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.571 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.571 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.572 I llm_load_print_meta: n_ff             = 16384
0.00.286.572 I llm_load_print_meta: n_expert         = 0
0.00.286.572 I llm_load_print_meta: n_expert_used    = 0
0.00.286.573 I llm_load_print_meta: causal attn      = 1
0.00.286.573 I llm_load_print_meta: pooling type     = 0
0.00.286.573 I llm_load_print_meta: rope type        = 2
0.00.286.574 I llm_load_print_meta: rope scaling     = linear
0.00.286.575 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.575 I llm_load_print_meta: freq_scale_train = 1
0.00.286.576 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.576 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.576 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.577 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.577 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.577 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.577 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.578 I llm_load_print_meta: model type       = 2B
0.00.286.578 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.579 I llm_load_print_meta: model params     = 2.51 B
0.00.286.580 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.580 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.581 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.581 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.582 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.582 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.582 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.582 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.583 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.583 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.583 I llm_load_print_meta: max token length = 93
0.00.369.961 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.369.968 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.369.969 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.369.970 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.369.970 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.369.971 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.375.075 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.081 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.082 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.082 I llama_new_context_with_model: n_batch       = 2048
0.00.375.082 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.083 I llama_new_context_with_model: flash_attn    = 0
0.00.375.085 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.086 I llama_new_context_with_model: freq_scale    = 1
0.00.375.087 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.390.713 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.390.726 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.390.814 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.004 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.392.009 I llama_new_context_with_model: graph nodes  = 601
0.00.392.009 I llama_new_context_with_model: graph splits = 1
0.00.392.011 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.489 I main: llama threadpool init, n_threads = 4
0.00.478.501 I 
0.00.478.580 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.583 I 
0.00.478.626 I sampler seed: 3609270417
0.00.478.635 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.638 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.638 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.641 I 
 increasities, but there's no time for introspection.

**Answer:**
The provided text expresses a mindset that prioritizes efficiency and productivity over personal growth

0.02.648.311 I llama_perf_sampler_print:    sampling time =       4.60 ms /    33 runs   (    0.14 ms per token,  7170.80 tokens per second)
0.02.648.313 I llama_perf_context_print:        load time =     477.37 ms
0.02.648.314 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.648.315 I llama_perf_context_print:        eval time =    2151.72 ms /    32 runs   (   67.24 ms per token,    14.87 tokens per second)
0.02.648.316 I llama_perf_context_print:       total time =    2169.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.537 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.874 I main: load the model and apply lora adapter, if any
0.00.021.197 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.205 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.213 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.218 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.220 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.224 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.224 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.225 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.225 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.226 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.226 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.231 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.232 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.233 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.233 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.233 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.348 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.131 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.941 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.947 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.948 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.948 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.949 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.950 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.950 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.953 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.954 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.955 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.955 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.956 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.960 I llama_model_loader: - type  f32:   37 tensors
0.00.130.961 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.707 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.678 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.262 I llm_load_vocab: special tokens cache size = 5
0.00.262.816 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.832 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.832 I llm_load_print_meta: arch             = gemma
0.00.262.832 I llm_load_print_meta: vocab type       = SPM
0.00.262.833 I llm_load_print_meta: n_vocab          = 256000
0.00.262.833 I llm_load_print_meta: n_merges         = 0
0.00.262.834 I llm_load_print_meta: vocab_only       = 0
0.00.262.834 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.835 I llm_load_print_meta: n_embd           = 2048
0.00.262.835 I llm_load_print_meta: n_layer          = 18
0.00.262.846 I llm_load_print_meta: n_head           = 8
0.00.262.847 I llm_load_print_meta: n_head_kv        = 1
0.00.262.847 I llm_load_print_meta: n_rot            = 256
0.00.262.848 I llm_load_print_meta: n_swa            = 0
0.00.262.848 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.848 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.849 I llm_load_print_meta: n_gqa            = 8
0.00.262.850 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.851 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.852 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.853 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.853 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.854 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.854 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.855 I llm_load_print_meta: n_ff             = 16384
0.00.262.855 I llm_load_print_meta: n_expert         = 0
0.00.262.855 I llm_load_print_meta: n_expert_used    = 0
0.00.262.856 I llm_load_print_meta: causal attn      = 1
0.00.262.856 I llm_load_print_meta: pooling type     = 0
0.00.262.856 I llm_load_print_meta: rope type        = 2
0.00.262.857 I llm_load_print_meta: rope scaling     = linear
0.00.262.858 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.859 I llm_load_print_meta: freq_scale_train = 1
0.00.262.859 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.860 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.860 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.860 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.860 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.860 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.861 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.861 I llm_load_print_meta: model type       = 2B
0.00.262.862 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.863 I llm_load_print_meta: model params     = 2.51 B
0.00.262.863 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.864 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.864 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.865 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.865 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.865 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.865 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.866 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.866 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.867 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.867 I llm_load_print_meta: max token length = 93
0.00.333.605 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.333.613 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.338.805 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.811 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.812 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.812 I llama_new_context_with_model: n_batch       = 2048
0.00.338.813 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.813 I llama_new_context_with_model: flash_attn    = 0
0.00.338.815 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.815 I llama_new_context_with_model: freq_scale    = 1
0.00.338.816 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.353.778 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.792 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.880 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.129 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.135 I llama_new_context_with_model: graph nodes  = 601
0.00.355.135 I llama_new_context_with_model: graph splits = 1
0.00.355.137 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.142 I main: llama threadpool init, n_threads = 4
0.00.442.158 I 
0.00.442.247 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.251 I 
0.00.442.301 I sampler seed: 3706680546
0.00.442.316 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.319 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.442.320 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.321 I 
 seconally:

**The Importance of Customer Experience**

Customer experience plays a crucial role in business success, as it directly impacts customer loyalty, brand advocacy,

0.02.865.365 I llama_perf_sampler_print:    sampling time =       5.39 ms /    33 runs   (    0.16 ms per token,  6121.31 tokens per second)
0.02.865.368 I llama_perf_context_print:        load time =     441.24 ms
0.02.865.369 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.865.371 I llama_perf_context_print:        eval time =    2403.28 ms /    32 runs   (   75.10 ms per token,    13.32 tokens per second)
0.02.865.371 I llama_perf_context_print:       total time =    2423.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.371s
user	0m38.954s
sys	0m9.411s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4087 (86ed72d2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31993.32 ms
main:    total time = 31993.32 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.459 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.653 I main: llama backend init
0.00.000.790 I main: load the model and apply lora adapter, if any
0.00.021.178 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.188 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.197 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.202 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.203 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.206 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.207 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.208 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.208 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.209 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.210 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.214 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.214 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.215 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.215 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.216 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.500 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.840 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.606 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.612 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.612 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.613 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.613 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.614 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.615 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.617 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.618 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.618 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.619 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.620 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.622 I llama_model_loader: - type  f32:   37 tensors
0.00.130.623 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.624 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.465 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.341 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.929 I llm_load_vocab: special tokens cache size = 5
0.00.261.627 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.648 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.648 I llm_load_print_meta: arch             = gemma
0.00.261.649 I llm_load_print_meta: vocab type       = SPM
0.00.261.650 I llm_load_print_meta: n_vocab          = 256000
0.00.261.651 I llm_load_print_meta: n_merges         = 0
0.00.261.651 I llm_load_print_meta: vocab_only       = 0
0.00.261.652 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.652 I llm_load_print_meta: n_embd           = 2048
0.00.261.652 I llm_load_print_meta: n_layer          = 18
0.00.261.664 I llm_load_print_meta: n_head           = 8
0.00.261.665 I llm_load_print_meta: n_head_kv        = 1
0.00.261.666 I llm_load_print_meta: n_rot            = 256
0.00.261.666 I llm_load_print_meta: n_swa            = 0
0.00.261.666 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.667 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.668 I llm_load_print_meta: n_gqa            = 8
0.00.261.669 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.670 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.670 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.672 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.672 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.673 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.673 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.674 I llm_load_print_meta: n_ff             = 16384
0.00.261.674 I llm_load_print_meta: n_expert         = 0
0.00.261.675 I llm_load_print_meta: n_expert_used    = 0
0.00.261.675 I llm_load_print_meta: causal attn      = 1
0.00.261.676 I llm_load_print_meta: pooling type     = 0
0.00.261.676 I llm_load_print_meta: rope type        = 2
0.00.261.676 I llm_load_print_meta: rope scaling     = linear
0.00.261.678 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.678 I llm_load_print_meta: freq_scale_train = 1
0.00.261.679 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.679 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.679 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.679 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.680 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.680 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.680 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.681 I llm_load_print_meta: model type       = 2B
0.00.261.681 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.682 I llm_load_print_meta: model params     = 2.51 B
0.00.261.683 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.683 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.684 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.684 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.685 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.685 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.685 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.686 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.686 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.686 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.686 I llm_load_print_meta: max token length = 93
0.00.324.445 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.324.452 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.324.453 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.324.454 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.324.454 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.324.455 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.329.630 I llama_new_context_with_model: n_seq_max     = 1
0.00.329.637 I llama_new_context_with_model: n_ctx         = 4096
0.00.329.637 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.329.638 I llama_new_context_with_model: n_batch       = 2048
0.00.329.638 I llama_new_context_with_model: n_ubatch      = 512
0.00.329.639 I llama_new_context_with_model: flash_attn    = 0
0.00.329.641 I llama_new_context_with_model: freq_base     = 10000.0
0.00.329.643 I llama_new_context_with_model: freq_scale    = 1
0.00.329.644 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.303 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.345.319 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.345.414 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.649 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.346.653 I llama_new_context_with_model: graph nodes  = 601
0.00.346.653 I llama_new_context_with_model: graph splits = 1
0.00.346.655 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.691 I main: llama threadpool init, n_threads = 4
0.00.421.705 I 
0.00.421.783 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.787 I 
0.00.421.830 I sampler seed: 1768903457
0.00.421.842 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.847 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.421.848 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.848 I 
 effe di grandi dimensioni. La loro complessità rende impossibile un'analisi completa.

Gli studi di caso hanno mostrato che la complessità del sistema è influ

0.02.044.405 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6798.52 tokens per second)
0.02.044.408 I llama_perf_context_print:        load time =     420.88 ms
0.02.044.411 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.044.413 I llama_perf_context_print:        eval time =    1604.21 ms /    32 runs   (   50.13 ms per token,    19.95 tokens per second)
0.02.044.414 I llama_perf_context_print:       total time =    1622.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4087 (86ed72d2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32049.64 ms
main:    total time = 32049.64 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.517 I build: 4087 (86ed72d2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.863 I main: load the model and apply lora adapter, if any
0.00.021.421 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.436 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.444 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.445 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.449 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.449 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.450 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.450 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.451 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.452 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.455 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.456 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.456 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.457 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.457 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.601 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.571 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.382 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.389 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.390 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.391 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.391 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.392 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.393 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.395 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.395 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.399 I llama_model_loader: - type  f32:   37 tensors
0.00.131.400 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.401 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.525 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.744 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.235 I llm_load_vocab: special tokens cache size = 5
0.00.261.792 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.806 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.807 I llm_load_print_meta: arch             = gemma
0.00.261.808 I llm_load_print_meta: vocab type       = SPM
0.00.261.809 I llm_load_print_meta: n_vocab          = 256000
0.00.261.810 I llm_load_print_meta: n_merges         = 0
0.00.261.810 I llm_load_print_meta: vocab_only       = 0
0.00.261.810 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.810 I llm_load_print_meta: n_embd           = 2048
0.00.261.811 I llm_load_print_meta: n_layer          = 18
0.00.261.822 I llm_load_print_meta: n_head           = 8
0.00.261.822 I llm_load_print_meta: n_head_kv        = 1
0.00.261.824 I llm_load_print_meta: n_rot            = 256
0.00.261.824 I llm_load_print_meta: n_swa            = 0
0.00.261.825 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.825 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.827 I llm_load_print_meta: n_gqa            = 8
0.00.261.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.829 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.832 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.832 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.833 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.833 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.834 I llm_load_print_meta: n_ff             = 16384
0.00.261.834 I llm_load_print_meta: n_expert         = 0
0.00.261.834 I llm_load_print_meta: n_expert_used    = 0
0.00.261.835 I llm_load_print_meta: causal attn      = 1
0.00.261.836 I llm_load_print_meta: pooling type     = 0
0.00.261.836 I llm_load_print_meta: rope type        = 2
0.00.261.837 I llm_load_print_meta: rope scaling     = linear
0.00.261.838 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.839 I llm_load_print_meta: freq_scale_train = 1
0.00.261.842 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.842 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.843 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.843 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.843 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.843 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.844 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.844 I llm_load_print_meta: model type       = 2B
0.00.261.845 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.846 I llm_load_print_meta: model params     = 2.51 B
0.00.261.846 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.847 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.847 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.847 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.848 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.849 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.849 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.849 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.850 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.850 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.851 I llm_load_print_meta: max token length = 93
0.00.320.090 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.325.355 I llama_new_context_with_model: n_seq_max     = 1
0.00.325.361 I llama_new_context_with_model: n_ctx         = 4096
0.00.325.361 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.325.362 I llama_new_context_with_model: n_batch       = 2048
0.00.325.362 I llama_new_context_with_model: n_ubatch      = 512
0.00.325.363 I llama_new_context_with_model: flash_attn    = 0
0.00.325.365 I llama_new_context_with_model: freq_base     = 10000.0
0.00.325.366 I llama_new_context_with_model: freq_scale    = 1
0.00.325.367 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.855 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.340.870 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.340.959 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.198 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.205 I llama_new_context_with_model: graph nodes  = 601
0.00.342.205 I llama_new_context_with_model: graph splits = 1
0.00.342.207 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.416.493 I main: llama threadpool init, n_threads = 4
0.00.416.506 I 
0.00.416.584 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.587 I 
0.00.416.628 I sampler seed: 4235290631
0.00.416.639 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.643 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.416.643 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.643 I 
 increasities in the workplace, and provide practical advice on how to address them.

**Causes of Workplace Discomfort**

* Power struggles
* Lack of

0.01.998.970 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6546.32 tokens per second)
0.01.998.972 I llama_perf_context_print:        load time =     415.61 ms
0.01.998.973 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.998.974 I llama_perf_context_print:        eval time =    1563.24 ms /    32 runs   (   48.85 ms per token,    20.47 tokens per second)
0.01.998.975 I llama_perf_context_print:       total time =    1582.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.086s
user	8m14.443s
sys	0m6.904s
