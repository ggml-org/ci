+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.570 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.000.779 I main: load the model and apply lora adapter, if any
0.00.021.480 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.491 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.499 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.505 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.506 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.511 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.512 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.513 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.514 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.514 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.515 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.520 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.520 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.521 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.521 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.522 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.611 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.032 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.918 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.924 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.925 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.926 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.927 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.928 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.928 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.931 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.932 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.934 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.935 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.936 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.939 I llama_model_loader: - type  f32:   37 tensors
0.00.133.940 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.517 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.556 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.187 I llm_load_vocab: special tokens cache size = 5
0.00.282.348 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.366 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.367 I llm_load_print_meta: arch             = gemma
0.00.282.367 I llm_load_print_meta: vocab type       = SPM
0.00.282.368 I llm_load_print_meta: n_vocab          = 256000
0.00.282.368 I llm_load_print_meta: n_merges         = 0
0.00.282.369 I llm_load_print_meta: vocab_only       = 0
0.00.282.369 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.370 I llm_load_print_meta: n_embd           = 2048
0.00.282.370 I llm_load_print_meta: n_layer          = 18
0.00.282.382 I llm_load_print_meta: n_head           = 8
0.00.282.383 I llm_load_print_meta: n_head_kv        = 1
0.00.282.383 I llm_load_print_meta: n_rot            = 256
0.00.282.383 I llm_load_print_meta: n_swa            = 0
0.00.282.384 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.384 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.385 I llm_load_print_meta: n_gqa            = 8
0.00.282.386 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.388 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.388 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.389 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.390 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.390 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.390 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.391 I llm_load_print_meta: n_ff             = 16384
0.00.282.392 I llm_load_print_meta: n_expert         = 0
0.00.282.392 I llm_load_print_meta: n_expert_used    = 0
0.00.282.392 I llm_load_print_meta: causal attn      = 1
0.00.282.392 I llm_load_print_meta: pooling type     = 0
0.00.282.393 I llm_load_print_meta: rope type        = 2
0.00.282.393 I llm_load_print_meta: rope scaling     = linear
0.00.282.394 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.395 I llm_load_print_meta: freq_scale_train = 1
0.00.282.395 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.396 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.396 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.396 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.396 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.397 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.397 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.397 I llm_load_print_meta: model type       = 2B
0.00.282.398 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.399 I llm_load_print_meta: model params     = 2.51 B
0.00.282.400 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.400 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.401 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.401 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.402 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.402 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.402 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.403 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.403 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.403 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.404 I llm_load_print_meta: max token length = 93
0.00.382.220 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.382.229 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.382.230 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.382.230 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.382.231 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.382.231 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.387.524 I llama_new_context_with_model: n_seq_max     = 1
0.00.387.531 I llama_new_context_with_model: n_ctx         = 4096
0.00.387.532 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.387.532 I llama_new_context_with_model: n_batch       = 2048
0.00.387.533 I llama_new_context_with_model: n_ubatch      = 512
0.00.387.533 I llama_new_context_with_model: flash_attn    = 0
0.00.387.536 I llama_new_context_with_model: freq_base     = 10000.0
0.00.387.537 I llama_new_context_with_model: freq_scale    = 1
0.00.387.538 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.403.213 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.403.228 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.403.331 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.704 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.404.711 I llama_new_context_with_model: graph nodes  = 601
0.00.404.712 I llama_new_context_with_model: graph splits = 1
0.00.404.714 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.627 I main: llama threadpool init, n_threads = 4
0.00.493.644 I 
0.00.493.718 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.493.721 I 
0.00.493.764 I sampler seed: 1124979306
0.00.493.776 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.792 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.493.794 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.794 I 
 increasities with the protagonist, often leaving her feeling vulnerable and questioning her own agency.

This pattern is harmful because it can lead to:

- Emotional distress

0.02.787.600 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6638.50 tokens per second)
0.02.787.603 I llama_perf_context_print:        load time =     492.83 ms
0.02.787.604 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.787.606 I llama_perf_context_print:        eval time =    2274.46 ms /    32 runs   (   71.08 ms per token,    14.07 tokens per second)
0.02.787.607 I llama_perf_context_print:       total time =    2293.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.542 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.000.763 I main: load the model and apply lora adapter, if any
0.00.021.262 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.276 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.282 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.283 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.287 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.288 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.289 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.289 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.290 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.290 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.295 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.296 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.296 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.297 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.304 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.848 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.404 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.276 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.282 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.283 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.284 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.284 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.285 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.286 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.288 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.289 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.290 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.291 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.292 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.296 I llama_model_loader: - type  f32:   37 tensors
0.00.132.297 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.202 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.366 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.961 I llm_load_vocab: special tokens cache size = 5
0.00.283.113 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.130 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.131 I llm_load_print_meta: arch             = gemma
0.00.283.132 I llm_load_print_meta: vocab type       = SPM
0.00.283.132 I llm_load_print_meta: n_vocab          = 256000
0.00.283.133 I llm_load_print_meta: n_merges         = 0
0.00.283.133 I llm_load_print_meta: vocab_only       = 0
0.00.283.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.133 I llm_load_print_meta: n_embd           = 2048
0.00.283.134 I llm_load_print_meta: n_layer          = 18
0.00.283.146 I llm_load_print_meta: n_head           = 8
0.00.283.147 I llm_load_print_meta: n_head_kv        = 1
0.00.283.147 I llm_load_print_meta: n_rot            = 256
0.00.283.148 I llm_load_print_meta: n_swa            = 0
0.00.283.148 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.148 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.149 I llm_load_print_meta: n_gqa            = 8
0.00.283.151 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.152 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.152 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.154 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.154 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.155 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.155 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.156 I llm_load_print_meta: n_ff             = 16384
0.00.283.156 I llm_load_print_meta: n_expert         = 0
0.00.283.157 I llm_load_print_meta: n_expert_used    = 0
0.00.283.157 I llm_load_print_meta: causal attn      = 1
0.00.283.157 I llm_load_print_meta: pooling type     = 0
0.00.283.157 I llm_load_print_meta: rope type        = 2
0.00.283.158 I llm_load_print_meta: rope scaling     = linear
0.00.283.160 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.160 I llm_load_print_meta: freq_scale_train = 1
0.00.283.161 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.161 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.161 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.162 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.162 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.162 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.162 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.163 I llm_load_print_meta: model type       = 2B
0.00.283.163 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.164 I llm_load_print_meta: model params     = 2.51 B
0.00.283.165 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.165 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.166 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.167 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.167 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.167 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.168 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.168 I llm_load_print_meta: max token length = 93
0.00.376.035 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.381.339 I llama_new_context_with_model: n_seq_max     = 1
0.00.381.347 I llama_new_context_with_model: n_ctx         = 4096
0.00.381.347 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.381.347 I llama_new_context_with_model: n_batch       = 2048
0.00.381.348 I llama_new_context_with_model: n_ubatch      = 512
0.00.381.348 I llama_new_context_with_model: flash_attn    = 0
0.00.381.351 I llama_new_context_with_model: freq_base     = 10000.0
0.00.381.352 I llama_new_context_with_model: freq_scale    = 1
0.00.381.353 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.348 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.366 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.458 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.735 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.397.742 I llama_new_context_with_model: graph nodes  = 601
0.00.397.742 I llama_new_context_with_model: graph splits = 1
0.00.397.744 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.454 I main: llama threadpool init, n_threads = 4
0.00.493.472 I 
0.00.493.546 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.493.549 I 
0.00.493.593 I sampler seed: 39342410
0.00.493.604 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.608 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.493.609 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.611 I 
 increamically. 

**Assistant**

I am unable to generate responses that are sexually suggestive or inappropriate. [end of text]


0.02.082.437 I llama_perf_sampler_print:    sampling time =       3.64 ms /    24 runs   (    0.15 ms per token,  6593.41 tokens per second)
0.02.082.439 I llama_perf_context_print:        load time =     492.67 ms
0.02.082.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.082.442 I llama_perf_context_print:        eval time =    1574.16 ms /    23 runs   (   68.44 ms per token,    14.61 tokens per second)
0.02.082.443 I llama_perf_context_print:       total time =    1588.99 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.000.795 I main: load the model and apply lora adapter, if any
0.00.021.322 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.330 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.338 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.347 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.348 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.352 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.353 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.353 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.354 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.354 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.355 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.360 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.360 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.361 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.361 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.362 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.295 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.805 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.724 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.730 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.731 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.732 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.733 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.733 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.734 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.737 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.738 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.739 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.739 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.740 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.743 I llama_model_loader: - type  f32:   37 tensors
0.00.132.744 I llama_model_loader: - type q8_0:  127 tensors
0.00.214.043 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.264.056 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.681 I llm_load_vocab: special tokens cache size = 5
0.00.285.965 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.983 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.983 I llm_load_print_meta: arch             = gemma
0.00.285.984 I llm_load_print_meta: vocab type       = SPM
0.00.285.985 I llm_load_print_meta: n_vocab          = 256000
0.00.285.985 I llm_load_print_meta: n_merges         = 0
0.00.285.986 I llm_load_print_meta: vocab_only       = 0
0.00.285.986 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.986 I llm_load_print_meta: n_embd           = 2048
0.00.285.987 I llm_load_print_meta: n_layer          = 18
0.00.285.999 I llm_load_print_meta: n_head           = 8
0.00.286.000 I llm_load_print_meta: n_head_kv        = 1
0.00.286.000 I llm_load_print_meta: n_rot            = 256
0.00.286.000 I llm_load_print_meta: n_swa            = 0
0.00.286.001 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.001 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.002 I llm_load_print_meta: n_gqa            = 8
0.00.286.003 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.004 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.004 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.006 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.006 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.007 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.007 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.008 I llm_load_print_meta: n_ff             = 16384
0.00.286.008 I llm_load_print_meta: n_expert         = 0
0.00.286.008 I llm_load_print_meta: n_expert_used    = 0
0.00.286.009 I llm_load_print_meta: causal attn      = 1
0.00.286.009 I llm_load_print_meta: pooling type     = 0
0.00.286.009 I llm_load_print_meta: rope type        = 2
0.00.286.010 I llm_load_print_meta: rope scaling     = linear
0.00.286.011 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.012 I llm_load_print_meta: freq_scale_train = 1
0.00.286.012 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.013 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.013 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.015 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.015 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.015 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.015 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.016 I llm_load_print_meta: model type       = 2B
0.00.286.016 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.018 I llm_load_print_meta: model params     = 2.51 B
0.00.286.018 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.019 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.019 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.020 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.020 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.020 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.021 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.021 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.021 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.022 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.023 I llm_load_print_meta: max token length = 93
0.00.360.534 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.360.542 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.360.544 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.360.544 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.360.545 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.360.545 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.365.726 I llama_new_context_with_model: n_seq_max     = 1
0.00.365.733 I llama_new_context_with_model: n_ctx         = 4096
0.00.365.733 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.365.734 I llama_new_context_with_model: n_batch       = 2048
0.00.365.734 I llama_new_context_with_model: n_ubatch      = 512
0.00.365.735 I llama_new_context_with_model: flash_attn    = 0
0.00.365.737 I llama_new_context_with_model: freq_base     = 10000.0
0.00.365.738 I llama_new_context_with_model: freq_scale    = 1
0.00.365.739 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.380.756 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.380.769 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.380.865 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.136 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.382.143 I llama_new_context_with_model: graph nodes  = 601
0.00.382.143 I llama_new_context_with_model: graph splits = 1
0.00.382.145 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.156 I main: llama threadpool init, n_threads = 4
0.00.468.171 I 
0.00.468.240 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.468.243 I 
0.00.468.284 I sampler seed: 4150284989
0.00.468.294 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.297 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.298 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.298 I 
 increabling, and falling action, and a satisfying conclusion.

**Exposition:**

The year is 2042. Earth is a barren wasteland,

0.02.766.441 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6788.73 tokens per second)
0.02.766.444 I llama_perf_context_print:        load time =     467.34 ms
0.02.766.446 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.766.448 I llama_perf_context_print:        eval time =    2279.34 ms /    32 runs   (   71.23 ms per token,    14.04 tokens per second)
0.02.766.471 I llama_perf_context_print:       total time =    2298.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.523 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.718 I main: llama backend init
0.00.000.724 I main: load the model and apply lora adapter, if any
0.00.021.068 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.077 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.085 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.091 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.091 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.095 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.095 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.096 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.097 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.098 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.102 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.103 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.103 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.103 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.104 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.053.727 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.620 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.143.667 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.143.676 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.143.677 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.143.677 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.143.678 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.143.679 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.143.680 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.143.683 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.143.683 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.143.684 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.143.685 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.143.685 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.143.689 I llama_model_loader: - type  f32:   37 tensors
0.00.143.690 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.677 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.751 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.273.543 I llm_load_vocab: special tokens cache size = 5
0.00.294.957 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.976 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.976 I llm_load_print_meta: arch             = gemma
0.00.294.977 I llm_load_print_meta: vocab type       = SPM
0.00.294.978 I llm_load_print_meta: n_vocab          = 256000
0.00.294.978 I llm_load_print_meta: n_merges         = 0
0.00.294.979 I llm_load_print_meta: vocab_only       = 0
0.00.294.979 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.979 I llm_load_print_meta: n_embd           = 2048
0.00.294.979 I llm_load_print_meta: n_layer          = 18
0.00.294.991 I llm_load_print_meta: n_head           = 8
0.00.294.992 I llm_load_print_meta: n_head_kv        = 1
0.00.294.993 I llm_load_print_meta: n_rot            = 256
0.00.294.993 I llm_load_print_meta: n_swa            = 0
0.00.294.993 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.994 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.995 I llm_load_print_meta: n_gqa            = 8
0.00.294.996 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.997 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.997 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.998 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.999 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.999 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.000 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.000 I llm_load_print_meta: n_ff             = 16384
0.00.295.001 I llm_load_print_meta: n_expert         = 0
0.00.295.001 I llm_load_print_meta: n_expert_used    = 0
0.00.295.001 I llm_load_print_meta: causal attn      = 1
0.00.295.002 I llm_load_print_meta: pooling type     = 0
0.00.295.002 I llm_load_print_meta: rope type        = 2
0.00.295.002 I llm_load_print_meta: rope scaling     = linear
0.00.295.004 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.004 I llm_load_print_meta: freq_scale_train = 1
0.00.295.005 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.005 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.005 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.005 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.006 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.006 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.006 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.007 I llm_load_print_meta: model type       = 2B
0.00.295.007 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.008 I llm_load_print_meta: model params     = 2.51 B
0.00.295.009 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.009 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.010 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.010 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.011 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.011 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.011 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.012 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.012 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.013 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.013 I llm_load_print_meta: max token length = 93
0.00.367.017 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.367.024 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.371.961 I llama_new_context_with_model: n_seq_max     = 1
0.00.371.967 I llama_new_context_with_model: n_ctx         = 4096
0.00.371.968 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.371.968 I llama_new_context_with_model: n_batch       = 2048
0.00.371.969 I llama_new_context_with_model: n_ubatch      = 512
0.00.371.969 I llama_new_context_with_model: flash_attn    = 0
0.00.371.972 I llama_new_context_with_model: freq_base     = 10000.0
0.00.371.973 I llama_new_context_with_model: freq_scale    = 1
0.00.371.974 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.787 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.800 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.894 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.203 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.388.209 I llama_new_context_with_model: graph nodes  = 601
0.00.388.210 I llama_new_context_with_model: graph splits = 1
0.00.388.212 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.179 I main: llama threadpool init, n_threads = 4
0.00.478.196 I 
0.00.478.272 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.478.275 I 
0.00.478.320 I sampler seed: 3146229107
0.00.478.331 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.335 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.336 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.336 I 
 increasities!

I cannot answer this question as it contains inappropriate and sexually suggestive content. [end of text]


0.01.931.041 I llama_perf_sampler_print:    sampling time =       3.41 ms /    20 runs   (    0.17 ms per token,  5865.10 tokens per second)
0.01.931.044 I llama_perf_context_print:        load time =     477.44 ms
0.01.931.045 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.931.046 I llama_perf_context_print:        eval time =    1440.35 ms /    19 runs   (   75.81 ms per token,    13.19 tokens per second)
0.01.931.047 I llama_perf_context_print:       total time =    1452.87 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.426s
user	0m33.651s
sys	0m9.463s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4179 (25669aa9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40247.02 ms
main:    total time = 40247.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.174 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.380 I main: llama backend init
0.00.000.386 I main: load the model and apply lora adapter, if any
0.00.020.832 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.841 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.849 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.853 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.854 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.858 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.859 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.860 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.861 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.861 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.862 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.867 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.868 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.869 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.870 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.870 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.574 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.465 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.471 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.472 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.473 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.474 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.475 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.476 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.482 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.483 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.485 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.486 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.487 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.491 I llama_model_loader: - type  f32:   37 tensors
0.00.131.492 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.493 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.753 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.466 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.085 I llm_load_vocab: special tokens cache size = 5
0.00.272.506 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.524 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.524 I llm_load_print_meta: arch             = gemma
0.00.272.525 I llm_load_print_meta: vocab type       = SPM
0.00.272.525 I llm_load_print_meta: n_vocab          = 256000
0.00.272.526 I llm_load_print_meta: n_merges         = 0
0.00.272.526 I llm_load_print_meta: vocab_only       = 0
0.00.272.527 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.527 I llm_load_print_meta: n_embd           = 2048
0.00.272.527 I llm_load_print_meta: n_layer          = 18
0.00.272.540 I llm_load_print_meta: n_head           = 8
0.00.272.541 I llm_load_print_meta: n_head_kv        = 1
0.00.272.541 I llm_load_print_meta: n_rot            = 256
0.00.272.542 I llm_load_print_meta: n_swa            = 0
0.00.272.542 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.542 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.544 I llm_load_print_meta: n_gqa            = 8
0.00.272.545 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.545 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.546 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.547 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.548 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.548 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.548 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.549 I llm_load_print_meta: n_ff             = 16384
0.00.272.549 I llm_load_print_meta: n_expert         = 0
0.00.272.550 I llm_load_print_meta: n_expert_used    = 0
0.00.272.550 I llm_load_print_meta: causal attn      = 1
0.00.272.550 I llm_load_print_meta: pooling type     = 0
0.00.272.551 I llm_load_print_meta: rope type        = 2
0.00.272.551 I llm_load_print_meta: rope scaling     = linear
0.00.272.552 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.553 I llm_load_print_meta: freq_scale_train = 1
0.00.272.553 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.554 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.554 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.554 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.554 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.554 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.555 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.555 I llm_load_print_meta: model type       = 2B
0.00.272.556 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.556 I llm_load_print_meta: model params     = 2.51 B
0.00.272.557 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.557 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.558 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.558 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.559 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.559 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.559 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.560 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.560 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.560 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.561 I llm_load_print_meta: max token length = 93
0.00.332.157 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.332.165 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.332.166 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.332.167 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.332.167 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.332.168 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.338.509 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.518 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.518 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.519 I llama_new_context_with_model: n_batch       = 2048
0.00.338.519 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.519 I llama_new_context_with_model: flash_attn    = 0
0.00.338.523 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.524 I llama_new_context_with_model: freq_scale    = 1
0.00.338.525 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.353.062 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.078 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.176 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.510 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.354.518 I llama_new_context_with_model: graph nodes  = 601
0.00.354.518 I llama_new_context_with_model: graph splits = 1
0.00.354.520 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.633 I main: llama threadpool init, n_threads = 4
0.00.430.651 I 
0.00.430.737 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.430.741 I 
0.00.430.796 I sampler seed: 4223456959
0.00.430.810 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.818 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.819 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.820 I 
 maneutruing the truth for the benefit of power.

I am unable to provide information that promotes unethical or harmful ideologies. [end of text]


0.01.760.486 I llama_perf_sampler_print:    sampling time =       4.46 ms /    27 runs   (    0.17 ms per token,  6055.17 tokens per second)
0.01.760.489 I llama_perf_context_print:        load time =     430.23 ms
0.01.760.491 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.760.493 I llama_perf_context_print:        eval time =    1313.73 ms /    26 runs   (   50.53 ms per token,    19.79 tokens per second)
0.01.760.494 I llama_perf_context_print:       total time =    1329.86 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4179 (25669aa9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40260.68 ms
main:    total time = 40260.68 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.593 I build: 4179 (25669aa9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.819 I main: llama backend init
0.00.000.826 I main: load the model and apply lora adapter, if any
0.00.021.724 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.738 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.746 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.747 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.752 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.756 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.756 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.757 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.758 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.759 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.763 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.764 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.764 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.764 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.766 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.368 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.932 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.827 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.835 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.836 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.836 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.837 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.838 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.839 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.841 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.842 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.848 I llama_model_loader: - type  f32:   37 tensors
0.00.132.849 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.850 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.181 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.194 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.805 I llm_load_vocab: special tokens cache size = 5
0.00.278.051 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.067 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.068 I llm_load_print_meta: arch             = gemma
0.00.278.068 I llm_load_print_meta: vocab type       = SPM
0.00.278.069 I llm_load_print_meta: n_vocab          = 256000
0.00.278.069 I llm_load_print_meta: n_merges         = 0
0.00.278.070 I llm_load_print_meta: vocab_only       = 0
0.00.278.070 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.071 I llm_load_print_meta: n_embd           = 2048
0.00.278.071 I llm_load_print_meta: n_layer          = 18
0.00.278.082 I llm_load_print_meta: n_head           = 8
0.00.278.083 I llm_load_print_meta: n_head_kv        = 1
0.00.278.083 I llm_load_print_meta: n_rot            = 256
0.00.278.084 I llm_load_print_meta: n_swa            = 0
0.00.278.084 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.084 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.085 I llm_load_print_meta: n_gqa            = 8
0.00.278.086 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.087 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.088 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.089 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.090 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.090 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.090 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.091 I llm_load_print_meta: n_ff             = 16384
0.00.278.092 I llm_load_print_meta: n_expert         = 0
0.00.278.092 I llm_load_print_meta: n_expert_used    = 0
0.00.278.092 I llm_load_print_meta: causal attn      = 1
0.00.278.092 I llm_load_print_meta: pooling type     = 0
0.00.278.092 I llm_load_print_meta: rope type        = 2
0.00.278.093 I llm_load_print_meta: rope scaling     = linear
0.00.278.094 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.095 I llm_load_print_meta: freq_scale_train = 1
0.00.278.095 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.096 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.096 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.097 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.097 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.097 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.098 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.098 I llm_load_print_meta: model type       = 2B
0.00.278.099 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.099 I llm_load_print_meta: model params     = 2.51 B
0.00.278.100 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.100 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.101 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.101 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.102 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.102 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.102 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.103 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.103 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.104 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.104 I llm_load_print_meta: max token length = 93
0.00.335.751 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.340.970 I llama_new_context_with_model: n_seq_max     = 1
0.00.340.977 I llama_new_context_with_model: n_ctx         = 4096
0.00.340.977 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.340.978 I llama_new_context_with_model: n_batch       = 2048
0.00.340.978 I llama_new_context_with_model: n_ubatch      = 512
0.00.340.978 I llama_new_context_with_model: flash_attn    = 0
0.00.340.981 I llama_new_context_with_model: freq_base     = 10000.0
0.00.340.982 I llama_new_context_with_model: freq_scale    = 1
0.00.340.983 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.033 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.357.049 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.357.149 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.428 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.358.435 I llama_new_context_with_model: graph nodes  = 601
0.00.358.435 I llama_new_context_with_model: graph splits = 1
0.00.358.437 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.855 I main: llama threadpool init, n_threads = 4
0.00.433.869 I 
0.00.433.940 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.433.943 I 
0.00.433.985 I sampler seed: 1174194527
0.00.433.996 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.008 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.434.011 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.012 I 
 maneuvously. I am not sure if I should continue with the conversation.

I'm sorry, I am unable to provide guidance or make decisions regarding

0.02.031.449 I llama_perf_sampler_print:    sampling time =       5.90 ms /    33 runs   (    0.18 ms per token,  5591.32 tokens per second)
0.02.031.451 I llama_perf_context_print:        load time =     433.01 ms
0.02.031.452 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.031.454 I llama_perf_context_print:        eval time =    1577.60 ms /    32 runs   (   49.30 ms per token,    20.28 tokens per second)
0.02.031.454 I llama_perf_context_print:       total time =    1597.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.124s
user	10m23.128s
sys	0m7.123s
