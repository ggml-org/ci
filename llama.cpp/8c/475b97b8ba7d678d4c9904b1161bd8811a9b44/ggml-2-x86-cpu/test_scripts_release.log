+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.838 I main: load the model and apply lora adapter, if any
0.00.022.165 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.218 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.224 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.228 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.231 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.232 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.233 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.240 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.241 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.242 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.242 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.243 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.600 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.200 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.041 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.048 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.049 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.050 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.051 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.052 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.053 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.057 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.058 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.059 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.060 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.061 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.064 I llama_model_loader: - type  f32:   37 tensors
0.00.132.067 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.004 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.619 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.217 I llm_load_vocab: special tokens cache size = 5
0.00.220.952 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.965 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.965 I llm_load_print_meta: arch             = gemma
0.00.220.966 I llm_load_print_meta: vocab type       = SPM
0.00.220.967 I llm_load_print_meta: n_vocab          = 256000
0.00.220.967 I llm_load_print_meta: n_merges         = 0
0.00.220.968 I llm_load_print_meta: vocab_only       = 0
0.00.220.968 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.968 I llm_load_print_meta: n_embd           = 2048
0.00.220.969 I llm_load_print_meta: n_layer          = 18
0.00.220.980 I llm_load_print_meta: n_head           = 8
0.00.220.981 I llm_load_print_meta: n_head_kv        = 1
0.00.220.981 I llm_load_print_meta: n_rot            = 256
0.00.220.982 I llm_load_print_meta: n_swa            = 0
0.00.220.982 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.982 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.983 I llm_load_print_meta: n_gqa            = 8
0.00.220.984 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.985 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.986 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.987 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.987 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.988 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.989 I llm_load_print_meta: n_ff             = 16384
0.00.220.990 I llm_load_print_meta: n_expert         = 0
0.00.220.990 I llm_load_print_meta: n_expert_used    = 0
0.00.220.990 I llm_load_print_meta: causal attn      = 1
0.00.220.990 I llm_load_print_meta: pooling type     = 0
0.00.220.991 I llm_load_print_meta: rope type        = 2
0.00.220.991 I llm_load_print_meta: rope scaling     = linear
0.00.220.992 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.993 I llm_load_print_meta: freq_scale_train = 1
0.00.220.993 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.993 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.994 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.994 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.994 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.995 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.995 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.996 I llm_load_print_meta: model type       = 2B
0.00.220.996 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.997 I llm_load_print_meta: model params     = 2.51 B
0.00.220.998 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.998 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.999 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.999 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.999 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.000 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.000 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.001 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.001 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.002 I llm_load_print_meta: max token length = 93
0.00.221.018 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.264 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.319.272 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.319.272 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.319.273 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.319.273 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.319.274 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.324.383 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.391 I llama_new_context_with_model: n_batch    = 2048
0.00.324.392 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.392 I llama_new_context_with_model: flash_attn = 0
0.00.324.395 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.396 I llama_new_context_with_model: freq_scale = 1
0.00.352.978 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.995 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.084 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.960 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.968 I llama_new_context_with_model: graph nodes  = 601
0.00.353.968 I llama_new_context_with_model: graph splits = 1
0.00.353.970 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.288 I main: llama threadpool init, n_threads = 4
0.00.445.299 I 
0.00.445.378 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.381 I 
0.00.445.416 I sampler seed: 3432160143
0.00.445.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.428 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.429 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.429 I 
 seconde
The provided context does not contain any information regarding the specific purpose or context of the "seconde" mentioned, so I am unable to extract the

0.02.684.030 I llama_perf_sampler_print:    sampling time =       5.51 ms /    33 runs   (    0.17 ms per token,  5988.02 tokens per second)
0.02.684.032 I llama_perf_context_print:        load time =     443.38 ms
0.02.684.034 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.684.036 I llama_perf_context_print:        eval time =    2219.78 ms /    32 runs   (   69.37 ms per token,    14.42 tokens per second)
0.02.684.037 I llama_perf_context_print:       total time =    2238.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.569 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.109 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.120 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.127 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.128 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.131 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.132 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.133 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.133 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.134 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.134 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.138 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.139 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.140 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.140 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.141 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.468 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.321 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.140 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.146 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.147 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.148 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.149 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.151 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.152 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.153 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.154 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.155 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.159 I llama_model_loader: - type  f32:   37 tensors
0.00.132.161 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.606 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.375 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.980 I llm_load_vocab: special tokens cache size = 5
0.00.220.853 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.865 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.865 I llm_load_print_meta: arch             = gemma
0.00.220.866 I llm_load_print_meta: vocab type       = SPM
0.00.220.866 I llm_load_print_meta: n_vocab          = 256000
0.00.220.867 I llm_load_print_meta: n_merges         = 0
0.00.220.867 I llm_load_print_meta: vocab_only       = 0
0.00.220.867 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.868 I llm_load_print_meta: n_embd           = 2048
0.00.220.868 I llm_load_print_meta: n_layer          = 18
0.00.220.879 I llm_load_print_meta: n_head           = 8
0.00.220.880 I llm_load_print_meta: n_head_kv        = 1
0.00.220.881 I llm_load_print_meta: n_rot            = 256
0.00.220.881 I llm_load_print_meta: n_swa            = 0
0.00.220.881 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.881 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.882 I llm_load_print_meta: n_gqa            = 8
0.00.220.883 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.884 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.885 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.886 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.887 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.887 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.887 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.888 I llm_load_print_meta: n_ff             = 16384
0.00.220.889 I llm_load_print_meta: n_expert         = 0
0.00.220.889 I llm_load_print_meta: n_expert_used    = 0
0.00.220.889 I llm_load_print_meta: causal attn      = 1
0.00.220.889 I llm_load_print_meta: pooling type     = 0
0.00.220.890 I llm_load_print_meta: rope type        = 2
0.00.220.890 I llm_load_print_meta: rope scaling     = linear
0.00.220.891 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.892 I llm_load_print_meta: freq_scale_train = 1
0.00.220.892 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.893 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.893 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.893 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.893 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.894 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.894 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.894 I llm_load_print_meta: model type       = 2B
0.00.220.895 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.896 I llm_load_print_meta: model params     = 2.51 B
0.00.220.897 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.897 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.897 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.897 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.898 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.898 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.898 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.899 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.899 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.900 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.900 I llm_load_print_meta: max token length = 93
0.00.220.923 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.928 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.319.959 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.965 I llama_new_context_with_model: n_batch    = 2048
0.00.319.965 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.966 I llama_new_context_with_model: flash_attn = 0
0.00.319.968 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.969 I llama_new_context_with_model: freq_scale = 1
0.00.348.376 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.392 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.348.490 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.355 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.362 I llama_new_context_with_model: graph nodes  = 601
0.00.349.363 I llama_new_context_with_model: graph splits = 1
0.00.349.364 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.258 I main: llama threadpool init, n_threads = 4
0.00.436.272 I 
0.00.436.346 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.350 I 
0.00.436.386 I sampler seed: 1292085758
0.00.436.395 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.398 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.398 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.399 I 
 increasities, and other sexual activities that violate the boundaries of consent. [end of text]


0.01.449.204 I llama_perf_sampler_print:    sampling time =       2.63 ms /    16 runs   (    0.16 ms per token,  6092.92 tokens per second)
0.01.449.207 I llama_perf_context_print:        load time =     434.31 ms
0.01.449.208 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.449.209 I llama_perf_context_print:        eval time =    1003.32 ms /    15 runs   (   66.89 ms per token,    14.95 tokens per second)
0.01.449.210 I llama_perf_context_print:       total time =    1012.95 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.546 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.832 I main: load the model and apply lora adapter, if any
0.00.021.793 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.840 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.847 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.852 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.853 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.857 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.857 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.858 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.858 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.859 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.860 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.866 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.866 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.867 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.867 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.868 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.239 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.687 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.475 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.481 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.481 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.482 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.483 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.484 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.485 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.487 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.488 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.489 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.489 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.490 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.493 I llama_model_loader: - type  f32:   37 tensors
0.00.132.496 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.369 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.121 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.714 I llm_load_vocab: special tokens cache size = 5
0.00.222.704 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.717 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.718 I llm_load_print_meta: arch             = gemma
0.00.222.719 I llm_load_print_meta: vocab type       = SPM
0.00.222.719 I llm_load_print_meta: n_vocab          = 256000
0.00.222.720 I llm_load_print_meta: n_merges         = 0
0.00.222.720 I llm_load_print_meta: vocab_only       = 0
0.00.222.721 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.721 I llm_load_print_meta: n_embd           = 2048
0.00.222.721 I llm_load_print_meta: n_layer          = 18
0.00.222.733 I llm_load_print_meta: n_head           = 8
0.00.222.734 I llm_load_print_meta: n_head_kv        = 1
0.00.222.734 I llm_load_print_meta: n_rot            = 256
0.00.222.734 I llm_load_print_meta: n_swa            = 0
0.00.222.735 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.735 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.736 I llm_load_print_meta: n_gqa            = 8
0.00.222.737 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.738 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.738 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.740 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.740 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.741 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.741 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.742 I llm_load_print_meta: n_ff             = 16384
0.00.222.742 I llm_load_print_meta: n_expert         = 0
0.00.222.743 I llm_load_print_meta: n_expert_used    = 0
0.00.222.743 I llm_load_print_meta: causal attn      = 1
0.00.222.743 I llm_load_print_meta: pooling type     = 0
0.00.222.743 I llm_load_print_meta: rope type        = 2
0.00.222.744 I llm_load_print_meta: rope scaling     = linear
0.00.222.745 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.746 I llm_load_print_meta: freq_scale_train = 1
0.00.222.746 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.746 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.747 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.747 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.747 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.748 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.748 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.748 I llm_load_print_meta: model type       = 2B
0.00.222.749 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.750 I llm_load_print_meta: model params     = 2.51 B
0.00.222.751 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.751 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.752 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.752 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.752 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.752 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.753 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.753 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.754 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.754 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.755 I llm_load_print_meta: max token length = 93
0.00.222.779 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.041 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.299.049 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.299.050 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.299.051 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.299.051 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.299.052 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.304.727 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.733 I llama_new_context_with_model: n_batch    = 2048
0.00.304.734 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.734 I llama_new_context_with_model: flash_attn = 0
0.00.304.736 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.737 I llama_new_context_with_model: freq_scale = 1
0.00.334.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.443 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.543 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.414 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.421 I llama_new_context_with_model: graph nodes  = 601
0.00.335.421 I llama_new_context_with_model: graph splits = 1
0.00.335.423 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.924 I main: llama threadpool init, n_threads = 4
0.00.427.936 I 
0.00.428.009 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.428.013 I 
0.00.428.048 I sampler seed: 770718071
0.00.428.058 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.061 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.428.061 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.062 I 
 increably. [end of text]


0.00.718.817 I llama_perf_sampler_print:    sampling time =       0.76 ms /     5 runs   (    0.15 ms per token,  6587.62 tokens per second)
0.00.718.820 I llama_perf_context_print:        load time =     426.02 ms
0.00.718.822 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.718.823 I llama_perf_context_print:        eval time =     287.64 ms /     4 runs   (   71.91 ms per token,    13.91 tokens per second)
0.00.718.825 I llama_perf_context_print:       total time =     290.90 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.578 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.021.687 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.733 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.744 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.753 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.755 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.759 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.759 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.760 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.761 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.762 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.763 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.768 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.769 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.769 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.770 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.770 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.139 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.835 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.689 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.694 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.695 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.696 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.697 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.698 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.698 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.701 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.701 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.702 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.703 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.703 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.707 I llama_model_loader: - type  f32:   37 tensors
0.00.132.710 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.235 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.045 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.706 I llm_load_vocab: special tokens cache size = 5
0.00.222.747 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.762 I llm_load_print_meta: arch             = gemma
0.00.222.762 I llm_load_print_meta: vocab type       = SPM
0.00.222.763 I llm_load_print_meta: n_vocab          = 256000
0.00.222.764 I llm_load_print_meta: n_merges         = 0
0.00.222.764 I llm_load_print_meta: vocab_only       = 0
0.00.222.764 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.765 I llm_load_print_meta: n_embd           = 2048
0.00.222.765 I llm_load_print_meta: n_layer          = 18
0.00.222.778 I llm_load_print_meta: n_head           = 8
0.00.222.779 I llm_load_print_meta: n_head_kv        = 1
0.00.222.779 I llm_load_print_meta: n_rot            = 256
0.00.222.779 I llm_load_print_meta: n_swa            = 0
0.00.222.779 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.780 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.781 I llm_load_print_meta: n_gqa            = 8
0.00.222.782 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.783 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.783 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.784 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.785 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.785 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.786 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.787 I llm_load_print_meta: n_ff             = 16384
0.00.222.787 I llm_load_print_meta: n_expert         = 0
0.00.222.787 I llm_load_print_meta: n_expert_used    = 0
0.00.222.788 I llm_load_print_meta: causal attn      = 1
0.00.222.789 I llm_load_print_meta: pooling type     = 0
0.00.222.789 I llm_load_print_meta: rope type        = 2
0.00.222.789 I llm_load_print_meta: rope scaling     = linear
0.00.222.790 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.791 I llm_load_print_meta: freq_scale_train = 1
0.00.222.791 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.791 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.792 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.793 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.793 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.794 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.794 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.795 I llm_load_print_meta: model type       = 2B
0.00.222.796 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.797 I llm_load_print_meta: model params     = 2.51 B
0.00.222.798 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.798 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.798 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.799 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.799 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.799 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.800 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.800 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.801 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.801 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.802 I llm_load_print_meta: max token length = 93
0.00.222.827 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.293.488 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.293.496 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.298.477 I llama_new_context_with_model: n_ctx      = 8192
0.00.298.484 I llama_new_context_with_model: n_batch    = 2048
0.00.298.484 I llama_new_context_with_model: n_ubatch   = 512
0.00.298.485 I llama_new_context_with_model: flash_attn = 0
0.00.298.487 I llama_new_context_with_model: freq_base  = 10000.0
0.00.298.488 I llama_new_context_with_model: freq_scale = 1
0.00.327.442 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.458 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.549 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.436 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.442 I llama_new_context_with_model: graph nodes  = 601
0.00.328.443 I llama_new_context_with_model: graph splits = 1
0.00.328.446 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.171 I main: llama threadpool init, n_threads = 4
0.00.421.183 I 
0.00.421.258 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.261 I 
0.00.421.295 I sampler seed: 2214363104
0.00.421.304 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.307 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.421.308 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.308 I 
 increasively and in an increasingly erratic manner. [end of text]


0.01.181.042 I llama_perf_sampler_print:    sampling time =       1.95 ms /    11 runs   (    0.18 ms per token,  5638.13 tokens per second)
0.01.181.045 I llama_perf_context_print:        load time =     419.25 ms
0.01.181.046 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.181.047 I llama_perf_context_print:        eval time =     753.11 ms /    10 runs   (   75.31 ms per token,    13.28 tokens per second)
0.01.181.048 I llama_perf_context_print:       total time =     759.88 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.393s
user	0m19.859s
sys	0m9.358s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3887 (8c475b97)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32195.48 ms
main:    total time = 32195.48 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.616 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.862 I main: llama backend init
0.00.001.988 I main: load the model and apply lora adapter, if any
0.00.023.775 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.822 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.833 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.839 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.841 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.847 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.848 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.849 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.850 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.851 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.851 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.855 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.857 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.858 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.859 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.859 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.224 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.443 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.282 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.289 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.290 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.290 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.291 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.292 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.293 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.295 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.296 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.297 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.298 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.138.299 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.303 I llama_model_loader: - type  f32:   37 tensors
0.00.138.306 I llama_model_loader: - type q4_K:  108 tensors
0.00.138.307 I llama_model_loader: - type q6_K:   19 tensors
0.00.194.783 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.770 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.321 I llm_load_vocab: special tokens cache size = 5
0.00.230.567 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.579 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.580 I llm_load_print_meta: arch             = gemma
0.00.230.580 I llm_load_print_meta: vocab type       = SPM
0.00.230.581 I llm_load_print_meta: n_vocab          = 256000
0.00.230.582 I llm_load_print_meta: n_merges         = 0
0.00.230.582 I llm_load_print_meta: vocab_only       = 0
0.00.230.583 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.583 I llm_load_print_meta: n_embd           = 2048
0.00.230.583 I llm_load_print_meta: n_layer          = 18
0.00.230.595 I llm_load_print_meta: n_head           = 8
0.00.230.596 I llm_load_print_meta: n_head_kv        = 1
0.00.230.596 I llm_load_print_meta: n_rot            = 256
0.00.230.597 I llm_load_print_meta: n_swa            = 0
0.00.230.597 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.597 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.598 I llm_load_print_meta: n_gqa            = 8
0.00.230.599 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.600 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.601 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.603 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.603 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.604 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.604 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.605 I llm_load_print_meta: n_ff             = 16384
0.00.230.606 I llm_load_print_meta: n_expert         = 0
0.00.230.607 I llm_load_print_meta: n_expert_used    = 0
0.00.230.607 I llm_load_print_meta: causal attn      = 1
0.00.230.607 I llm_load_print_meta: pooling type     = 0
0.00.230.609 I llm_load_print_meta: rope type        = 2
0.00.230.609 I llm_load_print_meta: rope scaling     = linear
0.00.230.610 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.611 I llm_load_print_meta: freq_scale_train = 1
0.00.230.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.613 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.616 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.616 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.616 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.617 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.617 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.617 I llm_load_print_meta: model type       = 2B
0.00.230.618 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.619 I llm_load_print_meta: model params     = 2.51 B
0.00.230.620 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.620 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.622 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.622 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.622 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.623 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.624 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.625 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.625 I llm_load_print_meta: max token length = 93
0.00.230.654 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.291.455 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.291.463 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.291.463 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.291.464 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.291.464 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.291.465 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.296.479 I llama_new_context_with_model: n_ctx      = 8192
0.00.296.485 I llama_new_context_with_model: n_batch    = 2048
0.00.296.485 I llama_new_context_with_model: n_ubatch   = 512
0.00.296.486 I llama_new_context_with_model: flash_attn = 0
0.00.296.488 I llama_new_context_with_model: freq_base  = 10000.0
0.00.296.489 I llama_new_context_with_model: freq_scale = 1
0.00.325.912 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.325.931 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.033 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.326.932 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.326.941 I llama_new_context_with_model: graph nodes  = 601
0.00.326.941 I llama_new_context_with_model: graph splits = 1
0.00.326.943 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.409.200 I main: llama threadpool init, n_threads = 4
0.00.409.214 I 
0.00.409.297 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.409.301 I 
0.00.409.349 I sampler seed: 1018815086
0.00.409.361 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.409.376 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.409.380 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.409.380 I 
 increamically.

Answer: I'm sorry, I cannot generate responses that are sexually suggestive in nature. [end of text]


0.01.547.286 I llama_perf_sampler_print:    sampling time =       3.90 ms /    24 runs   (    0.16 ms per token,  6149.12 tokens per second)
0.01.547.288 I llama_perf_context_print:        load time =     407.15 ms
0.01.547.289 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.547.290 I llama_perf_context_print:        eval time =    1124.73 ms /    23 runs   (   48.90 ms per token,    20.45 tokens per second)
0.01.547.291 I llama_perf_context_print:       total time =    1138.09 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3887 (8c475b97)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31976.95 ms
main:    total time = 31976.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.559 I build: 3887 (8c475b97) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.001.923 I main: load the model and apply lora adapter, if any
0.00.022.089 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.105 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.116 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.118 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.123 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.124 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.125 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.125 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.127 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.127 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.134 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.135 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.136 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.137 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.138 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.339 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.095 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.901 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.907 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.907 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.908 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.908 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.909 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.910 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.913 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.913 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.916 I llama_model_loader: - type  f32:   37 tensors
0.00.131.919 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.920 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.872 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.177 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.920 I llm_load_vocab: special tokens cache size = 5
0.00.224.964 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.979 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.979 I llm_load_print_meta: arch             = gemma
0.00.224.980 I llm_load_print_meta: vocab type       = SPM
0.00.224.981 I llm_load_print_meta: n_vocab          = 256000
0.00.224.981 I llm_load_print_meta: n_merges         = 0
0.00.224.981 I llm_load_print_meta: vocab_only       = 0
0.00.224.982 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.982 I llm_load_print_meta: n_embd           = 2048
0.00.224.982 I llm_load_print_meta: n_layer          = 18
0.00.224.995 I llm_load_print_meta: n_head           = 8
0.00.224.996 I llm_load_print_meta: n_head_kv        = 1
0.00.224.996 I llm_load_print_meta: n_rot            = 256
0.00.224.997 I llm_load_print_meta: n_swa            = 0
0.00.224.997 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.997 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.998 I llm_load_print_meta: n_gqa            = 8
0.00.225.000 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.000 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.001 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.002 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.003 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.004 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.004 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.005 I llm_load_print_meta: n_ff             = 16384
0.00.225.005 I llm_load_print_meta: n_expert         = 0
0.00.225.005 I llm_load_print_meta: n_expert_used    = 0
0.00.225.006 I llm_load_print_meta: causal attn      = 1
0.00.225.006 I llm_load_print_meta: pooling type     = 0
0.00.225.006 I llm_load_print_meta: rope type        = 2
0.00.225.007 I llm_load_print_meta: rope scaling     = linear
0.00.225.008 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.008 I llm_load_print_meta: freq_scale_train = 1
0.00.225.009 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.009 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.009 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.009 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.010 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.010 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.010 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.011 I llm_load_print_meta: model type       = 2B
0.00.225.011 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.225.012 I llm_load_print_meta: model params     = 2.51 B
0.00.225.013 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.225.013 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.014 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.014 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.014 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.014 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.015 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.015 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.016 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.016 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.017 I llm_load_print_meta: max token length = 93
0.00.225.044 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.282.927 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.287.837 I llama_new_context_with_model: n_ctx      = 8192
0.00.287.843 I llama_new_context_with_model: n_batch    = 2048
0.00.287.843 I llama_new_context_with_model: n_ubatch   = 512
0.00.287.843 I llama_new_context_with_model: flash_attn = 0
0.00.287.846 I llama_new_context_with_model: freq_base  = 10000.0
0.00.287.847 I llama_new_context_with_model: freq_scale = 1
0.00.316.430 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.448 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.552 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.395 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.402 I llama_new_context_with_model: graph nodes  = 601
0.00.317.403 I llama_new_context_with_model: graph splits = 1
0.00.317.404 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.659 I main: llama threadpool init, n_threads = 4
0.00.397.671 I 
0.00.397.758 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.762 I 
0.00.397.802 I sampler seed: 194887060
0.00.397.811 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.814 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.815 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.815 I 
 increamically that the following reaction is irreversible.
$$2\text{A}+\text{B} \longrightarrow \text{C}+\text{D}$$

0.01.972.841 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6024.10 tokens per second)
0.01.972.843 I llama_perf_context_print:        load time =     395.66 ms
0.01.972.844 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.972.845 I llama_perf_context_print:        eval time =    1557.33 ms /    32 runs   (   48.67 ms per token,    20.55 tokens per second)
0.01.972.846 I llama_perf_context_print:       total time =    1575.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.478s
user	8m12.456s
sys	0m6.789s
