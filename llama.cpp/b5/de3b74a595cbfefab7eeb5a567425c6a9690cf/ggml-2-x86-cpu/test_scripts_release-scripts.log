+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.558 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.144 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.193 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.205 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.206 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.210 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.211 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.211 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.212 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.213 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.214 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.219 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.220 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.222 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.033 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.437 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.319 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.326 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.326 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.327 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.328 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.328 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.329 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.332 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.332 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.334 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.335 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.336 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.339 I llama_model_loader: - type  f32:   37 tensors
0.00.134.342 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.428 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.817 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.602 I llm_load_vocab: special tokens cache size = 5
0.00.239.856 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.871 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.872 I llm_load_print_meta: arch             = gemma
0.00.239.872 I llm_load_print_meta: vocab type       = SPM
0.00.239.873 I llm_load_print_meta: n_vocab          = 256000
0.00.239.874 I llm_load_print_meta: n_merges         = 0
0.00.239.874 I llm_load_print_meta: vocab_only       = 0
0.00.239.874 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.875 I llm_load_print_meta: n_embd           = 2048
0.00.239.875 I llm_load_print_meta: n_layer          = 18
0.00.239.888 I llm_load_print_meta: n_head           = 8
0.00.239.889 I llm_load_print_meta: n_head_kv        = 1
0.00.239.889 I llm_load_print_meta: n_rot            = 256
0.00.239.890 I llm_load_print_meta: n_swa            = 0
0.00.239.890 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.891 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.892 I llm_load_print_meta: n_gqa            = 8
0.00.239.893 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.894 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.895 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.896 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.896 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.897 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.898 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.899 I llm_load_print_meta: n_ff             = 16384
0.00.239.899 I llm_load_print_meta: n_expert         = 0
0.00.239.902 I llm_load_print_meta: n_expert_used    = 0
0.00.239.903 I llm_load_print_meta: causal attn      = 1
0.00.239.903 I llm_load_print_meta: pooling type     = 0
0.00.239.903 I llm_load_print_meta: rope type        = 2
0.00.239.904 I llm_load_print_meta: rope scaling     = linear
0.00.239.905 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.905 I llm_load_print_meta: freq_scale_train = 1
0.00.239.906 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.906 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.906 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.907 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.907 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.907 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.908 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.908 I llm_load_print_meta: model type       = 2B
0.00.239.909 I llm_load_print_meta: model ftype      = Q8_0
0.00.239.910 I llm_load_print_meta: model params     = 2.51 B
0.00.239.912 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.239.912 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.913 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.914 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.914 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.914 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.915 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.916 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.916 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.916 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.917 I llm_load_print_meta: max token length = 93
0.00.239.942 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.273 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.280 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.281 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.282 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.282 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.283 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.343.408 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.415 I llama_new_context_with_model: n_batch    = 2048
0.00.343.415 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.416 I llama_new_context_with_model: flash_attn = 0
0.00.343.418 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.419 I llama_new_context_with_model: freq_scale = 1
0.00.373.682 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.693 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.789 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.675 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.683 I llama_new_context_with_model: graph nodes  = 601
0.00.374.684 I llama_new_context_with_model: graph splits = 1
0.00.374.686 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.745 I main: llama threadpool init, n_threads = 4
0.00.470.757 I 
0.00.470.832 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.835 I 
0.00.470.864 I sampler seed: 3739560530
0.00.470.873 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.876 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.876 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.876 I 
 increasities. [end of text]


0.00.755.531 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7974.48 tokens per second)
0.00.755.534 I llama_perf_context_print:        load time =     468.85 ms
0.00.755.536 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.755.538 I llama_perf_context_print:        eval time =     281.66 ms /     4 runs   (   70.42 ms per token,    14.20 tokens per second)
0.00.755.539 I llama_perf_context_print:       total time =     284.79 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.600 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.022.170 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.185 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.192 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.193 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.197 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.198 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.199 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.200 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.200 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.201 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.206 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.208 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.209 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.209 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.210 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.308 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.792 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.690 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.696 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.697 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.697 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.698 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.699 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.699 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.702 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.702 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.703 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.704 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.705 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.709 I llama_model_loader: - type  f32:   37 tensors
0.00.134.711 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.816 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.024 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.232.823 I llm_load_vocab: special tokens cache size = 5
0.00.251.081 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.251.096 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.251.097 I llm_load_print_meta: arch             = gemma
0.00.251.097 I llm_load_print_meta: vocab type       = SPM
0.00.251.098 I llm_load_print_meta: n_vocab          = 256000
0.00.251.099 I llm_load_print_meta: n_merges         = 0
0.00.251.099 I llm_load_print_meta: vocab_only       = 0
0.00.251.099 I llm_load_print_meta: n_ctx_train      = 8192
0.00.251.100 I llm_load_print_meta: n_embd           = 2048
0.00.251.100 I llm_load_print_meta: n_layer          = 18
0.00.251.113 I llm_load_print_meta: n_head           = 8
0.00.251.114 I llm_load_print_meta: n_head_kv        = 1
0.00.251.114 I llm_load_print_meta: n_rot            = 256
0.00.251.114 I llm_load_print_meta: n_swa            = 0
0.00.251.115 I llm_load_print_meta: n_embd_head_k    = 256
0.00.251.115 I llm_load_print_meta: n_embd_head_v    = 256
0.00.251.116 I llm_load_print_meta: n_gqa            = 8
0.00.251.117 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.251.118 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.251.119 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.251.120 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.251.121 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.251.121 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.251.121 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.251.122 I llm_load_print_meta: n_ff             = 16384
0.00.251.123 I llm_load_print_meta: n_expert         = 0
0.00.251.123 I llm_load_print_meta: n_expert_used    = 0
0.00.251.123 I llm_load_print_meta: causal attn      = 1
0.00.251.124 I llm_load_print_meta: pooling type     = 0
0.00.251.124 I llm_load_print_meta: rope type        = 2
0.00.251.124 I llm_load_print_meta: rope scaling     = linear
0.00.251.126 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.251.127 I llm_load_print_meta: freq_scale_train = 1
0.00.251.127 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.251.127 I llm_load_print_meta: rope_finetuned   = unknown
0.00.251.128 I llm_load_print_meta: ssm_d_conv       = 0
0.00.251.128 I llm_load_print_meta: ssm_d_inner      = 0
0.00.251.128 I llm_load_print_meta: ssm_d_state      = 0
0.00.251.128 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.251.129 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.251.129 I llm_load_print_meta: model type       = 2B
0.00.251.130 I llm_load_print_meta: model ftype      = Q8_0
0.00.251.131 I llm_load_print_meta: model params     = 2.51 B
0.00.251.132 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.251.132 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.251.132 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.251.133 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.251.133 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.251.134 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.251.134 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.251.134 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.251.135 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.251.135 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.251.135 I llm_load_print_meta: max token length = 93
0.00.251.153 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.308 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.348.547 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.553 I llama_new_context_with_model: n_batch    = 2048
0.00.348.553 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.554 I llama_new_context_with_model: flash_attn = 0
0.00.348.557 I llama_new_context_with_model: freq_base  = 10000.0
0.00.348.558 I llama_new_context_with_model: freq_scale = 1
0.00.378.510 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.523 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.614 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.476 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.485 I llama_new_context_with_model: graph nodes  = 601
0.00.379.485 I llama_new_context_with_model: graph splits = 1
0.00.379.487 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.280 I main: llama threadpool init, n_threads = 4
0.00.468.291 I 
0.00.468.366 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.369 I 
0.00.468.397 I sampler seed: 3469551850
0.00.468.406 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.418 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.468.421 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.421 I 
 seconary education can be implemented through various strategies, including:

**1. Curriculum Development:**

* Designing curricula that aligns with specific learning objectives.
*

0.02.671.160 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6988.56 tokens per second)
0.02.671.163 I llama_perf_context_print:        load time =     466.37 ms
0.02.671.164 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.671.166 I llama_perf_context_print:        eval time =    2184.55 ms /    32 runs   (   68.27 ms per token,    14.65 tokens per second)
0.02.671.168 I llama_perf_context_print:       total time =    2202.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.559 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.869 I main: load the model and apply lora adapter, if any
0.00.021.999 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.049 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.056 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.062 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.063 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.067 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.068 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.068 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.069 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.069 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.070 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.075 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.076 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.077 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.077 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.078 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.554 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.789 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.672 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.679 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.680 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.681 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.682 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.683 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.684 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.688 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.691 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.692 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.693 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.697 I llama_model_loader: - type  f32:   37 tensors
0.00.133.700 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.813 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.258 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.052 I llm_load_vocab: special tokens cache size = 5
0.00.233.617 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.634 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.634 I llm_load_print_meta: arch             = gemma
0.00.233.635 I llm_load_print_meta: vocab type       = SPM
0.00.233.636 I llm_load_print_meta: n_vocab          = 256000
0.00.233.637 I llm_load_print_meta: n_merges         = 0
0.00.233.637 I llm_load_print_meta: vocab_only       = 0
0.00.233.638 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.638 I llm_load_print_meta: n_embd           = 2048
0.00.233.639 I llm_load_print_meta: n_layer          = 18
0.00.233.652 I llm_load_print_meta: n_head           = 8
0.00.233.653 I llm_load_print_meta: n_head_kv        = 1
0.00.233.653 I llm_load_print_meta: n_rot            = 256
0.00.233.654 I llm_load_print_meta: n_swa            = 0
0.00.233.654 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.654 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.655 I llm_load_print_meta: n_gqa            = 8
0.00.233.656 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.657 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.658 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.659 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.659 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.660 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.660 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.661 I llm_load_print_meta: n_ff             = 16384
0.00.233.661 I llm_load_print_meta: n_expert         = 0
0.00.233.662 I llm_load_print_meta: n_expert_used    = 0
0.00.233.662 I llm_load_print_meta: causal attn      = 1
0.00.233.662 I llm_load_print_meta: pooling type     = 0
0.00.233.663 I llm_load_print_meta: rope type        = 2
0.00.233.663 I llm_load_print_meta: rope scaling     = linear
0.00.233.664 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.665 I llm_load_print_meta: freq_scale_train = 1
0.00.233.665 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.666 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.666 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.666 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.667 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.667 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.667 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.668 I llm_load_print_meta: model type       = 2B
0.00.233.668 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.669 I llm_load_print_meta: model params     = 2.51 B
0.00.233.670 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.670 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.671 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.671 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.671 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.672 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.672 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.673 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.673 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.673 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.674 I llm_load_print_meta: max token length = 93
0.00.233.693 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.309.772 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.309.780 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.309.780 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.309.781 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.309.782 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.309.782 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.314.889 I llama_new_context_with_model: n_ctx      = 8192
0.00.314.897 I llama_new_context_with_model: n_batch    = 2048
0.00.314.898 I llama_new_context_with_model: n_ubatch   = 512
0.00.314.898 I llama_new_context_with_model: flash_attn = 0
0.00.314.900 I llama_new_context_with_model: freq_base  = 10000.0
0.00.314.901 I llama_new_context_with_model: freq_scale = 1
0.00.345.034 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.345.048 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.140 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.008 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.346.016 I llama_new_context_with_model: graph nodes  = 601
0.00.346.016 I llama_new_context_with_model: graph splits = 1
0.00.346.018 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.230 I main: llama threadpool init, n_threads = 4
0.00.440.242 I 
0.00.440.315 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.318 I 
0.00.440.348 I sampler seed: 135345959
0.00.440.357 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.369 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.370 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.371 I 
 increasels and other winged creatures in the sky, and the strange and wonderful phenomenon of rainbow formation.

**Answer:** Astronomy.

Astronomy is the scientific study

0.02.729.383 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6596.04 tokens per second)
0.02.729.386 I llama_perf_context_print:        load time =     438.34 ms
0.02.729.387 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.729.389 I llama_perf_context_print:        eval time =    2269.81 ms /    32 runs   (   70.93 ms per token,    14.10 tokens per second)
0.02.729.390 I llama_perf_context_print:       total time =    2289.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.538 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.021.944 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.992 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.005 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.011 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.012 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.016 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.016 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.017 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.017 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.018 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.018 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.023 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.023 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.024 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.024 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.025 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.964 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.095 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.963 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.970 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.971 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.972 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.973 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.973 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.974 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.977 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.977 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.978 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.978 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.980 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.983 I llama_model_loader: - type  f32:   37 tensors
0.00.133.986 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.793 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.468 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.213 I llm_load_vocab: special tokens cache size = 5
0.00.236.424 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.437 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.438 I llm_load_print_meta: arch             = gemma
0.00.236.438 I llm_load_print_meta: vocab type       = SPM
0.00.236.439 I llm_load_print_meta: n_vocab          = 256000
0.00.236.440 I llm_load_print_meta: n_merges         = 0
0.00.236.440 I llm_load_print_meta: vocab_only       = 0
0.00.236.441 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.441 I llm_load_print_meta: n_embd           = 2048
0.00.236.442 I llm_load_print_meta: n_layer          = 18
0.00.236.456 I llm_load_print_meta: n_head           = 8
0.00.236.457 I llm_load_print_meta: n_head_kv        = 1
0.00.236.457 I llm_load_print_meta: n_rot            = 256
0.00.236.457 I llm_load_print_meta: n_swa            = 0
0.00.236.458 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.458 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.459 I llm_load_print_meta: n_gqa            = 8
0.00.236.460 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.461 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.461 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.463 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.463 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.463 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.463 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.464 I llm_load_print_meta: n_ff             = 16384
0.00.236.465 I llm_load_print_meta: n_expert         = 0
0.00.236.465 I llm_load_print_meta: n_expert_used    = 0
0.00.236.466 I llm_load_print_meta: causal attn      = 1
0.00.236.466 I llm_load_print_meta: pooling type     = 0
0.00.236.467 I llm_load_print_meta: rope type        = 2
0.00.236.467 I llm_load_print_meta: rope scaling     = linear
0.00.236.469 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.469 I llm_load_print_meta: freq_scale_train = 1
0.00.236.469 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.470 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.470 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.470 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.470 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.471 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.471 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.471 I llm_load_print_meta: model type       = 2B
0.00.236.472 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.473 I llm_load_print_meta: model params     = 2.51 B
0.00.236.474 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.474 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.475 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.475 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.475 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.476 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.476 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.476 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.477 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.478 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.478 I llm_load_print_meta: max token length = 93
0.00.236.502 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.307.103 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.307.112 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.312.227 I llama_new_context_with_model: n_ctx      = 8192
0.00.312.232 I llama_new_context_with_model: n_batch    = 2048
0.00.312.233 I llama_new_context_with_model: n_ubatch   = 512
0.00.312.233 I llama_new_context_with_model: flash_attn = 0
0.00.312.236 I llama_new_context_with_model: freq_base  = 10000.0
0.00.312.237 I llama_new_context_with_model: freq_scale = 1
0.00.341.974 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.341.989 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.342.089 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.967 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.342.974 I llama_new_context_with_model: graph nodes  = 601
0.00.342.975 I llama_new_context_with_model: graph splits = 1
0.00.342.976 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.780 I main: llama threadpool init, n_threads = 4
0.00.436.794 I 
0.00.436.870 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.873 I 
0.00.436.902 I sampler seed: 4212231098
0.00.436.910 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.913 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.914 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.914 I 
 increasities, and the pursuit of knowledge, wisdom, and enlightenment. [end of text]


0.01.602.071 I llama_perf_sampler_print:    sampling time =       2.43 ms /    16 runs   (    0.15 ms per token,  6592.50 tokens per second)
0.01.602.073 I llama_perf_context_print:        load time =     434.93 ms
0.01.602.074 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.602.075 I llama_perf_context_print:        eval time =    1155.97 ms /    15 runs   (   77.06 ms per token,    12.98 tokens per second)
0.01.602.076 I llama_perf_context_print:       total time =    1165.30 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.076s
user	0m26.630s
sys	0m9.454s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3830 (b5de3b74)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32117.88 ms
main:    total time = 32117.88 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.022.293 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.354 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.365 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.372 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.376 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.381 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.390 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.390 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.391 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.392 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.393 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.399 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.401 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.402 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.403 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.404 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.149 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.080 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.018 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.025 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.025 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.026 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.027 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.028 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.028 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.031 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.031 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.032 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.033 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.136.034 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.038 I llama_model_loader: - type  f32:   37 tensors
0.00.136.041 I llama_model_loader: - type q4_K:  108 tensors
0.00.136.041 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.347 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.835 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.585 I llm_load_vocab: special tokens cache size = 5
0.00.235.745 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.758 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.759 I llm_load_print_meta: arch             = gemma
0.00.235.759 I llm_load_print_meta: vocab type       = SPM
0.00.235.760 I llm_load_print_meta: n_vocab          = 256000
0.00.235.761 I llm_load_print_meta: n_merges         = 0
0.00.235.761 I llm_load_print_meta: vocab_only       = 0
0.00.235.761 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.762 I llm_load_print_meta: n_embd           = 2048
0.00.235.762 I llm_load_print_meta: n_layer          = 18
0.00.235.775 I llm_load_print_meta: n_head           = 8
0.00.235.776 I llm_load_print_meta: n_head_kv        = 1
0.00.235.776 I llm_load_print_meta: n_rot            = 256
0.00.235.777 I llm_load_print_meta: n_swa            = 0
0.00.235.777 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.777 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.778 I llm_load_print_meta: n_gqa            = 8
0.00.235.779 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.780 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.781 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.782 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.782 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.782 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.783 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.784 I llm_load_print_meta: n_ff             = 16384
0.00.235.784 I llm_load_print_meta: n_expert         = 0
0.00.235.785 I llm_load_print_meta: n_expert_used    = 0
0.00.235.785 I llm_load_print_meta: causal attn      = 1
0.00.235.785 I llm_load_print_meta: pooling type     = 0
0.00.235.786 I llm_load_print_meta: rope type        = 2
0.00.235.786 I llm_load_print_meta: rope scaling     = linear
0.00.235.788 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.788 I llm_load_print_meta: freq_scale_train = 1
0.00.235.788 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.789 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.789 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.789 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.789 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.790 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.790 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.790 I llm_load_print_meta: model type       = 2B
0.00.235.791 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.235.792 I llm_load_print_meta: model params     = 2.51 B
0.00.235.793 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.235.793 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.794 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.794 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.794 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.795 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.795 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.795 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.796 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.796 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.796 I llm_load_print_meta: max token length = 93
0.00.235.817 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.293.734 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.293.744 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.293.744 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.293.745 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.293.746 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.293.746 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.298.805 I llama_new_context_with_model: n_ctx      = 8192
0.00.298.813 I llama_new_context_with_model: n_batch    = 2048
0.00.298.813 I llama_new_context_with_model: n_ubatch   = 512
0.00.298.813 I llama_new_context_with_model: flash_attn = 0
0.00.298.817 I llama_new_context_with_model: freq_base  = 10000.0
0.00.298.818 I llama_new_context_with_model: freq_scale = 1
0.00.329.498 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.513 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.606 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.463 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.470 I llama_new_context_with_model: graph nodes  = 601
0.00.330.471 I llama_new_context_with_model: graph splits = 1
0.00.330.473 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.385 I main: llama threadpool init, n_threads = 4
0.00.412.396 I 
0.00.412.488 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.492 I 
0.00.412.525 I sampler seed: 3093949328
0.00.412.535 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.550 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.554 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.554 I 
 increamically.

I am unable to generate the requested text because it violates our content policies. [end of text]


0.01.433.916 I llama_perf_sampler_print:    sampling time =       2.96 ms /    21 runs   (    0.14 ms per token,  7089.80 tokens per second)
0.01.433.918 I llama_perf_context_print:        load time =     410.48 ms
0.01.433.919 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.433.920 I llama_perf_context_print:        eval time =    1009.62 ms /    20 runs   (   50.48 ms per token,    19.81 tokens per second)
0.01.433.921 I llama_perf_context_print:       total time =    1021.54 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3830 (b5de3b74)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32077.77 ms
main:    total time = 32077.77 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.581 I build: 3830 (b5de3b74) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.943 I main: load the model and apply lora adapter, if any
0.00.022.149 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.164 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.171 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.172 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.176 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.176 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.177 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.178 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.178 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.179 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.184 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.185 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.186 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.186 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.187 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.271 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.648 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.531 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.538 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.539 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.540 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.541 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.543 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.544 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.546 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.547 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.550 I llama_model_loader: - type  f32:   37 tensors
0.00.134.552 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.553 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.723 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.235.529 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.236.388 I llm_load_vocab: special tokens cache size = 5
0.00.255.033 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.049 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.050 I llm_load_print_meta: arch             = gemma
0.00.255.050 I llm_load_print_meta: vocab type       = SPM
0.00.255.051 I llm_load_print_meta: n_vocab          = 256000
0.00.255.052 I llm_load_print_meta: n_merges         = 0
0.00.255.052 I llm_load_print_meta: vocab_only       = 0
0.00.255.053 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.053 I llm_load_print_meta: n_embd           = 2048
0.00.255.053 I llm_load_print_meta: n_layer          = 18
0.00.255.066 I llm_load_print_meta: n_head           = 8
0.00.255.068 I llm_load_print_meta: n_head_kv        = 1
0.00.255.068 I llm_load_print_meta: n_rot            = 256
0.00.255.069 I llm_load_print_meta: n_swa            = 0
0.00.255.069 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.069 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.070 I llm_load_print_meta: n_gqa            = 8
0.00.255.071 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.072 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.073 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.075 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.075 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.076 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.076 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.077 I llm_load_print_meta: n_ff             = 16384
0.00.255.077 I llm_load_print_meta: n_expert         = 0
0.00.255.077 I llm_load_print_meta: n_expert_used    = 0
0.00.255.077 I llm_load_print_meta: causal attn      = 1
0.00.255.078 I llm_load_print_meta: pooling type     = 0
0.00.255.078 I llm_load_print_meta: rope type        = 2
0.00.255.079 I llm_load_print_meta: rope scaling     = linear
0.00.255.080 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.080 I llm_load_print_meta: freq_scale_train = 1
0.00.255.081 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.081 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.081 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.082 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.082 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.082 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.082 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.083 I llm_load_print_meta: model type       = 2B
0.00.255.084 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.255.084 I llm_load_print_meta: model params     = 2.51 B
0.00.255.085 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.255.085 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.086 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.086 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.087 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.087 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.088 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.088 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.088 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.089 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.089 I llm_load_print_meta: max token length = 93
0.00.255.106 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.313.373 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.318.667 I llama_new_context_with_model: n_ctx      = 8192
0.00.318.674 I llama_new_context_with_model: n_batch    = 2048
0.00.318.674 I llama_new_context_with_model: n_ubatch   = 512
0.00.318.675 I llama_new_context_with_model: flash_attn = 0
0.00.318.677 I llama_new_context_with_model: freq_base  = 10000.0
0.00.318.678 I llama_new_context_with_model: freq_scale = 1
0.00.349.466 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.349.482 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.349.573 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.452 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.350.460 I llama_new_context_with_model: graph nodes  = 601
0.00.350.461 I llama_new_context_with_model: graph splits = 1
0.00.350.463 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.741 I main: llama threadpool init, n_threads = 4
0.00.433.756 I 
0.00.433.853 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.856 I 
0.00.433.898 I sampler seed: 2231662457
0.00.433.907 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.910 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.910 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.910 I 
 seconally with my friend in the classroom.

The teacher asked us to write a short story, and I suggested a fantasy adventure involving a princess trapped in a

0.02.141.509 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6948.83 tokens per second)
0.02.141.511 I llama_perf_context_print:        load time =     431.78 ms
0.02.141.512 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.141.513 I llama_perf_context_print:        eval time =    1689.56 ms /    32 runs   (   52.80 ms per token,    18.94 tokens per second)
0.02.141.514 I llama_perf_context_print:       total time =    1707.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.708s
user	8m13.309s
sys	0m7.015s
