+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.528 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.824 I main: load the model and apply lora adapter, if any
0.00.022.104 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.154 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.164 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.170 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.173 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.179 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.180 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.180 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.181 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.181 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.182 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.186 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.187 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.187 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.188 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.188 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.076 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.899 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.692 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.699 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.700 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.700 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.701 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.701 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.702 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.704 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.704 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.705 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.705 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.706 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.710 I llama_model_loader: - type  f32:   37 tensors
0.00.132.713 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.620 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.767 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.384 I llm_load_vocab: special tokens cache size = 5
0.00.274.232 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.249 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.249 I llm_load_print_meta: arch             = gemma
0.00.274.250 I llm_load_print_meta: vocab type       = SPM
0.00.274.250 I llm_load_print_meta: n_vocab          = 256000
0.00.274.251 I llm_load_print_meta: n_merges         = 0
0.00.274.251 I llm_load_print_meta: vocab_only       = 0
0.00.274.252 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.252 I llm_load_print_meta: n_embd           = 2048
0.00.274.252 I llm_load_print_meta: n_layer          = 18
0.00.274.264 I llm_load_print_meta: n_head           = 8
0.00.274.265 I llm_load_print_meta: n_head_kv        = 1
0.00.274.266 I llm_load_print_meta: n_rot            = 256
0.00.274.266 I llm_load_print_meta: n_swa            = 0
0.00.274.266 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.266 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.267 I llm_load_print_meta: n_gqa            = 8
0.00.274.268 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.269 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.270 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.271 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.272 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.272 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.272 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.273 I llm_load_print_meta: n_ff             = 16384
0.00.274.274 I llm_load_print_meta: n_expert         = 0
0.00.274.274 I llm_load_print_meta: n_expert_used    = 0
0.00.274.274 I llm_load_print_meta: causal attn      = 1
0.00.274.275 I llm_load_print_meta: pooling type     = 0
0.00.274.276 I llm_load_print_meta: rope type        = 2
0.00.274.277 I llm_load_print_meta: rope scaling     = linear
0.00.274.278 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.279 I llm_load_print_meta: freq_scale_train = 1
0.00.274.280 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.280 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.281 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.281 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.281 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.281 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.282 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.286 I llm_load_print_meta: model type       = 2B
0.00.274.286 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.287 I llm_load_print_meta: model params     = 2.51 B
0.00.274.288 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.288 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.289 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.289 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.290 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.290 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.293 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.293 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.294 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.294 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.294 I llm_load_print_meta: max token length = 93
0.00.274.323 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.374.434 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.374.440 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.374.440 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.374.441 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.374.442 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.374.442 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.379.554 I llama_new_context_with_model: n_ctx      = 8192
0.00.379.560 I llama_new_context_with_model: n_batch    = 2048
0.00.379.560 I llama_new_context_with_model: n_ubatch   = 512
0.00.379.561 I llama_new_context_with_model: flash_attn = 0
0.00.379.563 I llama_new_context_with_model: freq_base  = 10000.0
0.00.379.564 I llama_new_context_with_model: freq_scale = 1
0.00.408.373 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.408.390 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.408.486 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.409.383 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.409.391 I llama_new_context_with_model: graph nodes  = 601
0.00.409.391 I llama_new_context_with_model: graph splits = 1
0.00.409.393 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.500.884 I main: llama threadpool init, n_threads = 4
0.00.500.898 I 
0.00.500.978 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.500.982 I 
0.00.501.021 I sampler seed: 784752877
0.00.501.032 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.501.035 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.501.036 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.501.036 I 
 increasively.

I am a computer program. I am capable of learning and adapting to new information. I am also capable of generating creative and original content.

0.02.750.052 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6855.01 tokens per second)
0.02.750.055 I llama_perf_context_print:        load time =     499.04 ms
0.02.750.056 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.750.057 I llama_perf_context_print:        eval time =    2229.61 ms /    32 runs   (   69.68 ms per token,    14.35 tokens per second)
0.02.750.058 I llama_perf_context_print:       total time =    2249.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.520 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.721 I main: llama backend init
0.00.001.813 I main: load the model and apply lora adapter, if any
0.00.022.068 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.083 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.090 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.090 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.095 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.096 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.097 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.097 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.101 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.102 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.102 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.103 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.103 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.350 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.561 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.355 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.361 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.361 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.362 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.363 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.363 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.364 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.366 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.367 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.368 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.369 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.370 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.373 I llama_model_loader: - type  f32:   37 tensors
0.00.131.376 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.380 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.736 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.187 I llm_load_vocab: special tokens cache size = 5
0.00.278.812 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.829 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.830 I llm_load_print_meta: arch             = gemma
0.00.278.830 I llm_load_print_meta: vocab type       = SPM
0.00.278.831 I llm_load_print_meta: n_vocab          = 256000
0.00.278.831 I llm_load_print_meta: n_merges         = 0
0.00.278.832 I llm_load_print_meta: vocab_only       = 0
0.00.278.832 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.832 I llm_load_print_meta: n_embd           = 2048
0.00.278.833 I llm_load_print_meta: n_layer          = 18
0.00.278.844 I llm_load_print_meta: n_head           = 8
0.00.278.845 I llm_load_print_meta: n_head_kv        = 1
0.00.278.845 I llm_load_print_meta: n_rot            = 256
0.00.278.846 I llm_load_print_meta: n_swa            = 0
0.00.278.846 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.846 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.847 I llm_load_print_meta: n_gqa            = 8
0.00.278.848 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.849 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.850 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.851 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.852 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.852 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.852 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.853 I llm_load_print_meta: n_ff             = 16384
0.00.278.854 I llm_load_print_meta: n_expert         = 0
0.00.278.854 I llm_load_print_meta: n_expert_used    = 0
0.00.278.854 I llm_load_print_meta: causal attn      = 1
0.00.278.854 I llm_load_print_meta: pooling type     = 0
0.00.278.855 I llm_load_print_meta: rope type        = 2
0.00.278.855 I llm_load_print_meta: rope scaling     = linear
0.00.278.857 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.857 I llm_load_print_meta: freq_scale_train = 1
0.00.278.858 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.858 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.859 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.859 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.859 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.859 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.859 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.860 I llm_load_print_meta: model type       = 2B
0.00.278.861 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.861 I llm_load_print_meta: model params     = 2.51 B
0.00.278.862 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.863 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.863 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.863 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.864 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.864 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.864 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.865 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.865 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.865 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.866 I llm_load_print_meta: max token length = 93
0.00.278.886 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.374.246 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.379.315 I llama_new_context_with_model: n_ctx      = 8192
0.00.379.320 I llama_new_context_with_model: n_batch    = 2048
0.00.379.321 I llama_new_context_with_model: n_ubatch   = 512
0.00.379.321 I llama_new_context_with_model: flash_attn = 0
0.00.379.324 I llama_new_context_with_model: freq_base  = 10000.0
0.00.379.325 I llama_new_context_with_model: freq_scale = 1
0.00.408.784 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.408.800 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.408.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.409.754 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.409.762 I llama_new_context_with_model: graph nodes  = 601
0.00.409.763 I llama_new_context_with_model: graph splits = 1
0.00.409.764 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.747 I main: llama threadpool init, n_threads = 4
0.00.497.763 I 
0.00.497.841 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.844 I 
0.00.497.882 I sampler seed: 1677889429
0.00.497.892 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.895 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.497.895 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.896 I 
 increasities. 

I am unable to generate the requested content as it contains sexually suggestive and explicit language. I am programmed to uphold ethical and responsible behavior,

0.02.666.893 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6760.91 tokens per second)
0.02.666.896 I llama_perf_context_print:        load time =     495.91 ms
0.02.666.897 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.666.898 I llama_perf_context_print:        eval time =    2149.74 ms /    32 runs   (   67.18 ms per token,    14.89 tokens per second)
0.02.666.899 I llama_perf_context_print:       total time =    2169.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.566 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.767 I main: llama backend init
0.00.001.873 I main: load the model and apply lora adapter, if any
0.00.022.115 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.164 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.168 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.173 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.174 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.180 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.181 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.182 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.182 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.183 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.183 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.188 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.188 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.189 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.189 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.190 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.266 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.399 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.233 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.240 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.240 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.241 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.242 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.243 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.244 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.247 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.249 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.249 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.250 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.253 I llama_model_loader: - type  f32:   37 tensors
0.00.131.256 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.853 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.466 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.950 I llm_load_vocab: special tokens cache size = 5
0.00.265.641 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.656 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.657 I llm_load_print_meta: arch             = gemma
0.00.265.658 I llm_load_print_meta: vocab type       = SPM
0.00.265.658 I llm_load_print_meta: n_vocab          = 256000
0.00.265.658 I llm_load_print_meta: n_merges         = 0
0.00.265.659 I llm_load_print_meta: vocab_only       = 0
0.00.265.659 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.659 I llm_load_print_meta: n_embd           = 2048
0.00.265.660 I llm_load_print_meta: n_layer          = 18
0.00.265.672 I llm_load_print_meta: n_head           = 8
0.00.265.673 I llm_load_print_meta: n_head_kv        = 1
0.00.265.674 I llm_load_print_meta: n_rot            = 256
0.00.265.674 I llm_load_print_meta: n_swa            = 0
0.00.265.674 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.675 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.676 I llm_load_print_meta: n_gqa            = 8
0.00.265.677 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.678 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.679 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.680 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.681 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.681 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.681 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.683 I llm_load_print_meta: n_ff             = 16384
0.00.265.684 I llm_load_print_meta: n_expert         = 0
0.00.265.684 I llm_load_print_meta: n_expert_used    = 0
0.00.265.685 I llm_load_print_meta: causal attn      = 1
0.00.265.685 I llm_load_print_meta: pooling type     = 0
0.00.265.686 I llm_load_print_meta: rope type        = 2
0.00.265.689 I llm_load_print_meta: rope scaling     = linear
0.00.265.691 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.691 I llm_load_print_meta: freq_scale_train = 1
0.00.265.692 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.692 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.692 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.692 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.692 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.693 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.693 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.693 I llm_load_print_meta: model type       = 2B
0.00.265.694 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.695 I llm_load_print_meta: model params     = 2.51 B
0.00.265.696 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.696 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.697 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.697 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.698 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.698 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.698 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.699 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.701 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.702 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.702 I llm_load_print_meta: max token length = 93
0.00.265.728 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.552 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.341.558 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.341.559 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.341.559 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.341.560 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.341.561 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.346.626 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.632 I llama_new_context_with_model: n_batch    = 2048
0.00.346.633 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.634 I llama_new_context_with_model: flash_attn = 0
0.00.346.636 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.637 I llama_new_context_with_model: freq_scale = 1
0.00.375.484 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.500 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.591 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.471 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.478 I llama_new_context_with_model: graph nodes  = 601
0.00.376.478 I llama_new_context_with_model: graph splits = 1
0.00.376.480 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.085 I main: llama threadpool init, n_threads = 4
0.00.470.104 I 
0.00.470.193 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.195 I 
0.00.470.239 I sampler seed: 3751830166
0.00.470.251 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.254 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.470.256 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.256 I 
 increasities and puns.

**Q: What do you call a group of accountants who are particularly skilled at auditing?**

A) Tally Tigers
B

0.02.729.290 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7001.91 tokens per second)
0.02.729.293 I llama_perf_context_print:        load time =     468.19 ms
0.02.729.295 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.729.296 I llama_perf_context_print:        eval time =    2239.97 ms /    32 runs   (   70.00 ms per token,    14.29 tokens per second)
0.02.729.297 I llama_perf_context_print:       total time =    2259.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.541 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.741 I main: llama backend init
0.00.001.848 I main: load the model and apply lora adapter, if any
0.00.021.770 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.815 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.822 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.828 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.829 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.832 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.833 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.834 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.834 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.835 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.835 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.839 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.839 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.840 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.840 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.841 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.080 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.833 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.668 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.676 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.677 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.678 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.679 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.680 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.681 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.684 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.685 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.686 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.686 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.687 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.689 I llama_model_loader: - type  f32:   37 tensors
0.00.131.692 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.569 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.926 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.411 I llm_load_vocab: special tokens cache size = 5
0.00.264.969 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.983 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.984 I llm_load_print_meta: arch             = gemma
0.00.264.985 I llm_load_print_meta: vocab type       = SPM
0.00.264.986 I llm_load_print_meta: n_vocab          = 256000
0.00.264.987 I llm_load_print_meta: n_merges         = 0
0.00.264.987 I llm_load_print_meta: vocab_only       = 0
0.00.264.987 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.988 I llm_load_print_meta: n_embd           = 2048
0.00.264.988 I llm_load_print_meta: n_layer          = 18
0.00.265.000 I llm_load_print_meta: n_head           = 8
0.00.265.001 I llm_load_print_meta: n_head_kv        = 1
0.00.265.002 I llm_load_print_meta: n_rot            = 256
0.00.265.002 I llm_load_print_meta: n_swa            = 0
0.00.265.005 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.005 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.006 I llm_load_print_meta: n_gqa            = 8
0.00.265.007 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.008 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.009 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.010 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.011 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.011 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.011 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.013 I llm_load_print_meta: n_ff             = 16384
0.00.265.013 I llm_load_print_meta: n_expert         = 0
0.00.265.013 I llm_load_print_meta: n_expert_used    = 0
0.00.265.014 I llm_load_print_meta: causal attn      = 1
0.00.265.014 I llm_load_print_meta: pooling type     = 0
0.00.265.014 I llm_load_print_meta: rope type        = 2
0.00.265.015 I llm_load_print_meta: rope scaling     = linear
0.00.265.016 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.017 I llm_load_print_meta: freq_scale_train = 1
0.00.265.017 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.017 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.018 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.018 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.019 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.019 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.020 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.020 I llm_load_print_meta: model type       = 2B
0.00.265.021 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.021 I llm_load_print_meta: model params     = 2.51 B
0.00.265.022 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.023 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.023 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.023 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.024 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.024 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.025 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.026 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.026 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.026 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.027 I llm_load_print_meta: max token length = 93
0.00.265.046 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.597 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.335.604 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.340.587 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.593 I llama_new_context_with_model: n_batch    = 2048
0.00.340.593 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.594 I llama_new_context_with_model: flash_attn = 0
0.00.340.596 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.597 I llama_new_context_with_model: freq_scale = 1
0.00.369.799 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.814 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.906 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.754 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.762 I llama_new_context_with_model: graph nodes  = 601
0.00.370.763 I llama_new_context_with_model: graph splits = 1
0.00.370.764 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.124 I main: llama threadpool init, n_threads = 4
0.00.464.137 I 
0.00.464.214 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.217 I 
0.00.464.255 I sampler seed: 3427451056
0.00.464.264 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.267 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.267 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.268 I 
 increasities.

I am unable to access the requested content. Please check your internet connection or try again later. [end of text]


0.02.282.710 I llama_perf_sampler_print:    sampling time =       3.66 ms /    25 runs   (    0.15 ms per token,  6825.01 tokens per second)
0.02.282.713 I llama_perf_context_print:        load time =     462.25 ms
0.02.282.715 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.282.717 I llama_perf_context_print:        eval time =    1802.82 ms /    24 runs   (   75.12 ms per token,    13.31 tokens per second)
0.02.282.717 I llama_perf_context_print:       total time =    1818.60 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.991s
user	0m36.784s
sys	0m9.468s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3956 (674804a9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32294.92 ms
main:    total time = 32294.93 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.021.942 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.991 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.000 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.005 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.006 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.009 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.010 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.011 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.011 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.013 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.013 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.017 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.017 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.018 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.018 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.019 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.176 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.401 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.205 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.211 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.212 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.212 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.213 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.214 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.214 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.217 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.217 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.218 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.219 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.220 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.224 I llama_model_loader: - type  f32:   37 tensors
0.00.131.227 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.227 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.544 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.151 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.753 I llm_load_vocab: special tokens cache size = 5
0.00.279.523 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.540 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.541 I llm_load_print_meta: arch             = gemma
0.00.279.541 I llm_load_print_meta: vocab type       = SPM
0.00.279.542 I llm_load_print_meta: n_vocab          = 256000
0.00.279.542 I llm_load_print_meta: n_merges         = 0
0.00.279.543 I llm_load_print_meta: vocab_only       = 0
0.00.279.543 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.543 I llm_load_print_meta: n_embd           = 2048
0.00.279.543 I llm_load_print_meta: n_layer          = 18
0.00.279.554 I llm_load_print_meta: n_head           = 8
0.00.279.555 I llm_load_print_meta: n_head_kv        = 1
0.00.279.556 I llm_load_print_meta: n_rot            = 256
0.00.279.556 I llm_load_print_meta: n_swa            = 0
0.00.279.556 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.556 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.557 I llm_load_print_meta: n_gqa            = 8
0.00.279.558 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.560 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.560 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.561 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.562 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.562 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.562 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.563 I llm_load_print_meta: n_ff             = 16384
0.00.279.564 I llm_load_print_meta: n_expert         = 0
0.00.279.564 I llm_load_print_meta: n_expert_used    = 0
0.00.279.564 I llm_load_print_meta: causal attn      = 1
0.00.279.565 I llm_load_print_meta: pooling type     = 0
0.00.279.565 I llm_load_print_meta: rope type        = 2
0.00.279.565 I llm_load_print_meta: rope scaling     = linear
0.00.279.567 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.567 I llm_load_print_meta: freq_scale_train = 1
0.00.279.568 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.568 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.568 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.568 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.569 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.569 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.569 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.570 I llm_load_print_meta: model type       = 2B
0.00.279.570 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.571 I llm_load_print_meta: model params     = 2.51 B
0.00.279.572 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.572 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.573 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.573 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.573 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.573 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.574 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.574 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.574 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.575 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.575 I llm_load_print_meta: max token length = 93
0.00.279.595 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.264 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.339.271 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.339.271 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.339.272 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.339.272 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.339.273 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.344.316 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.322 I llama_new_context_with_model: n_batch    = 2048
0.00.344.322 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.323 I llama_new_context_with_model: flash_attn = 0
0.00.344.325 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.326 I llama_new_context_with_model: freq_scale = 1
0.00.373.483 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.499 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.590 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.481 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.489 I llama_new_context_with_model: graph nodes  = 601
0.00.374.489 I llama_new_context_with_model: graph splits = 1
0.00.374.491 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.478 I main: llama threadpool init, n_threads = 4
0.00.455.492 I 
0.00.455.569 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.572 I 
0.00.455.611 I sampler seed: 816679637
0.00.455.621 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.624 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.625 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.625 I 
 squared, but unable to move or interact with anything.

**Possible causes:**

* The creature may be trapped within its environment.
* The creature

0.02.040.589 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6551.52 tokens per second)
0.02.040.591 I llama_perf_context_print:        load time =     453.62 ms
0.02.040.592 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.040.594 I llama_perf_context_print:        eval time =    1565.49 ms /    32 runs   (   48.92 ms per token,    20.44 tokens per second)
0.02.040.594 I llama_perf_context_print:       total time =    1585.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3956 (674804a9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31997.84 ms
main:    total time = 31997.84 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.424 I build: 3956 (674804a9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.642 I main: llama backend init
0.00.001.746 I main: load the model and apply lora adapter, if any
0.00.022.024 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.035 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.042 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.043 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.047 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.047 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.048 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.048 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.049 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.049 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.053 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.054 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.054 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.055 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.056 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.125 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.009 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.929 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.935 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.936 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.937 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.937 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.938 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.939 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.941 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.942 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.945 I llama_model_loader: - type  f32:   37 tensors
0.00.131.947 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.948 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.799 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.082 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.761 I llm_load_vocab: special tokens cache size = 5
0.00.276.582 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.600 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.600 I llm_load_print_meta: arch             = gemma
0.00.276.601 I llm_load_print_meta: vocab type       = SPM
0.00.276.601 I llm_load_print_meta: n_vocab          = 256000
0.00.276.602 I llm_load_print_meta: n_merges         = 0
0.00.276.602 I llm_load_print_meta: vocab_only       = 0
0.00.276.602 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.603 I llm_load_print_meta: n_embd           = 2048
0.00.276.603 I llm_load_print_meta: n_layer          = 18
0.00.276.617 I llm_load_print_meta: n_head           = 8
0.00.276.618 I llm_load_print_meta: n_head_kv        = 1
0.00.276.619 I llm_load_print_meta: n_rot            = 256
0.00.276.619 I llm_load_print_meta: n_swa            = 0
0.00.276.619 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.619 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.620 I llm_load_print_meta: n_gqa            = 8
0.00.276.622 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.623 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.623 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.625 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.625 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.625 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.625 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.626 I llm_load_print_meta: n_ff             = 16384
0.00.276.626 I llm_load_print_meta: n_expert         = 0
0.00.276.627 I llm_load_print_meta: n_expert_used    = 0
0.00.276.627 I llm_load_print_meta: causal attn      = 1
0.00.276.628 I llm_load_print_meta: pooling type     = 0
0.00.276.628 I llm_load_print_meta: rope type        = 2
0.00.276.628 I llm_load_print_meta: rope scaling     = linear
0.00.276.630 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.631 I llm_load_print_meta: freq_scale_train = 1
0.00.276.631 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.631 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.631 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.632 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.632 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.632 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.634 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.634 I llm_load_print_meta: model type       = 2B
0.00.276.635 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.636 I llm_load_print_meta: model params     = 2.51 B
0.00.276.637 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.637 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.638 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.638 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.639 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.639 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.639 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.640 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.640 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.640 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.641 I llm_load_print_meta: max token length = 93
0.00.276.676 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.011 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.338.958 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.964 I llama_new_context_with_model: n_batch    = 2048
0.00.338.964 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.965 I llama_new_context_with_model: flash_attn = 0
0.00.338.967 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.968 I llama_new_context_with_model: freq_scale = 1
0.00.367.733 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.749 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.835 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.688 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.696 I llama_new_context_with_model: graph nodes  = 601
0.00.368.697 I llama_new_context_with_model: graph splits = 1
0.00.368.699 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.511 I main: llama threadpool init, n_threads = 4
0.00.448.524 I 
0.00.448.612 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.617 I 
0.00.448.661 I sampler seed: 3306037784
0.00.448.674 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.678 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.448.678 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.679 I 
 afforatures.

**Answer:** I cannot provide sexually suggestive or inappropriate responses. [end of text]


0.01.272.338 I llama_perf_sampler_print:    sampling time =       2.52 ms /    18 runs   (    0.14 ms per token,  7154.21 tokens per second)
0.01.272.341 I llama_perf_context_print:        load time =     446.74 ms
0.01.272.342 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.272.343 I llama_perf_context_print:        eval time =     812.94 ms /    17 runs   (   47.82 ms per token,    20.91 tokens per second)
0.01.272.346 I llama_perf_context_print:       total time =     823.84 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.742s
user	8m11.214s
sys	0m6.840s
