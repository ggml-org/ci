+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.634 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.782 I main: load the model and apply lora adapter, if any
0.00.024.714 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.898 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.982 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.992 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.994 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.997 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.998 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.999 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.001 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.003 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.004 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.011 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.011 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.024 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.028 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.029 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.345 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.721 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.035 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.044 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.045 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.046 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.046 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.047 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.048 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.051 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.052 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.053 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.054 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.196.055 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.062 I llama_model_loader: - type  f32:   37 tensors
0.00.196.066 I llama_model_loader: - type q8_0:  127 tensors
0.00.473.576 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.496.795 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.497.813 I llm_load_vocab: special tokens cache size = 5
0.00.555.814 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.555.868 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.555.869 I llm_load_print_meta: arch             = gemma
0.00.555.870 I llm_load_print_meta: vocab type       = SPM
0.00.555.871 I llm_load_print_meta: n_vocab          = 256000
0.00.555.873 I llm_load_print_meta: n_merges         = 0
0.00.555.874 I llm_load_print_meta: vocab_only       = 0
0.00.555.874 I llm_load_print_meta: n_ctx_train      = 8192
0.00.555.875 I llm_load_print_meta: n_embd           = 2048
0.00.555.875 I llm_load_print_meta: n_layer          = 18
0.00.555.908 I llm_load_print_meta: n_head           = 8
0.00.555.915 I llm_load_print_meta: n_head_kv        = 1
0.00.555.916 I llm_load_print_meta: n_rot            = 256
0.00.555.916 I llm_load_print_meta: n_swa            = 0
0.00.555.917 I llm_load_print_meta: n_embd_head_k    = 256
0.00.555.917 I llm_load_print_meta: n_embd_head_v    = 256
0.00.555.923 I llm_load_print_meta: n_gqa            = 8
0.00.555.928 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.555.933 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.555.934 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.555.935 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.555.936 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.555.936 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.555.937 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.555.941 I llm_load_print_meta: n_ff             = 16384
0.00.555.942 I llm_load_print_meta: n_expert         = 0
0.00.555.942 I llm_load_print_meta: n_expert_used    = 0
0.00.555.942 I llm_load_print_meta: causal attn      = 1
0.00.555.943 I llm_load_print_meta: pooling type     = 0
0.00.555.944 I llm_load_print_meta: rope type        = 2
0.00.555.944 I llm_load_print_meta: rope scaling     = linear
0.00.555.946 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.555.947 I llm_load_print_meta: freq_scale_train = 1
0.00.555.947 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.555.957 I llm_load_print_meta: rope_finetuned   = unknown
0.00.555.958 I llm_load_print_meta: ssm_d_conv       = 0
0.00.555.959 I llm_load_print_meta: ssm_d_inner      = 0
0.00.555.959 I llm_load_print_meta: ssm_d_state      = 0
0.00.555.960 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.555.960 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.555.961 I llm_load_print_meta: model type       = 2B
0.00.555.962 I llm_load_print_meta: model ftype      = Q8_0
0.00.555.963 I llm_load_print_meta: model params     = 2.51 B
0.00.555.976 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.555.984 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.555.985 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.555.986 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.555.986 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.555.987 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.555.988 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.555.989 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.555.994 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.555.996 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.555.996 I llm_load_print_meta: max token length = 93
0.00.556.170 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.658.768 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.658.777 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.658.778 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.658.779 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.658.779 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.658.780 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.664.585 I llama_new_context_with_model: n_ctx      = 8192
0.00.664.592 I llama_new_context_with_model: n_batch    = 2048
0.00.664.592 I llama_new_context_with_model: n_ubatch   = 512
0.00.664.593 I llama_new_context_with_model: flash_attn = 0
0.00.664.595 I llama_new_context_with_model: freq_base  = 10000.0
0.00.664.596 I llama_new_context_with_model: freq_scale = 1
0.00.694.529 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.694.579 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.694.696 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.696.059 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.696.066 I llama_new_context_with_model: graph nodes  = 601
0.00.696.066 I llama_new_context_with_model: graph splits = 1
0.00.696.083 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.311.728 I main: llama threadpool init, n_threads = 4
0.01.311.740 I 
0.01.311.831 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.311.835 I 
0.01.311.997 I sampler seed: 3714631969
0.01.312.009 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.312.014 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.312.015 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.312.015 I 
 increadibly! [end of text]


0.03.001.020 I llama_perf_sampler_print:    sampling time =       6.23 ms /     5 runs   (    1.25 ms per token,   802.31 tokens per second)
0.03.001.022 I llama_perf_context_print:        load time =    1308.86 ms
0.03.001.024 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.001.039 I llama_perf_context_print:        eval time =    1677.41 ms /     4 runs   (  419.35 ms per token,     2.38 tokens per second)
0.03.001.040 I llama_perf_context_print:       total time =    1689.30 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.640 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.834 I main: llama backend init
0.00.002.781 I main: load the model and apply lora adapter, if any
0.00.024.909 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.999 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.013 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.014 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.018 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.018 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.019 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.020 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.021 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.023 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.029 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.030 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.031 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.031 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.032 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.464 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.554 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.968 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.975 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.976 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.977 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.978 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.979 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.979 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.982 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.983 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.984 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.985 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.194.986 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.993 I llama_model_loader: - type  f32:   37 tensors
0.00.194.996 I llama_model_loader: - type q8_0:  127 tensors
0.00.487.528 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.512.629 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.740 I llm_load_vocab: special tokens cache size = 5
0.00.579.034 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.579.093 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.579.097 I llm_load_print_meta: arch             = gemma
0.00.579.098 I llm_load_print_meta: vocab type       = SPM
0.00.579.099 I llm_load_print_meta: n_vocab          = 256000
0.00.579.101 I llm_load_print_meta: n_merges         = 0
0.00.579.102 I llm_load_print_meta: vocab_only       = 0
0.00.579.102 I llm_load_print_meta: n_ctx_train      = 8192
0.00.579.103 I llm_load_print_meta: n_embd           = 2048
0.00.579.103 I llm_load_print_meta: n_layer          = 18
0.00.579.139 I llm_load_print_meta: n_head           = 8
0.00.579.148 I llm_load_print_meta: n_head_kv        = 1
0.00.579.149 I llm_load_print_meta: n_rot            = 256
0.00.579.150 I llm_load_print_meta: n_swa            = 0
0.00.579.150 I llm_load_print_meta: n_embd_head_k    = 256
0.00.579.150 I llm_load_print_meta: n_embd_head_v    = 256
0.00.579.156 I llm_load_print_meta: n_gqa            = 8
0.00.579.162 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.579.168 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.579.170 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.579.171 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.579.172 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.579.172 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.579.183 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.579.188 I llm_load_print_meta: n_ff             = 16384
0.00.579.190 I llm_load_print_meta: n_expert         = 0
0.00.579.190 I llm_load_print_meta: n_expert_used    = 0
0.00.579.190 I llm_load_print_meta: causal attn      = 1
0.00.579.191 I llm_load_print_meta: pooling type     = 0
0.00.579.191 I llm_load_print_meta: rope type        = 2
0.00.579.192 I llm_load_print_meta: rope scaling     = linear
0.00.579.193 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.579.193 I llm_load_print_meta: freq_scale_train = 1
0.00.579.194 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.579.194 I llm_load_print_meta: rope_finetuned   = unknown
0.00.579.195 I llm_load_print_meta: ssm_d_conv       = 0
0.00.579.196 I llm_load_print_meta: ssm_d_inner      = 0
0.00.579.196 I llm_load_print_meta: ssm_d_state      = 0
0.00.579.196 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.579.197 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.579.198 I llm_load_print_meta: model type       = 2B
0.00.579.199 I llm_load_print_meta: model ftype      = Q8_0
0.00.579.200 I llm_load_print_meta: model params     = 2.51 B
0.00.579.201 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.579.201 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.579.202 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.579.203 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.579.203 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.579.204 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.579.204 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.579.207 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.579.213 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.579.215 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.579.216 I llm_load_print_meta: max token length = 93
0.00.579.395 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.674.856 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.680.568 I llama_new_context_with_model: n_ctx      = 8192
0.00.680.577 I llama_new_context_with_model: n_batch    = 2048
0.00.680.578 I llama_new_context_with_model: n_ubatch   = 512
0.00.680.578 I llama_new_context_with_model: flash_attn = 0
0.00.680.581 I llama_new_context_with_model: freq_base  = 10000.0
0.00.680.582 I llama_new_context_with_model: freq_scale = 1
0.00.712.206 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.712.251 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.712.363 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.713.802 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.713.809 I llama_new_context_with_model: graph nodes  = 601
0.00.713.810 I llama_new_context_with_model: graph splits = 1
0.00.713.826 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.327.991 I main: llama threadpool init, n_threads = 4
0.01.328.001 I 
0.01.328.095 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.328.099 I 
0.01.328.261 I sampler seed: 1996673552
0.01.328.272 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.328.278 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.328.279 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.328.279 I 
 increably. [end of text]


0.03.020.325 I llama_perf_sampler_print:    sampling time =       6.22 ms /     5 runs   (    1.24 ms per token,   803.60 tokens per second)
0.03.020.328 I llama_perf_context_print:        load time =    1325.13 ms
0.03.020.330 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.020.332 I llama_perf_context_print:        eval time =    1680.51 ms /     4 runs   (  420.13 ms per token,     2.38 tokens per second)
0.03.020.333 I llama_perf_context_print:       total time =    1692.35 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.617 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.753 I main: load the model and apply lora adapter, if any
0.00.024.692 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.880 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.968 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.979 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.988 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.989 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.989 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.996 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.997 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.998 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.998 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.999 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.465 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.158 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.532 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.539 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.540 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.541 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.542 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.543 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.544 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.548 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.549 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.549 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.550 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.196.551 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.559 I llama_model_loader: - type  f32:   37 tensors
0.00.196.563 I llama_model_loader: - type q8_0:  127 tensors
0.00.485.051 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.509.724 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.775 I llm_load_vocab: special tokens cache size = 5
0.00.568.722 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.568.780 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.568.781 I llm_load_print_meta: arch             = gemma
0.00.568.782 I llm_load_print_meta: vocab type       = SPM
0.00.568.783 I llm_load_print_meta: n_vocab          = 256000
0.00.568.785 I llm_load_print_meta: n_merges         = 0
0.00.568.786 I llm_load_print_meta: vocab_only       = 0
0.00.568.786 I llm_load_print_meta: n_ctx_train      = 8192
0.00.568.787 I llm_load_print_meta: n_embd           = 2048
0.00.568.787 I llm_load_print_meta: n_layer          = 18
0.00.568.821 I llm_load_print_meta: n_head           = 8
0.00.568.828 I llm_load_print_meta: n_head_kv        = 1
0.00.568.828 I llm_load_print_meta: n_rot            = 256
0.00.568.829 I llm_load_print_meta: n_swa            = 0
0.00.568.829 I llm_load_print_meta: n_embd_head_k    = 256
0.00.568.829 I llm_load_print_meta: n_embd_head_v    = 256
0.00.568.835 I llm_load_print_meta: n_gqa            = 8
0.00.568.839 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.568.845 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.568.846 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.568.847 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.568.848 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.568.848 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.568.849 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.568.854 I llm_load_print_meta: n_ff             = 16384
0.00.568.855 I llm_load_print_meta: n_expert         = 0
0.00.568.855 I llm_load_print_meta: n_expert_used    = 0
0.00.568.855 I llm_load_print_meta: causal attn      = 1
0.00.568.855 I llm_load_print_meta: pooling type     = 0
0.00.568.856 I llm_load_print_meta: rope type        = 2
0.00.568.856 I llm_load_print_meta: rope scaling     = linear
0.00.568.857 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.568.858 I llm_load_print_meta: freq_scale_train = 1
0.00.568.859 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.568.859 I llm_load_print_meta: rope_finetuned   = unknown
0.00.568.859 I llm_load_print_meta: ssm_d_conv       = 0
0.00.568.860 I llm_load_print_meta: ssm_d_inner      = 0
0.00.568.860 I llm_load_print_meta: ssm_d_state      = 0
0.00.568.860 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.568.861 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.568.861 I llm_load_print_meta: model type       = 2B
0.00.568.862 I llm_load_print_meta: model ftype      = Q8_0
0.00.568.863 I llm_load_print_meta: model params     = 2.51 B
0.00.568.864 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.568.864 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.568.865 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.568.865 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.568.865 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.568.866 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.568.866 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.568.867 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.568.873 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.568.875 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.568.875 I llm_load_print_meta: max token length = 93
0.00.569.050 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.646.873 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.646.884 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.646.885 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.646.885 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.646.886 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.646.887 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.652.774 I llama_new_context_with_model: n_ctx      = 8192
0.00.652.782 I llama_new_context_with_model: n_batch    = 2048
0.00.652.783 I llama_new_context_with_model: n_ubatch   = 512
0.00.652.783 I llama_new_context_with_model: flash_attn = 0
0.00.652.787 I llama_new_context_with_model: freq_base  = 10000.0
0.00.652.787 I llama_new_context_with_model: freq_scale = 1
0.00.683.290 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.683.331 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.683.442 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.684.819 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.684.825 I llama_new_context_with_model: graph nodes  = 601
0.00.684.825 I llama_new_context_with_model: graph splits = 1
0.00.684.840 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.297.988 I main: llama threadpool init, n_threads = 4
0.01.298.001 I 
0.01.298.092 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.298.096 I 
0.01.298.253 I sampler seed: 4208534150
0.01.298.263 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.298.267 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.298.268 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.298.268 I 
 increasels, a legendary creature of the sea.

**Description:**

* A massive serpent with a serpentine body, adorned with iridescent scales.
* Two

0.14.928.672 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.55 tokens per second)
0.14.928.676 I llama_perf_context_print:        load time =    1295.15 ms
0.14.928.677 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.928.691 I llama_perf_context_print:        eval time =   13548.58 ms /    32 runs   (  423.39 ms per token,     2.36 tokens per second)
0.14.928.692 I llama_perf_context_print:       total time =   13630.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.667 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.860 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.025.445 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.624 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.710 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.721 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.723 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.727 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.728 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.729 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.731 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.732 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.733 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.739 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.740 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.741 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.741 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.742 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.460 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.111 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.609 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.617 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.618 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.619 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.620 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.621 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.622 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.625 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.626 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.647 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.650 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.196.651 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.665 I llama_model_loader: - type  f32:   37 tensors
0.00.196.670 I llama_model_loader: - type q8_0:  127 tensors
0.00.483.247 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.512.157 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.305 I llm_load_vocab: special tokens cache size = 5
0.00.571.517 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.571.581 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.571.582 I llm_load_print_meta: arch             = gemma
0.00.571.582 I llm_load_print_meta: vocab type       = SPM
0.00.571.583 I llm_load_print_meta: n_vocab          = 256000
0.00.571.586 I llm_load_print_meta: n_merges         = 0
0.00.571.587 I llm_load_print_meta: vocab_only       = 0
0.00.571.587 I llm_load_print_meta: n_ctx_train      = 8192
0.00.571.587 I llm_load_print_meta: n_embd           = 2048
0.00.571.588 I llm_load_print_meta: n_layer          = 18
0.00.571.621 I llm_load_print_meta: n_head           = 8
0.00.571.627 I llm_load_print_meta: n_head_kv        = 1
0.00.571.628 I llm_load_print_meta: n_rot            = 256
0.00.571.628 I llm_load_print_meta: n_swa            = 0
0.00.571.628 I llm_load_print_meta: n_embd_head_k    = 256
0.00.571.629 I llm_load_print_meta: n_embd_head_v    = 256
0.00.571.633 I llm_load_print_meta: n_gqa            = 8
0.00.571.650 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.571.656 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.571.657 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.571.658 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.571.659 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.571.659 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.571.660 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.571.664 I llm_load_print_meta: n_ff             = 16384
0.00.571.665 I llm_load_print_meta: n_expert         = 0
0.00.571.665 I llm_load_print_meta: n_expert_used    = 0
0.00.571.666 I llm_load_print_meta: causal attn      = 1
0.00.571.666 I llm_load_print_meta: pooling type     = 0
0.00.571.671 I llm_load_print_meta: rope type        = 2
0.00.571.672 I llm_load_print_meta: rope scaling     = linear
0.00.571.673 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.571.674 I llm_load_print_meta: freq_scale_train = 1
0.00.571.674 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.571.674 I llm_load_print_meta: rope_finetuned   = unknown
0.00.571.675 I llm_load_print_meta: ssm_d_conv       = 0
0.00.571.675 I llm_load_print_meta: ssm_d_inner      = 0
0.00.571.675 I llm_load_print_meta: ssm_d_state      = 0
0.00.571.676 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.571.679 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.571.680 I llm_load_print_meta: model type       = 2B
0.00.571.681 I llm_load_print_meta: model ftype      = Q8_0
0.00.571.681 I llm_load_print_meta: model params     = 2.51 B
0.00.571.682 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.571.682 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.571.683 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.571.683 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.571.683 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.571.684 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.571.684 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.571.685 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.571.690 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.571.692 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.571.692 I llm_load_print_meta: max token length = 93
0.00.571.868 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.642.938 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.642.950 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.648.521 I llama_new_context_with_model: n_ctx      = 8192
0.00.648.528 I llama_new_context_with_model: n_batch    = 2048
0.00.648.528 I llama_new_context_with_model: n_ubatch   = 512
0.00.648.529 I llama_new_context_with_model: flash_attn = 0
0.00.648.532 I llama_new_context_with_model: freq_base  = 10000.0
0.00.648.533 I llama_new_context_with_model: freq_scale = 1
0.00.678.325 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.678.369 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.678.477 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.679.886 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.679.893 I llama_new_context_with_model: graph nodes  = 601
0.00.679.893 I llama_new_context_with_model: graph splits = 1
0.00.679.909 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.312.356 I main: llama threadpool init, n_threads = 4
0.01.312.368 I 
0.01.312.475 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.312.479 I 
0.01.312.640 I sampler seed: 812452223
0.01.312.651 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.312.655 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.312.656 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.312.657 I 
 increadibly high-quality, bespoke design and development of your software solution.

**Our Commitment:**

* **Understanding your needs:** We will conduct thorough research

0.14.867.282 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   671.91 tokens per second)
0.14.867.311 I llama_perf_context_print:        load time =    1309.48 ms
0.14.867.314 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.867.319 I llama_perf_context_print:        eval time =   13473.11 ms /    32 runs   (  421.03 ms per token,     2.38 tokens per second)
0.14.867.320 I llama_perf_context_print:       total time =   13554.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m45.704s
user	2m14.832s
sys	0m9.338s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3836 (73984270)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199413.86 ms
main:    total time = 199413.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.660 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.857 I main: llama backend init
0.00.002.831 I main: load the model and apply lora adapter, if any
0.00.024.836 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.018 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.107 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.119 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.120 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.125 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.127 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.128 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.129 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.131 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.132 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.138 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.146 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.151 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.152 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.154 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.303 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.312 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.668 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.675 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.676 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.677 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.677 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.678 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.679 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.682 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.683 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.683 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.684 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.195.685 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.693 I llama_model_loader: - type  f32:   37 tensors
0.00.195.696 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.697 I llama_model_loader: - type q6_K:   19 tensors
0.00.485.316 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.895 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.948 I llm_load_vocab: special tokens cache size = 5
0.00.570.668 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.570.731 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.570.732 I llm_load_print_meta: arch             = gemma
0.00.570.733 I llm_load_print_meta: vocab type       = SPM
0.00.570.734 I llm_load_print_meta: n_vocab          = 256000
0.00.570.736 I llm_load_print_meta: n_merges         = 0
0.00.570.737 I llm_load_print_meta: vocab_only       = 0
0.00.570.737 I llm_load_print_meta: n_ctx_train      = 8192
0.00.570.738 I llm_load_print_meta: n_embd           = 2048
0.00.570.738 I llm_load_print_meta: n_layer          = 18
0.00.570.772 I llm_load_print_meta: n_head           = 8
0.00.570.779 I llm_load_print_meta: n_head_kv        = 1
0.00.570.780 I llm_load_print_meta: n_rot            = 256
0.00.570.780 I llm_load_print_meta: n_swa            = 0
0.00.570.780 I llm_load_print_meta: n_embd_head_k    = 256
0.00.570.781 I llm_load_print_meta: n_embd_head_v    = 256
0.00.570.786 I llm_load_print_meta: n_gqa            = 8
0.00.570.790 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.570.796 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.570.797 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.570.799 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.570.799 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.570.800 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.570.800 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.570.805 I llm_load_print_meta: n_ff             = 16384
0.00.570.805 I llm_load_print_meta: n_expert         = 0
0.00.570.805 I llm_load_print_meta: n_expert_used    = 0
0.00.570.806 I llm_load_print_meta: causal attn      = 1
0.00.570.806 I llm_load_print_meta: pooling type     = 0
0.00.570.806 I llm_load_print_meta: rope type        = 2
0.00.570.807 I llm_load_print_meta: rope scaling     = linear
0.00.570.808 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.570.809 I llm_load_print_meta: freq_scale_train = 1
0.00.570.809 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.570.810 I llm_load_print_meta: rope_finetuned   = unknown
0.00.570.810 I llm_load_print_meta: ssm_d_conv       = 0
0.00.570.810 I llm_load_print_meta: ssm_d_inner      = 0
0.00.570.810 I llm_load_print_meta: ssm_d_state      = 0
0.00.570.811 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.570.811 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.570.811 I llm_load_print_meta: model type       = 2B
0.00.570.812 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.570.813 I llm_load_print_meta: model params     = 2.51 B
0.00.570.813 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.570.814 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.570.814 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.570.815 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.570.815 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.570.815 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.570.816 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.570.816 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.570.822 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.570.824 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.570.824 I llm_load_print_meta: max token length = 93
0.00.570.995 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.630.965 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.630.972 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.630.973 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.630.974 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.630.974 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.630.975 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.636.484 I llama_new_context_with_model: n_ctx      = 8192
0.00.636.492 I llama_new_context_with_model: n_batch    = 2048
0.00.636.492 I llama_new_context_with_model: n_ubatch   = 512
0.00.636.493 I llama_new_context_with_model: flash_attn = 0
0.00.636.496 I llama_new_context_with_model: freq_base  = 10000.0
0.00.636.497 I llama_new_context_with_model: freq_scale = 1
0.00.667.258 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.667.297 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.667.411 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.668.791 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.668.797 I llama_new_context_with_model: graph nodes  = 601
0.00.668.797 I llama_new_context_with_model: graph splits = 1
0.00.668.812 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.248.781 I main: llama threadpool init, n_threads = 4
0.01.248.792 I 
0.01.248.884 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.248.885 I 
0.01.249.046 I sampler seed: 4026977902
0.01.249.057 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.249.062 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.249.062 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.249.062 I 
 increamically!

I am unable to generate the requested response as it contains inappropriate and potentially harmful language. [end of text]


0.08.745.494 I llama_perf_sampler_print:    sampling time =      33.71 ms /    23 runs   (    1.47 ms per token,   682.21 tokens per second)
0.08.745.498 I llama_perf_context_print:        load time =    1245.86 ms
0.08.745.499 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.745.501 I llama_perf_context_print:        eval time =    7440.31 ms /    22 runs   (  338.20 ms per token,     2.96 tokens per second)
0.08.745.501 I llama_perf_context_print:       total time =    7496.72 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3836 (73984270)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199414.03 ms
main:    total time = 199414.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.628 I build: 3836 (73984270) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.692 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.804 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.820 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.821 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.825 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.827 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.828 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.829 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.830 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.831 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.839 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.842 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.843 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.846 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.848 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.283 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.940 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.351 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.359 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.360 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.361 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.362 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.363 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.364 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.367 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.368 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.376 I llama_model_loader: - type  f32:   37 tensors
0.00.195.381 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.381 I llama_model_loader: - type q6_K:   19 tensors
0.00.482.376 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.506.454 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.507.460 I llm_load_vocab: special tokens cache size = 5
0.00.565.358 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.565.423 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.565.424 I llm_load_print_meta: arch             = gemma
0.00.565.425 I llm_load_print_meta: vocab type       = SPM
0.00.565.425 I llm_load_print_meta: n_vocab          = 256000
0.00.565.428 I llm_load_print_meta: n_merges         = 0
0.00.565.428 I llm_load_print_meta: vocab_only       = 0
0.00.565.429 I llm_load_print_meta: n_ctx_train      = 8192
0.00.565.429 I llm_load_print_meta: n_embd           = 2048
0.00.565.429 I llm_load_print_meta: n_layer          = 18
0.00.565.463 I llm_load_print_meta: n_head           = 8
0.00.565.470 I llm_load_print_meta: n_head_kv        = 1
0.00.565.470 I llm_load_print_meta: n_rot            = 256
0.00.565.471 I llm_load_print_meta: n_swa            = 0
0.00.565.471 I llm_load_print_meta: n_embd_head_k    = 256
0.00.565.471 I llm_load_print_meta: n_embd_head_v    = 256
0.00.565.477 I llm_load_print_meta: n_gqa            = 8
0.00.565.502 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.565.509 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.565.510 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.565.512 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.565.520 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.565.522 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.565.522 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.565.527 I llm_load_print_meta: n_ff             = 16384
0.00.565.528 I llm_load_print_meta: n_expert         = 0
0.00.565.528 I llm_load_print_meta: n_expert_used    = 0
0.00.565.529 I llm_load_print_meta: causal attn      = 1
0.00.565.530 I llm_load_print_meta: pooling type     = 0
0.00.565.530 I llm_load_print_meta: rope type        = 2
0.00.565.531 I llm_load_print_meta: rope scaling     = linear
0.00.565.532 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.565.533 I llm_load_print_meta: freq_scale_train = 1
0.00.565.533 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.565.534 I llm_load_print_meta: rope_finetuned   = unknown
0.00.565.534 I llm_load_print_meta: ssm_d_conv       = 0
0.00.565.535 I llm_load_print_meta: ssm_d_inner      = 0
0.00.565.535 I llm_load_print_meta: ssm_d_state      = 0
0.00.565.535 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.565.536 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.565.537 I llm_load_print_meta: model type       = 2B
0.00.565.545 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.565.553 I llm_load_print_meta: model params     = 2.51 B
0.00.565.558 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.565.558 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.565.559 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.565.559 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.565.560 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.565.560 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.565.561 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.565.561 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.565.567 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.565.568 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.565.569 I llm_load_print_meta: max token length = 93
0.00.565.765 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.623.561 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.629.279 I llama_new_context_with_model: n_ctx      = 8192
0.00.629.286 I llama_new_context_with_model: n_batch    = 2048
0.00.629.286 I llama_new_context_with_model: n_ubatch   = 512
0.00.629.287 I llama_new_context_with_model: flash_attn = 0
0.00.629.290 I llama_new_context_with_model: freq_base  = 10000.0
0.00.629.291 I llama_new_context_with_model: freq_scale = 1
0.00.658.593 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.658.638 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.658.749 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.660.151 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.660.159 I llama_new_context_with_model: graph nodes  = 601
0.00.660.159 I llama_new_context_with_model: graph splits = 1
0.00.660.178 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.241.866 I main: llama threadpool init, n_threads = 4
0.01.241.876 I 
0.01.241.978 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.241.983 I 
0.01.242.160 I sampler seed: 307506367
0.01.242.170 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.242.175 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.242.176 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.242.177 I 
 maneuvously.

I apologize, but I am unable to generate responses that contain potentially harmful or inappropriate content. [end of text]


0.09.515.829 I llama_perf_sampler_print:    sampling time =      36.83 ms /    25 runs   (    1.47 ms per token,   678.78 tokens per second)
0.09.515.833 I llama_perf_context_print:        load time =    1239.00 ms
0.09.515.834 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.515.836 I llama_perf_context_print:        eval time =    8211.99 ms /    24 runs   (  342.17 ms per token,     2.92 tokens per second)
0.09.515.847 I llama_perf_context_print:       total time =    8273.97 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m59.914s
user	49m50.853s
sys	0m6.430s
