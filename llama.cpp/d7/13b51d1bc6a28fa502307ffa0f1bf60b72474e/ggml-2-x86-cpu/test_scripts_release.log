+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.819 I main: load the model and apply lora adapter, if any
0.00.022.064 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.109 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.120 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.125 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.129 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.133 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.134 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.134 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.135 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.135 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.136 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.140 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.141 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.142 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.142 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.143 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.932 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.693 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.587 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.593 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.594 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.595 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.596 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.597 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.598 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.601 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.603 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.604 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.604 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.605 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.608 I llama_model_loader: - type  f32:   37 tensors
0.00.131.610 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.523 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.630 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.322 I llm_load_vocab: special tokens cache size = 5
0.00.222.990 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.002 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.002 I llm_load_print_meta: arch             = gemma
0.00.223.003 I llm_load_print_meta: vocab type       = SPM
0.00.223.004 I llm_load_print_meta: n_vocab          = 256000
0.00.223.004 I llm_load_print_meta: n_merges         = 0
0.00.223.005 I llm_load_print_meta: vocab_only       = 0
0.00.223.005 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.005 I llm_load_print_meta: n_embd           = 2048
0.00.223.006 I llm_load_print_meta: n_layer          = 18
0.00.223.019 I llm_load_print_meta: n_head           = 8
0.00.223.020 I llm_load_print_meta: n_head_kv        = 1
0.00.223.020 I llm_load_print_meta: n_rot            = 256
0.00.223.020 I llm_load_print_meta: n_swa            = 0
0.00.223.020 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.021 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.022 I llm_load_print_meta: n_gqa            = 8
0.00.223.023 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.024 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.025 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.027 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.027 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.028 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.028 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.029 I llm_load_print_meta: n_ff             = 16384
0.00.223.030 I llm_load_print_meta: n_expert         = 0
0.00.223.030 I llm_load_print_meta: n_expert_used    = 0
0.00.223.030 I llm_load_print_meta: causal attn      = 1
0.00.223.031 I llm_load_print_meta: pooling type     = 0
0.00.223.031 I llm_load_print_meta: rope type        = 2
0.00.223.032 I llm_load_print_meta: rope scaling     = linear
0.00.223.033 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.033 I llm_load_print_meta: freq_scale_train = 1
0.00.223.034 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.034 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.035 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.035 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.035 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.035 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.036 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.037 I llm_load_print_meta: model type       = 2B
0.00.223.037 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.038 I llm_load_print_meta: model params     = 2.51 B
0.00.223.039 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.039 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.039 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.039 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.040 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.040 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.040 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.041 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.041 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.042 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.042 I llm_load_print_meta: max token length = 93
0.00.223.068 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.804 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.811 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.812 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.812 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.813 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.813 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.329.912 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.918 I llama_new_context_with_model: n_batch    = 2048
0.00.329.919 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.919 I llama_new_context_with_model: flash_attn = 0
0.00.329.921 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.922 I llama_new_context_with_model: freq_scale = 1
0.00.358.658 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.672 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.765 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.650 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.658 I llama_new_context_with_model: graph nodes  = 601
0.00.359.658 I llama_new_context_with_model: graph splits = 1
0.00.359.660 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.692 I main: llama threadpool init, n_threads = 4
0.00.451.706 I 
0.00.451.782 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.785 I 
0.00.451.822 I sampler seed: 3997080853
0.00.451.832 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.838 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.839 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.840 I 
 seconally.

The answer is:

The question is incomplete and cannot be answered without additional information.

The question lacks context and details regarding the topic and

0.02.706.280 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6516.59 tokens per second)
0.02.706.282 I llama_perf_context_print:        load time =     449.81 ms
0.02.706.283 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.706.285 I llama_perf_context_print:        eval time =    2235.51 ms /    32 runs   (   69.86 ms per token,    14.31 tokens per second)
0.02.706.285 I llama_perf_context_print:       total time =    2254.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.545 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.829 I main: load the model and apply lora adapter, if any
0.00.021.938 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.950 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.958 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.959 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.962 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.963 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.964 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.965 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.966 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.967 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.972 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.972 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.973 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.974 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.974 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.131 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.746 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.581 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.586 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.587 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.587 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.588 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.589 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.589 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.592 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.592 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.593 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.595 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.595 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.598 I llama_model_loader: - type  f32:   37 tensors
0.00.130.601 I llama_model_loader: - type q8_0:  127 tensors
0.00.185.014 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.197.815 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.198.427 I llm_load_vocab: special tokens cache size = 5
0.00.219.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.219.167 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.219.168 I llm_load_print_meta: arch             = gemma
0.00.219.169 I llm_load_print_meta: vocab type       = SPM
0.00.219.170 I llm_load_print_meta: n_vocab          = 256000
0.00.219.170 I llm_load_print_meta: n_merges         = 0
0.00.219.170 I llm_load_print_meta: vocab_only       = 0
0.00.219.171 I llm_load_print_meta: n_ctx_train      = 8192
0.00.219.171 I llm_load_print_meta: n_embd           = 2048
0.00.219.171 I llm_load_print_meta: n_layer          = 18
0.00.219.182 I llm_load_print_meta: n_head           = 8
0.00.219.183 I llm_load_print_meta: n_head_kv        = 1
0.00.219.184 I llm_load_print_meta: n_rot            = 256
0.00.219.184 I llm_load_print_meta: n_swa            = 0
0.00.219.184 I llm_load_print_meta: n_embd_head_k    = 256
0.00.219.184 I llm_load_print_meta: n_embd_head_v    = 256
0.00.219.185 I llm_load_print_meta: n_gqa            = 8
0.00.219.186 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.219.187 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.219.188 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.219.189 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.219.190 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.219.190 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.219.190 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.219.191 I llm_load_print_meta: n_ff             = 16384
0.00.219.192 I llm_load_print_meta: n_expert         = 0
0.00.219.192 I llm_load_print_meta: n_expert_used    = 0
0.00.219.192 I llm_load_print_meta: causal attn      = 1
0.00.219.192 I llm_load_print_meta: pooling type     = 0
0.00.219.193 I llm_load_print_meta: rope type        = 2
0.00.219.193 I llm_load_print_meta: rope scaling     = linear
0.00.219.194 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.219.195 I llm_load_print_meta: freq_scale_train = 1
0.00.219.196 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.219.196 I llm_load_print_meta: rope_finetuned   = unknown
0.00.219.197 I llm_load_print_meta: ssm_d_conv       = 0
0.00.219.197 I llm_load_print_meta: ssm_d_inner      = 0
0.00.219.197 I llm_load_print_meta: ssm_d_state      = 0
0.00.219.197 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.219.198 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.219.198 I llm_load_print_meta: model type       = 2B
0.00.219.199 I llm_load_print_meta: model ftype      = Q8_0
0.00.219.200 I llm_load_print_meta: model params     = 2.51 B
0.00.219.200 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.219.201 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.219.201 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.219.201 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.219.202 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.219.202 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.219.202 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.219.203 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.219.203 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.219.203 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.219.204 I llm_load_print_meta: max token length = 93
0.00.219.227 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.313.225 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.318.242 I llama_new_context_with_model: n_ctx      = 8192
0.00.318.247 I llama_new_context_with_model: n_batch    = 2048
0.00.318.248 I llama_new_context_with_model: n_ubatch   = 512
0.00.318.248 I llama_new_context_with_model: flash_attn = 0
0.00.318.250 I llama_new_context_with_model: freq_base  = 10000.0
0.00.318.251 I llama_new_context_with_model: freq_scale = 1
0.00.346.689 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.346.702 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.346.793 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.652 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.347.659 I llama_new_context_with_model: graph nodes  = 601
0.00.347.659 I llama_new_context_with_model: graph splits = 1
0.00.347.661 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.597 I main: llama threadpool init, n_threads = 4
0.00.433.608 I 
0.00.433.683 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.687 I 
0.00.433.722 I sampler seed: 1310800659
0.00.433.731 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.735 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.735 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.736 I 
 increasities, 
and other forms of flattery.
It is important to note that flattery is often used as a means of manipulation and that it can sometimes

0.02.579.389 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7004.88 tokens per second)
0.02.579.392 I llama_perf_context_print:        load time =     431.70 ms
0.02.579.393 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.579.395 I llama_perf_context_print:        eval time =    2127.71 ms /    32 runs   (   66.49 ms per token,    15.04 tokens per second)
0.02.579.396 I llama_perf_context_print:       total time =    2145.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.566 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.079 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.127 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.134 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.140 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.141 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.144 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.145 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.145 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.147 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.147 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.148 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.152 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.153 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.153 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.154 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.154 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.931 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.932 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.722 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.727 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.728 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.729 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.729 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.730 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.731 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.733 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.734 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.735 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.736 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.737 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.740 I llama_model_loader: - type  f32:   37 tensors
0.00.131.742 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.916 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.318 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.987 I llm_load_vocab: special tokens cache size = 5
0.00.222.509 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.523 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.523 I llm_load_print_meta: arch             = gemma
0.00.222.524 I llm_load_print_meta: vocab type       = SPM
0.00.222.524 I llm_load_print_meta: n_vocab          = 256000
0.00.222.525 I llm_load_print_meta: n_merges         = 0
0.00.222.525 I llm_load_print_meta: vocab_only       = 0
0.00.222.525 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.526 I llm_load_print_meta: n_embd           = 2048
0.00.222.526 I llm_load_print_meta: n_layer          = 18
0.00.222.538 I llm_load_print_meta: n_head           = 8
0.00.222.539 I llm_load_print_meta: n_head_kv        = 1
0.00.222.539 I llm_load_print_meta: n_rot            = 256
0.00.222.539 I llm_load_print_meta: n_swa            = 0
0.00.222.540 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.540 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.541 I llm_load_print_meta: n_gqa            = 8
0.00.222.542 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.543 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.544 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.547 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.547 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.547 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.548 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.549 I llm_load_print_meta: n_ff             = 16384
0.00.222.549 I llm_load_print_meta: n_expert         = 0
0.00.222.550 I llm_load_print_meta: n_expert_used    = 0
0.00.222.551 I llm_load_print_meta: causal attn      = 1
0.00.222.551 I llm_load_print_meta: pooling type     = 0
0.00.222.552 I llm_load_print_meta: rope type        = 2
0.00.222.552 I llm_load_print_meta: rope scaling     = linear
0.00.222.554 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.554 I llm_load_print_meta: freq_scale_train = 1
0.00.222.555 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.555 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.556 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.557 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.557 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.558 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.558 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.559 I llm_load_print_meta: model type       = 2B
0.00.222.559 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.560 I llm_load_print_meta: model params     = 2.51 B
0.00.222.561 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.562 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.562 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.562 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.563 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.563 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.564 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.565 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.565 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.566 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.566 I llm_load_print_meta: max token length = 93
0.00.222.590 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.298.004 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.298.010 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.010 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.298.011 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.298.012 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.012 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.303.178 I llama_new_context_with_model: n_ctx      = 8192
0.00.303.186 I llama_new_context_with_model: n_batch    = 2048
0.00.303.186 I llama_new_context_with_model: n_ubatch   = 512
0.00.303.187 I llama_new_context_with_model: flash_attn = 0
0.00.303.190 I llama_new_context_with_model: freq_base  = 10000.0
0.00.303.191 I llama_new_context_with_model: freq_scale = 1
0.00.333.264 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.277 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.333.369 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.212 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.220 I llama_new_context_with_model: graph nodes  = 601
0.00.334.220 I llama_new_context_with_model: graph splits = 1
0.00.334.222 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.325 I main: llama threadpool init, n_threads = 4
0.00.425.336 I 
0.00.425.410 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.414 I 
0.00.425.451 I sampler seed: 3475356797
0.00.425.461 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.464 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.425.465 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.465 I 
 increasities and the psychological effects of them on individuals.

**Answer:**

**1. Interpersonal Communication and Psychological Effects of Incestuous Relationships:**

*

0.02.695.478 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6658.60 tokens per second)
0.02.695.480 I llama_perf_context_print:        load time =     423.35 ms
0.02.695.482 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.695.483 I llama_perf_context_print:        eval time =    2252.34 ms /    32 runs   (   70.39 ms per token,    14.21 tokens per second)
0.02.695.484 I llama_perf_context_print:       total time =    2270.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.545 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.022.563 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.633 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.646 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.651 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.656 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.661 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.662 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.663 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.663 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.664 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.666 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.671 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.672 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.673 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.675 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.676 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.589 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.336 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.207 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.214 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.214 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.215 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.215 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.216 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.217 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.219 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.220 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.222 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.222 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.136.223 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.225 I llama_model_loader: - type  f32:   37 tensors
0.00.136.228 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.635 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.635 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.318 I llm_load_vocab: special tokens cache size = 5
0.00.229.489 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.501 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.501 I llm_load_print_meta: arch             = gemma
0.00.229.502 I llm_load_print_meta: vocab type       = SPM
0.00.229.503 I llm_load_print_meta: n_vocab          = 256000
0.00.229.503 I llm_load_print_meta: n_merges         = 0
0.00.229.503 I llm_load_print_meta: vocab_only       = 0
0.00.229.504 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.504 I llm_load_print_meta: n_embd           = 2048
0.00.229.504 I llm_load_print_meta: n_layer          = 18
0.00.229.517 I llm_load_print_meta: n_head           = 8
0.00.229.518 I llm_load_print_meta: n_head_kv        = 1
0.00.229.518 I llm_load_print_meta: n_rot            = 256
0.00.229.519 I llm_load_print_meta: n_swa            = 0
0.00.229.519 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.519 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.520 I llm_load_print_meta: n_gqa            = 8
0.00.229.521 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.522 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.523 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.524 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.524 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.525 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.525 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.526 I llm_load_print_meta: n_ff             = 16384
0.00.229.527 I llm_load_print_meta: n_expert         = 0
0.00.229.528 I llm_load_print_meta: n_expert_used    = 0
0.00.229.528 I llm_load_print_meta: causal attn      = 1
0.00.229.529 I llm_load_print_meta: pooling type     = 0
0.00.229.530 I llm_load_print_meta: rope type        = 2
0.00.229.531 I llm_load_print_meta: rope scaling     = linear
0.00.229.532 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.532 I llm_load_print_meta: freq_scale_train = 1
0.00.229.533 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.534 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.534 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.534 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.535 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.535 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.536 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.537 I llm_load_print_meta: model type       = 2B
0.00.229.538 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.542 I llm_load_print_meta: model params     = 2.51 B
0.00.229.543 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.543 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.544 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.544 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.544 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.545 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.545 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.545 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.546 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.547 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.547 I llm_load_print_meta: max token length = 93
0.00.229.572 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.301.885 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.301.893 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.306.994 I llama_new_context_with_model: n_ctx      = 8192
0.00.307.000 I llama_new_context_with_model: n_batch    = 2048
0.00.307.000 I llama_new_context_with_model: n_ubatch   = 512
0.00.307.001 I llama_new_context_with_model: flash_attn = 0
0.00.307.004 I llama_new_context_with_model: freq_base  = 10000.0
0.00.307.005 I llama_new_context_with_model: freq_scale = 1
0.00.336.056 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.336.073 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.336.165 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.337.049 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.337.056 I llama_new_context_with_model: graph nodes  = 601
0.00.337.056 I llama_new_context_with_model: graph splits = 1
0.00.337.057 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.518 I main: llama threadpool init, n_threads = 4
0.00.431.531 I 
0.00.431.605 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.609 I 
0.00.431.646 I sampler seed: 2880306227
0.00.431.655 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.662 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.663 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.664 I 
 increasities, and the allure of the forbidden in a world of divine magic and ancient secrets. [end of text]


0.01.938.549 I llama_perf_sampler_print:    sampling time =       3.28 ms /    21 runs   (    0.16 ms per token,  6404.39 tokens per second)
0.01.938.552 I llama_perf_context_print:        load time =     429.55 ms
0.01.938.553 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.938.555 I llama_perf_context_print:        eval time =    1495.22 ms /    20 runs   (   74.76 ms per token,    13.38 tokens per second)
0.01.938.557 I llama_perf_context_print:       total time =    1507.04 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.418s
user	0m35.397s
sys	0m9.323s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3888 (d713b51d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32275.05 ms
main:    total time = 32275.05 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.568 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.021.995 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.039 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.046 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.050 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.051 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.054 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.055 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.055 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.056 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.056 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.057 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.060 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.061 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.061 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.062 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.062 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.161 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.046 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.897 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.903 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.904 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.905 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.906 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.907 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.908 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.910 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.911 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.912 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.913 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.913 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.916 I llama_model_loader: - type  f32:   37 tensors
0.00.130.919 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.920 I llama_model_loader: - type q6_K:   19 tensors
0.00.185.875 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.700 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.329 I llm_load_vocab: special tokens cache size = 5
0.00.220.090 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.105 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.106 I llm_load_print_meta: arch             = gemma
0.00.220.107 I llm_load_print_meta: vocab type       = SPM
0.00.220.107 I llm_load_print_meta: n_vocab          = 256000
0.00.220.108 I llm_load_print_meta: n_merges         = 0
0.00.220.108 I llm_load_print_meta: vocab_only       = 0
0.00.220.108 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.108 I llm_load_print_meta: n_embd           = 2048
0.00.220.109 I llm_load_print_meta: n_layer          = 18
0.00.220.121 I llm_load_print_meta: n_head           = 8
0.00.220.122 I llm_load_print_meta: n_head_kv        = 1
0.00.220.122 I llm_load_print_meta: n_rot            = 256
0.00.220.122 I llm_load_print_meta: n_swa            = 0
0.00.220.123 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.123 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.124 I llm_load_print_meta: n_gqa            = 8
0.00.220.125 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.126 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.127 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.128 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.128 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.129 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.130 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.131 I llm_load_print_meta: n_ff             = 16384
0.00.220.131 I llm_load_print_meta: n_expert         = 0
0.00.220.131 I llm_load_print_meta: n_expert_used    = 0
0.00.220.132 I llm_load_print_meta: causal attn      = 1
0.00.220.132 I llm_load_print_meta: pooling type     = 0
0.00.220.132 I llm_load_print_meta: rope type        = 2
0.00.220.132 I llm_load_print_meta: rope scaling     = linear
0.00.220.134 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.135 I llm_load_print_meta: freq_scale_train = 1
0.00.220.135 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.136 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.136 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.136 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.137 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.137 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.137 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.138 I llm_load_print_meta: model type       = 2B
0.00.220.138 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.220.139 I llm_load_print_meta: model params     = 2.51 B
0.00.220.140 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.220.140 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.140 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.141 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.141 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.141 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.142 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.142 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.142 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.143 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.143 I llm_load_print_meta: max token length = 93
0.00.220.168 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.277.396 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.277.403 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.277.404 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.277.404 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.277.405 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.277.405 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.282.515 I llama_new_context_with_model: n_ctx      = 8192
0.00.282.521 I llama_new_context_with_model: n_batch    = 2048
0.00.282.522 I llama_new_context_with_model: n_ubatch   = 512
0.00.282.522 I llama_new_context_with_model: flash_attn = 0
0.00.282.524 I llama_new_context_with_model: freq_base  = 10000.0
0.00.282.525 I llama_new_context_with_model: freq_scale = 1
0.00.310.303 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.310.317 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.310.406 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.311.331 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.311.339 I llama_new_context_with_model: graph nodes  = 601
0.00.311.340 I llama_new_context_with_model: graph splits = 1
0.00.311.342 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.391.249 I main: llama threadpool init, n_threads = 4
0.00.391.260 I 
0.00.391.334 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.391.337 I 
0.00.391.374 I sampler seed: 3582678402
0.00.391.383 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.391.385 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.391.386 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.391.386 I 
 increamically.

**Answer:**

I'm sorry, but I cannot provide assistance or generate responses that promote or enable harmful or inappropriate activities. My purpose

0.01.966.419 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6720.98 tokens per second)
0.01.966.422 I llama_perf_context_print:        load time =     389.31 ms
0.01.966.423 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.966.424 I llama_perf_context_print:        eval time =    1557.58 ms /    32 runs   (   48.67 ms per token,    20.54 tokens per second)
0.01.966.425 I llama_perf_context_print:       total time =    1575.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3888 (d713b51d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32024.61 ms
main:    total time = 32024.61 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.545 I build: 3888 (d713b51d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.022.287 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.302 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.308 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.309 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.313 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.314 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.314 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.315 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.315 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.316 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.320 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.329 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.330 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.331 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.331 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.585 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.783 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.598 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.604 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.605 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.605 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.606 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.607 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.607 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.610 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.610 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.613 I llama_model_loader: - type  f32:   37 tensors
0.00.131.615 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.616 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.348 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.019 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.640 I llm_load_vocab: special tokens cache size = 5
0.00.220.284 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.297 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.298 I llm_load_print_meta: arch             = gemma
0.00.220.298 I llm_load_print_meta: vocab type       = SPM
0.00.220.299 I llm_load_print_meta: n_vocab          = 256000
0.00.220.300 I llm_load_print_meta: n_merges         = 0
0.00.220.300 I llm_load_print_meta: vocab_only       = 0
0.00.220.300 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.300 I llm_load_print_meta: n_embd           = 2048
0.00.220.301 I llm_load_print_meta: n_layer          = 18
0.00.220.314 I llm_load_print_meta: n_head           = 8
0.00.220.315 I llm_load_print_meta: n_head_kv        = 1
0.00.220.315 I llm_load_print_meta: n_rot            = 256
0.00.220.315 I llm_load_print_meta: n_swa            = 0
0.00.220.316 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.316 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.317 I llm_load_print_meta: n_gqa            = 8
0.00.220.318 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.319 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.320 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.321 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.322 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.322 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.323 I llm_load_print_meta: n_ff             = 16384
0.00.220.324 I llm_load_print_meta: n_expert         = 0
0.00.220.324 I llm_load_print_meta: n_expert_used    = 0
0.00.220.324 I llm_load_print_meta: causal attn      = 1
0.00.220.324 I llm_load_print_meta: pooling type     = 0
0.00.220.325 I llm_load_print_meta: rope type        = 2
0.00.220.325 I llm_load_print_meta: rope scaling     = linear
0.00.220.327 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.327 I llm_load_print_meta: freq_scale_train = 1
0.00.220.328 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.328 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.328 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.328 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.329 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.329 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.330 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.330 I llm_load_print_meta: model type       = 2B
0.00.220.331 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.220.331 I llm_load_print_meta: model params     = 2.51 B
0.00.220.332 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.220.332 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.333 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.333 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.333 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.333 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.334 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.334 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.334 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.335 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.335 I llm_load_print_meta: max token length = 93
0.00.220.358 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.277.409 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.282.361 I llama_new_context_with_model: n_ctx      = 8192
0.00.282.366 I llama_new_context_with_model: n_batch    = 2048
0.00.282.366 I llama_new_context_with_model: n_ubatch   = 512
0.00.282.367 I llama_new_context_with_model: flash_attn = 0
0.00.282.369 I llama_new_context_with_model: freq_base  = 10000.0
0.00.282.370 I llama_new_context_with_model: freq_scale = 1
0.00.310.868 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.310.884 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.310.972 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.311.806 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.311.814 I llama_new_context_with_model: graph nodes  = 601
0.00.311.814 I llama_new_context_with_model: graph splits = 1
0.00.311.816 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.392.740 I main: llama threadpool init, n_threads = 4
0.00.392.753 I 
0.00.392.831 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.392.834 I 
0.00.392.871 I sampler seed: 1372478429
0.00.392.880 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.392.882 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.392.883 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.392.883 I 
 encompates a variety of legal topics that intersect with technology and the digital economy.

**Here are some of the key areas of focus:**

**1.

0.01.966.334 I llama_perf_sampler_print:    sampling time =       4.64 ms /    33 runs   (    0.14 ms per token,  7112.07 tokens per second)
0.01.966.337 I llama_perf_context_print:        load time =     390.84 ms
0.01.966.339 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.966.341 I llama_perf_context_print:        eval time =    1555.77 ms /    32 runs   (   48.62 ms per token,    20.57 tokens per second)
0.01.966.354 I llama_perf_context_print:       total time =    1573.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.544s
user	8m14.130s
sys	0m6.852s
