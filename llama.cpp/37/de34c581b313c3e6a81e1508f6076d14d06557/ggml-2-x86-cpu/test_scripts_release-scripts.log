+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.582 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.894 I main: load the model and apply lora adapter, if any
0.00.023.119 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.167 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.174 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.180 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.183 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.186 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.187 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.188 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.188 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.189 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.189 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.195 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.195 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.196 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.196 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.197 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.273 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.625 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.500 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.508 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.508 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.509 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.509 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.511 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.511 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.514 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.515 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.516 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.516 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.517 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.521 I llama_model_loader: - type  f32:   37 tensors
0.00.134.524 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.320 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.218.605 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.219.393 I llm_load_vocab: special tokens cache size = 5
0.00.240.927 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.946 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.947 I llm_load_print_meta: arch             = gemma
0.00.240.947 I llm_load_print_meta: vocab type       = SPM
0.00.240.948 I llm_load_print_meta: n_vocab          = 256000
0.00.240.948 I llm_load_print_meta: n_merges         = 0
0.00.240.949 I llm_load_print_meta: vocab_only       = 0
0.00.240.949 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.949 I llm_load_print_meta: n_embd           = 2048
0.00.240.950 I llm_load_print_meta: n_layer          = 18
0.00.240.963 I llm_load_print_meta: n_head           = 8
0.00.240.964 I llm_load_print_meta: n_head_kv        = 1
0.00.240.964 I llm_load_print_meta: n_rot            = 256
0.00.240.964 I llm_load_print_meta: n_swa            = 0
0.00.240.965 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.965 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.966 I llm_load_print_meta: n_gqa            = 8
0.00.240.967 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.968 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.969 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.970 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.971 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.971 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.971 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.972 I llm_load_print_meta: n_ff             = 16384
0.00.240.973 I llm_load_print_meta: n_expert         = 0
0.00.240.973 I llm_load_print_meta: n_expert_used    = 0
0.00.240.973 I llm_load_print_meta: causal attn      = 1
0.00.240.974 I llm_load_print_meta: pooling type     = 0
0.00.240.974 I llm_load_print_meta: rope type        = 2
0.00.240.974 I llm_load_print_meta: rope scaling     = linear
0.00.240.976 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.976 I llm_load_print_meta: freq_scale_train = 1
0.00.240.977 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.977 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.977 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.978 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.978 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.978 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.978 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.979 I llm_load_print_meta: model type       = 2B
0.00.240.979 I llm_load_print_meta: model ftype      = Q8_0
0.00.240.980 I llm_load_print_meta: model params     = 2.51 B
0.00.240.981 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.240.981 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.981 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.982 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.982 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.982 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.983 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.983 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.983 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.984 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.984 I llm_load_print_meta: max token length = 93
0.00.241.013 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.364 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.374 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.375 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.375 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.376 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.377 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.343.546 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.556 I llama_new_context_with_model: n_batch    = 2048
0.00.343.556 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.557 I llama_new_context_with_model: flash_attn = 0
0.00.343.560 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.561 I llama_new_context_with_model: freq_scale = 1
0.00.373.944 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.959 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.053 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.929 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.936 I llama_new_context_with_model: graph nodes  = 601
0.00.374.936 I llama_new_context_with_model: graph splits = 1
0.00.374.939 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.652 I main: llama threadpool init, n_threads = 4
0.00.467.665 I 
0.00.467.744 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.747 I 
0.00.467.786 I sampler seed: 1497072537
0.00.467.796 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.799 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.467.800 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.801 I 
 increasities, and the challenges and opportunities presented by these changes. [end of text]


0.01.470.010 I llama_perf_sampler_print:    sampling time =       2.19 ms /    15 runs   (    0.15 ms per token,  6864.99 tokens per second)
0.01.470.012 I llama_perf_context_print:        load time =     465.74 ms
0.01.470.014 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.470.015 I llama_perf_context_print:        eval time =     993.23 ms /    14 runs   (   70.95 ms per token,    14.10 tokens per second)
0.01.470.016 I llama_perf_context_print:       total time =    1002.37 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.545 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.022.498 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.509 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.517 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.518 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.521 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.522 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.523 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.523 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.525 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.525 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.530 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.530 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.532 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.413 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.547 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.322 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.328 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.328 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.329 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.330 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.331 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.331 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.334 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.334 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.335 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.335 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.337 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.341 I llama_model_loader: - type  f32:   37 tensors
0.00.133.344 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.386 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.281 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.923 I llm_load_vocab: special tokens cache size = 5
0.00.222.891 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.904 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.904 I llm_load_print_meta: arch             = gemma
0.00.222.904 I llm_load_print_meta: vocab type       = SPM
0.00.222.905 I llm_load_print_meta: n_vocab          = 256000
0.00.222.906 I llm_load_print_meta: n_merges         = 0
0.00.222.906 I llm_load_print_meta: vocab_only       = 0
0.00.222.906 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.907 I llm_load_print_meta: n_embd           = 2048
0.00.222.907 I llm_load_print_meta: n_layer          = 18
0.00.222.918 I llm_load_print_meta: n_head           = 8
0.00.222.918 I llm_load_print_meta: n_head_kv        = 1
0.00.222.919 I llm_load_print_meta: n_rot            = 256
0.00.222.919 I llm_load_print_meta: n_swa            = 0
0.00.222.920 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.920 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.921 I llm_load_print_meta: n_gqa            = 8
0.00.222.922 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.923 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.924 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.925 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.926 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.926 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.926 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.927 I llm_load_print_meta: n_ff             = 16384
0.00.222.927 I llm_load_print_meta: n_expert         = 0
0.00.222.928 I llm_load_print_meta: n_expert_used    = 0
0.00.222.928 I llm_load_print_meta: causal attn      = 1
0.00.222.929 I llm_load_print_meta: pooling type     = 0
0.00.222.929 I llm_load_print_meta: rope type        = 2
0.00.222.929 I llm_load_print_meta: rope scaling     = linear
0.00.222.931 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.932 I llm_load_print_meta: freq_scale_train = 1
0.00.222.932 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.932 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.933 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.933 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.933 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.933 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.934 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.934 I llm_load_print_meta: model type       = 2B
0.00.222.935 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.935 I llm_load_print_meta: model params     = 2.51 B
0.00.222.936 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.937 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.937 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.938 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.938 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.939 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.939 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.939 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.940 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.940 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.940 I llm_load_print_meta: max token length = 93
0.00.222.966 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.316.805 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.040 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.046 I llama_new_context_with_model: n_batch    = 2048
0.00.322.047 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.047 I llama_new_context_with_model: flash_attn = 0
0.00.322.050 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.051 I llama_new_context_with_model: freq_scale = 1
0.00.353.351 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.369 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.461 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.353 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.361 I llama_new_context_with_model: graph nodes  = 601
0.00.354.361 I llama_new_context_with_model: graph splits = 1
0.00.354.363 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.769 I main: llama threadpool init, n_threads = 4
0.00.441.782 I 
0.00.441.859 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.863 I 
0.00.441.900 I sampler seed: 200448386
0.00.441.910 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.912 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.913 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.913 I 
 increasities.

This is an example of a **humorous pun**. A pun is a play on words that creates a humorous effect. [end of text]


0.02.418.233 I llama_perf_sampler_print:    sampling time =       4.26 ms /    30 runs   (    0.14 ms per token,  7048.87 tokens per second)
0.02.418.236 I llama_perf_context_print:        load time =     439.85 ms
0.02.418.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.418.240 I llama_perf_context_print:        eval time =    1959.96 ms /    29 runs   (   67.58 ms per token,    14.80 tokens per second)
0.02.418.241 I llama_perf_context_print:       total time =    1976.47 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.532 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.001.873 I main: load the model and apply lora adapter, if any
0.00.021.860 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.921 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.932 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.938 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.939 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.944 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.948 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.949 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.950 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.951 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.952 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.967 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.970 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.971 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.972 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.973 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.431 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.662 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.497 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.503 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.504 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.504 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.505 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.506 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.506 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.508 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.509 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.510 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.511 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.512 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.516 I llama_model_loader: - type  f32:   37 tensors
0.00.132.519 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.521 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.123 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.804 I llm_load_vocab: special tokens cache size = 5
0.00.221.813 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.827 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.827 I llm_load_print_meta: arch             = gemma
0.00.221.828 I llm_load_print_meta: vocab type       = SPM
0.00.221.829 I llm_load_print_meta: n_vocab          = 256000
0.00.221.829 I llm_load_print_meta: n_merges         = 0
0.00.221.830 I llm_load_print_meta: vocab_only       = 0
0.00.221.830 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.831 I llm_load_print_meta: n_embd           = 2048
0.00.221.831 I llm_load_print_meta: n_layer          = 18
0.00.221.842 I llm_load_print_meta: n_head           = 8
0.00.221.843 I llm_load_print_meta: n_head_kv        = 1
0.00.221.844 I llm_load_print_meta: n_rot            = 256
0.00.221.844 I llm_load_print_meta: n_swa            = 0
0.00.221.844 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.845 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.846 I llm_load_print_meta: n_gqa            = 8
0.00.221.847 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.848 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.848 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.850 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.851 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.851 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.852 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.853 I llm_load_print_meta: n_ff             = 16384
0.00.221.854 I llm_load_print_meta: n_expert         = 0
0.00.221.854 I llm_load_print_meta: n_expert_used    = 0
0.00.221.855 I llm_load_print_meta: causal attn      = 1
0.00.221.856 I llm_load_print_meta: pooling type     = 0
0.00.221.856 I llm_load_print_meta: rope type        = 2
0.00.221.857 I llm_load_print_meta: rope scaling     = linear
0.00.221.862 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.863 I llm_load_print_meta: freq_scale_train = 1
0.00.221.863 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.864 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.865 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.866 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.867 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.867 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.867 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.868 I llm_load_print_meta: model type       = 2B
0.00.221.869 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.870 I llm_load_print_meta: model params     = 2.51 B
0.00.221.871 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.875 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.875 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.876 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.876 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.877 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.877 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.878 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.878 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.879 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.880 I llm_load_print_meta: max token length = 93
0.00.221.910 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.297.518 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.297.524 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.297.525 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.297.525 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.297.526 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.297.527 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.302.576 I llama_new_context_with_model: n_ctx      = 8192
0.00.302.582 I llama_new_context_with_model: n_batch    = 2048
0.00.302.582 I llama_new_context_with_model: n_ubatch   = 512
0.00.302.583 I llama_new_context_with_model: flash_attn = 0
0.00.302.585 I llama_new_context_with_model: freq_base  = 10000.0
0.00.302.586 I llama_new_context_with_model: freq_scale = 1
0.00.331.641 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.657 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.331.758 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.627 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.635 I llama_new_context_with_model: graph nodes  = 601
0.00.332.635 I llama_new_context_with_model: graph splits = 1
0.00.332.638 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.415 I main: llama threadpool init, n_threads = 4
0.00.423.428 I 
0.00.423.508 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.511 I 
0.00.423.551 I sampler seed: 204532775
0.00.423.561 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.566 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.423.566 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.567 I 
 increasities that could cause great physical and emotional harm.

**Response:**

I am unable to provide information that promotes potentially harmful or dangerous content. My purpose

0.02.707.546 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6842.21 tokens per second)
0.02.707.548 I llama_perf_context_print:        load time =     421.52 ms
0.02.707.549 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.707.550 I llama_perf_context_print:        eval time =    2265.95 ms /    32 runs   (   70.81 ms per token,    14.12 tokens per second)
0.02.707.551 I llama_perf_context_print:       total time =    2284.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.604 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.811 I main: llama backend init
0.00.001.896 I main: load the model and apply lora adapter, if any
0.00.022.073 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.121 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.129 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.135 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.138 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.143 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.144 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.144 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.145 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.145 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.145 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.150 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.150 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.151 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.152 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.152 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.489 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.846 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.667 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.673 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.674 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.675 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.675 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.676 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.677 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.679 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.679 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.680 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.681 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.682 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.686 I llama_model_loader: - type  f32:   37 tensors
0.00.133.688 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.902 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.883 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.666 I llm_load_vocab: special tokens cache size = 5
0.00.230.977 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.992 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.992 I llm_load_print_meta: arch             = gemma
0.00.230.993 I llm_load_print_meta: vocab type       = SPM
0.00.230.994 I llm_load_print_meta: n_vocab          = 256000
0.00.230.994 I llm_load_print_meta: n_merges         = 0
0.00.230.994 I llm_load_print_meta: vocab_only       = 0
0.00.230.995 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.995 I llm_load_print_meta: n_embd           = 2048
0.00.230.996 I llm_load_print_meta: n_layer          = 18
0.00.231.009 I llm_load_print_meta: n_head           = 8
0.00.231.010 I llm_load_print_meta: n_head_kv        = 1
0.00.231.010 I llm_load_print_meta: n_rot            = 256
0.00.231.011 I llm_load_print_meta: n_swa            = 0
0.00.231.011 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.011 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.012 I llm_load_print_meta: n_gqa            = 8
0.00.231.013 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.014 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.015 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.017 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.017 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.017 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.018 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.018 I llm_load_print_meta: n_ff             = 16384
0.00.231.019 I llm_load_print_meta: n_expert         = 0
0.00.231.019 I llm_load_print_meta: n_expert_used    = 0
0.00.231.019 I llm_load_print_meta: causal attn      = 1
0.00.231.020 I llm_load_print_meta: pooling type     = 0
0.00.231.021 I llm_load_print_meta: rope type        = 2
0.00.231.022 I llm_load_print_meta: rope scaling     = linear
0.00.231.023 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.024 I llm_load_print_meta: freq_scale_train = 1
0.00.231.025 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.026 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.027 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.027 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.028 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.028 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.029 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.029 I llm_load_print_meta: model type       = 2B
0.00.231.030 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.031 I llm_load_print_meta: model params     = 2.51 B
0.00.231.032 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.032 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.033 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.033 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.034 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.034 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.035 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.035 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.035 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.036 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.036 I llm_load_print_meta: max token length = 93
0.00.231.062 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.302.105 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.302.114 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.307.158 I llama_new_context_with_model: n_ctx      = 8192
0.00.307.164 I llama_new_context_with_model: n_batch    = 2048
0.00.307.165 I llama_new_context_with_model: n_ubatch   = 512
0.00.307.165 I llama_new_context_with_model: flash_attn = 0
0.00.307.167 I llama_new_context_with_model: freq_base  = 10000.0
0.00.307.169 I llama_new_context_with_model: freq_scale = 1
0.00.336.631 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.336.644 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.336.734 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.337.580 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.337.589 I llama_new_context_with_model: graph nodes  = 601
0.00.337.589 I llama_new_context_with_model: graph splits = 1
0.00.337.591 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.113 I main: llama threadpool init, n_threads = 4
0.00.433.126 I 
0.00.433.196 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.199 I 
0.00.433.235 I sampler seed: 3702260069
0.00.433.245 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.249 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.249 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.249 I 
 increasities, the rise of the printing press, and the invention of the modern microscope.

What is the main idea of this passage?

a) The

0.02.876.058 I llama_perf_sampler_print:    sampling time =       4.65 ms /    33 runs   (    0.14 ms per token,  7095.25 tokens per second)
0.02.876.060 I llama_perf_context_print:        load time =     431.19 ms
0.02.876.061 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.876.063 I llama_perf_context_print:        eval time =    2424.94 ms /    32 runs   (   75.78 ms per token,    13.20 tokens per second)
0.02.876.063 I llama_perf_context_print:       total time =    2442.95 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.165s
user	0m33.566s
sys	0m9.449s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3867 (37de34c5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32028.87 ms
main:    total time = 32028.87 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.538 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.723 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.022.233 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.284 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.299 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.304 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.305 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.310 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.311 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.311 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.312 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.312 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.312 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.318 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.319 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.637 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.930 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.763 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.771 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.772 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.772 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.773 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.774 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.774 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.777 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.778 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.778 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.779 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.780 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.782 I llama_model_loader: - type  f32:   37 tensors
0.00.133.786 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.787 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.443 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.316 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.055 I llm_load_vocab: special tokens cache size = 5
0.00.235.117 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.131 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.131 I llm_load_print_meta: arch             = gemma
0.00.235.131 I llm_load_print_meta: vocab type       = SPM
0.00.235.132 I llm_load_print_meta: n_vocab          = 256000
0.00.235.132 I llm_load_print_meta: n_merges         = 0
0.00.235.133 I llm_load_print_meta: vocab_only       = 0
0.00.235.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.134 I llm_load_print_meta: n_embd           = 2048
0.00.235.134 I llm_load_print_meta: n_layer          = 18
0.00.235.147 I llm_load_print_meta: n_head           = 8
0.00.235.148 I llm_load_print_meta: n_head_kv        = 1
0.00.235.148 I llm_load_print_meta: n_rot            = 256
0.00.235.148 I llm_load_print_meta: n_swa            = 0
0.00.235.149 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.149 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.150 I llm_load_print_meta: n_gqa            = 8
0.00.235.151 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.152 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.153 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.154 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.155 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.155 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.155 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.156 I llm_load_print_meta: n_ff             = 16384
0.00.235.156 I llm_load_print_meta: n_expert         = 0
0.00.235.157 I llm_load_print_meta: n_expert_used    = 0
0.00.235.157 I llm_load_print_meta: causal attn      = 1
0.00.235.157 I llm_load_print_meta: pooling type     = 0
0.00.235.158 I llm_load_print_meta: rope type        = 2
0.00.235.158 I llm_load_print_meta: rope scaling     = linear
0.00.235.159 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.160 I llm_load_print_meta: freq_scale_train = 1
0.00.235.160 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.161 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.161 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.161 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.161 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.161 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.162 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.162 I llm_load_print_meta: model type       = 2B
0.00.235.163 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.235.163 I llm_load_print_meta: model params     = 2.51 B
0.00.235.164 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.235.165 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.165 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.166 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.166 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.167 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.167 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.167 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.168 I llm_load_print_meta: max token length = 93
0.00.235.192 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.320 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.292.329 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.292.329 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.292.330 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.292.331 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.292.331 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.297.429 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.435 I llama_new_context_with_model: n_batch    = 2048
0.00.297.435 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.436 I llama_new_context_with_model: flash_attn = 0
0.00.297.438 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.439 I llama_new_context_with_model: freq_scale = 1
0.00.326.967 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.983 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.075 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.955 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.963 I llama_new_context_with_model: graph nodes  = 601
0.00.327.963 I llama_new_context_with_model: graph splits = 1
0.00.327.966 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.409.126 I main: llama threadpool init, n_threads = 4
0.00.409.139 I 
0.00.409.214 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.409.217 I 
0.00.409.257 I sampler seed: 1329644871
0.00.409.266 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.409.269 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.409.270 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.409.270 I 
 fufilling. 

I am unable to access the provided context. Could you please provide more information about the context so I can understand it better? [end of text]


0.01.972.736 I llama_perf_sampler_print:    sampling time =       4.81 ms /    32 runs   (    0.15 ms per token,  6654.19 tokens per second)
0.01.972.738 I llama_perf_context_print:        load time =     407.28 ms
0.01.972.739 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.972.741 I llama_perf_context_print:        eval time =    1545.47 ms /    31 runs   (   49.85 ms per token,    20.06 tokens per second)
0.01.972.741 I llama_perf_context_print:       total time =    1563.62 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3867 (37de34c5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32288.26 ms
main:    total time = 32288.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.542 I build: 3867 (37de34c5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.825 I main: load the model and apply lora adapter, if any
0.00.022.311 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.328 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.338 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.342 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.346 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.346 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.347 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.348 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.349 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.349 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.353 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.354 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.354 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.355 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.140 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.765 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.581 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.587 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.588 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.589 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.590 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.591 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.592 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.595 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.596 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.599 I llama_model_loader: - type  f32:   37 tensors
0.00.133.602 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.602 I llama_model_loader: - type q6_K:   19 tensors
0.00.193.073 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.442 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.160 I llm_load_vocab: special tokens cache size = 5
0.00.229.238 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.255 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.256 I llm_load_print_meta: arch             = gemma
0.00.229.256 I llm_load_print_meta: vocab type       = SPM
0.00.229.257 I llm_load_print_meta: n_vocab          = 256000
0.00.229.258 I llm_load_print_meta: n_merges         = 0
0.00.229.258 I llm_load_print_meta: vocab_only       = 0
0.00.229.258 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.259 I llm_load_print_meta: n_embd           = 2048
0.00.229.259 I llm_load_print_meta: n_layer          = 18
0.00.229.271 I llm_load_print_meta: n_head           = 8
0.00.229.272 I llm_load_print_meta: n_head_kv        = 1
0.00.229.272 I llm_load_print_meta: n_rot            = 256
0.00.229.272 I llm_load_print_meta: n_swa            = 0
0.00.229.272 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.273 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.274 I llm_load_print_meta: n_gqa            = 8
0.00.229.275 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.276 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.276 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.277 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.278 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.278 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.278 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.279 I llm_load_print_meta: n_ff             = 16384
0.00.229.280 I llm_load_print_meta: n_expert         = 0
0.00.229.280 I llm_load_print_meta: n_expert_used    = 0
0.00.229.280 I llm_load_print_meta: causal attn      = 1
0.00.229.280 I llm_load_print_meta: pooling type     = 0
0.00.229.281 I llm_load_print_meta: rope type        = 2
0.00.229.281 I llm_load_print_meta: rope scaling     = linear
0.00.229.282 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.283 I llm_load_print_meta: freq_scale_train = 1
0.00.229.283 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.283 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.284 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.284 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.284 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.285 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.285 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.285 I llm_load_print_meta: model type       = 2B
0.00.229.286 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.287 I llm_load_print_meta: model params     = 2.51 B
0.00.229.287 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.287 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.288 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.288 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.289 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.289 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.290 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.290 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.290 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.291 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.291 I llm_load_print_meta: max token length = 93
0.00.229.318 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.286.893 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.291.877 I llama_new_context_with_model: n_ctx      = 8192
0.00.291.884 I llama_new_context_with_model: n_batch    = 2048
0.00.291.884 I llama_new_context_with_model: n_ubatch   = 512
0.00.291.885 I llama_new_context_with_model: flash_attn = 0
0.00.291.887 I llama_new_context_with_model: freq_base  = 10000.0
0.00.291.888 I llama_new_context_with_model: freq_scale = 1
0.00.321.773 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.791 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.880 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.706 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.714 I llama_new_context_with_model: graph nodes  = 601
0.00.322.715 I llama_new_context_with_model: graph splits = 1
0.00.322.717 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.403.001 I main: llama threadpool init, n_threads = 4
0.00.403.013 I 
0.00.403.089 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.403.093 I 
0.00.403.129 I sampler seed: 3552539074
0.00.403.137 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.403.144 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.403.144 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.403.146 I 
 squaRE

## The Squashore: A Multifaceted Gem

The Squashore, located in the Florida Keys, is a unique and fascinating landform

0.02.027.294 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6434.00 tokens per second)
0.02.027.297 I llama_perf_context_print:        load time =     401.15 ms
0.02.027.299 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.027.301 I llama_perf_context_print:        eval time =    1605.59 ms /    32 runs   (   50.17 ms per token,    19.93 tokens per second)
0.02.027.301 I llama_perf_context_print:       total time =    1624.30 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.110s
user	8m14.792s
sys	0m6.919s
