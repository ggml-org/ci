+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.438 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.641 I main: llama backend init
0.00.001.761 I main: load the model and apply lora adapter, if any
0.00.022.131 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.182 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.190 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.196 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.197 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.201 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.202 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.202 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.204 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.204 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.205 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.210 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.211 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.211 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.211 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.212 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.326 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.133 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.986 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.992 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.992 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.993 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.993 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.994 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.995 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.997 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.998 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.998 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.000 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.001 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.004 I llama_model_loader: - type  f32:   37 tensors
0.00.133.007 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.875 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.652 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.243.983 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.247.984 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.256.019 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.559 I llm_load_vocab: special tokens cache size = 5
0.00.277.446 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.462 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.462 I llm_load_print_meta: arch             = gemma
0.00.277.463 I llm_load_print_meta: vocab type       = SPM
0.00.277.463 I llm_load_print_meta: n_vocab          = 256000
0.00.277.464 I llm_load_print_meta: n_merges         = 0
0.00.277.464 I llm_load_print_meta: vocab_only       = 0
0.00.277.465 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.465 I llm_load_print_meta: n_embd           = 2048
0.00.277.465 I llm_load_print_meta: n_layer          = 18
0.00.277.476 I llm_load_print_meta: n_head           = 8
0.00.277.477 I llm_load_print_meta: n_head_kv        = 1
0.00.277.478 I llm_load_print_meta: n_rot            = 256
0.00.277.478 I llm_load_print_meta: n_swa            = 0
0.00.277.478 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.478 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.479 I llm_load_print_meta: n_gqa            = 8
0.00.277.480 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.481 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.482 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.483 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.484 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.484 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.484 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.485 I llm_load_print_meta: n_ff             = 16384
0.00.277.486 I llm_load_print_meta: n_expert         = 0
0.00.277.486 I llm_load_print_meta: n_expert_used    = 0
0.00.277.486 I llm_load_print_meta: causal attn      = 1
0.00.277.487 I llm_load_print_meta: pooling type     = 0
0.00.277.487 I llm_load_print_meta: rope type        = 2
0.00.277.487 I llm_load_print_meta: rope scaling     = linear
0.00.277.489 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.490 I llm_load_print_meta: freq_scale_train = 1
0.00.277.490 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.490 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.491 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.491 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.491 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.491 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.492 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.492 I llm_load_print_meta: model type       = 2B
0.00.277.492 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.493 I llm_load_print_meta: model params     = 2.51 B
0.00.277.494 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.495 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.495 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.495 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.496 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.496 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.496 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.496 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.497 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.497 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.497 I llm_load_print_meta: max token length = 93
0.00.277.523 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.376.088 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.376.098 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.376.098 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.376.099 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.376.099 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.376.100 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.381.279 I llama_new_context_with_model: n_ctx      = 8192
0.00.381.285 I llama_new_context_with_model: n_batch    = 2048
0.00.381.285 I llama_new_context_with_model: n_ubatch   = 512
0.00.381.286 I llama_new_context_with_model: flash_attn = 0
0.00.381.288 I llama_new_context_with_model: freq_base  = 10000.0
0.00.381.290 I llama_new_context_with_model: freq_scale = 1
0.00.410.063 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.410.078 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.410.168 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.411.107 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.411.115 I llama_new_context_with_model: graph nodes  = 601
0.00.411.115 I llama_new_context_with_model: graph splits = 1
0.00.411.117 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.502.518 I main: llama threadpool init, n_threads = 4
0.00.502.532 I 
0.00.502.608 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.502.612 I 
0.00.502.651 I sampler seed: 3343999944
0.00.502.660 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.502.664 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.502.665 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.502.665 I 
 increasities. It is not appropriate to provide any information or create content that is sexually suggestive in nature. [end of text]


0.02.047.257 I llama_perf_sampler_print:    sampling time =       3.45 ms /    23 runs   (    0.15 ms per token,  6670.53 tokens per second)
0.02.047.259 I llama_perf_context_print:        load time =     500.73 ms
0.02.047.260 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.047.262 I llama_perf_context_print:        eval time =    1532.13 ms /    22 runs   (   69.64 ms per token,    14.36 tokens per second)
0.02.047.262 I llama_perf_context_print:       total time =    1544.75 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.613 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.837 I main: llama backend init
0.00.003.044 I main: load the model and apply lora adapter, if any
0.00.023.255 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.264 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.271 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.271 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.275 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.276 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.276 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.277 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.277 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.278 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.282 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.283 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.284 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.285 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.285 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.224 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.895 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.826 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.833 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.834 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.835 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.836 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.836 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.837 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.840 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.840 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.841 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.842 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.843 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.847 I llama_model_loader: - type  f32:   37 tensors
0.00.133.850 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.507 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.011 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.245.217 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.248.884 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.256.274 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.799 I llm_load_vocab: special tokens cache size = 5
0.00.277.776 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.793 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.793 I llm_load_print_meta: arch             = gemma
0.00.277.794 I llm_load_print_meta: vocab type       = SPM
0.00.277.794 I llm_load_print_meta: n_vocab          = 256000
0.00.277.795 I llm_load_print_meta: n_merges         = 0
0.00.277.795 I llm_load_print_meta: vocab_only       = 0
0.00.277.796 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.796 I llm_load_print_meta: n_embd           = 2048
0.00.277.796 I llm_load_print_meta: n_layer          = 18
0.00.277.809 I llm_load_print_meta: n_head           = 8
0.00.277.809 I llm_load_print_meta: n_head_kv        = 1
0.00.277.810 I llm_load_print_meta: n_rot            = 256
0.00.277.810 I llm_load_print_meta: n_swa            = 0
0.00.277.810 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.811 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.812 I llm_load_print_meta: n_gqa            = 8
0.00.277.813 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.814 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.815 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.816 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.816 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.816 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.816 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.817 I llm_load_print_meta: n_ff             = 16384
0.00.277.818 I llm_load_print_meta: n_expert         = 0
0.00.277.818 I llm_load_print_meta: n_expert_used    = 0
0.00.277.818 I llm_load_print_meta: causal attn      = 1
0.00.277.819 I llm_load_print_meta: pooling type     = 0
0.00.277.819 I llm_load_print_meta: rope type        = 2
0.00.277.820 I llm_load_print_meta: rope scaling     = linear
0.00.277.821 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.821 I llm_load_print_meta: freq_scale_train = 1
0.00.277.822 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.822 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.822 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.823 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.823 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.823 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.823 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.824 I llm_load_print_meta: model type       = 2B
0.00.277.824 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.825 I llm_load_print_meta: model params     = 2.51 B
0.00.277.826 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.826 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.827 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.827 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.827 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.827 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.828 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.828 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.828 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.829 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.829 I llm_load_print_meta: max token length = 93
0.00.277.855 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.372.591 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.377.658 I llama_new_context_with_model: n_ctx      = 8192
0.00.377.664 I llama_new_context_with_model: n_batch    = 2048
0.00.377.665 I llama_new_context_with_model: n_ubatch   = 512
0.00.377.665 I llama_new_context_with_model: flash_attn = 0
0.00.377.667 I llama_new_context_with_model: freq_base  = 10000.0
0.00.377.669 I llama_new_context_with_model: freq_scale = 1
0.00.406.862 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.406.879 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.406.971 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.407.880 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.407.887 I llama_new_context_with_model: graph nodes  = 601
0.00.407.888 I llama_new_context_with_model: graph splits = 1
0.00.407.889 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.496.932 I main: llama threadpool init, n_threads = 4
0.00.496.946 I 
0.00.497.023 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.026 I 
0.00.497.065 I sampler seed: 3087145410
0.00.497.076 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.079 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.497.080 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.081 I 
 increasements, and other forms of redundancy.

**Redundancy in Computer Science**

Redundancy in computer science refers to the presence of unnecessary or excessive copies

0.02.661.208 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6692.35 tokens per second)
0.02.661.210 I llama_perf_context_print:        load time =     493.87 ms
0.02.661.211 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.661.212 I llama_perf_context_print:        eval time =    2146.19 ms /    32 runs   (   67.07 ms per token,    14.91 tokens per second)
0.02.661.213 I llama_perf_context_print:       total time =    2164.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.582 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.021.724 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.775 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.785 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.790 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.794 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.798 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.798 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.799 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.800 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.800 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.800 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.805 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.805 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.806 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.806 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.807 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.344 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.119 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.999 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.006 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.006 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.007 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.008 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.009 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.009 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.012 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.013 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.014 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.014 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.015 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.018 I llama_model_loader: - type  f32:   37 tensors
0.00.132.020 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.924 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.250 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.233.364 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.236.714 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.243.923 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.458 I llm_load_vocab: special tokens cache size = 5
0.00.265.345 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.359 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.360 I llm_load_print_meta: arch             = gemma
0.00.265.360 I llm_load_print_meta: vocab type       = SPM
0.00.265.361 I llm_load_print_meta: n_vocab          = 256000
0.00.265.361 I llm_load_print_meta: n_merges         = 0
0.00.265.361 I llm_load_print_meta: vocab_only       = 0
0.00.265.362 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.362 I llm_load_print_meta: n_embd           = 2048
0.00.265.362 I llm_load_print_meta: n_layer          = 18
0.00.265.373 I llm_load_print_meta: n_head           = 8
0.00.265.374 I llm_load_print_meta: n_head_kv        = 1
0.00.265.375 I llm_load_print_meta: n_rot            = 256
0.00.265.375 I llm_load_print_meta: n_swa            = 0
0.00.265.375 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.376 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.376 I llm_load_print_meta: n_gqa            = 8
0.00.265.378 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.378 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.379 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.381 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.381 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.381 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.382 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.383 I llm_load_print_meta: n_ff             = 16384
0.00.265.383 I llm_load_print_meta: n_expert         = 0
0.00.265.383 I llm_load_print_meta: n_expert_used    = 0
0.00.265.384 I llm_load_print_meta: causal attn      = 1
0.00.265.384 I llm_load_print_meta: pooling type     = 0
0.00.265.384 I llm_load_print_meta: rope type        = 2
0.00.265.385 I llm_load_print_meta: rope scaling     = linear
0.00.265.386 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.387 I llm_load_print_meta: freq_scale_train = 1
0.00.265.387 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.387 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.388 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.388 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.388 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.388 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.388 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.389 I llm_load_print_meta: model type       = 2B
0.00.265.389 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.390 I llm_load_print_meta: model params     = 2.51 B
0.00.265.391 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.392 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.392 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.392 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.393 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.393 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.393 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.393 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.394 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.394 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.394 I llm_load_print_meta: max token length = 93
0.00.265.413 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.394 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.340.400 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.340.401 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.340.401 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.340.402 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.340.403 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.345.422 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.428 I llama_new_context_with_model: n_batch    = 2048
0.00.345.429 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.429 I llama_new_context_with_model: flash_attn = 0
0.00.345.431 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.432 I llama_new_context_with_model: freq_scale = 1
0.00.375.761 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.776 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.865 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.751 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.758 I llama_new_context_with_model: graph nodes  = 601
0.00.376.758 I llama_new_context_with_model: graph splits = 1
0.00.376.760 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.984 I main: llama threadpool init, n_threads = 4
0.00.468.997 I 
0.00.469.075 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.078 I 
0.00.469.118 I sampler seed: 303169240
0.00.469.128 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.131 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.469.132 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.132 I 
 increasities and other forms of sexual harassment.

**Definition:**

Sexual harassment is unwelcome sexual behavior that interferes with an individual's work, education, or

0.02.751.371 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6864.99 tokens per second)
0.02.751.374 I llama_perf_context_print:        load time =     467.10 ms
0.02.751.376 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.751.378 I llama_perf_context_print:        eval time =    2263.58 ms /    32 runs   (   70.74 ms per token,    14.14 tokens per second)
0.02.751.379 I llama_perf_context_print:       total time =    2282.39 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.457 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.653 I main: llama backend init
0.00.001.757 I main: load the model and apply lora adapter, if any
0.00.021.577 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.622 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.633 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.637 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.638 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.642 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.642 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.644 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.644 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.645 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.645 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.649 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.649 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.650 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.651 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.651 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.443 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.006 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.906 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.912 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.913 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.913 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.914 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.915 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.915 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.918 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.919 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.920 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.921 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.921 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.925 I llama_model_loader: - type  f32:   37 tensors
0.00.131.928 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.207 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.234.662 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.236.138 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.240.577 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.249.219 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.820 I llm_load_vocab: special tokens cache size = 5
0.00.270.912 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.929 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.929 I llm_load_print_meta: arch             = gemma
0.00.270.930 I llm_load_print_meta: vocab type       = SPM
0.00.270.930 I llm_load_print_meta: n_vocab          = 256000
0.00.270.931 I llm_load_print_meta: n_merges         = 0
0.00.270.931 I llm_load_print_meta: vocab_only       = 0
0.00.270.931 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.932 I llm_load_print_meta: n_embd           = 2048
0.00.270.932 I llm_load_print_meta: n_layer          = 18
0.00.270.943 I llm_load_print_meta: n_head           = 8
0.00.270.944 I llm_load_print_meta: n_head_kv        = 1
0.00.270.945 I llm_load_print_meta: n_rot            = 256
0.00.270.945 I llm_load_print_meta: n_swa            = 0
0.00.270.945 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.945 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.946 I llm_load_print_meta: n_gqa            = 8
0.00.270.947 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.948 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.949 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.950 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.950 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.951 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.951 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.952 I llm_load_print_meta: n_ff             = 16384
0.00.270.952 I llm_load_print_meta: n_expert         = 0
0.00.270.953 I llm_load_print_meta: n_expert_used    = 0
0.00.270.953 I llm_load_print_meta: causal attn      = 1
0.00.270.953 I llm_load_print_meta: pooling type     = 0
0.00.270.954 I llm_load_print_meta: rope type        = 2
0.00.270.954 I llm_load_print_meta: rope scaling     = linear
0.00.270.956 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.957 I llm_load_print_meta: freq_scale_train = 1
0.00.270.957 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.957 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.957 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.958 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.958 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.958 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.958 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.959 I llm_load_print_meta: model type       = 2B
0.00.270.959 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.960 I llm_load_print_meta: model params     = 2.51 B
0.00.270.961 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.961 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.962 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.962 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.963 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.963 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.963 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.964 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.964 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.964 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.965 I llm_load_print_meta: max token length = 93
0.00.270.985 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.339 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.341.347 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.346.374 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.380 I llama_new_context_with_model: n_batch    = 2048
0.00.346.381 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.381 I llama_new_context_with_model: flash_attn = 0
0.00.346.383 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.384 I llama_new_context_with_model: freq_scale = 1
0.00.374.920 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.935 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.035 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.952 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.960 I llama_new_context_with_model: graph nodes  = 601
0.00.375.960 I llama_new_context_with_model: graph splits = 1
0.00.375.962 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.696 I main: llama threadpool init, n_threads = 4
0.00.478.709 I 
0.00.478.783 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.787 I 
0.00.478.822 I sampler seed: 1949433971
0.00.478.832 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.835 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.478.835 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.835 I 
 increasities. [end of text]


0.00.782.932 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8210.18 tokens per second)
0.00.782.935 I llama_perf_context_print:        load time =     476.92 ms
0.00.782.936 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.782.938 I llama_perf_context_print:        eval time =     300.83 ms /     4 runs   (   75.21 ms per token,    13.30 tokens per second)
0.00.782.940 I llama_perf_context_print:       total time =     304.24 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.591s
user	0m28.103s
sys	0m9.414s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3934 (3752217e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32125.44 ms
main:    total time = 32125.44 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.590 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.083 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.133 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.140 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.145 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.146 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.149 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.150 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.151 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.151 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.152 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.153 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.156 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.158 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.158 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.159 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.160 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.323 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.938 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.881 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.887 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.888 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.891 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.893 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.894 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.894 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.895 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.896 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.899 I llama_model_loader: - type  f32:   37 tensors
0.00.132.902 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.902 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.545 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.773 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.239.974 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.243.601 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.251.252 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.816 I llm_load_vocab: special tokens cache size = 5
0.00.272.822 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.840 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.841 I llm_load_print_meta: arch             = gemma
0.00.272.841 I llm_load_print_meta: vocab type       = SPM
0.00.272.842 I llm_load_print_meta: n_vocab          = 256000
0.00.272.842 I llm_load_print_meta: n_merges         = 0
0.00.272.842 I llm_load_print_meta: vocab_only       = 0
0.00.272.843 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.843 I llm_load_print_meta: n_embd           = 2048
0.00.272.843 I llm_load_print_meta: n_layer          = 18
0.00.272.856 I llm_load_print_meta: n_head           = 8
0.00.272.857 I llm_load_print_meta: n_head_kv        = 1
0.00.272.858 I llm_load_print_meta: n_rot            = 256
0.00.272.858 I llm_load_print_meta: n_swa            = 0
0.00.272.858 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.858 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.859 I llm_load_print_meta: n_gqa            = 8
0.00.272.860 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.861 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.862 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.863 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.864 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.864 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.865 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.866 I llm_load_print_meta: n_ff             = 16384
0.00.272.866 I llm_load_print_meta: n_expert         = 0
0.00.272.866 I llm_load_print_meta: n_expert_used    = 0
0.00.272.867 I llm_load_print_meta: causal attn      = 1
0.00.272.867 I llm_load_print_meta: pooling type     = 0
0.00.272.867 I llm_load_print_meta: rope type        = 2
0.00.272.868 I llm_load_print_meta: rope scaling     = linear
0.00.272.869 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.870 I llm_load_print_meta: freq_scale_train = 1
0.00.272.870 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.870 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.871 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.871 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.871 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.871 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.872 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.872 I llm_load_print_meta: model type       = 2B
0.00.272.873 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.874 I llm_load_print_meta: model params     = 2.51 B
0.00.272.874 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.875 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.875 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.875 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.876 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.876 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.876 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.877 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.877 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.878 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.878 I llm_load_print_meta: max token length = 93
0.00.272.898 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.123 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.330.132 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.330.133 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.330.134 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.330.135 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.330.135 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.335.176 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.182 I llama_new_context_with_model: n_batch    = 2048
0.00.335.183 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.183 I llama_new_context_with_model: flash_attn = 0
0.00.335.186 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.187 I llama_new_context_with_model: freq_scale = 1
0.00.364.681 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.698 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.789 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.655 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.662 I llama_new_context_with_model: graph nodes  = 601
0.00.365.662 I llama_new_context_with_model: graph splits = 1
0.00.365.664 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.799 I main: llama threadpool init, n_threads = 4
0.00.446.812 I 
0.00.446.887 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.891 I 
0.00.446.932 I sampler seed: 82762673
0.00.446.943 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.946 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.446.947 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.947 I 
 squaRELLA. This is an ancient Egyptian spell.

**Translation:** "I am the one who carries the divine light within me."

**Meaning:**

0.02.017.914 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6856.43 tokens per second)
0.02.017.917 I llama_perf_context_print:        load time =     444.88 ms
0.02.017.918 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.017.920 I llama_perf_context_print:        eval time =    1553.13 ms /    32 runs   (   48.54 ms per token,    20.60 tokens per second)
0.02.017.921 I llama_perf_context_print:       total time =    1571.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3934 (3752217e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32061.73 ms
main:    total time = 32061.73 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.417 I build: 3934 (3752217e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.632 I main: llama backend init
0.00.001.739 I main: load the model and apply lora adapter, if any
0.00.022.055 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.067 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.073 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.074 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.079 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.080 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.080 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.081 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.082 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.082 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.085 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.086 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.087 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.087 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.088 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.704 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.020 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.852 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.858 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.859 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.860 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.860 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.861 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.861 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.864 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.864 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.867 I llama_model_loader: - type  f32:   37 tensors
0.00.131.869 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.870 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.245 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.231.594 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.232.718 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.236.150 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.243.220 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.728 I llm_load_vocab: special tokens cache size = 5
0.00.264.659 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.673 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.674 I llm_load_print_meta: arch             = gemma
0.00.264.674 I llm_load_print_meta: vocab type       = SPM
0.00.264.675 I llm_load_print_meta: n_vocab          = 256000
0.00.264.675 I llm_load_print_meta: n_merges         = 0
0.00.264.676 I llm_load_print_meta: vocab_only       = 0
0.00.264.676 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.676 I llm_load_print_meta: n_embd           = 2048
0.00.264.677 I llm_load_print_meta: n_layer          = 18
0.00.264.688 I llm_load_print_meta: n_head           = 8
0.00.264.689 I llm_load_print_meta: n_head_kv        = 1
0.00.264.689 I llm_load_print_meta: n_rot            = 256
0.00.264.690 I llm_load_print_meta: n_swa            = 0
0.00.264.690 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.690 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.691 I llm_load_print_meta: n_gqa            = 8
0.00.264.692 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.693 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.694 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.696 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.696 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.696 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.697 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.698 I llm_load_print_meta: n_ff             = 16384
0.00.264.698 I llm_load_print_meta: n_expert         = 0
0.00.264.698 I llm_load_print_meta: n_expert_used    = 0
0.00.264.699 I llm_load_print_meta: causal attn      = 1
0.00.264.699 I llm_load_print_meta: pooling type     = 0
0.00.264.700 I llm_load_print_meta: rope type        = 2
0.00.264.701 I llm_load_print_meta: rope scaling     = linear
0.00.264.702 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.703 I llm_load_print_meta: freq_scale_train = 1
0.00.264.703 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.704 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.704 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.705 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.705 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.705 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.706 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.706 I llm_load_print_meta: model type       = 2B
0.00.264.708 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.709 I llm_load_print_meta: model params     = 2.51 B
0.00.264.713 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.713 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.714 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.714 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.715 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.715 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.716 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.716 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.716 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.717 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.718 I llm_load_print_meta: max token length = 93
0.00.264.737 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.322.719 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.327.655 I llama_new_context_with_model: n_ctx      = 8192
0.00.327.661 I llama_new_context_with_model: n_batch    = 2048
0.00.327.662 I llama_new_context_with_model: n_ubatch   = 512
0.00.327.662 I llama_new_context_with_model: flash_attn = 0
0.00.327.664 I llama_new_context_with_model: freq_base  = 10000.0
0.00.327.665 I llama_new_context_with_model: freq_scale = 1
0.00.358.866 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.883 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.975 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.842 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.851 I llama_new_context_with_model: graph nodes  = 601
0.00.359.851 I llama_new_context_with_model: graph splits = 1
0.00.359.853 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.236 I main: llama threadpool init, n_threads = 4
0.00.441.249 I 
0.00.441.326 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.329 I 
0.00.441.368 I sampler seed: 3686692672
0.00.441.378 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.383 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.441.383 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.383 I 
 seconded. The sentence is grammatically correct, but it sounds awkward. Can you suggest some ways to rewrite it without sounding awkward?

Here is the sentence

0.01.992.402 I llama_perf_sampler_print:    sampling time =       4.79 ms /    33 runs   (    0.15 ms per token,  6886.48 tokens per second)
0.01.992.405 I llama_perf_context_print:        load time =     439.47 ms
0.01.992.407 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.992.408 I llama_perf_context_print:        eval time =    1533.32 ms /    32 runs   (   47.92 ms per token,    20.87 tokens per second)
0.01.992.409 I llama_perf_context_print:       total time =    1551.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.548s
user	8m14.379s
sys	0m7.010s
