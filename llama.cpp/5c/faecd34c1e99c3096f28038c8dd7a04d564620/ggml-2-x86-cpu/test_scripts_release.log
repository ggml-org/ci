+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.000.910 I main: load the model and apply lora adapter, if any
0.00.021.621 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.631 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.639 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.644 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.645 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.652 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.653 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.654 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.654 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.655 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.656 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.668 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.673 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.674 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.675 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.676 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.538 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.680 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.522 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.528 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.529 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.529 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.530 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.531 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.531 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.534 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.535 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.536 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.536 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.537 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.542 I llama_model_loader: - type  f32:   37 tensors
0.00.132.543 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.409 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.705 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.321 I llm_load_vocab: special tokens cache size = 5
0.00.273.118 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.133 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.133 I llm_load_print_meta: arch             = gemma
0.00.273.134 I llm_load_print_meta: vocab type       = SPM
0.00.273.134 I llm_load_print_meta: n_vocab          = 256000
0.00.273.135 I llm_load_print_meta: n_merges         = 0
0.00.273.135 I llm_load_print_meta: vocab_only       = 0
0.00.273.135 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.136 I llm_load_print_meta: n_embd           = 2048
0.00.273.136 I llm_load_print_meta: n_layer          = 18
0.00.273.147 I llm_load_print_meta: n_head           = 8
0.00.273.149 I llm_load_print_meta: n_head_kv        = 1
0.00.273.149 I llm_load_print_meta: n_rot            = 256
0.00.273.149 I llm_load_print_meta: n_swa            = 0
0.00.273.149 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.150 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.151 I llm_load_print_meta: n_gqa            = 8
0.00.273.152 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.153 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.153 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.155 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.155 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.156 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.156 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.157 I llm_load_print_meta: n_ff             = 16384
0.00.273.157 I llm_load_print_meta: n_expert         = 0
0.00.273.157 I llm_load_print_meta: n_expert_used    = 0
0.00.273.158 I llm_load_print_meta: causal attn      = 1
0.00.273.158 I llm_load_print_meta: pooling type     = 0
0.00.273.158 I llm_load_print_meta: rope type        = 2
0.00.273.159 I llm_load_print_meta: rope scaling     = linear
0.00.273.160 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.160 I llm_load_print_meta: freq_scale_train = 1
0.00.273.161 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.161 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.162 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.162 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.162 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.162 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.163 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.163 I llm_load_print_meta: model type       = 2B
0.00.273.164 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.164 I llm_load_print_meta: model params     = 2.51 B
0.00.273.165 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.166 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.166 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.167 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.167 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.167 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.168 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.168 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.168 I llm_load_print_meta: max token length = 93
0.00.373.320 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.373.329 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.373.330 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.373.330 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.373.331 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.373.331 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.378.693 I llama_new_context_with_model: n_seq_max     = 1
0.00.378.700 I llama_new_context_with_model: n_ctx         = 4096
0.00.378.701 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.378.701 I llama_new_context_with_model: n_batch       = 2048
0.00.378.702 I llama_new_context_with_model: n_ubatch      = 512
0.00.378.702 I llama_new_context_with_model: flash_attn    = 0
0.00.378.705 I llama_new_context_with_model: freq_base     = 10000.0
0.00.378.706 I llama_new_context_with_model: freq_scale    = 1
0.00.378.707 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.394.484 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.394.498 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.394.585 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.395.822 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.395.829 I llama_new_context_with_model: graph nodes  = 601
0.00.395.830 I llama_new_context_with_model: graph splits = 1
0.00.395.832 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.051 I main: llama threadpool init, n_threads = 4
0.00.482.066 I 
0.00.482.144 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.482.149 I 
0.00.482.197 I sampler seed: 2144784049
0.00.482.208 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.211 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.482.212 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.213 I 
 increably. It is a very beautiful, intricate, and complex structure, and it is a testament to the power and beauty of nature.

The structure is

0.02.752.145 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7036.25 tokens per second)
0.02.752.148 I llama_perf_context_print:        load time =     481.12 ms
0.02.752.150 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.752.151 I llama_perf_context_print:        eval time =    2251.20 ms /    32 runs   (   70.35 ms per token,    14.21 tokens per second)
0.02.752.152 I llama_perf_context_print:       total time =    2270.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.537 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.000.937 I main: load the model and apply lora adapter, if any
0.00.021.611 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.626 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.633 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.634 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.638 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.639 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.640 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.640 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.641 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.641 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.645 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.646 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.646 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.647 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.647 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.490 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.681 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.553 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.561 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.561 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.562 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.562 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.563 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.563 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.566 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.566 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.567 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.567 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.569 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.574 I llama_model_loader: - type  f32:   37 tensors
0.00.132.575 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.431 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.274.869 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.275.577 I llm_load_vocab: special tokens cache size = 5
0.00.296.648 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.296.668 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.296.668 I llm_load_print_meta: arch             = gemma
0.00.296.669 I llm_load_print_meta: vocab type       = SPM
0.00.296.670 I llm_load_print_meta: n_vocab          = 256000
0.00.296.670 I llm_load_print_meta: n_merges         = 0
0.00.296.671 I llm_load_print_meta: vocab_only       = 0
0.00.296.671 I llm_load_print_meta: n_ctx_train      = 8192
0.00.296.672 I llm_load_print_meta: n_embd           = 2048
0.00.296.672 I llm_load_print_meta: n_layer          = 18
0.00.296.684 I llm_load_print_meta: n_head           = 8
0.00.296.685 I llm_load_print_meta: n_head_kv        = 1
0.00.296.686 I llm_load_print_meta: n_rot            = 256
0.00.296.686 I llm_load_print_meta: n_swa            = 0
0.00.296.687 I llm_load_print_meta: n_embd_head_k    = 256
0.00.296.687 I llm_load_print_meta: n_embd_head_v    = 256
0.00.296.688 I llm_load_print_meta: n_gqa            = 8
0.00.296.689 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.296.690 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.296.691 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.296.692 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.296.692 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.296.693 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.296.693 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.296.694 I llm_load_print_meta: n_ff             = 16384
0.00.296.694 I llm_load_print_meta: n_expert         = 0
0.00.296.695 I llm_load_print_meta: n_expert_used    = 0
0.00.296.695 I llm_load_print_meta: causal attn      = 1
0.00.296.695 I llm_load_print_meta: pooling type     = 0
0.00.296.696 I llm_load_print_meta: rope type        = 2
0.00.296.696 I llm_load_print_meta: rope scaling     = linear
0.00.296.697 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.296.698 I llm_load_print_meta: freq_scale_train = 1
0.00.296.698 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.296.699 I llm_load_print_meta: rope_finetuned   = unknown
0.00.296.699 I llm_load_print_meta: ssm_d_conv       = 0
0.00.296.699 I llm_load_print_meta: ssm_d_inner      = 0
0.00.296.699 I llm_load_print_meta: ssm_d_state      = 0
0.00.296.699 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.296.700 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.296.700 I llm_load_print_meta: model type       = 2B
0.00.296.701 I llm_load_print_meta: model ftype      = Q8_0
0.00.296.702 I llm_load_print_meta: model params     = 2.51 B
0.00.296.703 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.296.703 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.296.704 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.296.705 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.296.705 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.296.705 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.296.706 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.296.706 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.296.706 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.296.707 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.296.707 I llm_load_print_meta: max token length = 93
0.00.391.761 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.397.063 I llama_new_context_with_model: n_seq_max     = 1
0.00.397.071 I llama_new_context_with_model: n_ctx         = 4096
0.00.397.072 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.397.072 I llama_new_context_with_model: n_batch       = 2048
0.00.397.073 I llama_new_context_with_model: n_ubatch      = 512
0.00.397.073 I llama_new_context_with_model: flash_attn    = 0
0.00.397.077 I llama_new_context_with_model: freq_base     = 10000.0
0.00.397.077 I llama_new_context_with_model: freq_scale    = 1
0.00.397.078 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.414.029 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.414.048 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.414.144 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.409 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.415.415 I llama_new_context_with_model: graph nodes  = 601
0.00.415.415 I llama_new_context_with_model: graph splits = 1
0.00.415.417 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.500.430 I main: llama threadpool init, n_threads = 4
0.00.500.444 I 
0.00.500.524 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.500.529 I 
0.00.500.585 I sampler seed: 847128763
0.00.500.596 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.500.601 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.500.602 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.500.602 I 
 increably. [end of text]


0.00.785.846 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7788.16 tokens per second)
0.00.785.848 I llama_perf_context_print:        load time =     499.47 ms
0.00.785.849 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.785.850 I llama_perf_context_print:        eval time =     282.06 ms /     4 runs   (   70.52 ms per token,    14.18 tokens per second)
0.00.785.850 I llama_perf_context_print:       total time =     285.42 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.489 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.911 I main: load the model and apply lora adapter, if any
0.00.023.041 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.051 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.058 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.063 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.064 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.068 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.069 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.070 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.071 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.072 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.072 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.078 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.079 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.079 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.080 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.081 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.826 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.233 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.124 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.132 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.133 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.134 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.134 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.135 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.136 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.139 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.139 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.140 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.140 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.136.141 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.146 I llama_model_loader: - type  f32:   37 tensors
0.00.136.147 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.310 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.525 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.133 I llm_load_vocab: special tokens cache size = 5
0.00.293.016 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.034 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.035 I llm_load_print_meta: arch             = gemma
0.00.293.035 I llm_load_print_meta: vocab type       = SPM
0.00.293.036 I llm_load_print_meta: n_vocab          = 256000
0.00.293.036 I llm_load_print_meta: n_merges         = 0
0.00.293.037 I llm_load_print_meta: vocab_only       = 0
0.00.293.037 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.037 I llm_load_print_meta: n_embd           = 2048
0.00.293.038 I llm_load_print_meta: n_layer          = 18
0.00.293.050 I llm_load_print_meta: n_head           = 8
0.00.293.050 I llm_load_print_meta: n_head_kv        = 1
0.00.293.051 I llm_load_print_meta: n_rot            = 256
0.00.293.051 I llm_load_print_meta: n_swa            = 0
0.00.293.051 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.052 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.053 I llm_load_print_meta: n_gqa            = 8
0.00.293.054 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.054 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.055 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.056 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.057 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.057 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.057 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.058 I llm_load_print_meta: n_ff             = 16384
0.00.293.058 I llm_load_print_meta: n_expert         = 0
0.00.293.059 I llm_load_print_meta: n_expert_used    = 0
0.00.293.059 I llm_load_print_meta: causal attn      = 1
0.00.293.059 I llm_load_print_meta: pooling type     = 0
0.00.293.060 I llm_load_print_meta: rope type        = 2
0.00.293.060 I llm_load_print_meta: rope scaling     = linear
0.00.293.061 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.062 I llm_load_print_meta: freq_scale_train = 1
0.00.293.062 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.063 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.063 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.063 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.063 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.064 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.064 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.065 I llm_load_print_meta: model type       = 2B
0.00.293.065 I llm_load_print_meta: model ftype      = Q8_0
0.00.293.066 I llm_load_print_meta: model params     = 2.51 B
0.00.293.067 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.293.067 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.068 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.068 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.069 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.069 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.069 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.069 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.070 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.070 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.070 I llm_load_print_meta: max token length = 93
0.00.375.796 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.375.803 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.375.804 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.375.804 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.375.805 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.375.806 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.380.960 I llama_new_context_with_model: n_seq_max     = 1
0.00.380.967 I llama_new_context_with_model: n_ctx         = 4096
0.00.380.967 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.380.968 I llama_new_context_with_model: n_batch       = 2048
0.00.380.968 I llama_new_context_with_model: n_ubatch      = 512
0.00.380.968 I llama_new_context_with_model: flash_attn    = 0
0.00.380.972 I llama_new_context_with_model: freq_base     = 10000.0
0.00.380.973 I llama_new_context_with_model: freq_scale    = 1
0.00.380.974 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.365 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.379 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.475 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.717 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.397.723 I llama_new_context_with_model: graph nodes  = 601
0.00.397.724 I llama_new_context_with_model: graph splits = 1
0.00.397.725 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.138 I main: llama threadpool init, n_threads = 4
0.00.481.153 I 
0.00.481.237 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.241 I 
0.00.481.297 I sampler seed: 3330700231
0.00.481.307 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.310 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.310 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.310 I 
 increasities and anxieties.

I cannot answer the question as it contains inappropriate content and could be harmful or offensive. [end of text]


0.02.158.409 I llama_perf_sampler_print:    sampling time =       3.51 ms /    25 runs   (    0.14 ms per token,  7122.51 tokens per second)
0.02.158.412 I llama_perf_context_print:        load time =     480.20 ms
0.02.158.414 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.158.416 I llama_perf_context_print:        eval time =    1662.83 ms /    24 runs   (   69.28 ms per token,    14.43 tokens per second)
0.02.158.417 I llama_perf_context_print:       total time =    1677.28 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.638 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.897 I main: llama backend init
0.00.001.094 I main: load the model and apply lora adapter, if any
0.00.021.769 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.781 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.799 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.804 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.805 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.810 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.811 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.811 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.812 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.812 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.813 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.818 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.818 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.819 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.819 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.820 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.768 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.292 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.190 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.197 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.198 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.199 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.199 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.200 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.201 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.204 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.205 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.206 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.206 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.136.207 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.211 I llama_model_loader: - type  f32:   37 tensors
0.00.136.212 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.836 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.267.620 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.200 I llm_load_vocab: special tokens cache size = 5
0.00.289.081 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.289.100 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.289.100 I llm_load_print_meta: arch             = gemma
0.00.289.101 I llm_load_print_meta: vocab type       = SPM
0.00.289.102 I llm_load_print_meta: n_vocab          = 256000
0.00.289.102 I llm_load_print_meta: n_merges         = 0
0.00.289.102 I llm_load_print_meta: vocab_only       = 0
0.00.289.103 I llm_load_print_meta: n_ctx_train      = 8192
0.00.289.103 I llm_load_print_meta: n_embd           = 2048
0.00.289.103 I llm_load_print_meta: n_layer          = 18
0.00.289.115 I llm_load_print_meta: n_head           = 8
0.00.289.116 I llm_load_print_meta: n_head_kv        = 1
0.00.289.117 I llm_load_print_meta: n_rot            = 256
0.00.289.117 I llm_load_print_meta: n_swa            = 0
0.00.289.117 I llm_load_print_meta: n_embd_head_k    = 256
0.00.289.117 I llm_load_print_meta: n_embd_head_v    = 256
0.00.289.118 I llm_load_print_meta: n_gqa            = 8
0.00.289.119 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.289.120 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.289.121 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.289.123 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.289.123 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.289.123 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.289.123 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.289.124 I llm_load_print_meta: n_ff             = 16384
0.00.289.125 I llm_load_print_meta: n_expert         = 0
0.00.289.125 I llm_load_print_meta: n_expert_used    = 0
0.00.289.125 I llm_load_print_meta: causal attn      = 1
0.00.289.126 I llm_load_print_meta: pooling type     = 0
0.00.289.126 I llm_load_print_meta: rope type        = 2
0.00.289.126 I llm_load_print_meta: rope scaling     = linear
0.00.289.127 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.289.128 I llm_load_print_meta: freq_scale_train = 1
0.00.289.129 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.289.129 I llm_load_print_meta: rope_finetuned   = unknown
0.00.289.129 I llm_load_print_meta: ssm_d_conv       = 0
0.00.289.130 I llm_load_print_meta: ssm_d_inner      = 0
0.00.289.130 I llm_load_print_meta: ssm_d_state      = 0
0.00.289.130 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.289.130 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.289.131 I llm_load_print_meta: model type       = 2B
0.00.289.132 I llm_load_print_meta: model ftype      = Q8_0
0.00.289.132 I llm_load_print_meta: model params     = 2.51 B
0.00.289.133 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.289.133 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.289.134 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.289.134 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.289.135 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.289.135 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.289.135 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.289.136 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.289.136 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.289.137 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.289.137 I llm_load_print_meta: max token length = 93
0.00.364.162 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.364.170 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.369.348 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.355 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.355 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.356 I llama_new_context_with_model: n_batch       = 2048
0.00.369.356 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.357 I llama_new_context_with_model: flash_attn    = 0
0.00.369.359 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.361 I llama_new_context_with_model: freq_scale    = 1
0.00.369.362 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.063 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.078 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.170 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.450 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.455 I llama_new_context_with_model: graph nodes  = 601
0.00.386.455 I llama_new_context_with_model: graph splits = 1
0.00.386.457 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.671 I main: llama threadpool init, n_threads = 4
0.00.475.685 I 
0.00.475.759 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.763 I 
0.00.475.805 I sampler seed: 2330251071
0.00.475.816 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.818 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.475.819 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.819 I 
 increasities by the user. [end of text]


0.01.016.969 I llama_perf_sampler_print:    sampling time =       1.17 ms /     8 runs   (    0.15 ms per token,  6825.94 tokens per second)
0.01.016.971 I llama_perf_context_print:        load time =     474.55 ms
0.01.016.972 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.016.973 I llama_perf_context_print:        eval time =     536.13 ms /     7 runs   (   76.59 ms per token,    13.06 tokens per second)
0.01.016.974 I llama_perf_context_print:       total time =     541.30 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.927s
user	0m22.149s
sys	0m9.535s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4077 (5cfaecd3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40239.29 ms
main:    total time = 40239.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.562 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.000.935 I main: load the model and apply lora adapter, if any
0.00.021.839 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.850 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.860 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.869 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.871 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.877 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.878 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.879 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.880 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.881 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.882 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.886 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.887 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.888 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.888 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.889 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.417 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.651 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.478 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.484 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.485 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.485 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.486 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.487 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.487 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.490 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.490 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.491 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.492 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.493 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.497 I llama_model_loader: - type  f32:   37 tensors
0.00.132.498 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.498 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.454 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.831 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.489 I llm_load_vocab: special tokens cache size = 5
0.00.274.443 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.463 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.463 I llm_load_print_meta: arch             = gemma
0.00.274.464 I llm_load_print_meta: vocab type       = SPM
0.00.274.464 I llm_load_print_meta: n_vocab          = 256000
0.00.274.465 I llm_load_print_meta: n_merges         = 0
0.00.274.465 I llm_load_print_meta: vocab_only       = 0
0.00.274.465 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.466 I llm_load_print_meta: n_embd           = 2048
0.00.274.466 I llm_load_print_meta: n_layer          = 18
0.00.274.478 I llm_load_print_meta: n_head           = 8
0.00.274.479 I llm_load_print_meta: n_head_kv        = 1
0.00.274.480 I llm_load_print_meta: n_rot            = 256
0.00.274.481 I llm_load_print_meta: n_swa            = 0
0.00.274.481 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.482 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.483 I llm_load_print_meta: n_gqa            = 8
0.00.274.484 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.485 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.486 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.487 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.488 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.488 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.489 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.491 I llm_load_print_meta: n_ff             = 16384
0.00.274.491 I llm_load_print_meta: n_expert         = 0
0.00.274.492 I llm_load_print_meta: n_expert_used    = 0
0.00.274.492 I llm_load_print_meta: causal attn      = 1
0.00.274.492 I llm_load_print_meta: pooling type     = 0
0.00.274.492 I llm_load_print_meta: rope type        = 2
0.00.274.493 I llm_load_print_meta: rope scaling     = linear
0.00.274.494 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.495 I llm_load_print_meta: freq_scale_train = 1
0.00.274.496 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.496 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.497 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.497 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.497 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.497 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.498 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.499 I llm_load_print_meta: model type       = 2B
0.00.274.499 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.500 I llm_load_print_meta: model params     = 2.51 B
0.00.274.501 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.501 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.502 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.503 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.503 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.503 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.504 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.504 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.505 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.505 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.506 I llm_load_print_meta: max token length = 93
0.00.334.044 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.334.053 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.334.054 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.334.055 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.334.056 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.334.056 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.339.387 I llama_new_context_with_model: n_seq_max     = 1
0.00.339.394 I llama_new_context_with_model: n_ctx         = 4096
0.00.339.395 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.339.395 I llama_new_context_with_model: n_batch       = 2048
0.00.339.395 I llama_new_context_with_model: n_ubatch      = 512
0.00.339.396 I llama_new_context_with_model: flash_attn    = 0
0.00.339.398 I llama_new_context_with_model: freq_base     = 10000.0
0.00.339.399 I llama_new_context_with_model: freq_scale    = 1
0.00.339.400 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.253 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.267 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.360 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.609 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.356.615 I llama_new_context_with_model: graph nodes  = 601
0.00.356.615 I llama_new_context_with_model: graph splits = 1
0.00.356.617 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.306 I main: llama threadpool init, n_threads = 4
0.00.433.321 I 
0.00.433.394 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.398 I 
0.00.433.440 I sampler seed: 1667489088
0.00.433.452 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.459 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.433.462 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.462 I 
 seconded and appended to the original message. [end of text]


0.00.965.264 I llama_perf_sampler_print:    sampling time =       1.65 ms /    11 runs   (    0.15 ms per token,  6658.60 tokens per second)
0.00.965.267 I llama_perf_context_print:        load time =     432.35 ms
0.00.965.268 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.965.269 I llama_perf_context_print:        eval time =     525.15 ms /    10 runs   (   52.52 ms per token,    19.04 tokens per second)
0.00.965.270 I llama_perf_context_print:       total time =     531.97 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4077 (5cfaecd3)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40218.47 ms
main:    total time = 40218.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.551 I build: 4077 (5cfaecd3) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.000.986 I main: load the model and apply lora adapter, if any
0.00.021.255 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.274 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.282 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.283 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.287 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.289 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.290 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.291 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.291 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.291 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.296 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.297 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.297 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.298 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.298 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.069 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.930 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.937 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.938 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.938 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.939 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.940 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.941 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.944 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.944 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.949 I llama_model_loader: - type  f32:   37 tensors
0.00.131.950 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.951 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.949 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.583 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.166 I llm_load_vocab: special tokens cache size = 5
0.00.272.020 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.038 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.038 I llm_load_print_meta: arch             = gemma
0.00.272.039 I llm_load_print_meta: vocab type       = SPM
0.00.272.039 I llm_load_print_meta: n_vocab          = 256000
0.00.272.040 I llm_load_print_meta: n_merges         = 0
0.00.272.040 I llm_load_print_meta: vocab_only       = 0
0.00.272.041 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.041 I llm_load_print_meta: n_embd           = 2048
0.00.272.041 I llm_load_print_meta: n_layer          = 18
0.00.272.053 I llm_load_print_meta: n_head           = 8
0.00.272.054 I llm_load_print_meta: n_head_kv        = 1
0.00.272.054 I llm_load_print_meta: n_rot            = 256
0.00.272.055 I llm_load_print_meta: n_swa            = 0
0.00.272.055 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.056 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.057 I llm_load_print_meta: n_gqa            = 8
0.00.272.058 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.059 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.059 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.060 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.061 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.061 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.062 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.062 I llm_load_print_meta: n_ff             = 16384
0.00.272.063 I llm_load_print_meta: n_expert         = 0
0.00.272.063 I llm_load_print_meta: n_expert_used    = 0
0.00.272.063 I llm_load_print_meta: causal attn      = 1
0.00.272.064 I llm_load_print_meta: pooling type     = 0
0.00.272.064 I llm_load_print_meta: rope type        = 2
0.00.272.064 I llm_load_print_meta: rope scaling     = linear
0.00.272.066 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.066 I llm_load_print_meta: freq_scale_train = 1
0.00.272.066 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.067 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.067 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.067 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.068 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.068 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.068 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.069 I llm_load_print_meta: model type       = 2B
0.00.272.069 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.070 I llm_load_print_meta: model params     = 2.51 B
0.00.272.071 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.071 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.071 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.072 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.072 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.072 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.073 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.073 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.073 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.074 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.074 I llm_load_print_meta: max token length = 93
0.00.329.163 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.334.280 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.288 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.288 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.288 I llama_new_context_with_model: n_batch       = 2048
0.00.334.289 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.290 I llama_new_context_with_model: flash_attn    = 0
0.00.334.292 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.294 I llama_new_context_with_model: freq_scale    = 1
0.00.334.295 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.133 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.350.148 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.350.240 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.524 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.351.532 I llama_new_context_with_model: graph nodes  = 601
0.00.351.532 I llama_new_context_with_model: graph splits = 1
0.00.351.534 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.426.143 I main: llama threadpool init, n_threads = 4
0.00.426.159 I 
0.00.426.249 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.426.253 I 
0.00.426.302 I sampler seed: 1850057052
0.00.426.316 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.426.321 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.426.322 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.426.322 I 
 increasities, and other harmful behaviors that impact relationships and well-being.

**Causes of such behaviors:**

- Emotional distress
- Learned helplessness
-

0.02.069.259 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6547.62 tokens per second)
0.02.069.262 I llama_perf_context_print:        load time =     425.13 ms
0.02.069.264 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.069.266 I llama_perf_context_print:        eval time =    1623.66 ms /    32 runs   (   50.74 ms per token,    19.71 tokens per second)
0.02.069.267 I llama_perf_context_print:       total time =    1643.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.316s
user	10m20.068s
sys	0m7.113s
