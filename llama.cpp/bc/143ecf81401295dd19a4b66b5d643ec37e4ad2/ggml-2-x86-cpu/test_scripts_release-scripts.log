+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.555 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.000.894 I main: load the model and apply lora adapter, if any
0.00.021.456 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.465 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.473 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.481 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.485 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.489 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.490 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.495 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.496 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.497 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.497 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.503 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.504 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.505 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.506 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.507 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.186 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.215 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.048 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.055 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.056 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.056 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.057 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.058 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.059 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.064 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.064 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.065 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.066 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.067 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.070 I llama_model_loader: - type  f32:   37 tensors
0.00.132.071 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.699 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.405 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.991 I llm_load_vocab: special tokens cache size = 5
0.00.268.244 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.263 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.264 I llm_load_print_meta: arch             = gemma
0.00.268.264 I llm_load_print_meta: vocab type       = SPM
0.00.268.265 I llm_load_print_meta: n_vocab          = 256000
0.00.268.265 I llm_load_print_meta: n_merges         = 0
0.00.268.265 I llm_load_print_meta: vocab_only       = 0
0.00.268.266 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.266 I llm_load_print_meta: n_embd           = 2048
0.00.268.266 I llm_load_print_meta: n_layer          = 18
0.00.268.277 I llm_load_print_meta: n_head           = 8
0.00.268.278 I llm_load_print_meta: n_head_kv        = 1
0.00.268.278 I llm_load_print_meta: n_rot            = 256
0.00.268.279 I llm_load_print_meta: n_swa            = 0
0.00.268.279 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.279 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.280 I llm_load_print_meta: n_gqa            = 8
0.00.268.281 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.282 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.283 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.284 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.285 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.285 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.285 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.286 I llm_load_print_meta: n_ff             = 16384
0.00.268.287 I llm_load_print_meta: n_expert         = 0
0.00.268.287 I llm_load_print_meta: n_expert_used    = 0
0.00.268.287 I llm_load_print_meta: causal attn      = 1
0.00.268.288 I llm_load_print_meta: pooling type     = 0
0.00.268.288 I llm_load_print_meta: rope type        = 2
0.00.268.288 I llm_load_print_meta: rope scaling     = linear
0.00.268.289 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.290 I llm_load_print_meta: freq_scale_train = 1
0.00.268.290 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.291 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.291 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.291 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.291 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.291 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.292 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.292 I llm_load_print_meta: model type       = 2B
0.00.268.293 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.294 I llm_load_print_meta: model params     = 2.51 B
0.00.268.295 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.295 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.295 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.296 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.296 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.296 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.297 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.297 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.297 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.298 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.298 I llm_load_print_meta: max token length = 93
0.00.368.429 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.368.438 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.368.439 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.368.440 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.368.440 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.368.441 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.373.783 I llama_new_context_with_model: n_seq_max     = 1
0.00.373.789 I llama_new_context_with_model: n_ctx         = 4096
0.00.373.790 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.373.790 I llama_new_context_with_model: n_batch       = 2048
0.00.373.790 I llama_new_context_with_model: n_ubatch      = 512
0.00.373.791 I llama_new_context_with_model: flash_attn    = 0
0.00.373.793 I llama_new_context_with_model: freq_base     = 10000.0
0.00.373.794 I llama_new_context_with_model: freq_scale    = 1
0.00.373.795 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.920 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.388.935 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.032 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.272 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.279 I llama_new_context_with_model: graph nodes  = 601
0.00.390.279 I llama_new_context_with_model: graph splits = 1
0.00.390.281 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.704 I main: llama threadpool init, n_threads = 4
0.00.475.718 I 
0.00.475.803 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.806 I 
0.00.475.860 I sampler seed: 317581045
0.00.475.871 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.880 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.475.881 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.884 I 
 maneuvers!

I apologize, but I am unable to provide assistance with inappropriate or potentially harmful language or activities. [end of text]


0.02.166.711 I llama_perf_sampler_print:    sampling time =       3.52 ms /    25 runs   (    0.14 ms per token,  7102.27 tokens per second)
0.02.166.714 I llama_perf_context_print:        load time =     474.79 ms
0.02.166.715 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.166.716 I llama_perf_context_print:        eval time =    1676.15 ms /    24 runs   (   69.84 ms per token,    14.32 tokens per second)
0.02.166.717 I llama_perf_context_print:       total time =    1691.02 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.541 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.000.862 I main: load the model and apply lora adapter, if any
0.00.021.395 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.409 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.415 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.416 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.420 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.421 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.422 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.422 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.424 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.424 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.429 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.430 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.430 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.431 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.431 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.773 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.570 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.456 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.463 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.464 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.464 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.465 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.466 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.466 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.469 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.469 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.470 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.471 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.472 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.476 I llama_model_loader: - type  f32:   37 tensors
0.00.132.477 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.888 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.096 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.623 I llm_load_vocab: special tokens cache size = 5
0.00.267.776 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.793 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.794 I llm_load_print_meta: arch             = gemma
0.00.267.795 I llm_load_print_meta: vocab type       = SPM
0.00.267.796 I llm_load_print_meta: n_vocab          = 256000
0.00.267.810 I llm_load_print_meta: n_merges         = 0
0.00.267.811 I llm_load_print_meta: vocab_only       = 0
0.00.267.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.812 I llm_load_print_meta: n_embd           = 2048
0.00.267.812 I llm_load_print_meta: n_layer          = 18
0.00.267.824 I llm_load_print_meta: n_head           = 8
0.00.267.825 I llm_load_print_meta: n_head_kv        = 1
0.00.267.827 I llm_load_print_meta: n_rot            = 256
0.00.267.827 I llm_load_print_meta: n_swa            = 0
0.00.267.827 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.828 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.829 I llm_load_print_meta: n_gqa            = 8
0.00.267.830 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.831 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.832 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.834 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.834 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.835 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.835 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.836 I llm_load_print_meta: n_ff             = 16384
0.00.267.837 I llm_load_print_meta: n_expert         = 0
0.00.267.838 I llm_load_print_meta: n_expert_used    = 0
0.00.267.838 I llm_load_print_meta: causal attn      = 1
0.00.267.838 I llm_load_print_meta: pooling type     = 0
0.00.267.839 I llm_load_print_meta: rope type        = 2
0.00.267.839 I llm_load_print_meta: rope scaling     = linear
0.00.267.841 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.842 I llm_load_print_meta: freq_scale_train = 1
0.00.267.842 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.843 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.844 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.844 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.844 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.845 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.845 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.846 I llm_load_print_meta: model type       = 2B
0.00.267.847 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.848 I llm_load_print_meta: model params     = 2.51 B
0.00.267.849 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.850 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.850 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.850 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.851 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.852 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.853 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.853 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.866 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.867 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.867 I llm_load_print_meta: max token length = 93
0.00.362.761 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.367.968 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.975 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.975 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.976 I llama_new_context_with_model: n_batch       = 2048
0.00.367.976 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.976 I llama_new_context_with_model: flash_attn    = 0
0.00.367.978 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.979 I llama_new_context_with_model: freq_scale    = 1
0.00.367.980 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.439 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.453 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.543 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.741 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.748 I llama_new_context_with_model: graph nodes  = 601
0.00.384.749 I llama_new_context_with_model: graph splits = 1
0.00.384.750 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.901 I main: llama threadpool init, n_threads = 4
0.00.466.915 I 
0.00.466.991 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.995 I 
0.00.467.036 I sampler seed: 3062346876
0.00.467.048 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.050 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.467.051 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.052 I 
 increasities by making it sound like a victim's story.

I am unable to provide assistance with generating responses that contain harmful or distressing content. [end of text]


0.02.598.382 I llama_perf_sampler_print:    sampling time =       4.64 ms /    32 runs   (    0.15 ms per token,  6895.07 tokens per second)
0.02.598.384 I llama_perf_context_print:        load time =     466.02 ms
0.02.598.385 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.598.386 I llama_perf_context_print:        eval time =    2113.30 ms /    31 runs   (   68.17 ms per token,    14.67 tokens per second)
0.02.598.387 I llama_perf_context_print:       total time =    2131.49 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.607 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.000.938 I main: load the model and apply lora adapter, if any
0.00.021.251 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.260 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.268 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.272 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.273 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.276 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.277 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.277 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.278 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.278 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.279 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.282 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.282 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.283 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.283 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.284 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.333 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.460 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.322 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.328 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.329 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.329 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.330 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.331 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.332 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.334 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.334 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.335 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.336 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.337 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.341 I llama_model_loader: - type  f32:   37 tensors
0.00.130.342 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.228 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.349 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.929 I llm_load_vocab: special tokens cache size = 5
0.00.262.113 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.130 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.130 I llm_load_print_meta: arch             = gemma
0.00.262.131 I llm_load_print_meta: vocab type       = SPM
0.00.262.131 I llm_load_print_meta: n_vocab          = 256000
0.00.262.132 I llm_load_print_meta: n_merges         = 0
0.00.262.132 I llm_load_print_meta: vocab_only       = 0
0.00.262.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.133 I llm_load_print_meta: n_embd           = 2048
0.00.262.133 I llm_load_print_meta: n_layer          = 18
0.00.262.146 I llm_load_print_meta: n_head           = 8
0.00.262.147 I llm_load_print_meta: n_head_kv        = 1
0.00.262.148 I llm_load_print_meta: n_rot            = 256
0.00.262.148 I llm_load_print_meta: n_swa            = 0
0.00.262.149 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.149 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.150 I llm_load_print_meta: n_gqa            = 8
0.00.262.151 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.152 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.153 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.154 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.154 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.155 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.155 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.156 I llm_load_print_meta: n_ff             = 16384
0.00.262.156 I llm_load_print_meta: n_expert         = 0
0.00.262.157 I llm_load_print_meta: n_expert_used    = 0
0.00.262.157 I llm_load_print_meta: causal attn      = 1
0.00.262.157 I llm_load_print_meta: pooling type     = 0
0.00.262.158 I llm_load_print_meta: rope type        = 2
0.00.262.158 I llm_load_print_meta: rope scaling     = linear
0.00.262.159 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.160 I llm_load_print_meta: freq_scale_train = 1
0.00.262.160 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.161 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.161 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.161 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.161 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.161 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.162 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.162 I llm_load_print_meta: model type       = 2B
0.00.262.163 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.164 I llm_load_print_meta: model params     = 2.51 B
0.00.262.165 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.165 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.166 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.167 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.167 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.167 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.168 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.168 I llm_load_print_meta: max token length = 93
0.00.349.144 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.349.151 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.151 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.349.152 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.349.153 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.153 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.354.413 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.420 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.420 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.421 I llama_new_context_with_model: n_batch       = 2048
0.00.354.421 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.422 I llama_new_context_with_model: flash_attn    = 0
0.00.354.424 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.425 I llama_new_context_with_model: freq_scale    = 1
0.00.354.426 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.369.931 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.944 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.035 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.246 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.371.252 I llama_new_context_with_model: graph nodes  = 601
0.00.371.253 I llama_new_context_with_model: graph splits = 1
0.00.371.254 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.859 I main: llama threadpool init, n_threads = 4
0.00.459.872 I 
0.00.459.950 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.459.953 I 
0.00.459.995 I sampler seed: 2250720451
0.00.460.006 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.009 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.010 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.010 I 
 increadibly!

I am unable to understand your query. Please provide more context or clarify your question. [end of text]


0.01.959.568 I llama_perf_sampler_print:    sampling time =       3.67 ms /    23 runs   (    0.16 ms per token,  6275.58 tokens per second)
0.01.959.571 I llama_perf_context_print:        load time =     458.90 ms
0.01.959.572 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.959.573 I llama_perf_context_print:        eval time =    1485.25 ms /    22 runs   (   67.51 ms per token,    14.81 tokens per second)
0.01.959.574 I llama_perf_context_print:       total time =    1499.72 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.547 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.000.876 I main: load the model and apply lora adapter, if any
0.00.020.807 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.817 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.824 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.829 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.830 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.834 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.834 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.835 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.835 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.836 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.836 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.841 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.842 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.842 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.843 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.843 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.347 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.617 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.501 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.510 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.511 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.512 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.512 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.513 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.513 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.516 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.517 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.518 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.518 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.519 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.523 I llama_model_loader: - type  f32:   37 tensors
0.00.131.524 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.533 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.698 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.277 I llm_load_vocab: special tokens cache size = 5
0.00.280.606 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.621 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.622 I llm_load_print_meta: arch             = gemma
0.00.280.623 I llm_load_print_meta: vocab type       = SPM
0.00.280.623 I llm_load_print_meta: n_vocab          = 256000
0.00.280.623 I llm_load_print_meta: n_merges         = 0
0.00.280.624 I llm_load_print_meta: vocab_only       = 0
0.00.280.624 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.624 I llm_load_print_meta: n_embd           = 2048
0.00.280.625 I llm_load_print_meta: n_layer          = 18
0.00.280.635 I llm_load_print_meta: n_head           = 8
0.00.280.636 I llm_load_print_meta: n_head_kv        = 1
0.00.280.636 I llm_load_print_meta: n_rot            = 256
0.00.280.636 I llm_load_print_meta: n_swa            = 0
0.00.280.637 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.637 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.638 I llm_load_print_meta: n_gqa            = 8
0.00.280.639 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.640 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.641 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.642 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.642 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.643 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.643 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.644 I llm_load_print_meta: n_ff             = 16384
0.00.280.644 I llm_load_print_meta: n_expert         = 0
0.00.280.644 I llm_load_print_meta: n_expert_used    = 0
0.00.280.645 I llm_load_print_meta: causal attn      = 1
0.00.280.645 I llm_load_print_meta: pooling type     = 0
0.00.280.645 I llm_load_print_meta: rope type        = 2
0.00.280.646 I llm_load_print_meta: rope scaling     = linear
0.00.280.647 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.648 I llm_load_print_meta: freq_scale_train = 1
0.00.280.648 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.648 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.649 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.649 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.649 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.649 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.650 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.650 I llm_load_print_meta: model type       = 2B
0.00.280.651 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.652 I llm_load_print_meta: model params     = 2.51 B
0.00.280.652 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.653 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.653 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.654 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.654 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.654 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.655 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.655 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.655 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.655 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.656 I llm_load_print_meta: max token length = 93
0.00.351.676 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.351.683 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.356.708 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.714 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.714 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.715 I llama_new_context_with_model: n_batch       = 2048
0.00.356.715 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.716 I llama_new_context_with_model: flash_attn    = 0
0.00.356.718 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.719 I llama_new_context_with_model: freq_scale    = 1
0.00.356.720 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.635 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.648 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.732 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.949 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.956 I llama_new_context_with_model: graph nodes  = 601
0.00.372.956 I llama_new_context_with_model: graph splits = 1
0.00.372.958 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.265 I main: llama threadpool init, n_threads = 4
0.00.459.277 I 
0.00.459.356 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.459.359 I 
0.00.459.402 I sampler seed: 4062086963
0.00.459.413 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.416 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.459.417 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.417 I 
 increasities
I am unable to generate the requested response as it contains sexually suggestive or inappropriate content. [end of text]


0.02.033.810 I llama_perf_sampler_print:    sampling time =       3.36 ms /    22 runs   (    0.15 ms per token,  6551.52 tokens per second)
0.02.033.812 I llama_perf_context_print:        load time =     458.37 ms
0.02.033.813 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.033.814 I llama_perf_context_print:        eval time =    1561.81 ms /    21 runs   (   74.37 ms per token,    13.45 tokens per second)
0.02.033.815 I llama_perf_context_print:       total time =    1574.55 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.533s
user	0m30.398s
sys	0m9.394s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4056 (bc143ecf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32010.36 ms
main:    total time = 32010.36 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.000.890 I main: load the model and apply lora adapter, if any
0.00.021.255 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.265 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.273 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.278 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.279 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.283 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.284 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.284 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.285 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.285 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.286 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.290 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.291 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.291 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.292 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.292 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.572 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.154 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.140 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.149 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.150 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.151 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.151 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.152 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.153 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.155 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.156 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.157 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.158 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.159 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.163 I llama_model_loader: - type  f32:   37 tensors
0.00.132.164 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.165 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.656 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.341 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.985 I llm_load_vocab: special tokens cache size = 5
0.00.268.378 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.393 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.394 I llm_load_print_meta: arch             = gemma
0.00.268.394 I llm_load_print_meta: vocab type       = SPM
0.00.268.395 I llm_load_print_meta: n_vocab          = 256000
0.00.268.395 I llm_load_print_meta: n_merges         = 0
0.00.268.396 I llm_load_print_meta: vocab_only       = 0
0.00.268.396 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.396 I llm_load_print_meta: n_embd           = 2048
0.00.268.396 I llm_load_print_meta: n_layer          = 18
0.00.268.408 I llm_load_print_meta: n_head           = 8
0.00.268.409 I llm_load_print_meta: n_head_kv        = 1
0.00.268.409 I llm_load_print_meta: n_rot            = 256
0.00.268.409 I llm_load_print_meta: n_swa            = 0
0.00.268.410 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.410 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.411 I llm_load_print_meta: n_gqa            = 8
0.00.268.412 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.413 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.414 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.415 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.416 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.416 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.416 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.417 I llm_load_print_meta: n_ff             = 16384
0.00.268.417 I llm_load_print_meta: n_expert         = 0
0.00.268.418 I llm_load_print_meta: n_expert_used    = 0
0.00.268.418 I llm_load_print_meta: causal attn      = 1
0.00.268.418 I llm_load_print_meta: pooling type     = 0
0.00.268.419 I llm_load_print_meta: rope type        = 2
0.00.268.419 I llm_load_print_meta: rope scaling     = linear
0.00.268.421 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.421 I llm_load_print_meta: freq_scale_train = 1
0.00.268.422 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.422 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.422 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.422 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.423 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.423 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.423 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.424 I llm_load_print_meta: model type       = 2B
0.00.268.424 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.268.425 I llm_load_print_meta: model params     = 2.51 B
0.00.268.425 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.268.426 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.426 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.426 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.427 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.427 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.427 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.428 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.428 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.428 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.428 I llm_load_print_meta: max token length = 93
0.00.340.915 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.340.922 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.340.923 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.340.924 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.340.925 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.340.925 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.346.136 I llama_new_context_with_model: n_seq_max     = 1
0.00.346.141 I llama_new_context_with_model: n_ctx         = 4096
0.00.346.142 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.346.142 I llama_new_context_with_model: n_batch       = 2048
0.00.346.143 I llama_new_context_with_model: n_ubatch      = 512
0.00.346.144 I llama_new_context_with_model: flash_attn    = 0
0.00.346.146 I llama_new_context_with_model: freq_base     = 10000.0
0.00.346.147 I llama_new_context_with_model: freq_scale    = 1
0.00.346.148 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.776 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.791 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.889 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.120 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.126 I llama_new_context_with_model: graph nodes  = 601
0.00.363.127 I llama_new_context_with_model: graph splits = 1
0.00.363.128 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.718 I main: llama threadpool init, n_threads = 4
0.00.440.729 I 
0.00.440.808 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.811 I 
0.00.440.852 I sampler seed: 3002266463
0.00.440.863 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.871 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.440.871 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.872 I 
 encompasses the ability to:

**a)** Generate new ideas and solutions
**b)** Explain concepts and theories
**c)** Communicate effectively
**d

0.02.096.373 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6982.65 tokens per second)
0.02.096.375 I llama_perf_context_print:        load time =     439.81 ms
0.02.096.377 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.096.379 I llama_perf_context_print:        eval time =    1636.31 ms /    32 runs   (   51.13 ms per token,    19.56 tokens per second)
0.02.096.380 I llama_perf_context_print:       total time =    1655.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4056 (bc143ecf)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32066.24 ms
main:    total time = 32066.24 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.551 I build: 4056 (bc143ecf) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.000.883 I main: load the model and apply lora adapter, if any
0.00.021.670 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.687 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.697 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.701 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.705 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.705 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.707 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.707 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.708 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.708 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.712 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.712 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.713 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.714 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.715 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.394 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.064 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.021 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.030 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.031 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.031 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.032 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.033 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.034 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.037 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.038 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.042 I llama_model_loader: - type  f32:   37 tensors
0.00.133.043 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.044 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.944 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.514 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.989 I llm_load_vocab: special tokens cache size = 5
0.00.263.277 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.293 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.293 I llm_load_print_meta: arch             = gemma
0.00.263.294 I llm_load_print_meta: vocab type       = SPM
0.00.263.294 I llm_load_print_meta: n_vocab          = 256000
0.00.263.295 I llm_load_print_meta: n_merges         = 0
0.00.263.295 I llm_load_print_meta: vocab_only       = 0
0.00.263.295 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.296 I llm_load_print_meta: n_embd           = 2048
0.00.263.296 I llm_load_print_meta: n_layer          = 18
0.00.263.308 I llm_load_print_meta: n_head           = 8
0.00.263.309 I llm_load_print_meta: n_head_kv        = 1
0.00.263.309 I llm_load_print_meta: n_rot            = 256
0.00.263.309 I llm_load_print_meta: n_swa            = 0
0.00.263.310 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.310 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.311 I llm_load_print_meta: n_gqa            = 8
0.00.263.312 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.314 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.315 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.316 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.317 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.317 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.319 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.320 I llm_load_print_meta: n_ff             = 16384
0.00.263.321 I llm_load_print_meta: n_expert         = 0
0.00.263.321 I llm_load_print_meta: n_expert_used    = 0
0.00.263.322 I llm_load_print_meta: causal attn      = 1
0.00.263.322 I llm_load_print_meta: pooling type     = 0
0.00.263.323 I llm_load_print_meta: rope type        = 2
0.00.263.324 I llm_load_print_meta: rope scaling     = linear
0.00.263.325 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.327 I llm_load_print_meta: freq_scale_train = 1
0.00.263.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.327 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.328 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.331 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.332 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.332 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.332 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.334 I llm_load_print_meta: model type       = 2B
0.00.263.334 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.335 I llm_load_print_meta: model params     = 2.51 B
0.00.263.336 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.337 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.337 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.338 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.338 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.339 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.339 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.339 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.340 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.341 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.341 I llm_load_print_meta: max token length = 93
0.00.321.986 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.327.068 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.074 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.075 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.075 I llama_new_context_with_model: n_batch       = 2048
0.00.327.075 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.076 I llama_new_context_with_model: flash_attn    = 0
0.00.327.078 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.079 I llama_new_context_with_model: freq_scale    = 1
0.00.327.080 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.342.488 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.504 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.594 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.854 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.343.860 I llama_new_context_with_model: graph nodes  = 601
0.00.343.860 I llama_new_context_with_model: graph splits = 1
0.00.343.861 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.058 I main: llama threadpool init, n_threads = 4
0.00.423.075 I 
0.00.423.165 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.169 I 
0.00.423.220 I sampler seed: 1758836338
0.00.423.235 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.245 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.249 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.249 I 
 seconally to the main question.

**Main Question:**

What are the most important factors in determining the value of a company?

**Factors to consider

0.02.022.443 I llama_perf_sampler_print:    sampling time =       5.30 ms /    33 runs   (    0.16 ms per token,  6221.72 tokens per second)
0.02.022.445 I llama_perf_context_print:        load time =     422.15 ms
0.02.022.446 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.022.448 I llama_perf_context_print:        eval time =    1579.12 ms /    32 runs   (   49.35 ms per token,    20.26 tokens per second)
0.02.022.448 I llama_perf_context_print:       total time =    1599.39 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.984s
user	8m14.733s
sys	0m6.814s
