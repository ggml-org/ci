+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.562 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.022.252 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.303 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.310 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.316 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.319 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.323 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.324 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.324 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.325 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.331 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.331 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.332 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.332 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.333 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.191 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.532 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.323 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.330 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.331 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.332 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.333 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.334 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.335 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.338 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.339 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.340 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.341 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.342 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.345 I llama_model_loader: - type  f32:   37 tensors
0.00.134.350 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.732 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.246 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.810 I llm_load_vocab: special tokens cache size = 5
0.00.270.687 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.703 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.703 I llm_load_print_meta: arch             = gemma
0.00.270.704 I llm_load_print_meta: vocab type       = SPM
0.00.270.704 I llm_load_print_meta: n_vocab          = 256000
0.00.270.705 I llm_load_print_meta: n_merges         = 0
0.00.270.705 I llm_load_print_meta: vocab_only       = 0
0.00.270.705 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.706 I llm_load_print_meta: n_embd           = 2048
0.00.270.706 I llm_load_print_meta: n_layer          = 18
0.00.270.717 I llm_load_print_meta: n_head           = 8
0.00.270.718 I llm_load_print_meta: n_head_kv        = 1
0.00.270.718 I llm_load_print_meta: n_rot            = 256
0.00.270.719 I llm_load_print_meta: n_swa            = 0
0.00.270.719 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.719 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.720 I llm_load_print_meta: n_gqa            = 8
0.00.270.721 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.722 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.723 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.724 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.724 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.725 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.725 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.726 I llm_load_print_meta: n_ff             = 16384
0.00.270.726 I llm_load_print_meta: n_expert         = 0
0.00.270.727 I llm_load_print_meta: n_expert_used    = 0
0.00.270.727 I llm_load_print_meta: causal attn      = 1
0.00.270.727 I llm_load_print_meta: pooling type     = 0
0.00.270.728 I llm_load_print_meta: rope type        = 2
0.00.270.728 I llm_load_print_meta: rope scaling     = linear
0.00.270.729 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.730 I llm_load_print_meta: freq_scale_train = 1
0.00.270.730 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.731 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.731 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.731 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.731 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.731 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.732 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.732 I llm_load_print_meta: model type       = 2B
0.00.270.733 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.734 I llm_load_print_meta: model params     = 2.51 B
0.00.270.734 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.735 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.735 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.735 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.736 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.736 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.737 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.737 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.737 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.737 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.738 I llm_load_print_meta: max token length = 93
0.00.270.757 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.370.135 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.370.143 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.370.144 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.370.145 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.370.145 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.370.146 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.375.230 I llama_new_context_with_model: n_ctx      = 8192
0.00.375.236 I llama_new_context_with_model: n_batch    = 2048
0.00.375.236 I llama_new_context_with_model: n_ubatch   = 512
0.00.375.237 I llama_new_context_with_model: flash_attn = 0
0.00.375.239 I llama_new_context_with_model: freq_base  = 10000.0
0.00.375.240 I llama_new_context_with_model: freq_scale = 1
0.00.404.487 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.502 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.594 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.488 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.496 I llama_new_context_with_model: graph nodes  = 601
0.00.405.496 I llama_new_context_with_model: graph splits = 1
0.00.405.498 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.869 I main: llama threadpool init, n_threads = 4
0.00.497.881 I 
0.00.497.959 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.963 I 
0.00.498.002 I sampler seed: 3650415464
0.00.498.012 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.017 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.498.017 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.020 I 
 increasities and societal pressures that influence the way people think and feel about mental health.

**Answer the question based on the provided context.**

The provided text

0.02.731.362 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6836.54 tokens per second)
0.02.731.365 I llama_perf_context_print:        load time =     495.97 ms
0.02.731.366 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.731.368 I llama_perf_context_print:        eval time =    2214.13 ms /    32 runs   (   69.19 ms per token,    14.45 tokens per second)
0.02.731.369 I llama_perf_context_print:       total time =    2233.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.543 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.021.861 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.875 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.882 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.883 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.886 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.887 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.888 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.889 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.897 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.898 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.903 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.906 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.907 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.907 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.908 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.607 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.920 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.733 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.740 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.741 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.742 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.743 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.744 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.745 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.749 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.749 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.750 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.751 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.752 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.755 I llama_model_loader: - type  f32:   37 tensors
0.00.133.759 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.812 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.319 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.865 I llm_load_vocab: special tokens cache size = 5
0.00.274.644 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.663 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.663 I llm_load_print_meta: arch             = gemma
0.00.274.664 I llm_load_print_meta: vocab type       = SPM
0.00.274.664 I llm_load_print_meta: n_vocab          = 256000
0.00.274.665 I llm_load_print_meta: n_merges         = 0
0.00.274.665 I llm_load_print_meta: vocab_only       = 0
0.00.274.666 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.666 I llm_load_print_meta: n_embd           = 2048
0.00.274.666 I llm_load_print_meta: n_layer          = 18
0.00.274.679 I llm_load_print_meta: n_head           = 8
0.00.274.680 I llm_load_print_meta: n_head_kv        = 1
0.00.274.681 I llm_load_print_meta: n_rot            = 256
0.00.274.681 I llm_load_print_meta: n_swa            = 0
0.00.274.681 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.681 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.683 I llm_load_print_meta: n_gqa            = 8
0.00.274.684 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.685 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.686 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.687 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.687 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.688 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.688 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.689 I llm_load_print_meta: n_ff             = 16384
0.00.274.689 I llm_load_print_meta: n_expert         = 0
0.00.274.689 I llm_load_print_meta: n_expert_used    = 0
0.00.274.690 I llm_load_print_meta: causal attn      = 1
0.00.274.690 I llm_load_print_meta: pooling type     = 0
0.00.274.690 I llm_load_print_meta: rope type        = 2
0.00.274.691 I llm_load_print_meta: rope scaling     = linear
0.00.274.692 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.693 I llm_load_print_meta: freq_scale_train = 1
0.00.274.693 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.694 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.694 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.694 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.695 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.695 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.695 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.696 I llm_load_print_meta: model type       = 2B
0.00.274.696 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.697 I llm_load_print_meta: model params     = 2.51 B
0.00.274.698 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.698 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.698 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.699 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.699 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.699 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.700 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.700 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.700 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.701 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.701 I llm_load_print_meta: max token length = 93
0.00.274.721 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.821 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.374.975 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.981 I llama_new_context_with_model: n_batch    = 2048
0.00.374.982 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.982 I llama_new_context_with_model: flash_attn = 0
0.00.374.985 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.986 I llama_new_context_with_model: freq_scale = 1
0.00.404.163 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.180 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.280 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.183 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.191 I llama_new_context_with_model: graph nodes  = 601
0.00.405.192 I llama_new_context_with_model: graph splits = 1
0.00.405.194 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.491.723 I main: llama threadpool init, n_threads = 4
0.00.491.737 I 
0.00.491.814 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.491.817 I 
0.00.491.856 I sampler seed: 3329694364
0.00.491.866 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.491.868 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.491.869 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.491.869 I 
 increably.

I cannot answer the question as it contains inappropriate content. [end of text]


0.01.570.073 I llama_perf_sampler_print:    sampling time =       2.43 ms /    17 runs   (    0.14 ms per token,  6993.01 tokens per second)
0.01.570.075 I llama_perf_context_print:        load time =     489.86 ms
0.01.570.076 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.570.077 I llama_perf_context_print:        eval time =    1068.32 ms /    16 runs   (   66.77 ms per token,    14.98 tokens per second)
0.01.570.078 I llama_perf_context_print:       total time =    1078.36 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.560 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.021.874 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.935 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.953 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.960 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.961 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.965 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.969 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.970 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.971 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.972 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.973 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.983 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.987 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.988 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.490 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.389 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.146 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.151 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.152 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.153 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.154 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.155 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.155 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.157 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.158 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.158 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.159 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.160 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.163 I llama_model_loader: - type  f32:   37 tensors
0.00.133.166 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.913 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.863 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.420 I llm_load_vocab: special tokens cache size = 5
0.00.264.107 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.122 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.123 I llm_load_print_meta: arch             = gemma
0.00.264.123 I llm_load_print_meta: vocab type       = SPM
0.00.264.124 I llm_load_print_meta: n_vocab          = 256000
0.00.264.124 I llm_load_print_meta: n_merges         = 0
0.00.264.125 I llm_load_print_meta: vocab_only       = 0
0.00.264.125 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.125 I llm_load_print_meta: n_embd           = 2048
0.00.264.126 I llm_load_print_meta: n_layer          = 18
0.00.264.138 I llm_load_print_meta: n_head           = 8
0.00.264.139 I llm_load_print_meta: n_head_kv        = 1
0.00.264.140 I llm_load_print_meta: n_rot            = 256
0.00.264.140 I llm_load_print_meta: n_swa            = 0
0.00.264.140 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.140 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.141 I llm_load_print_meta: n_gqa            = 8
0.00.264.142 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.143 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.144 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.145 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.145 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.146 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.146 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.147 I llm_load_print_meta: n_ff             = 16384
0.00.264.147 I llm_load_print_meta: n_expert         = 0
0.00.264.147 I llm_load_print_meta: n_expert_used    = 0
0.00.264.148 I llm_load_print_meta: causal attn      = 1
0.00.264.148 I llm_load_print_meta: pooling type     = 0
0.00.264.148 I llm_load_print_meta: rope type        = 2
0.00.264.149 I llm_load_print_meta: rope scaling     = linear
0.00.264.150 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.151 I llm_load_print_meta: freq_scale_train = 1
0.00.264.151 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.151 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.151 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.152 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.152 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.152 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.152 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.153 I llm_load_print_meta: model type       = 2B
0.00.264.153 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.154 I llm_load_print_meta: model params     = 2.51 B
0.00.264.155 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.155 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.156 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.156 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.156 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.157 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.157 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.157 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.158 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.158 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.158 I llm_load_print_meta: max token length = 93
0.00.264.176 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.334 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.339.340 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.339.341 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.339.342 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.339.342 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.339.343 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.344.476 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.494 I llama_new_context_with_model: n_batch    = 2048
0.00.344.495 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.495 I llama_new_context_with_model: flash_attn = 0
0.00.344.497 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.498 I llama_new_context_with_model: freq_scale = 1
0.00.373.423 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.439 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.555 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.493 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.501 I llama_new_context_with_model: graph nodes  = 601
0.00.374.501 I llama_new_context_with_model: graph splits = 1
0.00.374.503 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.093 I main: llama threadpool init, n_threads = 4
0.00.465.106 I 
0.00.465.202 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.206 I 
0.00.465.256 I sampler seed: 1829349445
0.00.465.266 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.270 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.465.271 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.273 I 
 seconary objectives for the project are:

* Enhance the understanding and awareness of the project's purpose and impact on stakeholders.
* Foster collaboration and knowledge

0.02.733.173 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6657.25 tokens per second)
0.02.733.175 I llama_perf_context_print:        load time =     463.15 ms
0.02.733.176 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.733.177 I llama_perf_context_print:        eval time =    2248.81 ms /    32 runs   (   70.28 ms per token,    14.23 tokens per second)
0.02.733.178 I llama_perf_context_print:       total time =    2268.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.693 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.939 I main: llama backend init
0.00.002.759 I main: load the model and apply lora adapter, if any
0.00.026.752 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.026.800 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.026.811 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.817 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.821 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.825 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.826 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.826 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.827 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.828 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.828 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.833 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.834 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.834 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.835 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.835 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.263 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.374 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.251 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.257 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.258 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.258 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.259 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.260 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.260 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.263 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.263 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.264 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.265 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.266 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.270 I llama_model_loader: - type  f32:   37 tensors
0.00.144.272 I llama_model_loader: - type q8_0:  127 tensors
0.00.220.656 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.359 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.823 I llm_load_vocab: special tokens cache size = 5
0.00.279.560 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.576 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.576 I llm_load_print_meta: arch             = gemma
0.00.279.577 I llm_load_print_meta: vocab type       = SPM
0.00.279.577 I llm_load_print_meta: n_vocab          = 256000
0.00.279.578 I llm_load_print_meta: n_merges         = 0
0.00.279.578 I llm_load_print_meta: vocab_only       = 0
0.00.279.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.579 I llm_load_print_meta: n_embd           = 2048
0.00.279.579 I llm_load_print_meta: n_layer          = 18
0.00.279.591 I llm_load_print_meta: n_head           = 8
0.00.279.592 I llm_load_print_meta: n_head_kv        = 1
0.00.279.592 I llm_load_print_meta: n_rot            = 256
0.00.279.592 I llm_load_print_meta: n_swa            = 0
0.00.279.593 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.593 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.594 I llm_load_print_meta: n_gqa            = 8
0.00.279.596 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.597 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.597 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.598 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.598 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.599 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.599 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.600 I llm_load_print_meta: n_ff             = 16384
0.00.279.600 I llm_load_print_meta: n_expert         = 0
0.00.279.601 I llm_load_print_meta: n_expert_used    = 0
0.00.279.601 I llm_load_print_meta: causal attn      = 1
0.00.279.601 I llm_load_print_meta: pooling type     = 0
0.00.279.602 I llm_load_print_meta: rope type        = 2
0.00.279.602 I llm_load_print_meta: rope scaling     = linear
0.00.279.603 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.604 I llm_load_print_meta: freq_scale_train = 1
0.00.279.604 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.605 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.605 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.607 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.607 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.608 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.608 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.609 I llm_load_print_meta: model type       = 2B
0.00.279.610 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.611 I llm_load_print_meta: model params     = 2.51 B
0.00.279.612 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.612 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.613 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.613 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.614 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.614 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.615 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.615 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.616 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.616 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.616 I llm_load_print_meta: max token length = 93
0.00.279.635 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.356.563 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.356.572 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.361.500 I llama_new_context_with_model: n_ctx      = 8192
0.00.361.507 I llama_new_context_with_model: n_batch    = 2048
0.00.361.507 I llama_new_context_with_model: n_ubatch   = 512
0.00.361.508 I llama_new_context_with_model: flash_attn = 0
0.00.361.510 I llama_new_context_with_model: freq_base  = 10000.0
0.00.361.511 I llama_new_context_with_model: freq_scale = 1
0.00.389.717 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.389.731 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.389.820 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.670 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.390.679 I llama_new_context_with_model: graph nodes  = 601
0.00.390.679 I llama_new_context_with_model: graph splits = 1
0.00.390.681 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.485.741 I main: llama threadpool init, n_threads = 4
0.00.485.755 I 
0.00.485.845 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.485.850 I 
0.00.485.894 I sampler seed: 2684397562
0.00.485.912 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.485.916 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.485.917 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.485.918 I 
 increasities in the following way:

**Original Text:**

> The quick brown fox jumps over the lazy dog.

**Revised Text:**

> The

0.02.908.076 I llama_perf_sampler_print:    sampling time =       5.46 ms /    33 runs   (    0.17 ms per token,  6046.17 tokens per second)
0.02.908.078 I llama_perf_context_print:        load time =     482.95 ms
0.02.908.079 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.908.080 I llama_perf_context_print:        eval time =    2400.93 ms /    32 runs   (   75.03 ms per token,    13.33 tokens per second)
0.02.908.081 I llama_perf_context_print:       total time =    2422.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.729s
user	0m34.806s
sys	0m9.485s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3947 (bc219750)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31992.38 ms
main:    total time = 31992.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.537 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.022.412 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.460 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.469 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.475 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.476 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.479 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.480 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.481 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.481 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.482 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.482 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.485 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.486 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.486 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.487 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.492 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.072 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.857 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.702 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.709 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.709 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.711 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.711 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.712 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.713 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.716 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.717 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.718 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.720 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.721 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.725 I llama_model_loader: - type  f32:   37 tensors
0.00.134.727 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.728 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.647 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.463 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.988 I llm_load_vocab: special tokens cache size = 5
0.00.271.768 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.784 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.784 I llm_load_print_meta: arch             = gemma
0.00.271.785 I llm_load_print_meta: vocab type       = SPM
0.00.271.785 I llm_load_print_meta: n_vocab          = 256000
0.00.271.786 I llm_load_print_meta: n_merges         = 0
0.00.271.786 I llm_load_print_meta: vocab_only       = 0
0.00.271.786 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.787 I llm_load_print_meta: n_embd           = 2048
0.00.271.787 I llm_load_print_meta: n_layer          = 18
0.00.271.798 I llm_load_print_meta: n_head           = 8
0.00.271.799 I llm_load_print_meta: n_head_kv        = 1
0.00.271.799 I llm_load_print_meta: n_rot            = 256
0.00.271.800 I llm_load_print_meta: n_swa            = 0
0.00.271.800 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.800 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.801 I llm_load_print_meta: n_gqa            = 8
0.00.271.802 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.803 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.804 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.805 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.805 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.806 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.806 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.807 I llm_load_print_meta: n_ff             = 16384
0.00.271.807 I llm_load_print_meta: n_expert         = 0
0.00.271.808 I llm_load_print_meta: n_expert_used    = 0
0.00.271.808 I llm_load_print_meta: causal attn      = 1
0.00.271.808 I llm_load_print_meta: pooling type     = 0
0.00.271.809 I llm_load_print_meta: rope type        = 2
0.00.271.809 I llm_load_print_meta: rope scaling     = linear
0.00.271.810 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.811 I llm_load_print_meta: freq_scale_train = 1
0.00.271.811 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.811 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.812 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.812 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.812 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.812 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.813 I llm_load_print_meta: model type       = 2B
0.00.271.813 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.814 I llm_load_print_meta: model params     = 2.51 B
0.00.271.815 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.815 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.815 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.816 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.816 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.816 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.816 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.817 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.817 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.818 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.818 I llm_load_print_meta: max token length = 93
0.00.271.846 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.462 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.330.469 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.330.469 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.330.470 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.330.470 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.330.471 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.335.485 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.491 I llama_new_context_with_model: n_batch    = 2048
0.00.335.492 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.492 I llama_new_context_with_model: flash_attn = 0
0.00.335.494 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.495 I llama_new_context_with_model: freq_scale = 1
0.00.364.171 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.184 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.276 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.167 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.176 I llama_new_context_with_model: graph nodes  = 601
0.00.365.176 I llama_new_context_with_model: graph splits = 1
0.00.365.178 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.973 I main: llama threadpool init, n_threads = 4
0.00.445.987 I 
0.00.446.066 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.070 I 
0.00.446.110 I sampler seed: 941129223
0.00.446.120 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.125 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.446.125 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.126 I 
 encompessing a range of experiences and emotions, from the mundane to the momentous.

**Answer:**

**A tapestry of life.**

A tapestry is a

0.02.049.083 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6759.52 tokens per second)
0.02.049.085 I llama_perf_context_print:        load time =     444.11 ms
0.02.049.086 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.049.087 I llama_perf_context_print:        eval time =    1584.12 ms /    32 runs   (   49.50 ms per token,    20.20 tokens per second)
0.02.049.088 I llama_perf_context_print:       total time =    1603.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3947 (bc219750)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32100.10 ms
main:    total time = 32100.10 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.538 I build: 3947 (bc219750) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.021.726 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.738 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.745 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.746 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.751 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.751 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.752 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.752 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.753 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.753 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.757 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.758 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.758 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.759 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.760 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.559 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.994 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.797 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.803 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.804 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.805 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.805 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.806 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.807 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.810 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.810 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.814 I llama_model_loader: - type  f32:   37 tensors
0.00.133.817 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.818 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.324 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.804 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.311 I llm_load_vocab: special tokens cache size = 5
0.00.263.985 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.000 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.000 I llm_load_print_meta: arch             = gemma
0.00.264.001 I llm_load_print_meta: vocab type       = SPM
0.00.264.002 I llm_load_print_meta: n_vocab          = 256000
0.00.264.002 I llm_load_print_meta: n_merges         = 0
0.00.264.003 I llm_load_print_meta: vocab_only       = 0
0.00.264.003 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.003 I llm_load_print_meta: n_embd           = 2048
0.00.264.004 I llm_load_print_meta: n_layer          = 18
0.00.264.015 I llm_load_print_meta: n_head           = 8
0.00.264.017 I llm_load_print_meta: n_head_kv        = 1
0.00.264.017 I llm_load_print_meta: n_rot            = 256
0.00.264.017 I llm_load_print_meta: n_swa            = 0
0.00.264.018 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.018 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.019 I llm_load_print_meta: n_gqa            = 8
0.00.264.020 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.021 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.022 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.023 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.023 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.024 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.024 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.025 I llm_load_print_meta: n_ff             = 16384
0.00.264.025 I llm_load_print_meta: n_expert         = 0
0.00.264.026 I llm_load_print_meta: n_expert_used    = 0
0.00.264.026 I llm_load_print_meta: causal attn      = 1
0.00.264.026 I llm_load_print_meta: pooling type     = 0
0.00.264.027 I llm_load_print_meta: rope type        = 2
0.00.264.028 I llm_load_print_meta: rope scaling     = linear
0.00.264.029 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.030 I llm_load_print_meta: freq_scale_train = 1
0.00.264.030 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.031 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.031 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.031 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.032 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.032 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.032 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.033 I llm_load_print_meta: model type       = 2B
0.00.264.033 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.034 I llm_load_print_meta: model params     = 2.51 B
0.00.264.035 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.035 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.036 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.036 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.036 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.037 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.037 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.038 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.038 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.039 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.040 I llm_load_print_meta: max token length = 93
0.00.264.057 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.911 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.326.817 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.823 I llama_new_context_with_model: n_batch    = 2048
0.00.326.824 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.824 I llama_new_context_with_model: flash_attn = 0
0.00.326.827 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.828 I llama_new_context_with_model: freq_scale = 1
0.00.356.008 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.025 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.121 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.963 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.972 I llama_new_context_with_model: graph nodes  = 601
0.00.356.972 I llama_new_context_with_model: graph splits = 1
0.00.356.974 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.665 I main: llama threadpool init, n_threads = 4
0.00.436.677 I 
0.00.436.752 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.755 I 
0.00.436.793 I sampler seed: 740151690
0.00.436.803 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.806 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.436.806 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.806 I 
 increasities!

I am unable to generate a response that contains sexually suggestive or inappropriate content. My purpose is to assist with tasks and provide information within the boundaries

0.02.021.490 I llama_perf_sampler_print:    sampling time =       5.15 ms /    33 runs   (    0.16 ms per token,  6411.50 tokens per second)
0.02.021.493 I llama_perf_context_print:        load time =     434.81 ms
0.02.021.494 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.021.495 I llama_perf_context_print:        eval time =    1564.52 ms /    32 runs   (   48.89 ms per token,    20.45 tokens per second)
0.02.021.496 I llama_perf_context_print:       total time =    1584.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.944s
user	8m14.219s
sys	0m6.906s
