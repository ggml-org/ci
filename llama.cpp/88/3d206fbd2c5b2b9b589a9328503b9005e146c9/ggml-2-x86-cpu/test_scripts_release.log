+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.412 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.422 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.429 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.434 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.435 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.439 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.440 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.441 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.441 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.442 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.443 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.448 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.448 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.449 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.449 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.450 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.614 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.730 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.586 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.593 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.594 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.594 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.595 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.596 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.597 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.599 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.600 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.601 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.602 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.603 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.609 I llama_model_loader: - type  f32:   37 tensors
0.00.131.610 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.719 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.733 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.318 I llm_load_vocab: special tokens cache size = 5
0.00.277.222 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.239 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.240 I llm_load_print_meta: arch             = gemma
0.00.277.240 I llm_load_print_meta: vocab type       = SPM
0.00.277.241 I llm_load_print_meta: n_vocab          = 256000
0.00.277.242 I llm_load_print_meta: n_merges         = 0
0.00.277.242 I llm_load_print_meta: vocab_only       = 0
0.00.277.243 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.243 I llm_load_print_meta: n_embd           = 2048
0.00.277.243 I llm_load_print_meta: n_layer          = 18
0.00.277.255 I llm_load_print_meta: n_head           = 8
0.00.277.256 I llm_load_print_meta: n_head_kv        = 1
0.00.277.256 I llm_load_print_meta: n_rot            = 256
0.00.277.257 I llm_load_print_meta: n_swa            = 0
0.00.277.257 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.257 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.258 I llm_load_print_meta: n_gqa            = 8
0.00.277.259 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.260 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.261 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.262 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.263 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.263 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.263 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.264 I llm_load_print_meta: n_ff             = 16384
0.00.277.265 I llm_load_print_meta: n_expert         = 0
0.00.277.265 I llm_load_print_meta: n_expert_used    = 0
0.00.277.265 I llm_load_print_meta: causal attn      = 1
0.00.277.266 I llm_load_print_meta: pooling type     = 0
0.00.277.266 I llm_load_print_meta: rope type        = 2
0.00.277.266 I llm_load_print_meta: rope scaling     = linear
0.00.277.268 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.269 I llm_load_print_meta: freq_scale_train = 1
0.00.277.269 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.270 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.270 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.270 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.270 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.271 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.271 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.271 I llm_load_print_meta: model type       = 2B
0.00.277.272 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.273 I llm_load_print_meta: model params     = 2.51 B
0.00.277.274 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.274 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.275 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.275 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.276 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.276 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.277 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.277 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.277 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.278 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.278 I llm_load_print_meta: max token length = 93
0.00.376.901 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.376.908 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.376.909 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.376.909 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.376.910 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.376.910 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.382.168 I llama_new_context_with_model: n_seq_max     = 1
0.00.382.175 I llama_new_context_with_model: n_ctx         = 4096
0.00.382.176 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.382.176 I llama_new_context_with_model: n_batch       = 2048
0.00.382.176 I llama_new_context_with_model: n_ubatch      = 512
0.00.382.177 I llama_new_context_with_model: flash_attn    = 0
0.00.382.179 I llama_new_context_with_model: freq_base     = 10000.0
0.00.382.180 I llama_new_context_with_model: freq_scale    = 1
0.00.382.191 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.990 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.397.007 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.397.108 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.429 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.398.433 I llama_new_context_with_model: graph nodes  = 601
0.00.398.433 I llama_new_context_with_model: graph splits = 1
0.00.398.435 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.822 I main: llama threadpool init, n_threads = 4
0.00.484.837 I 
0.00.484.911 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.914 I 
0.00.484.960 I sampler seed: 3633790286
0.00.484.972 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.974 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.975 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.975 I 
 increably!

I cannot answer the question as it contains inappropriate and potentially harmful content. [end of text]


0.01.842.431 I llama_perf_sampler_print:    sampling time =       3.01 ms /    20 runs   (    0.15 ms per token,  6644.52 tokens per second)
0.01.842.433 I llama_perf_context_print:        load time =     484.05 ms
0.01.842.435 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.842.436 I llama_perf_context_print:        eval time =    1345.25 ms /    19 runs   (   70.80 ms per token,    14.12 tokens per second)
0.01.842.437 I llama_perf_context_print:       total time =    1357.62 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.538 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.742 I main: llama backend init
0.00.000.748 I main: load the model and apply lora adapter, if any
0.00.021.278 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.291 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.298 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.303 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.304 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.304 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.305 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.305 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.310 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.310 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.311 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.312 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.313 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.819 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.029 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.907 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.914 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.915 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.916 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.917 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.918 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.919 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.922 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.923 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.924 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.925 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.926 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.930 I llama_model_loader: - type  f32:   37 tensors
0.00.131.931 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.169 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.274 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.985 I llm_load_vocab: special tokens cache size = 5
0.00.284.158 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.178 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.178 I llm_load_print_meta: arch             = gemma
0.00.284.179 I llm_load_print_meta: vocab type       = SPM
0.00.284.180 I llm_load_print_meta: n_vocab          = 256000
0.00.284.180 I llm_load_print_meta: n_merges         = 0
0.00.284.181 I llm_load_print_meta: vocab_only       = 0
0.00.284.181 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.181 I llm_load_print_meta: n_embd           = 2048
0.00.284.182 I llm_load_print_meta: n_layer          = 18
0.00.284.193 I llm_load_print_meta: n_head           = 8
0.00.284.194 I llm_load_print_meta: n_head_kv        = 1
0.00.284.195 I llm_load_print_meta: n_rot            = 256
0.00.284.195 I llm_load_print_meta: n_swa            = 0
0.00.284.195 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.196 I llm_load_print_meta: n_gqa            = 8
0.00.284.197 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.198 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.199 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.201 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.201 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.202 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.202 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.203 I llm_load_print_meta: n_ff             = 16384
0.00.284.203 I llm_load_print_meta: n_expert         = 0
0.00.284.203 I llm_load_print_meta: n_expert_used    = 0
0.00.284.203 I llm_load_print_meta: causal attn      = 1
0.00.284.204 I llm_load_print_meta: pooling type     = 0
0.00.284.204 I llm_load_print_meta: rope type        = 2
0.00.284.204 I llm_load_print_meta: rope scaling     = linear
0.00.284.206 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.207 I llm_load_print_meta: freq_scale_train = 1
0.00.284.207 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.207 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.207 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.208 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.208 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.208 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.208 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.209 I llm_load_print_meta: model type       = 2B
0.00.284.210 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.211 I llm_load_print_meta: model params     = 2.51 B
0.00.284.212 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.212 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.213 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.213 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.214 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.214 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.214 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.215 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.215 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.215 I llm_load_print_meta: max token length = 93
0.00.380.261 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.385.528 I llama_new_context_with_model: n_seq_max     = 1
0.00.385.536 I llama_new_context_with_model: n_ctx         = 4096
0.00.385.536 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.385.537 I llama_new_context_with_model: n_batch       = 2048
0.00.385.538 I llama_new_context_with_model: n_ubatch      = 512
0.00.385.538 I llama_new_context_with_model: flash_attn    = 0
0.00.385.541 I llama_new_context_with_model: freq_base     = 10000.0
0.00.385.543 I llama_new_context_with_model: freq_scale    = 1
0.00.385.544 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.400.803 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.400.818 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.400.918 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.268 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.402.271 I llama_new_context_with_model: graph nodes  = 601
0.00.402.272 I llama_new_context_with_model: graph splits = 1
0.00.402.273 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.124 I main: llama threadpool init, n_threads = 4
0.00.484.138 I 
0.00.484.211 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.214 I 
0.00.484.257 I sampler seed: 3111957164
0.00.484.267 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.271 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.272 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.273 I 
 maneuvled by the wind, a crimson orb of radiance, a beacon in the vast expanse of space.

What is the meaning of this passage?



0.02.705.625 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6528.19 tokens per second)
0.02.705.629 I llama_perf_context_print:        load time =     483.36 ms
0.02.705.630 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.705.632 I llama_perf_context_print:        eval time =    2201.86 ms /    32 runs   (   68.81 ms per token,    14.53 tokens per second)
0.02.705.633 I llama_perf_context_print:       total time =    2221.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.567 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.766 I main: load the model and apply lora adapter, if any
0.00.021.388 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.402 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.411 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.416 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.417 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.422 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.422 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.423 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.424 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.438 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.439 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.444 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.445 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.446 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.446 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.447 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.207 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.478 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.521 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.529 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.530 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.530 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.531 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.532 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.533 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.535 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.537 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.538 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.538 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.539 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.543 I llama_model_loader: - type  f32:   37 tensors
0.00.132.543 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.389 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.941 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.548 I llm_load_vocab: special tokens cache size = 5
0.00.277.573 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.590 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.590 I llm_load_print_meta: arch             = gemma
0.00.277.592 I llm_load_print_meta: vocab type       = SPM
0.00.277.592 I llm_load_print_meta: n_vocab          = 256000
0.00.277.592 I llm_load_print_meta: n_merges         = 0
0.00.277.593 I llm_load_print_meta: vocab_only       = 0
0.00.277.593 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.593 I llm_load_print_meta: n_embd           = 2048
0.00.277.594 I llm_load_print_meta: n_layer          = 18
0.00.277.605 I llm_load_print_meta: n_head           = 8
0.00.277.606 I llm_load_print_meta: n_head_kv        = 1
0.00.277.606 I llm_load_print_meta: n_rot            = 256
0.00.277.607 I llm_load_print_meta: n_swa            = 0
0.00.277.607 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.607 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.608 I llm_load_print_meta: n_gqa            = 8
0.00.277.609 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.610 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.611 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.612 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.613 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.613 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.613 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.614 I llm_load_print_meta: n_ff             = 16384
0.00.277.615 I llm_load_print_meta: n_expert         = 0
0.00.277.615 I llm_load_print_meta: n_expert_used    = 0
0.00.277.615 I llm_load_print_meta: causal attn      = 1
0.00.277.616 I llm_load_print_meta: pooling type     = 0
0.00.277.616 I llm_load_print_meta: rope type        = 2
0.00.277.616 I llm_load_print_meta: rope scaling     = linear
0.00.277.618 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.618 I llm_load_print_meta: freq_scale_train = 1
0.00.277.619 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.619 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.619 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.619 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.620 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.620 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.620 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.621 I llm_load_print_meta: model type       = 2B
0.00.277.621 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.622 I llm_load_print_meta: model params     = 2.51 B
0.00.277.623 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.623 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.624 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.624 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.624 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.625 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.625 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.625 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.626 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.626 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.626 I llm_load_print_meta: max token length = 93
0.00.355.898 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.355.906 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.907 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.355.908 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.355.909 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.909 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.361.080 I llama_new_context_with_model: n_seq_max     = 1
0.00.361.087 I llama_new_context_with_model: n_ctx         = 4096
0.00.361.087 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.361.088 I llama_new_context_with_model: n_batch       = 2048
0.00.361.088 I llama_new_context_with_model: n_ubatch      = 512
0.00.361.089 I llama_new_context_with_model: flash_attn    = 0
0.00.361.092 I llama_new_context_with_model: freq_base     = 10000.0
0.00.361.093 I llama_new_context_with_model: freq_scale    = 1
0.00.361.093 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.243 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.259 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.352 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.611 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.617 I llama_new_context_with_model: graph nodes  = 601
0.00.377.617 I llama_new_context_with_model: graph splits = 1
0.00.377.619 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.532 I main: llama threadpool init, n_threads = 4
0.00.465.547 I 
0.00.465.620 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.623 I 
0.00.465.663 I sampler seed: 3609719420
0.00.465.674 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.677 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.678 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.681 I 
 increasities to the following form:

$$y = a + bx + cx^2 + dx^3$$

Find the values of a, b,

0.02.705.332 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6934.23 tokens per second)
0.02.705.335 I llama_perf_context_print:        load time =     464.75 ms
0.02.705.336 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.705.338 I llama_perf_context_print:        eval time =    2220.74 ms /    32 runs   (   69.40 ms per token,    14.41 tokens per second)
0.02.705.339 I llama_perf_context_print:       total time =    2239.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.556 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.000.785 I main: load the model and apply lora adapter, if any
0.00.026.407 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.026.420 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.026.428 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.433 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.434 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.439 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.440 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.441 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.442 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.442 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.442 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.447 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.448 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.448 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.449 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.449 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.001 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.135.440 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.142.764 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.142.772 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.142.772 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.142.773 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.142.773 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.142.774 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.142.775 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.142.777 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.142.777 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.142.778 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.142.779 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.142.779 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.142.784 I llama_model_loader: - type  f32:   37 tensors
0.00.142.785 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.390 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.993 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.771 I llm_load_vocab: special tokens cache size = 5
0.00.299.081 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.102 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.103 I llm_load_print_meta: arch             = gemma
0.00.299.104 I llm_load_print_meta: vocab type       = SPM
0.00.299.105 I llm_load_print_meta: n_vocab          = 256000
0.00.299.105 I llm_load_print_meta: n_merges         = 0
0.00.299.105 I llm_load_print_meta: vocab_only       = 0
0.00.299.106 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.106 I llm_load_print_meta: n_embd           = 2048
0.00.299.106 I llm_load_print_meta: n_layer          = 18
0.00.299.118 I llm_load_print_meta: n_head           = 8
0.00.299.119 I llm_load_print_meta: n_head_kv        = 1
0.00.299.119 I llm_load_print_meta: n_rot            = 256
0.00.299.120 I llm_load_print_meta: n_swa            = 0
0.00.299.120 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.120 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.121 I llm_load_print_meta: n_gqa            = 8
0.00.299.122 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.123 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.124 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.125 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.126 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.126 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.126 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.127 I llm_load_print_meta: n_ff             = 16384
0.00.299.127 I llm_load_print_meta: n_expert         = 0
0.00.299.128 I llm_load_print_meta: n_expert_used    = 0
0.00.299.128 I llm_load_print_meta: causal attn      = 1
0.00.299.128 I llm_load_print_meta: pooling type     = 0
0.00.299.128 I llm_load_print_meta: rope type        = 2
0.00.299.129 I llm_load_print_meta: rope scaling     = linear
0.00.299.130 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.131 I llm_load_print_meta: freq_scale_train = 1
0.00.299.131 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.131 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.132 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.132 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.132 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.132 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.133 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.133 I llm_load_print_meta: model type       = 2B
0.00.299.134 I llm_load_print_meta: model ftype      = Q8_0
0.00.299.135 I llm_load_print_meta: model params     = 2.51 B
0.00.299.136 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.299.136 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.136 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.137 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.137 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.138 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.138 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.138 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.139 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.139 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.139 I llm_load_print_meta: max token length = 93
0.00.376.468 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.376.476 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.381.661 I llama_new_context_with_model: n_seq_max     = 1
0.00.381.667 I llama_new_context_with_model: n_ctx         = 4096
0.00.381.668 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.381.668 I llama_new_context_with_model: n_batch       = 2048
0.00.381.669 I llama_new_context_with_model: n_ubatch      = 512
0.00.381.669 I llama_new_context_with_model: flash_attn    = 0
0.00.381.673 I llama_new_context_with_model: freq_base     = 10000.0
0.00.381.674 I llama_new_context_with_model: freq_scale    = 1
0.00.381.674 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.539 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.553 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.665 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.914 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.397.921 I llama_new_context_with_model: graph nodes  = 601
0.00.397.922 I llama_new_context_with_model: graph splits = 1
0.00.397.924 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.287 I main: llama threadpool init, n_threads = 4
0.00.487.302 I 
0.00.487.375 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.487.378 I 
0.00.487.420 I sampler seed: 2115925009
0.00.487.431 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.434 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.487.435 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.438 I 
 increably.

I am unable to generate a response because the provided context does not contain any information regarding the ability to generate responses. [end of text]


0.02.651.291 I llama_perf_sampler_print:    sampling time =       4.59 ms /    29 runs   (    0.16 ms per token,  6322.21 tokens per second)
0.02.651.294 I llama_perf_context_print:        load time =     486.48 ms
0.02.651.295 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.651.297 I llama_perf_context_print:        eval time =    2146.34 ms /    28 runs   (   76.65 ms per token,    13.05 tokens per second)
0.02.651.297 I llama_perf_context_print:       total time =    2164.01 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.577s
user	0m34.885s
sys	0m9.508s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4092 (883d206f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40199.12 ms
main:    total time = 40199.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.597 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.856 I main: llama backend init
0.00.000.863 I main: load the model and apply lora adapter, if any
0.00.020.979 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.989 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.997 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.002 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.003 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.007 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.008 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.008 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.009 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.009 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.010 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.013 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.013 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.014 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.014 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.015 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.372 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.005 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.847 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.854 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.855 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.855 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.856 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.857 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.858 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.862 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.863 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.864 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.864 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.866 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.869 I llama_model_loader: - type  f32:   37 tensors
0.00.130.870 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.871 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.993 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.561 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.149 I llm_load_vocab: special tokens cache size = 5
0.00.272.289 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.305 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.305 I llm_load_print_meta: arch             = gemma
0.00.272.306 I llm_load_print_meta: vocab type       = SPM
0.00.272.307 I llm_load_print_meta: n_vocab          = 256000
0.00.272.307 I llm_load_print_meta: n_merges         = 0
0.00.272.307 I llm_load_print_meta: vocab_only       = 0
0.00.272.308 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.308 I llm_load_print_meta: n_embd           = 2048
0.00.272.308 I llm_load_print_meta: n_layer          = 18
0.00.272.319 I llm_load_print_meta: n_head           = 8
0.00.272.320 I llm_load_print_meta: n_head_kv        = 1
0.00.272.320 I llm_load_print_meta: n_rot            = 256
0.00.272.321 I llm_load_print_meta: n_swa            = 0
0.00.272.321 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.322 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.323 I llm_load_print_meta: n_gqa            = 8
0.00.272.324 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.324 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.325 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.327 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.327 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.327 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.328 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.329 I llm_load_print_meta: n_ff             = 16384
0.00.272.329 I llm_load_print_meta: n_expert         = 0
0.00.272.329 I llm_load_print_meta: n_expert_used    = 0
0.00.272.330 I llm_load_print_meta: causal attn      = 1
0.00.272.330 I llm_load_print_meta: pooling type     = 0
0.00.272.330 I llm_load_print_meta: rope type        = 2
0.00.272.330 I llm_load_print_meta: rope scaling     = linear
0.00.272.332 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.332 I llm_load_print_meta: freq_scale_train = 1
0.00.272.333 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.333 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.333 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.333 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.334 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.334 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.334 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.335 I llm_load_print_meta: model type       = 2B
0.00.272.335 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.336 I llm_load_print_meta: model params     = 2.51 B
0.00.272.337 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.338 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.338 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.339 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.339 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.339 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.340 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.340 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.341 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.341 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.341 I llm_load_print_meta: max token length = 93
0.00.331.534 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.331.540 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.331.541 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.331.542 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.331.543 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.331.543 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.336.654 I llama_new_context_with_model: n_seq_max     = 1
0.00.336.662 I llama_new_context_with_model: n_ctx         = 4096
0.00.336.662 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.336.663 I llama_new_context_with_model: n_batch       = 2048
0.00.336.663 I llama_new_context_with_model: n_ubatch      = 512
0.00.336.664 I llama_new_context_with_model: flash_attn    = 0
0.00.336.666 I llama_new_context_with_model: freq_base     = 10000.0
0.00.336.667 I llama_new_context_with_model: freq_scale    = 1
0.00.336.668 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.351.340 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.351.356 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.351.448 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.731 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.352.738 I llama_new_context_with_model: graph nodes  = 601
0.00.352.738 I llama_new_context_with_model: graph splits = 1
0.00.352.740 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.429.779 I main: llama threadpool init, n_threads = 4
0.00.429.794 I 
0.00.429.870 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.429.873 I 
0.00.429.920 I sampler seed: 2392366398
0.00.429.931 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.429.934 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.429.934 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.429.935 I 
 effe.

I am unable to access the requested URL. Please verify that you have access to the URL and try again later. [end of text]


0.01.803.321 I llama_perf_sampler_print:    sampling time =       4.39 ms /    28 runs   (    0.16 ms per token,  6376.68 tokens per second)
0.01.803.324 I llama_perf_context_print:        load time =     428.89 ms
0.01.803.325 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.803.327 I llama_perf_context_print:        eval time =    1356.51 ms /    27 runs   (   50.24 ms per token,    19.90 tokens per second)
0.01.803.328 I llama_perf_context_print:       total time =    1373.55 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4092 (883d206f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40168.81 ms
main:    total time = 40168.81 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.531 I build: 4092 (883d206f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.000.746 I main: load the model and apply lora adapter, if any
0.00.021.344 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.359 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.365 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.366 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.369 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.373 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.374 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.374 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.375 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.375 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.378 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.379 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.380 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.380 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.381 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.435 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.972 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.757 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.762 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.763 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.764 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.765 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.766 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.767 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.771 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.771 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.775 I llama_model_loader: - type  f32:   37 tensors
0.00.130.776 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.777 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.943 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.764 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.392 I llm_load_vocab: special tokens cache size = 5
0.00.269.312 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.329 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.330 I llm_load_print_meta: arch             = gemma
0.00.269.330 I llm_load_print_meta: vocab type       = SPM
0.00.269.331 I llm_load_print_meta: n_vocab          = 256000
0.00.269.331 I llm_load_print_meta: n_merges         = 0
0.00.269.332 I llm_load_print_meta: vocab_only       = 0
0.00.269.332 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.333 I llm_load_print_meta: n_embd           = 2048
0.00.269.333 I llm_load_print_meta: n_layer          = 18
0.00.269.345 I llm_load_print_meta: n_head           = 8
0.00.269.345 I llm_load_print_meta: n_head_kv        = 1
0.00.269.346 I llm_load_print_meta: n_rot            = 256
0.00.269.346 I llm_load_print_meta: n_swa            = 0
0.00.269.347 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.347 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.348 I llm_load_print_meta: n_gqa            = 8
0.00.269.349 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.350 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.351 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.352 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.352 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.353 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.353 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.354 I llm_load_print_meta: n_ff             = 16384
0.00.269.354 I llm_load_print_meta: n_expert         = 0
0.00.269.354 I llm_load_print_meta: n_expert_used    = 0
0.00.269.354 I llm_load_print_meta: causal attn      = 1
0.00.269.355 I llm_load_print_meta: pooling type     = 0
0.00.269.355 I llm_load_print_meta: rope type        = 2
0.00.269.355 I llm_load_print_meta: rope scaling     = linear
0.00.269.357 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.357 I llm_load_print_meta: freq_scale_train = 1
0.00.269.358 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.358 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.358 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.359 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.359 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.359 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.359 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.360 I llm_load_print_meta: model type       = 2B
0.00.269.360 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.361 I llm_load_print_meta: model params     = 2.51 B
0.00.269.362 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.362 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.363 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.363 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.363 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.364 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.364 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.364 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.365 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.366 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.366 I llm_load_print_meta: max token length = 93
0.00.326.513 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.331.729 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.736 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.736 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.736 I llama_new_context_with_model: n_batch       = 2048
0.00.331.737 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.737 I llama_new_context_with_model: flash_attn    = 0
0.00.331.740 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.741 I llama_new_context_with_model: freq_scale    = 1
0.00.331.742 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.428 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.442 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.541 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.749 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.347.756 I llama_new_context_with_model: graph nodes  = 601
0.00.347.756 I llama_new_context_with_model: graph splits = 1
0.00.347.758 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.490 I main: llama threadpool init, n_threads = 4
0.00.422.505 I 
0.00.422.581 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.584 I 
0.00.422.630 I sampler seed: 3064902486
0.00.422.641 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.644 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.644 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.644 I 
 susceptic

I am unable to provide an answer as the context does not provide sufficient information to determine the answer. [end of text]


0.01.624.116 I llama_perf_sampler_print:    sampling time =       3.68 ms /    25 runs   (    0.15 ms per token,  6795.32 tokens per second)
0.01.624.119 I llama_perf_context_print:        load time =     421.73 ms
0.01.624.120 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.624.121 I llama_perf_context_print:        eval time =    1187.24 ms /    24 runs   (   49.47 ms per token,    20.22 tokens per second)
0.01.624.122 I llama_perf_context_print:       total time =    1201.63 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.655s
user	10m21.776s
sys	0m6.789s
