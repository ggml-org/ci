+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.523 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.750 I main: load the model and apply lora adapter, if any
0.00.020.908 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.916 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.923 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.929 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.930 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.935 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.935 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.936 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.936 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.937 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.938 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.942 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.942 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.943 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.943 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.944 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.417 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.697 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.512 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.518 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.519 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.519 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.520 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.521 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.521 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.524 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.524 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.525 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.525 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.526 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.529 I llama_model_loader: - type  f32:   37 tensors
0.00.130.530 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.726 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.129 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.237.661 I llm_load_vocab: special tokens cache size = 5
0.00.258.593 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.609 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.610 I llm_load_print_meta: arch             = gemma
0.00.258.610 I llm_load_print_meta: vocab type       = SPM
0.00.258.611 I llm_load_print_meta: n_vocab          = 256000
0.00.258.611 I llm_load_print_meta: n_merges         = 0
0.00.258.612 I llm_load_print_meta: vocab_only       = 0
0.00.258.612 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.612 I llm_load_print_meta: n_embd           = 2048
0.00.258.613 I llm_load_print_meta: n_layer          = 18
0.00.258.624 I llm_load_print_meta: n_head           = 8
0.00.258.625 I llm_load_print_meta: n_head_kv        = 1
0.00.258.625 I llm_load_print_meta: n_rot            = 256
0.00.258.625 I llm_load_print_meta: n_swa            = 0
0.00.258.626 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.626 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.627 I llm_load_print_meta: n_gqa            = 8
0.00.258.628 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.629 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.630 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.631 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.632 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.632 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.632 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.633 I llm_load_print_meta: n_ff             = 16384
0.00.258.633 I llm_load_print_meta: n_expert         = 0
0.00.258.633 I llm_load_print_meta: n_expert_used    = 0
0.00.258.634 I llm_load_print_meta: causal attn      = 1
0.00.258.634 I llm_load_print_meta: pooling type     = 0
0.00.258.634 I llm_load_print_meta: rope type        = 2
0.00.258.635 I llm_load_print_meta: rope scaling     = linear
0.00.258.636 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.637 I llm_load_print_meta: freq_scale_train = 1
0.00.258.637 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.637 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.638 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.638 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.638 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.638 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.639 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.639 I llm_load_print_meta: model type       = 2B
0.00.258.640 I llm_load_print_meta: model ftype      = Q8_0
0.00.258.641 I llm_load_print_meta: model params     = 2.51 B
0.00.258.641 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.258.642 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.642 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.642 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.643 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.643 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.643 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.644 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.644 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.645 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.645 I llm_load_print_meta: max token length = 93
0.00.358.132 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.358.139 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.358.139 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.358.140 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.358.141 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.358.141 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.363.345 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.351 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.352 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.352 I llama_new_context_with_model: n_batch       = 2048
0.00.363.353 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.353 I llama_new_context_with_model: flash_attn    = 0
0.00.363.355 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.356 I llama_new_context_with_model: freq_scale    = 1
0.00.363.357 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.377.403 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.417 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.509 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.791 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.797 I llama_new_context_with_model: graph nodes  = 601
0.00.378.797 I llama_new_context_with_model: graph splits = 1
0.00.378.799 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.932 I main: llama threadpool init, n_threads = 4
0.00.463.946 I 
0.00.464.022 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.025 I 
0.00.464.068 I sampler seed: 18860050
0.00.464.079 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.082 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.083 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.086 I 
 increasements in the context of natural language processing.

**Explanation:**

* **Natural Language Processing (NLP)** is the field of study concerned with enabling machines

0.02.703.670 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6766.45 tokens per second)
0.02.703.673 I llama_perf_context_print:        load time =     463.16 ms
0.02.703.674 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.703.676 I llama_perf_context_print:        eval time =    2220.70 ms /    32 runs   (   69.40 ms per token,    14.41 tokens per second)
0.02.703.676 I llama_perf_context_print:       total time =    2239.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.614 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.000.811 I main: load the model and apply lora adapter, if any
0.00.021.111 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.124 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.130 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.132 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.135 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.136 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.138 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.139 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.139 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.140 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.145 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.146 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.147 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.147 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.148 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.587 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.492 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.375 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.382 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.383 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.384 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.384 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.385 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.386 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.388 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.389 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.389 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.390 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.392 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.396 I llama_model_loader: - type  f32:   37 tensors
0.00.131.397 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.082 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.311 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.832 I llm_load_vocab: special tokens cache size = 5
0.00.274.835 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.853 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.854 I llm_load_print_meta: arch             = gemma
0.00.274.854 I llm_load_print_meta: vocab type       = SPM
0.00.274.855 I llm_load_print_meta: n_vocab          = 256000
0.00.274.856 I llm_load_print_meta: n_merges         = 0
0.00.274.856 I llm_load_print_meta: vocab_only       = 0
0.00.274.857 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.857 I llm_load_print_meta: n_embd           = 2048
0.00.274.857 I llm_load_print_meta: n_layer          = 18
0.00.274.868 I llm_load_print_meta: n_head           = 8
0.00.274.869 I llm_load_print_meta: n_head_kv        = 1
0.00.274.869 I llm_load_print_meta: n_rot            = 256
0.00.274.869 I llm_load_print_meta: n_swa            = 0
0.00.274.870 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.870 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.871 I llm_load_print_meta: n_gqa            = 8
0.00.274.872 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.873 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.874 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.876 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.876 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.877 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.877 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.878 I llm_load_print_meta: n_ff             = 16384
0.00.274.878 I llm_load_print_meta: n_expert         = 0
0.00.274.878 I llm_load_print_meta: n_expert_used    = 0
0.00.274.879 I llm_load_print_meta: causal attn      = 1
0.00.274.879 I llm_load_print_meta: pooling type     = 0
0.00.274.880 I llm_load_print_meta: rope type        = 2
0.00.274.880 I llm_load_print_meta: rope scaling     = linear
0.00.274.881 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.882 I llm_load_print_meta: freq_scale_train = 1
0.00.274.882 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.883 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.883 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.883 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.883 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.884 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.884 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.884 I llm_load_print_meta: model type       = 2B
0.00.274.885 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.886 I llm_load_print_meta: model params     = 2.51 B
0.00.274.887 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.887 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.888 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.888 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.888 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.889 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.889 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.889 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.890 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.890 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.890 I llm_load_print_meta: max token length = 93
0.00.369.453 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.374.610 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.617 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.617 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.617 I llama_new_context_with_model: n_batch       = 2048
0.00.374.618 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.619 I llama_new_context_with_model: flash_attn    = 0
0.00.374.621 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.622 I llama_new_context_with_model: freq_scale    = 1
0.00.374.623 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.055 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.069 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.159 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.376 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.383 I llama_new_context_with_model: graph nodes  = 601
0.00.390.383 I llama_new_context_with_model: graph splits = 1
0.00.390.385 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.635 I main: llama threadpool init, n_threads = 4
0.00.481.648 I 
0.00.481.720 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.723 I 
0.00.481.764 I sampler seed: 1705897278
0.00.481.776 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.779 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.780 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.780 I 
 increasements. [end of text]


0.00.754.429 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8237.23 tokens per second)
0.00.754.431 I llama_perf_context_print:        load time =     480.81 ms
0.00.754.432 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.754.434 I llama_perf_context_print:        eval time =     269.74 ms /     4 runs   (   67.43 ms per token,    14.83 tokens per second)
0.00.754.435 I llama_perf_context_print:       total time =     272.80 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.609 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.862 I main: llama backend init
0.00.000.870 I main: load the model and apply lora adapter, if any
0.00.021.469 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.479 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.487 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.492 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.495 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.500 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.500 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.501 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.502 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.502 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.503 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.506 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.506 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.507 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.507 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.508 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.721 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.171 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.014 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.022 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.022 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.023 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.024 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.026 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.027 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.028 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.029 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.135.030 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.033 I llama_model_loader: - type  f32:   37 tensors
0.00.135.034 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.564 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.675 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.283 I llm_load_vocab: special tokens cache size = 5
0.00.275.391 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.407 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.407 I llm_load_print_meta: arch             = gemma
0.00.275.408 I llm_load_print_meta: vocab type       = SPM
0.00.275.408 I llm_load_print_meta: n_vocab          = 256000
0.00.275.409 I llm_load_print_meta: n_merges         = 0
0.00.275.409 I llm_load_print_meta: vocab_only       = 0
0.00.275.409 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.410 I llm_load_print_meta: n_embd           = 2048
0.00.275.410 I llm_load_print_meta: n_layer          = 18
0.00.275.422 I llm_load_print_meta: n_head           = 8
0.00.275.423 I llm_load_print_meta: n_head_kv        = 1
0.00.275.424 I llm_load_print_meta: n_rot            = 256
0.00.275.424 I llm_load_print_meta: n_swa            = 0
0.00.275.424 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.425 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.426 I llm_load_print_meta: n_gqa            = 8
0.00.275.427 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.428 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.429 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.430 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.430 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.431 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.431 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.432 I llm_load_print_meta: n_ff             = 16384
0.00.275.432 I llm_load_print_meta: n_expert         = 0
0.00.275.432 I llm_load_print_meta: n_expert_used    = 0
0.00.275.433 I llm_load_print_meta: causal attn      = 1
0.00.275.433 I llm_load_print_meta: pooling type     = 0
0.00.275.433 I llm_load_print_meta: rope type        = 2
0.00.275.434 I llm_load_print_meta: rope scaling     = linear
0.00.275.435 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.436 I llm_load_print_meta: freq_scale_train = 1
0.00.275.436 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.436 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.436 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.437 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.437 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.438 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.438 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.438 I llm_load_print_meta: model type       = 2B
0.00.275.439 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.440 I llm_load_print_meta: model params     = 2.51 B
0.00.275.441 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.441 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.442 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.446 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.447 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.447 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.447 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.447 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.448 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.449 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.449 I llm_load_print_meta: max token length = 93
0.00.350.888 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.350.896 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.350.897 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.350.898 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.350.898 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.350.899 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.356.246 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.254 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.255 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.255 I llama_new_context_with_model: n_batch       = 2048
0.00.356.256 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.256 I llama_new_context_with_model: flash_attn    = 0
0.00.356.260 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.261 I llama_new_context_with_model: freq_scale    = 1
0.00.356.262 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.413 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.429 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.525 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.866 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.872 I llama_new_context_with_model: graph nodes  = 601
0.00.372.873 I llama_new_context_with_model: graph splits = 1
0.00.372.874 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.869 I main: llama threadpool init, n_threads = 4
0.00.461.882 I 
0.00.461.955 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.958 I 
0.00.462.000 I sampler seed: 373299038
0.00.462.012 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.015 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.462.015 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.016 I 
 increasities, and other sexual activity that is not in accordance with accepted medical or religious standards. [end of text]


0.01.865.444 I llama_perf_sampler_print:    sampling time =       3.09 ms /    21 runs   (    0.15 ms per token,  6800.52 tokens per second)
0.01.865.447 I llama_perf_context_print:        load time =     460.98 ms
0.01.865.447 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.865.449 I llama_perf_context_print:        eval time =    1391.65 ms /    20 runs   (   69.58 ms per token,    14.37 tokens per second)
0.01.865.450 I llama_perf_context_print:       total time =    1403.58 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.537 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.212 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.223 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.231 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.240 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.242 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.245 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.247 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.248 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.248 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.249 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.250 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.255 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.257 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.258 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.259 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.259 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.594 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.471 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.477 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.478 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.479 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.480 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.481 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.482 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.486 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.486 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.487 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.488 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.135.489 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.494 I llama_model_loader: - type  f32:   37 tensors
0.00.135.496 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.536 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.259.646 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.282 I llm_load_vocab: special tokens cache size = 5
0.00.282.952 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.971 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.972 I llm_load_print_meta: arch             = gemma
0.00.282.972 I llm_load_print_meta: vocab type       = SPM
0.00.282.973 I llm_load_print_meta: n_vocab          = 256000
0.00.282.973 I llm_load_print_meta: n_merges         = 0
0.00.282.974 I llm_load_print_meta: vocab_only       = 0
0.00.282.974 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.975 I llm_load_print_meta: n_embd           = 2048
0.00.282.975 I llm_load_print_meta: n_layer          = 18
0.00.282.989 I llm_load_print_meta: n_head           = 8
0.00.282.991 I llm_load_print_meta: n_head_kv        = 1
0.00.282.991 I llm_load_print_meta: n_rot            = 256
0.00.282.992 I llm_load_print_meta: n_swa            = 0
0.00.282.993 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.993 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.995 I llm_load_print_meta: n_gqa            = 8
0.00.282.996 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.998 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.999 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.001 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.002 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.002 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.003 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.004 I llm_load_print_meta: n_ff             = 16384
0.00.283.005 I llm_load_print_meta: n_expert         = 0
0.00.283.006 I llm_load_print_meta: n_expert_used    = 0
0.00.283.006 I llm_load_print_meta: causal attn      = 1
0.00.283.007 I llm_load_print_meta: pooling type     = 0
0.00.283.008 I llm_load_print_meta: rope type        = 2
0.00.283.008 I llm_load_print_meta: rope scaling     = linear
0.00.283.010 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.011 I llm_load_print_meta: freq_scale_train = 1
0.00.283.011 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.012 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.012 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.013 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.013 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.014 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.014 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.015 I llm_load_print_meta: model type       = 2B
0.00.283.016 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.017 I llm_load_print_meta: model params     = 2.51 B
0.00.283.021 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.021 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.022 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.023 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.023 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.024 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.024 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.024 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.025 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.026 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.026 I llm_load_print_meta: max token length = 93
0.00.354.441 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.354.447 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.359.651 I llama_new_context_with_model: n_seq_max     = 1
0.00.359.658 I llama_new_context_with_model: n_ctx         = 4096
0.00.359.659 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.359.659 I llama_new_context_with_model: n_batch       = 2048
0.00.359.659 I llama_new_context_with_model: n_ubatch      = 512
0.00.359.660 I llama_new_context_with_model: flash_attn    = 0
0.00.359.663 I llama_new_context_with_model: freq_base     = 10000.0
0.00.359.664 I llama_new_context_with_model: freq_scale    = 1
0.00.359.665 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.374.253 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.374.266 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.374.359 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.744 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.375.751 I llama_new_context_with_model: graph nodes  = 601
0.00.375.751 I llama_new_context_with_model: graph splits = 1
0.00.375.753 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.717 I main: llama threadpool init, n_threads = 4
0.00.464.731 I 
0.00.464.821 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.824 I 
0.00.464.876 I sampler seed: 2891229394
0.00.464.887 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.891 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.893 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.893 I 
 increably.

**Answer:**
I cannot answer the question as it contains inappropriate language. [end of text]


0.01.987.921 I llama_perf_sampler_print:    sampling time =       3.27 ms /    21 runs   (    0.16 ms per token,  6412.21 tokens per second)
0.01.987.924 I llama_perf_context_print:        load time =     463.93 ms
0.01.987.925 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.987.927 I llama_perf_context_print:        eval time =    1510.82 ms /    20 runs   (   75.54 ms per token,    13.24 tokens per second)
0.01.987.927 I llama_perf_context_print:       total time =    1523.21 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.904s
user	0m24.634s
sys	0m9.392s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4117 (20a780c7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40205.33 ms
main:    total time = 40205.33 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.569 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.789 I main: llama backend init
0.00.000.796 I main: load the model and apply lora adapter, if any
0.00.021.678 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.687 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.696 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.702 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.703 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.707 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.708 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.716 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.717 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.718 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.718 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.722 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.723 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.723 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.723 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.724 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.412 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.661 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.467 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.473 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.473 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.474 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.475 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.475 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.476 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.478 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.479 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.479 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.480 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.480 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.483 I llama_model_loader: - type  f32:   37 tensors
0.00.131.484 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.485 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.566 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.512 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.016 I llm_load_vocab: special tokens cache size = 5
0.00.260.982 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.997 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.998 I llm_load_print_meta: arch             = gemma
0.00.260.998 I llm_load_print_meta: vocab type       = SPM
0.00.260.999 I llm_load_print_meta: n_vocab          = 256000
0.00.261.000 I llm_load_print_meta: n_merges         = 0
0.00.261.000 I llm_load_print_meta: vocab_only       = 0
0.00.261.000 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.001 I llm_load_print_meta: n_embd           = 2048
0.00.261.001 I llm_load_print_meta: n_layer          = 18
0.00.261.012 I llm_load_print_meta: n_head           = 8
0.00.261.013 I llm_load_print_meta: n_head_kv        = 1
0.00.261.014 I llm_load_print_meta: n_rot            = 256
0.00.261.014 I llm_load_print_meta: n_swa            = 0
0.00.261.014 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.015 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.015 I llm_load_print_meta: n_gqa            = 8
0.00.261.017 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.018 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.018 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.022 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.022 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.022 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.022 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.023 I llm_load_print_meta: n_ff             = 16384
0.00.261.024 I llm_load_print_meta: n_expert         = 0
0.00.261.024 I llm_load_print_meta: n_expert_used    = 0
0.00.261.024 I llm_load_print_meta: causal attn      = 1
0.00.261.024 I llm_load_print_meta: pooling type     = 0
0.00.261.025 I llm_load_print_meta: rope type        = 2
0.00.261.025 I llm_load_print_meta: rope scaling     = linear
0.00.261.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.029 I llm_load_print_meta: freq_scale_train = 1
0.00.261.029 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.030 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.030 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.031 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.031 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.031 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.031 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.032 I llm_load_print_meta: model type       = 2B
0.00.261.033 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.033 I llm_load_print_meta: model params     = 2.51 B
0.00.261.034 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.035 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.035 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.035 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.036 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.036 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.037 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.037 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.037 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.038 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.038 I llm_load_print_meta: max token length = 93
0.00.321.141 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.321.146 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.321.147 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.321.147 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.321.148 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.321.149 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.326.345 I llama_new_context_with_model: n_seq_max     = 1
0.00.326.352 I llama_new_context_with_model: n_ctx         = 4096
0.00.326.352 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.326.352 I llama_new_context_with_model: n_batch       = 2048
0.00.326.353 I llama_new_context_with_model: n_ubatch      = 512
0.00.326.353 I llama_new_context_with_model: flash_attn    = 0
0.00.326.356 I llama_new_context_with_model: freq_base     = 10000.0
0.00.326.357 I llama_new_context_with_model: freq_scale    = 1
0.00.326.358 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.813 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.340.827 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.340.926 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.236 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.242 I llama_new_context_with_model: graph nodes  = 601
0.00.342.242 I llama_new_context_with_model: graph splits = 1
0.00.342.244 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.891 I main: llama threadpool init, n_threads = 4
0.00.418.907 I 
0.00.418.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.987 I 
0.00.419.032 I sampler seed: 407179085
0.00.419.043 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.046 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.419.047 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.048 I 
 seconally.

The answer is:

I'm sorry, but I am unable to provide assistance with writing or generating responses that promote inappropriate or sexually suggestive

0.01.995.261 I llama_perf_sampler_print:    sampling time =       5.86 ms /    33 runs   (    0.18 ms per token,  5629.48 tokens per second)
0.01.995.264 I llama_perf_context_print:        load time =     418.08 ms
0.01.995.265 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.995.266 I llama_perf_context_print:        eval time =    1556.75 ms /    32 runs   (   48.65 ms per token,    20.56 tokens per second)
0.01.995.267 I llama_perf_context_print:       total time =    1576.38 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4117 (20a780c7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40165.89 ms
main:    total time = 40165.89 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 4117 (20a780c7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.021.175 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.191 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.200 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.204 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.210 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.211 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.212 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.213 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.213 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.214 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.219 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.219 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.222 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.273 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.704 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.557 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.564 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.565 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.566 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.567 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.568 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.568 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.571 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.572 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.577 I llama_model_loader: - type  f32:   37 tensors
0.00.131.577 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.579 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.458 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.778 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.274 I llm_load_vocab: special tokens cache size = 5
0.00.263.130 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.145 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.145 I llm_load_print_meta: arch             = gemma
0.00.263.146 I llm_load_print_meta: vocab type       = SPM
0.00.263.146 I llm_load_print_meta: n_vocab          = 256000
0.00.263.147 I llm_load_print_meta: n_merges         = 0
0.00.263.147 I llm_load_print_meta: vocab_only       = 0
0.00.263.147 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.148 I llm_load_print_meta: n_embd           = 2048
0.00.263.148 I llm_load_print_meta: n_layer          = 18
0.00.263.158 I llm_load_print_meta: n_head           = 8
0.00.263.159 I llm_load_print_meta: n_head_kv        = 1
0.00.263.160 I llm_load_print_meta: n_rot            = 256
0.00.263.160 I llm_load_print_meta: n_swa            = 0
0.00.263.160 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.160 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.161 I llm_load_print_meta: n_gqa            = 8
0.00.263.162 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.163 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.165 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.166 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.166 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.166 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.167 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.167 I llm_load_print_meta: n_ff             = 16384
0.00.263.168 I llm_load_print_meta: n_expert         = 0
0.00.263.168 I llm_load_print_meta: n_expert_used    = 0
0.00.263.168 I llm_load_print_meta: causal attn      = 1
0.00.263.169 I llm_load_print_meta: pooling type     = 0
0.00.263.169 I llm_load_print_meta: rope type        = 2
0.00.263.169 I llm_load_print_meta: rope scaling     = linear
0.00.263.171 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.172 I llm_load_print_meta: freq_scale_train = 1
0.00.263.172 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.172 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.173 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.173 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.173 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.174 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.174 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.174 I llm_load_print_meta: model type       = 2B
0.00.263.175 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.175 I llm_load_print_meta: model params     = 2.51 B
0.00.263.176 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.176 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.177 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.177 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.178 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.178 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.178 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.179 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.179 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.180 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.180 I llm_load_print_meta: max token length = 93
0.00.320.014 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.325.093 I llama_new_context_with_model: n_seq_max     = 1
0.00.325.099 I llama_new_context_with_model: n_ctx         = 4096
0.00.325.100 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.325.100 I llama_new_context_with_model: n_batch       = 2048
0.00.325.101 I llama_new_context_with_model: n_ubatch      = 512
0.00.325.101 I llama_new_context_with_model: flash_attn    = 0
0.00.325.104 I llama_new_context_with_model: freq_base     = 10000.0
0.00.325.105 I llama_new_context_with_model: freq_scale    = 1
0.00.325.107 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.339.582 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.339.596 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.339.688 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.987 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.340.993 I llama_new_context_with_model: graph nodes  = 601
0.00.340.993 I llama_new_context_with_model: graph splits = 1
0.00.340.996 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.066 I main: llama threadpool init, n_threads = 4
0.00.415.079 I 
0.00.415.164 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.415.168 I 
0.00.415.222 I sampler seed: 315906025
0.00.415.234 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.241 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.415.247 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.247 I 
 seconded, "You have no idea what you're doing!" while riding a roller coaster. 

The caption implied that the roller coaster was dangerous and

0.01.969.894 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6830.88 tokens per second)
0.01.969.897 I llama_perf_context_print:        load time =     414.30 ms
0.01.969.898 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.969.899 I llama_perf_context_print:        eval time =    1536.59 ms /    32 runs   (   48.02 ms per token,    20.83 tokens per second)
0.01.969.900 I llama_perf_context_print:       total time =    1554.84 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.122s
user	10m24.119s
sys	0m6.755s
