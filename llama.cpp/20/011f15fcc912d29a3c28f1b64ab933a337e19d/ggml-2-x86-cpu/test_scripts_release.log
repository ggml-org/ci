+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.535 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.001.865 I main: load the model and apply lora adapter, if any
0.00.022.526 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.576 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.583 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.589 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.590 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.593 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.594 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.595 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.596 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.597 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.598 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.602 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.604 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.604 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.605 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.606 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.259 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.765 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.651 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.657 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.658 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.659 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.659 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.660 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.661 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.663 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.664 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.664 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.665 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.666 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.671 I llama_model_loader: - type  f32:   37 tensors
0.00.133.673 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.985 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.706 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.373 I llm_load_vocab: special tokens cache size = 5
0.00.278.480 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.499 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.499 I llm_load_print_meta: arch             = gemma
0.00.278.500 I llm_load_print_meta: vocab type       = SPM
0.00.278.501 I llm_load_print_meta: n_vocab          = 256000
0.00.278.501 I llm_load_print_meta: n_merges         = 0
0.00.278.502 I llm_load_print_meta: vocab_only       = 0
0.00.278.502 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.503 I llm_load_print_meta: n_embd           = 2048
0.00.278.503 I llm_load_print_meta: n_layer          = 18
0.00.278.515 I llm_load_print_meta: n_head           = 8
0.00.278.516 I llm_load_print_meta: n_head_kv        = 1
0.00.278.517 I llm_load_print_meta: n_rot            = 256
0.00.278.517 I llm_load_print_meta: n_swa            = 0
0.00.278.517 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.518 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.519 I llm_load_print_meta: n_gqa            = 8
0.00.278.520 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.521 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.522 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.523 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.523 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.523 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.524 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.525 I llm_load_print_meta: n_ff             = 16384
0.00.278.525 I llm_load_print_meta: n_expert         = 0
0.00.278.526 I llm_load_print_meta: n_expert_used    = 0
0.00.278.526 I llm_load_print_meta: causal attn      = 1
0.00.278.526 I llm_load_print_meta: pooling type     = 0
0.00.278.527 I llm_load_print_meta: rope type        = 2
0.00.278.527 I llm_load_print_meta: rope scaling     = linear
0.00.278.528 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.529 I llm_load_print_meta: freq_scale_train = 1
0.00.278.529 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.530 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.530 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.530 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.530 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.530 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.531 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.531 I llm_load_print_meta: model type       = 2B
0.00.278.532 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.533 I llm_load_print_meta: model params     = 2.51 B
0.00.278.534 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.534 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.535 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.535 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.535 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.536 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.536 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.536 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.536 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.537 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.537 I llm_load_print_meta: max token length = 93
0.00.278.559 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.379.266 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.379.275 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.379.275 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.379.276 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.379.277 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.379.277 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.384.500 I llama_new_context_with_model: n_ctx      = 8192
0.00.384.507 I llama_new_context_with_model: n_batch    = 2048
0.00.384.508 I llama_new_context_with_model: n_ubatch   = 512
0.00.384.508 I llama_new_context_with_model: flash_attn = 0
0.00.384.511 I llama_new_context_with_model: freq_base  = 10000.0
0.00.384.512 I llama_new_context_with_model: freq_scale = 1
0.00.414.616 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.414.631 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.414.729 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.638 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.415.646 I llama_new_context_with_model: graph nodes  = 601
0.00.415.647 I llama_new_context_with_model: graph splits = 1
0.00.415.649 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.507.034 I main: llama threadpool init, n_threads = 4
0.00.507.047 I 
0.00.507.123 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.507.126 I 
0.00.507.165 I sampler seed: 4137942464
0.00.507.176 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.507.178 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.507.179 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.507.179 I 
 increasities. [end of text]


0.00.790.083 I llama_perf_sampler_print:    sampling time =       0.72 ms /     5 runs   (    0.14 ms per token,  6925.21 tokens per second)
0.00.790.085 I llama_perf_context_print:        load time =     505.15 ms
0.00.790.087 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.790.089 I llama_perf_context_print:        eval time =     279.36 ms /     4 runs   (   69.84 ms per token,    14.32 tokens per second)
0.00.790.090 I llama_perf_context_print:       total time =     283.06 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.529 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.715 I main: llama backend init
0.00.001.846 I main: load the model and apply lora adapter, if any
0.00.022.224 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.241 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.249 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.250 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.254 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.255 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.256 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.256 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.257 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.257 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.262 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.262 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.263 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.264 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.794 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.854 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.707 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.714 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.714 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.715 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.715 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.716 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.717 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.720 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.720 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.721 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.721 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.722 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.727 I llama_model_loader: - type  f32:   37 tensors
0.00.133.729 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.043 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.640 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.126 I llm_load_vocab: special tokens cache size = 5
0.00.264.321 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.336 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.336 I llm_load_print_meta: arch             = gemma
0.00.264.337 I llm_load_print_meta: vocab type       = SPM
0.00.264.337 I llm_load_print_meta: n_vocab          = 256000
0.00.264.338 I llm_load_print_meta: n_merges         = 0
0.00.264.338 I llm_load_print_meta: vocab_only       = 0
0.00.264.338 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.339 I llm_load_print_meta: n_embd           = 2048
0.00.264.339 I llm_load_print_meta: n_layer          = 18
0.00.264.351 I llm_load_print_meta: n_head           = 8
0.00.264.352 I llm_load_print_meta: n_head_kv        = 1
0.00.264.352 I llm_load_print_meta: n_rot            = 256
0.00.264.353 I llm_load_print_meta: n_swa            = 0
0.00.264.353 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.353 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.354 I llm_load_print_meta: n_gqa            = 8
0.00.264.355 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.357 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.357 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.359 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.359 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.359 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.360 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.361 I llm_load_print_meta: n_ff             = 16384
0.00.264.361 I llm_load_print_meta: n_expert         = 0
0.00.264.361 I llm_load_print_meta: n_expert_used    = 0
0.00.264.361 I llm_load_print_meta: causal attn      = 1
0.00.264.362 I llm_load_print_meta: pooling type     = 0
0.00.264.362 I llm_load_print_meta: rope type        = 2
0.00.264.362 I llm_load_print_meta: rope scaling     = linear
0.00.264.364 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.365 I llm_load_print_meta: freq_scale_train = 1
0.00.264.365 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.365 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.366 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.366 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.366 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.366 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.366 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.367 I llm_load_print_meta: model type       = 2B
0.00.264.367 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.368 I llm_load_print_meta: model params     = 2.51 B
0.00.264.369 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.369 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.370 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.370 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.370 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.370 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.371 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.371 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.371 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.372 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.372 I llm_load_print_meta: max token length = 93
0.00.264.390 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.359.890 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.364.938 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.944 I llama_new_context_with_model: n_batch    = 2048
0.00.364.945 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.945 I llama_new_context_with_model: flash_attn = 0
0.00.364.947 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.948 I llama_new_context_with_model: freq_scale = 1
0.00.393.496 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.511 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.393.603 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.463 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.471 I llama_new_context_with_model: graph nodes  = 601
0.00.394.471 I llama_new_context_with_model: graph splits = 1
0.00.394.473 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.087 I main: llama threadpool init, n_threads = 4
0.00.482.101 I 
0.00.482.175 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.482.178 I 
0.00.482.216 I sampler seed: 2689943162
0.00.482.225 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.232 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.482.233 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.234 I 
 increasities from the 20th century and their impact on the development of modern medicine.

**Answer:**

**The Impact of 20th

0.02.656.556 I llama_perf_sampler_print:    sampling time =       5.62 ms /    33 runs   (    0.17 ms per token,  5870.84 tokens per second)
0.02.656.559 I llama_perf_context_print:        load time =     480.22 ms
0.02.656.560 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.656.563 I llama_perf_context_print:        eval time =    2153.76 ms /    32 runs   (   67.30 ms per token,    14.86 tokens per second)
0.02.656.563 I llama_perf_context_print:       total time =    2174.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.537 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.756 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.805 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.812 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.822 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.823 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.826 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.827 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.828 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.828 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.829 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.830 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.834 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.835 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.835 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.836 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.836 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.492 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.310 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.241 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.248 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.249 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.250 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.250 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.251 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.252 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.254 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.254 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.256 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.256 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.261 I llama_model_loader: - type  f32:   37 tensors
0.00.132.263 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.446 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.443 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.964 I llm_load_vocab: special tokens cache size = 5
0.00.281.866 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.883 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.883 I llm_load_print_meta: arch             = gemma
0.00.281.884 I llm_load_print_meta: vocab type       = SPM
0.00.281.884 I llm_load_print_meta: n_vocab          = 256000
0.00.281.885 I llm_load_print_meta: n_merges         = 0
0.00.281.885 I llm_load_print_meta: vocab_only       = 0
0.00.281.885 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.886 I llm_load_print_meta: n_embd           = 2048
0.00.281.886 I llm_load_print_meta: n_layer          = 18
0.00.281.898 I llm_load_print_meta: n_head           = 8
0.00.281.899 I llm_load_print_meta: n_head_kv        = 1
0.00.281.899 I llm_load_print_meta: n_rot            = 256
0.00.281.900 I llm_load_print_meta: n_swa            = 0
0.00.281.900 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.900 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.901 I llm_load_print_meta: n_gqa            = 8
0.00.281.902 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.903 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.904 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.905 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.906 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.906 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.906 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.907 I llm_load_print_meta: n_ff             = 16384
0.00.281.908 I llm_load_print_meta: n_expert         = 0
0.00.281.908 I llm_load_print_meta: n_expert_used    = 0
0.00.281.908 I llm_load_print_meta: causal attn      = 1
0.00.281.909 I llm_load_print_meta: pooling type     = 0
0.00.281.909 I llm_load_print_meta: rope type        = 2
0.00.281.909 I llm_load_print_meta: rope scaling     = linear
0.00.281.911 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.912 I llm_load_print_meta: freq_scale_train = 1
0.00.281.912 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.912 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.912 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.912 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.913 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.913 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.913 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.914 I llm_load_print_meta: model type       = 2B
0.00.281.914 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.915 I llm_load_print_meta: model params     = 2.51 B
0.00.281.916 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.917 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.917 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.918 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.918 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.918 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.919 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.919 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.919 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.920 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.920 I llm_load_print_meta: max token length = 93
0.00.281.940 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.358.937 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.358.944 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.358.945 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.358.946 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.358.946 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.358.947 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.364.028 I llama_new_context_with_model: n_ctx      = 8192
0.00.364.033 I llama_new_context_with_model: n_batch    = 2048
0.00.364.033 I llama_new_context_with_model: n_ubatch   = 512
0.00.364.034 I llama_new_context_with_model: flash_attn = 0
0.00.364.036 I llama_new_context_with_model: freq_base  = 10000.0
0.00.364.037 I llama_new_context_with_model: freq_scale = 1
0.00.392.701 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.392.715 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.392.809 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.691 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.393.700 I llama_new_context_with_model: graph nodes  = 601
0.00.393.700 I llama_new_context_with_model: graph splits = 1
0.00.393.701 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.740 I main: llama threadpool init, n_threads = 4
0.00.484.753 I 
0.00.484.826 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.484.830 I 
0.00.484.869 I sampler seed: 3440449146
0.00.484.881 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.884 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.885 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.886 I 
 increasities from the early 20th century and their impact on social structures and gender roles.

**Answer:**

**Early 20th Century

0.02.742.305 I llama_perf_sampler_print:    sampling time =       5.71 ms /    33 runs   (    0.17 ms per token,  5783.39 tokens per second)
0.02.742.307 I llama_perf_context_print:        load time =     482.87 ms
0.02.742.308 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.742.310 I llama_perf_context_print:        eval time =    2237.01 ms /    32 runs   (   69.91 ms per token,    14.30 tokens per second)
0.02.742.311 I llama_perf_context_print:       total time =    2257.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.569 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.967 I main: load the model and apply lora adapter, if any
0.00.022.158 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.217 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.231 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.236 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.238 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.243 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.247 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.248 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.249 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.250 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.251 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.260 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.261 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.262 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.263 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.264 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.829 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.840 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.731 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.737 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.739 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.740 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.741 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.743 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.744 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.744 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.746 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.747 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.750 I llama_model_loader: - type  f32:   37 tensors
0.00.132.753 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.786 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.374 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.041 I llm_load_vocab: special tokens cache size = 5
0.00.271.161 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.178 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.179 I llm_load_print_meta: arch             = gemma
0.00.271.179 I llm_load_print_meta: vocab type       = SPM
0.00.271.180 I llm_load_print_meta: n_vocab          = 256000
0.00.271.180 I llm_load_print_meta: n_merges         = 0
0.00.271.181 I llm_load_print_meta: vocab_only       = 0
0.00.271.181 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.181 I llm_load_print_meta: n_embd           = 2048
0.00.271.182 I llm_load_print_meta: n_layer          = 18
0.00.271.194 I llm_load_print_meta: n_head           = 8
0.00.271.195 I llm_load_print_meta: n_head_kv        = 1
0.00.271.196 I llm_load_print_meta: n_rot            = 256
0.00.271.196 I llm_load_print_meta: n_swa            = 0
0.00.271.196 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.197 I llm_load_print_meta: n_gqa            = 8
0.00.271.198 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.199 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.200 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.201 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.202 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.202 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.202 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.203 I llm_load_print_meta: n_ff             = 16384
0.00.271.204 I llm_load_print_meta: n_expert         = 0
0.00.271.204 I llm_load_print_meta: n_expert_used    = 0
0.00.271.204 I llm_load_print_meta: causal attn      = 1
0.00.271.204 I llm_load_print_meta: pooling type     = 0
0.00.271.205 I llm_load_print_meta: rope type        = 2
0.00.271.205 I llm_load_print_meta: rope scaling     = linear
0.00.271.206 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.207 I llm_load_print_meta: freq_scale_train = 1
0.00.271.207 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.207 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.208 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.208 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.208 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.208 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.208 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.209 I llm_load_print_meta: model type       = 2B
0.00.271.210 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.210 I llm_load_print_meta: model params     = 2.51 B
0.00.271.211 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.211 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.212 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.213 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.213 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.213 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.213 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.214 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.214 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.214 I llm_load_print_meta: max token length = 93
0.00.271.235 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.318 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.341.325 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.346.415 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.421 I llama_new_context_with_model: n_batch    = 2048
0.00.346.421 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.422 I llama_new_context_with_model: flash_attn = 0
0.00.346.424 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.425 I llama_new_context_with_model: freq_scale = 1
0.00.375.308 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.335 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.446 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.296 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.304 I llama_new_context_with_model: graph nodes  = 601
0.00.376.304 I llama_new_context_with_model: graph splits = 1
0.00.376.306 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.756 I main: llama threadpool init, n_threads = 4
0.00.474.770 I 
0.00.474.864 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.474.867 I 
0.00.474.913 I sampler seed: 1381215794
0.00.474.923 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.926 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.474.926 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.474.927 I 
 increasities, the rhythmic clattering of the bell, and the echoing whispers of the wind through the trees. These are the sounds of a bustling marketplace, a

0.02.893.677 I llama_perf_sampler_print:    sampling time =       5.92 ms /    33 runs   (    0.18 ms per token,  5573.38 tokens per second)
0.02.893.680 I llama_perf_context_print:        load time =     472.76 ms
0.02.893.683 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.893.685 I llama_perf_context_print:        eval time =    2397.86 ms /    32 runs   (   74.93 ms per token,    13.35 tokens per second)
0.02.893.687 I llama_perf_context_print:       total time =    2418.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.766s
user	0m31.443s
sys	0m9.364s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3966 (20011f15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31965.09 ms
main:    total time = 31965.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.001.832 I main: load the model and apply lora adapter, if any
0.00.021.912 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.961 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.972 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.977 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.980 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.984 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.986 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.987 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.988 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.988 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.991 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.992 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.992 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.993 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.993 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.554 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.250 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.077 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.083 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.084 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.084 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.085 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.086 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.086 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.088 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.089 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.090 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.090 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.091 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.094 I llama_model_loader: - type  f32:   37 tensors
0.00.132.096 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.097 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.549 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.297 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.844 I llm_load_vocab: special tokens cache size = 5
0.00.269.144 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.158 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.159 I llm_load_print_meta: arch             = gemma
0.00.269.159 I llm_load_print_meta: vocab type       = SPM
0.00.269.160 I llm_load_print_meta: n_vocab          = 256000
0.00.269.160 I llm_load_print_meta: n_merges         = 0
0.00.269.161 I llm_load_print_meta: vocab_only       = 0
0.00.269.161 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.161 I llm_load_print_meta: n_embd           = 2048
0.00.269.162 I llm_load_print_meta: n_layer          = 18
0.00.269.173 I llm_load_print_meta: n_head           = 8
0.00.269.173 I llm_load_print_meta: n_head_kv        = 1
0.00.269.174 I llm_load_print_meta: n_rot            = 256
0.00.269.174 I llm_load_print_meta: n_swa            = 0
0.00.269.175 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.175 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.176 I llm_load_print_meta: n_gqa            = 8
0.00.269.177 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.178 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.178 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.180 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.180 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.181 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.182 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.183 I llm_load_print_meta: n_ff             = 16384
0.00.269.183 I llm_load_print_meta: n_expert         = 0
0.00.269.183 I llm_load_print_meta: n_expert_used    = 0
0.00.269.184 I llm_load_print_meta: causal attn      = 1
0.00.269.184 I llm_load_print_meta: pooling type     = 0
0.00.269.184 I llm_load_print_meta: rope type        = 2
0.00.269.184 I llm_load_print_meta: rope scaling     = linear
0.00.269.186 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.186 I llm_load_print_meta: freq_scale_train = 1
0.00.269.187 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.187 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.187 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.187 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.188 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.188 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.189 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.189 I llm_load_print_meta: model type       = 2B
0.00.269.190 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.191 I llm_load_print_meta: model params     = 2.51 B
0.00.269.191 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.192 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.192 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.192 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.192 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.193 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.193 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.193 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.193 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.194 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.194 I llm_load_print_meta: max token length = 93
0.00.269.212 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.652 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.328.658 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.328.659 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.328.660 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.328.660 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.328.661 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.333.683 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.689 I llama_new_context_with_model: n_batch    = 2048
0.00.333.689 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.690 I llama_new_context_with_model: flash_attn = 0
0.00.333.692 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.693 I llama_new_context_with_model: freq_scale = 1
0.00.363.250 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.266 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.374 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.252 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.260 I llama_new_context_with_model: graph nodes  = 601
0.00.364.260 I llama_new_context_with_model: graph splits = 1
0.00.364.262 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.722 I main: llama threadpool init, n_threads = 4
0.00.445.738 I 
0.00.445.816 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.820 I 
0.00.445.856 I sampler seed: 2570066885
0.00.445.868 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.872 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.445.872 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.873 I 
 seconally to the end of the sentence.

The importance of studying history is undeniable, and it offers valuable insights into the past, guiding our present and shaping

0.02.061.628 I llama_perf_sampler_print:    sampling time =       5.47 ms /    33 runs   (    0.17 ms per token,  6036.22 tokens per second)
0.02.061.631 I llama_perf_context_print:        load time =     443.87 ms
0.02.061.633 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.061.634 I llama_perf_context_print:        eval time =    1595.49 ms /    32 runs   (   49.86 ms per token,    20.06 tokens per second)
0.02.061.635 I llama_perf_context_print:       total time =    1615.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3966 (20011f15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32059.71 ms
main:    total time = 32059.71 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.506 I build: 3966 (20011f15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.702 I main: llama backend init
0.00.001.817 I main: load the model and apply lora adapter, if any
0.00.021.982 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.001 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.006 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.010 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.014 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.015 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.016 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.016 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.017 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.017 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.020 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.021 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.022 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.023 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.023 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.156 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.197 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.036 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.042 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.043 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.044 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.044 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.046 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.046 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.049 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.050 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.054 I llama_model_loader: - type  f32:   37 tensors
0.00.132.057 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.058 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.081 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.405 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.960 I llm_load_vocab: special tokens cache size = 5
0.00.266.982 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.996 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.997 I llm_load_print_meta: arch             = gemma
0.00.266.997 I llm_load_print_meta: vocab type       = SPM
0.00.266.998 I llm_load_print_meta: n_vocab          = 256000
0.00.266.999 I llm_load_print_meta: n_merges         = 0
0.00.266.999 I llm_load_print_meta: vocab_only       = 0
0.00.266.999 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.999 I llm_load_print_meta: n_embd           = 2048
0.00.267.000 I llm_load_print_meta: n_layer          = 18
0.00.267.011 I llm_load_print_meta: n_head           = 8
0.00.267.012 I llm_load_print_meta: n_head_kv        = 1
0.00.267.012 I llm_load_print_meta: n_rot            = 256
0.00.267.012 I llm_load_print_meta: n_swa            = 0
0.00.267.013 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.013 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.014 I llm_load_print_meta: n_gqa            = 8
0.00.267.015 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.016 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.016 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.018 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.018 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.019 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.019 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.020 I llm_load_print_meta: n_ff             = 16384
0.00.267.020 I llm_load_print_meta: n_expert         = 0
0.00.267.020 I llm_load_print_meta: n_expert_used    = 0
0.00.267.021 I llm_load_print_meta: causal attn      = 1
0.00.267.022 I llm_load_print_meta: pooling type     = 0
0.00.267.022 I llm_load_print_meta: rope type        = 2
0.00.267.023 I llm_load_print_meta: rope scaling     = linear
0.00.267.024 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.025 I llm_load_print_meta: freq_scale_train = 1
0.00.267.025 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.027 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.027 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.027 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.035 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.035 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.036 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.036 I llm_load_print_meta: model type       = 2B
0.00.267.037 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.037 I llm_load_print_meta: model params     = 2.51 B
0.00.267.038 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.038 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.039 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.039 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.040 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.040 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.040 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.041 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.041 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.042 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.042 I llm_load_print_meta: max token length = 93
0.00.267.062 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.513 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.329.468 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.474 I llama_new_context_with_model: n_batch    = 2048
0.00.329.475 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.475 I llama_new_context_with_model: flash_attn = 0
0.00.329.477 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.478 I llama_new_context_with_model: freq_scale = 1
0.00.357.924 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.940 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.029 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.847 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.855 I llama_new_context_with_model: graph nodes  = 601
0.00.358.855 I llama_new_context_with_model: graph splits = 1
0.00.358.857 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.335 I main: llama threadpool init, n_threads = 4
0.00.438.349 I 
0.00.438.426 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.430 I 
0.00.438.473 I sampler seed: 372152116
0.00.438.483 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.486 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.487 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.487 I 
 increably. [end of text]


0.00.633.277 I llama_perf_sampler_print:    sampling time =       0.69 ms /     5 runs   (    0.14 ms per token,  7246.38 tokens per second)
0.00.633.280 I llama_perf_context_print:        load time =     436.50 ms
0.00.633.281 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.633.283 I llama_perf_context_print:        eval time =     191.66 ms /     4 runs   (   47.92 ms per token,    20.87 tokens per second)
0.00.633.284 I llama_perf_context_print:       total time =     194.95 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.641s
user	8m9.182s
sys	0m6.731s
