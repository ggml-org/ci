+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.022.019 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.066 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.077 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.082 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.083 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.086 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.086 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.087 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.088 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.089 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.089 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.093 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.094 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.095 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.095 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.096 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.550 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.582 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.427 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.433 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.434 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.435 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.435 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.437 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.438 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.441 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.442 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.443 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.443 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.444 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.448 I llama_model_loader: - type  f32:   37 tensors
0.00.132.450 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.418 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.783 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.472 I llm_load_vocab: special tokens cache size = 5
0.00.224.471 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.485 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.486 I llm_load_print_meta: arch             = gemma
0.00.224.487 I llm_load_print_meta: vocab type       = SPM
0.00.224.487 I llm_load_print_meta: n_vocab          = 256000
0.00.224.488 I llm_load_print_meta: n_merges         = 0
0.00.224.488 I llm_load_print_meta: vocab_only       = 0
0.00.224.488 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.489 I llm_load_print_meta: n_embd           = 2048
0.00.224.489 I llm_load_print_meta: n_layer          = 18
0.00.224.501 I llm_load_print_meta: n_head           = 8
0.00.224.502 I llm_load_print_meta: n_head_kv        = 1
0.00.224.502 I llm_load_print_meta: n_rot            = 256
0.00.224.503 I llm_load_print_meta: n_swa            = 0
0.00.224.503 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.503 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.504 I llm_load_print_meta: n_gqa            = 8
0.00.224.505 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.506 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.507 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.508 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.509 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.509 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.510 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.510 I llm_load_print_meta: n_ff             = 16384
0.00.224.511 I llm_load_print_meta: n_expert         = 0
0.00.224.511 I llm_load_print_meta: n_expert_used    = 0
0.00.224.511 I llm_load_print_meta: causal attn      = 1
0.00.224.511 I llm_load_print_meta: pooling type     = 0
0.00.224.512 I llm_load_print_meta: rope type        = 2
0.00.224.512 I llm_load_print_meta: rope scaling     = linear
0.00.224.513 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.514 I llm_load_print_meta: freq_scale_train = 1
0.00.224.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.515 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.515 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.515 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.516 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.516 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.516 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.517 I llm_load_print_meta: model type       = 2B
0.00.224.517 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.518 I llm_load_print_meta: model params     = 2.51 B
0.00.224.519 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.519 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.520 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.520 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.520 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.521 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.521 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.522 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.522 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.523 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.523 I llm_load_print_meta: max token length = 93
0.00.224.546 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.585 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.594 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.595 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.595 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.596 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.596 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.329.696 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.702 I llama_new_context_with_model: n_batch    = 2048
0.00.329.702 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.703 I llama_new_context_with_model: flash_attn = 0
0.00.329.704 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.705 I llama_new_context_with_model: freq_scale = 1
0.00.359.128 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.144 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.238 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.101 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.108 I llama_new_context_with_model: graph nodes  = 601
0.00.360.109 I llama_new_context_with_model: graph splits = 1
0.00.360.111 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.552 I main: llama threadpool init, n_threads = 4
0.00.451.564 I 
0.00.451.638 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.641 I 
0.00.451.678 I sampler seed: 2105191729
0.00.451.688 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.692 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.692 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.692 I 
 increabling.

The provided text contains an error. The correct spelling should be "increasingly."

**Increasingly**, the demand for sustainable products is growing

0.02.690.310 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6937.15 tokens per second)
0.02.690.312 I llama_perf_context_print:        load time =     449.68 ms
0.02.690.313 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.690.315 I llama_perf_context_print:        eval time =    2221.13 ms /    32 runs   (   69.41 ms per token,    14.41 tokens per second)
0.02.690.315 I llama_perf_context_print:       total time =    2238.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.519 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.712 I main: llama backend init
0.00.001.825 I main: load the model and apply lora adapter, if any
0.00.021.872 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.881 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.888 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.888 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.892 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.892 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.893 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.894 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.895 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.895 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.899 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.900 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.900 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.901 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.901 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.286 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.264 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.139 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.145 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.148 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.149 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.149 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.153 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.154 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.154 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.155 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.156 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.159 I llama_model_loader: - type  f32:   37 tensors
0.00.132.162 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.580 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.249 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.889 I llm_load_vocab: special tokens cache size = 5
0.00.220.788 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.801 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.802 I llm_load_print_meta: arch             = gemma
0.00.220.802 I llm_load_print_meta: vocab type       = SPM
0.00.220.803 I llm_load_print_meta: n_vocab          = 256000
0.00.220.804 I llm_load_print_meta: n_merges         = 0
0.00.220.804 I llm_load_print_meta: vocab_only       = 0
0.00.220.804 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.805 I llm_load_print_meta: n_embd           = 2048
0.00.220.805 I llm_load_print_meta: n_layer          = 18
0.00.220.816 I llm_load_print_meta: n_head           = 8
0.00.220.817 I llm_load_print_meta: n_head_kv        = 1
0.00.220.818 I llm_load_print_meta: n_rot            = 256
0.00.220.818 I llm_load_print_meta: n_swa            = 0
0.00.220.818 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.819 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.820 I llm_load_print_meta: n_gqa            = 8
0.00.220.821 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.821 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.822 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.824 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.824 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.824 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.825 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.826 I llm_load_print_meta: n_ff             = 16384
0.00.220.826 I llm_load_print_meta: n_expert         = 0
0.00.220.826 I llm_load_print_meta: n_expert_used    = 0
0.00.220.827 I llm_load_print_meta: causal attn      = 1
0.00.220.827 I llm_load_print_meta: pooling type     = 0
0.00.220.827 I llm_load_print_meta: rope type        = 2
0.00.220.828 I llm_load_print_meta: rope scaling     = linear
0.00.220.829 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.829 I llm_load_print_meta: freq_scale_train = 1
0.00.220.830 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.830 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.831 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.831 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.831 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.832 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.832 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.832 I llm_load_print_meta: model type       = 2B
0.00.220.833 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.834 I llm_load_print_meta: model params     = 2.51 B
0.00.220.835 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.835 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.835 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.836 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.836 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.836 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.837 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.837 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.838 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.838 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.839 I llm_load_print_meta: max token length = 93
0.00.220.855 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.315.338 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.320.380 I llama_new_context_with_model: n_ctx      = 8192
0.00.320.386 I llama_new_context_with_model: n_batch    = 2048
0.00.320.386 I llama_new_context_with_model: n_ubatch   = 512
0.00.320.387 I llama_new_context_with_model: flash_attn = 0
0.00.320.389 I llama_new_context_with_model: freq_base  = 10000.0
0.00.320.390 I llama_new_context_with_model: freq_scale = 1
0.00.348.930 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.946 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.349.037 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.973 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.979 I llama_new_context_with_model: graph nodes  = 601
0.00.349.979 I llama_new_context_with_model: graph splits = 1
0.00.349.982 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.474 I main: llama threadpool init, n_threads = 4
0.00.436.487 I 
0.00.436.560 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.563 I 
0.00.436.597 I sampler seed: 108926845
0.00.436.606 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.609 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.610 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.610 I 
 increasively, engulfing the world in an insatiable hunger for knowledge and power. [end of text]


0.01.585.952 I llama_perf_sampler_print:    sampling time =       2.56 ms /    18 runs   (    0.14 ms per token,  7028.50 tokens per second)
0.01.585.955 I llama_perf_context_print:        load time =     434.63 ms
0.01.585.957 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.585.959 I llama_perf_context_print:        eval time =    1139.03 ms /    17 runs   (   67.00 ms per token,    14.92 tokens per second)
0.01.585.961 I llama_perf_context_print:       total time =    1149.49 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.554 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.768 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.021.955 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.012 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.025 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.034 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.040 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.044 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.045 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.046 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.047 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.048 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.052 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.059 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.060 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.060 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.062 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.063 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.697 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.919 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.770 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.776 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.777 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.777 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.778 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.779 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.780 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.782 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.783 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.784 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.784 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.785 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.788 I llama_model_loader: - type  f32:   37 tensors
0.00.132.791 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.286 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.214 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.954 I llm_load_vocab: special tokens cache size = 5
0.00.224.986 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.000 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.001 I llm_load_print_meta: arch             = gemma
0.00.225.001 I llm_load_print_meta: vocab type       = SPM
0.00.225.002 I llm_load_print_meta: n_vocab          = 256000
0.00.225.003 I llm_load_print_meta: n_merges         = 0
0.00.225.003 I llm_load_print_meta: vocab_only       = 0
0.00.225.003 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.004 I llm_load_print_meta: n_embd           = 2048
0.00.225.004 I llm_load_print_meta: n_layer          = 18
0.00.225.016 I llm_load_print_meta: n_head           = 8
0.00.225.017 I llm_load_print_meta: n_head_kv        = 1
0.00.225.018 I llm_load_print_meta: n_rot            = 256
0.00.225.018 I llm_load_print_meta: n_swa            = 0
0.00.225.018 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.018 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.019 I llm_load_print_meta: n_gqa            = 8
0.00.225.020 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.021 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.022 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.023 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.024 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.024 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.025 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.026 I llm_load_print_meta: n_ff             = 16384
0.00.225.026 I llm_load_print_meta: n_expert         = 0
0.00.225.026 I llm_load_print_meta: n_expert_used    = 0
0.00.225.026 I llm_load_print_meta: causal attn      = 1
0.00.225.026 I llm_load_print_meta: pooling type     = 0
0.00.225.027 I llm_load_print_meta: rope type        = 2
0.00.225.027 I llm_load_print_meta: rope scaling     = linear
0.00.225.028 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.029 I llm_load_print_meta: freq_scale_train = 1
0.00.225.029 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.030 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.030 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.030 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.030 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.031 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.031 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.032 I llm_load_print_meta: model type       = 2B
0.00.225.032 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.033 I llm_load_print_meta: model params     = 2.51 B
0.00.225.034 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.034 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.034 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.035 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.035 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.035 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.036 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.036 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.036 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.037 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.037 I llm_load_print_meta: max token length = 93
0.00.225.056 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.301.014 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.301.023 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.301.023 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.301.024 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.301.025 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.301.025 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.306.193 I llama_new_context_with_model: n_ctx      = 8192
0.00.306.200 I llama_new_context_with_model: n_batch    = 2048
0.00.306.201 I llama_new_context_with_model: n_ubatch   = 512
0.00.306.201 I llama_new_context_with_model: flash_attn = 0
0.00.306.204 I llama_new_context_with_model: freq_base  = 10000.0
0.00.306.204 I llama_new_context_with_model: freq_scale = 1
0.00.334.991 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.003 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.101 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.957 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.965 I llama_new_context_with_model: graph nodes  = 601
0.00.335.966 I llama_new_context_with_model: graph splits = 1
0.00.335.967 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.199 I main: llama threadpool init, n_threads = 4
0.00.427.211 I 
0.00.427.295 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.300 I 
0.00.427.349 I sampler seed: 2661605841
0.00.427.369 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.372 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.427.375 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.375 I 
 seconal.

I cannot find the requested information in the given context. Please provide additional context or specify the requested information so that I can assist you further.

0.02.657.322 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7058.82 tokens per second)
0.02.657.325 I llama_perf_context_print:        load time =     425.26 ms
0.02.657.327 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.657.328 I llama_perf_context_print:        eval time =    2212.57 ms /    32 runs   (   69.14 ms per token,    14.46 tokens per second)
0.02.657.329 I llama_perf_context_print:       total time =    2230.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.546 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.882 I main: load the model and apply lora adapter, if any
0.00.022.127 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.173 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.183 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.188 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.189 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.192 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.196 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.196 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.197 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.198 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.198 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.203 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.203 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.204 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.204 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.205 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.139 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.627 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.633 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.634 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.635 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.635 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.636 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.637 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.640 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.640 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.641 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.642 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.643 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.647 I llama_model_loader: - type  f32:   37 tensors
0.00.133.649 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.957 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.063 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.733 I llm_load_vocab: special tokens cache size = 5
0.00.224.679 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.693 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.694 I llm_load_print_meta: arch             = gemma
0.00.224.694 I llm_load_print_meta: vocab type       = SPM
0.00.224.695 I llm_load_print_meta: n_vocab          = 256000
0.00.224.696 I llm_load_print_meta: n_merges         = 0
0.00.224.696 I llm_load_print_meta: vocab_only       = 0
0.00.224.696 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.697 I llm_load_print_meta: n_embd           = 2048
0.00.224.697 I llm_load_print_meta: n_layer          = 18
0.00.224.708 I llm_load_print_meta: n_head           = 8
0.00.224.709 I llm_load_print_meta: n_head_kv        = 1
0.00.224.709 I llm_load_print_meta: n_rot            = 256
0.00.224.709 I llm_load_print_meta: n_swa            = 0
0.00.224.709 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.710 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.711 I llm_load_print_meta: n_gqa            = 8
0.00.224.712 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.713 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.714 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.715 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.715 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.716 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.716 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.717 I llm_load_print_meta: n_ff             = 16384
0.00.224.717 I llm_load_print_meta: n_expert         = 0
0.00.224.717 I llm_load_print_meta: n_expert_used    = 0
0.00.224.717 I llm_load_print_meta: causal attn      = 1
0.00.224.718 I llm_load_print_meta: pooling type     = 0
0.00.224.718 I llm_load_print_meta: rope type        = 2
0.00.224.718 I llm_load_print_meta: rope scaling     = linear
0.00.224.719 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.720 I llm_load_print_meta: freq_scale_train = 1
0.00.224.720 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.721 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.721 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.721 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.721 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.722 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.722 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.723 I llm_load_print_meta: model type       = 2B
0.00.224.723 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.724 I llm_load_print_meta: model params     = 2.51 B
0.00.224.725 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.725 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.725 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.726 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.726 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.726 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.727 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.727 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.727 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.728 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.729 I llm_load_print_meta: max token length = 93
0.00.224.746 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.265 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.273 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.300.461 I llama_new_context_with_model: n_ctx      = 8192
0.00.300.466 I llama_new_context_with_model: n_batch    = 2048
0.00.300.467 I llama_new_context_with_model: n_ubatch   = 512
0.00.300.467 I llama_new_context_with_model: flash_attn = 0
0.00.300.470 I llama_new_context_with_model: freq_base  = 10000.0
0.00.300.471 I llama_new_context_with_model: freq_scale = 1
0.00.329.413 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.427 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.519 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.383 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.391 I llama_new_context_with_model: graph nodes  = 601
0.00.330.391 I llama_new_context_with_model: graph splits = 1
0.00.330.393 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.424.676 I main: llama threadpool init, n_threads = 4
0.00.424.690 I 
0.00.424.765 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.424.768 I 
0.00.424.806 I sampler seed: 915962090
0.00.424.815 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.424.817 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.424.818 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.424.819 I 
 increasively. 

I understand. I will adjust my language to be more concise and clear. [end of text]


0.02.008.198 I llama_perf_sampler_print:    sampling time =       3.30 ms /    22 runs   (    0.15 ms per token,  6668.69 tokens per second)
0.02.008.200 I llama_perf_context_print:        load time =     422.78 ms
0.02.008.202 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.008.204 I llama_perf_context_print:        eval time =    1571.09 ms /    21 runs   (   74.81 ms per token,    13.37 tokens per second)
0.02.008.206 I llama_perf_context_print:       total time =    1583.53 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.097s
user	0m31.501s
sys	0m9.396s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3847 (d0b1d663)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32044.33 ms
main:    total time = 32044.33 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.587 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.142 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.192 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.199 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.205 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.207 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.211 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.212 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.213 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.213 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.214 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.215 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.218 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.219 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.219 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.220 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.220 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.024 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.174 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.101 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.107 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.108 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.109 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.109 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.110 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.111 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.114 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.115 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.115 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.116 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.117 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.120 I llama_model_loader: - type  f32:   37 tensors
0.00.133.123 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.124 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.909 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.290 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.946 I llm_load_vocab: special tokens cache size = 5
0.00.224.110 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.121 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.121 I llm_load_print_meta: arch             = gemma
0.00.224.122 I llm_load_print_meta: vocab type       = SPM
0.00.224.123 I llm_load_print_meta: n_vocab          = 256000
0.00.224.123 I llm_load_print_meta: n_merges         = 0
0.00.224.124 I llm_load_print_meta: vocab_only       = 0
0.00.224.124 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.124 I llm_load_print_meta: n_embd           = 2048
0.00.224.124 I llm_load_print_meta: n_layer          = 18
0.00.224.136 I llm_load_print_meta: n_head           = 8
0.00.224.137 I llm_load_print_meta: n_head_kv        = 1
0.00.224.137 I llm_load_print_meta: n_rot            = 256
0.00.224.138 I llm_load_print_meta: n_swa            = 0
0.00.224.138 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.138 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.139 I llm_load_print_meta: n_gqa            = 8
0.00.224.140 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.141 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.142 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.143 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.144 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.144 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.144 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.145 I llm_load_print_meta: n_ff             = 16384
0.00.224.146 I llm_load_print_meta: n_expert         = 0
0.00.224.146 I llm_load_print_meta: n_expert_used    = 0
0.00.224.146 I llm_load_print_meta: causal attn      = 1
0.00.224.146 I llm_load_print_meta: pooling type     = 0
0.00.224.146 I llm_load_print_meta: rope type        = 2
0.00.224.147 I llm_load_print_meta: rope scaling     = linear
0.00.224.149 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.149 I llm_load_print_meta: freq_scale_train = 1
0.00.224.150 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.151 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.151 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.151 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.151 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.152 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.152 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.152 I llm_load_print_meta: model type       = 2B
0.00.224.153 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.154 I llm_load_print_meta: model params     = 2.51 B
0.00.224.154 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.154 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.155 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.155 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.156 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.156 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.156 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.157 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.157 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.158 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.158 I llm_load_print_meta: max token length = 93
0.00.224.180 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.283.636 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.283.644 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.283.645 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.283.645 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.283.646 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.283.647 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.288.715 I llama_new_context_with_model: n_ctx      = 8192
0.00.288.721 I llama_new_context_with_model: n_batch    = 2048
0.00.288.722 I llama_new_context_with_model: n_ubatch   = 512
0.00.288.722 I llama_new_context_with_model: flash_attn = 0
0.00.288.725 I llama_new_context_with_model: freq_base  = 10000.0
0.00.288.725 I llama_new_context_with_model: freq_scale = 1
0.00.318.667 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.318.681 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.318.779 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.319.679 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.319.686 I llama_new_context_with_model: graph nodes  = 601
0.00.319.687 I llama_new_context_with_model: graph splits = 1
0.00.319.689 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.402.321 I main: llama threadpool init, n_threads = 4
0.00.402.333 I 
0.00.402.405 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.402.409 I 
0.00.402.445 I sampler seed: 4164889067
0.00.402.454 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.402.457 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.402.458 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.402.458 I 
 encompases. 

**Instructions:**

1. Write a script for a skit that incorporates the elements mentioned above.
2. Include a brief description of

0.01.976.763 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6931.32 tokens per second)
0.01.976.766 I llama_perf_context_print:        load time =     400.44 ms
0.01.976.767 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.976.768 I llama_perf_context_print:        eval time =    1556.81 ms /    32 runs   (   48.65 ms per token,    20.55 tokens per second)
0.01.976.768 I llama_perf_context_print:       total time =    1574.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3847 (d0b1d663)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32003.35 ms
main:    total time = 32003.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3847 (d0b1d663) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.021.891 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.905 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.911 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.914 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.919 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.919 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.920 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.922 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.922 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.923 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.927 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.927 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.928 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.928 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.929 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.492 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.339 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.190 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.196 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.197 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.197 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.198 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.200 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.200 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.203 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.204 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.207 I llama_model_loader: - type  f32:   37 tensors
0.00.132.209 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.209 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.314 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.401 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.033 I llm_load_vocab: special tokens cache size = 5
0.00.223.041 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.057 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.057 I llm_load_print_meta: arch             = gemma
0.00.223.058 I llm_load_print_meta: vocab type       = SPM
0.00.223.058 I llm_load_print_meta: n_vocab          = 256000
0.00.223.059 I llm_load_print_meta: n_merges         = 0
0.00.223.059 I llm_load_print_meta: vocab_only       = 0
0.00.223.060 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.060 I llm_load_print_meta: n_embd           = 2048
0.00.223.060 I llm_load_print_meta: n_layer          = 18
0.00.223.072 I llm_load_print_meta: n_head           = 8
0.00.223.074 I llm_load_print_meta: n_head_kv        = 1
0.00.223.074 I llm_load_print_meta: n_rot            = 256
0.00.223.074 I llm_load_print_meta: n_swa            = 0
0.00.223.075 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.075 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.076 I llm_load_print_meta: n_gqa            = 8
0.00.223.077 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.078 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.079 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.080 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.081 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.081 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.082 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.083 I llm_load_print_meta: n_ff             = 16384
0.00.223.083 I llm_load_print_meta: n_expert         = 0
0.00.223.083 I llm_load_print_meta: n_expert_used    = 0
0.00.223.083 I llm_load_print_meta: causal attn      = 1
0.00.223.084 I llm_load_print_meta: pooling type     = 0
0.00.223.084 I llm_load_print_meta: rope type        = 2
0.00.223.084 I llm_load_print_meta: rope scaling     = linear
0.00.223.085 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.086 I llm_load_print_meta: freq_scale_train = 1
0.00.223.086 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.087 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.087 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.087 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.087 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.088 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.088 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.089 I llm_load_print_meta: model type       = 2B
0.00.223.089 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.223.090 I llm_load_print_meta: model params     = 2.51 B
0.00.223.091 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.223.091 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.091 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.092 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.092 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.092 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.092 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.093 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.093 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.094 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.094 I llm_load_print_meta: max token length = 93
0.00.223.114 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.484 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.286.559 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.566 I llama_new_context_with_model: n_batch    = 2048
0.00.286.566 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.567 I llama_new_context_with_model: flash_attn = 0
0.00.286.569 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.570 I llama_new_context_with_model: freq_scale = 1
0.00.316.315 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.332 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.426 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.288 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.295 I llama_new_context_with_model: graph nodes  = 601
0.00.317.296 I llama_new_context_with_model: graph splits = 1
0.00.317.298 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.428 I main: llama threadpool init, n_threads = 4
0.00.397.441 I 
0.00.397.513 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.516 I 
0.00.397.552 I sampler seed: 3319111315
0.00.397.562 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.565 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.566 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.566 I 
 increamically.

**Answer:**
I'm sorry, I am unable to provide answers that are sexually suggestive or contain inappropriate language. [end of text]


0.01.816.178 I llama_perf_sampler_print:    sampling time =       4.48 ms /    30 runs   (    0.15 ms per token,  6690.45 tokens per second)
0.01.816.180 I llama_perf_context_print:        load time =     395.53 ms
0.01.816.181 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.816.183 I llama_perf_context_print:        eval time =    1402.63 ms /    29 runs   (   48.37 ms per token,    20.68 tokens per second)
0.01.816.183 I llama_perf_context_print:       total time =    1418.76 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.940s
user	8m13.254s
sys	0m6.915s
