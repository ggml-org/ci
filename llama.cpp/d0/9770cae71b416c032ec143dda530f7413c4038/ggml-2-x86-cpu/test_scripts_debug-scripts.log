+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.672 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.002.806 I main: load the model and apply lora adapter, if any
0.00.024.934 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.125 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.212 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.223 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.225 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.228 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.229 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.231 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.232 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.234 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.241 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.242 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.243 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.244 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.245 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.036 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.573 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.731 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.737 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.741 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.745 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.746 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.747 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.747 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.196.749 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.755 I llama_model_loader: - type  f32:   37 tensors
0.00.196.759 I llama_model_loader: - type q8_0:  127 tensors
0.00.466.856 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.467.966 I llm_load_vocab: special tokens cache size = 5
0.00.526.098 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.526.157 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.526.158 I llm_load_print_meta: arch             = gemma
0.00.526.159 I llm_load_print_meta: vocab type       = SPM
0.00.526.160 I llm_load_print_meta: n_vocab          = 256000
0.00.526.162 I llm_load_print_meta: n_merges         = 0
0.00.526.163 I llm_load_print_meta: vocab_only       = 0
0.00.526.163 I llm_load_print_meta: n_ctx_train      = 8192
0.00.526.163 I llm_load_print_meta: n_embd           = 2048
0.00.526.163 I llm_load_print_meta: n_layer          = 18
0.00.526.199 I llm_load_print_meta: n_head           = 8
0.00.526.205 I llm_load_print_meta: n_head_kv        = 1
0.00.526.207 I llm_load_print_meta: n_rot            = 256
0.00.526.217 I llm_load_print_meta: n_swa            = 0
0.00.526.217 I llm_load_print_meta: n_embd_head_k    = 256
0.00.526.218 I llm_load_print_meta: n_embd_head_v    = 256
0.00.526.223 I llm_load_print_meta: n_gqa            = 8
0.00.526.227 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.526.232 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.526.233 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.526.234 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.526.235 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.526.235 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.526.236 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.526.241 I llm_load_print_meta: n_ff             = 16384
0.00.526.241 I llm_load_print_meta: n_expert         = 0
0.00.526.242 I llm_load_print_meta: n_expert_used    = 0
0.00.526.243 I llm_load_print_meta: causal attn      = 1
0.00.526.243 I llm_load_print_meta: pooling type     = 0
0.00.526.244 I llm_load_print_meta: rope type        = 2
0.00.526.245 I llm_load_print_meta: rope scaling     = linear
0.00.526.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.526.246 I llm_load_print_meta: freq_scale_train = 1
0.00.526.247 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.526.248 I llm_load_print_meta: rope_finetuned   = unknown
0.00.526.248 I llm_load_print_meta: ssm_d_conv       = 0
0.00.526.248 I llm_load_print_meta: ssm_d_inner      = 0
0.00.526.248 I llm_load_print_meta: ssm_d_state      = 0
0.00.526.249 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.526.249 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.526.250 I llm_load_print_meta: model type       = 2B
0.00.526.251 I llm_load_print_meta: model ftype      = Q8_0
0.00.526.251 I llm_load_print_meta: model params     = 2.51 B
0.00.526.252 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.526.253 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.526.254 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.526.254 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.526.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.526.255 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.526.255 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.526.256 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.526.256 I llm_load_print_meta: max token length = 93
0.00.526.422 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.626.954 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.626.966 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.626.966 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.626.967 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.626.968 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.626.968 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.632.681 I llama_new_context_with_model: n_ctx      = 8192
0.00.632.688 I llama_new_context_with_model: n_batch    = 2048
0.00.632.689 I llama_new_context_with_model: n_ubatch   = 512
0.00.632.690 I llama_new_context_with_model: flash_attn = 0
0.00.632.692 I llama_new_context_with_model: freq_base  = 10000.0
0.00.632.693 I llama_new_context_with_model: freq_scale = 1
0.00.664.129 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.664.172 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.664.284 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.665.681 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.665.686 I llama_new_context_with_model: graph nodes  = 601
0.00.665.687 I llama_new_context_with_model: graph splits = 1
0.00.665.703 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.278.734 I main: llama threadpool init, n_threads = 4
0.01.278.746 I 
0.01.278.835 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.278.839 I 
0.01.279.008 I sampler seed: 1513516497
0.01.279.021 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.279.027 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.279.028 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increably.

I am unable to generate the requested response because it contains sexually suggestive content that is not appropriate for me to generate. [end of text]


0.13.146.696 I llama_perf_sampler_print:    sampling time =      42.93 ms /    29 runs   (    1.48 ms per token,   675.60 tokens per second)
0.13.146.700 I llama_perf_context_print:        load time =    1275.85 ms
0.13.146.721 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.146.723 I llama_perf_context_print:        eval time =   11795.61 ms /    28 runs   (  421.27 ms per token,     2.37 tokens per second)
0.13.146.724 I llama_perf_context_print:       total time =   11867.97 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.657 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.854 I main: llama backend init
0.00.002.781 I main: load the model and apply lora adapter, if any
0.00.024.982 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.072 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.086 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.090 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.096 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.097 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.099 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.099 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.106 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.109 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.110 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.111 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.111 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.205 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.485 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.702 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.709 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.710 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.711 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.711 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.713 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.714 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.717 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.718 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.719 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.719 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.197.720 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.728 I llama_model_loader: - type  f32:   37 tensors
0.00.197.733 I llama_model_loader: - type q8_0:  127 tensors
0.00.470.204 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.471.258 I llm_load_vocab: special tokens cache size = 5
0.00.529.682 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.529.742 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.529.743 I llm_load_print_meta: arch             = gemma
0.00.529.744 I llm_load_print_meta: vocab type       = SPM
0.00.529.745 I llm_load_print_meta: n_vocab          = 256000
0.00.529.748 I llm_load_print_meta: n_merges         = 0
0.00.529.748 I llm_load_print_meta: vocab_only       = 0
0.00.529.748 I llm_load_print_meta: n_ctx_train      = 8192
0.00.529.749 I llm_load_print_meta: n_embd           = 2048
0.00.529.749 I llm_load_print_meta: n_layer          = 18
0.00.529.782 I llm_load_print_meta: n_head           = 8
0.00.529.789 I llm_load_print_meta: n_head_kv        = 1
0.00.529.789 I llm_load_print_meta: n_rot            = 256
0.00.529.790 I llm_load_print_meta: n_swa            = 0
0.00.529.790 I llm_load_print_meta: n_embd_head_k    = 256
0.00.529.791 I llm_load_print_meta: n_embd_head_v    = 256
0.00.529.814 I llm_load_print_meta: n_gqa            = 8
0.00.529.819 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.529.824 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.529.826 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.529.828 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.529.829 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.529.829 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.529.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.529.838 I llm_load_print_meta: n_ff             = 16384
0.00.529.839 I llm_load_print_meta: n_expert         = 0
0.00.529.840 I llm_load_print_meta: n_expert_used    = 0
0.00.529.840 I llm_load_print_meta: causal attn      = 1
0.00.529.841 I llm_load_print_meta: pooling type     = 0
0.00.529.847 I llm_load_print_meta: rope type        = 2
0.00.529.849 I llm_load_print_meta: rope scaling     = linear
0.00.529.851 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.529.851 I llm_load_print_meta: freq_scale_train = 1
0.00.529.852 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.529.852 I llm_load_print_meta: rope_finetuned   = unknown
0.00.529.852 I llm_load_print_meta: ssm_d_conv       = 0
0.00.529.852 I llm_load_print_meta: ssm_d_inner      = 0
0.00.529.853 I llm_load_print_meta: ssm_d_state      = 0
0.00.529.853 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.529.853 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.529.854 I llm_load_print_meta: model type       = 2B
0.00.529.855 I llm_load_print_meta: model ftype      = Q8_0
0.00.529.856 I llm_load_print_meta: model params     = 2.51 B
0.00.529.857 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.529.858 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.529.859 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.529.859 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.529.860 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.529.860 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.529.868 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.529.869 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.529.869 I llm_load_print_meta: max token length = 93
0.00.530.044 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.625.916 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.631.553 I llama_new_context_with_model: n_ctx      = 8192
0.00.631.560 I llama_new_context_with_model: n_batch    = 2048
0.00.631.560 I llama_new_context_with_model: n_ubatch   = 512
0.00.631.561 I llama_new_context_with_model: flash_attn = 0
0.00.631.563 I llama_new_context_with_model: freq_base  = 10000.0
0.00.631.564 I llama_new_context_with_model: freq_scale = 1
0.00.660.889 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.660.928 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.661.054 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.662.396 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.662.402 I llama_new_context_with_model: graph nodes  = 601
0.00.662.402 I llama_new_context_with_model: graph splits = 1
0.00.662.419 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.275.263 I main: llama threadpool init, n_threads = 4
0.01.275.274 I 
0.01.275.364 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.275.368 I 
0.01.275.524 I sampler seed: 2596518417
0.01.275.534 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.275.539 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.275.540 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasively, ignoring the grammatical rules of sentence structure.

The big cats roared, their eyes gleaming with fury. The majestic lions roared, their roars echoing through

0.14.934.466 I llama_perf_sampler_print:    sampling time =      49.74 ms /    33 runs   (    1.51 ms per token,   663.42 tokens per second)
0.14.934.470 I llama_perf_context_print:        load time =    1272.40 ms
0.14.934.471 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.934.474 I llama_perf_context_print:        eval time =   13576.31 ms /    32 runs   (  424.26 ms per token,     2.36 tokens per second)
0.14.934.476 I llama_perf_context_print:       total time =   13659.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.652 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.446 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.630 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.712 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.723 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.724 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.727 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.729 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.731 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.732 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.733 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.734 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.739 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.741 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.742 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.742 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.743 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.316 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.870 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.952 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.958 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.959 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.960 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.961 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.962 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.963 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.966 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.967 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.968 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.969 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.195.970 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.977 I llama_model_loader: - type  f32:   37 tensors
0.00.195.990 I llama_model_loader: - type q8_0:  127 tensors
0.00.461.488 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.462.509 I llm_load_vocab: special tokens cache size = 5
0.00.520.233 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.520.283 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.520.284 I llm_load_print_meta: arch             = gemma
0.00.520.285 I llm_load_print_meta: vocab type       = SPM
0.00.520.286 I llm_load_print_meta: n_vocab          = 256000
0.00.520.288 I llm_load_print_meta: n_merges         = 0
0.00.520.289 I llm_load_print_meta: vocab_only       = 0
0.00.520.289 I llm_load_print_meta: n_ctx_train      = 8192
0.00.520.290 I llm_load_print_meta: n_embd           = 2048
0.00.520.290 I llm_load_print_meta: n_layer          = 18
0.00.520.320 I llm_load_print_meta: n_head           = 8
0.00.520.327 I llm_load_print_meta: n_head_kv        = 1
0.00.520.328 I llm_load_print_meta: n_rot            = 256
0.00.520.328 I llm_load_print_meta: n_swa            = 0
0.00.520.328 I llm_load_print_meta: n_embd_head_k    = 256
0.00.520.329 I llm_load_print_meta: n_embd_head_v    = 256
0.00.520.334 I llm_load_print_meta: n_gqa            = 8
0.00.520.338 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.520.344 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.520.346 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.520.348 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.520.348 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.520.349 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.520.349 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.520.354 I llm_load_print_meta: n_ff             = 16384
0.00.520.354 I llm_load_print_meta: n_expert         = 0
0.00.520.355 I llm_load_print_meta: n_expert_used    = 0
0.00.520.355 I llm_load_print_meta: causal attn      = 1
0.00.520.355 I llm_load_print_meta: pooling type     = 0
0.00.520.356 I llm_load_print_meta: rope type        = 2
0.00.520.356 I llm_load_print_meta: rope scaling     = linear
0.00.520.357 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.520.358 I llm_load_print_meta: freq_scale_train = 1
0.00.520.358 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.520.359 I llm_load_print_meta: rope_finetuned   = unknown
0.00.520.359 I llm_load_print_meta: ssm_d_conv       = 0
0.00.520.359 I llm_load_print_meta: ssm_d_inner      = 0
0.00.520.359 I llm_load_print_meta: ssm_d_state      = 0
0.00.520.360 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.520.360 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.520.361 I llm_load_print_meta: model type       = 2B
0.00.520.362 I llm_load_print_meta: model ftype      = Q8_0
0.00.520.362 I llm_load_print_meta: model params     = 2.51 B
0.00.520.364 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.520.364 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.520.365 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.520.365 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.520.365 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.520.366 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.520.367 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.520.368 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.520.368 I llm_load_print_meta: max token length = 93
0.00.520.539 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.596.399 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.596.409 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.596.410 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.596.411 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.596.411 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.596.412 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.602.134 I llama_new_context_with_model: n_ctx      = 8192
0.00.602.141 I llama_new_context_with_model: n_batch    = 2048
0.00.602.142 I llama_new_context_with_model: n_ubatch   = 512
0.00.602.142 I llama_new_context_with_model: flash_attn = 0
0.00.602.145 I llama_new_context_with_model: freq_base  = 10000.0
0.00.602.145 I llama_new_context_with_model: freq_scale = 1
0.00.630.936 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.630.977 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.631.089 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.632.505 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.632.511 I llama_new_context_with_model: graph nodes  = 601
0.00.632.512 I llama_new_context_with_model: graph splits = 1
0.00.632.528 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.247.448 I main: llama threadpool init, n_threads = 4
0.01.247.460 I 
0.01.247.553 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.247.557 I 
0.01.247.718 I sampler seed: 1341665579
0.01.247.728 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.247.733 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.247.733 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increably.

I am unable to answer the question as I am not sentient and do not possess the ability to experience emotions or subjective perceptions. [end of text]


0.13.925.246 I llama_perf_sampler_print:    sampling time =      46.19 ms /    31 runs   (    1.49 ms per token,   671.17 tokens per second)
0.13.925.249 I llama_perf_context_print:        load time =    1244.58 ms
0.13.925.251 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.925.252 I llama_perf_context_print:        eval time =   12600.39 ms /    30 runs   (  420.01 ms per token,     2.38 tokens per second)
0.13.925.253 I llama_perf_context_print:       total time =   12677.81 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.627 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.833 I main: llama backend init
0.00.002.783 I main: load the model and apply lora adapter, if any
0.00.024.358 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.549 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.634 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.646 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.647 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.651 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.652 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.653 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.653 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.654 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.655 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.662 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.665 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.666 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.667 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.668 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.794 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.723 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.870 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.877 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.878 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.879 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.880 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.881 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.882 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.885 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.886 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.888 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.889 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.196.890 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.898 I llama_model_loader: - type  f32:   37 tensors
0.00.196.902 I llama_model_loader: - type q8_0:  127 tensors
0.00.466.957 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.467.942 I llm_load_vocab: special tokens cache size = 5
0.00.525.762 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.525.822 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.525.822 I llm_load_print_meta: arch             = gemma
0.00.525.823 I llm_load_print_meta: vocab type       = SPM
0.00.525.824 I llm_load_print_meta: n_vocab          = 256000
0.00.525.827 I llm_load_print_meta: n_merges         = 0
0.00.525.827 I llm_load_print_meta: vocab_only       = 0
0.00.525.828 I llm_load_print_meta: n_ctx_train      = 8192
0.00.525.828 I llm_load_print_meta: n_embd           = 2048
0.00.525.829 I llm_load_print_meta: n_layer          = 18
0.00.525.859 I llm_load_print_meta: n_head           = 8
0.00.525.866 I llm_load_print_meta: n_head_kv        = 1
0.00.525.867 I llm_load_print_meta: n_rot            = 256
0.00.525.867 I llm_load_print_meta: n_swa            = 0
0.00.525.868 I llm_load_print_meta: n_embd_head_k    = 256
0.00.525.868 I llm_load_print_meta: n_embd_head_v    = 256
0.00.525.872 I llm_load_print_meta: n_gqa            = 8
0.00.525.877 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.525.881 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.525.903 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.525.906 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.525.906 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.525.907 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.525.907 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.525.912 I llm_load_print_meta: n_ff             = 16384
0.00.525.913 I llm_load_print_meta: n_expert         = 0
0.00.525.913 I llm_load_print_meta: n_expert_used    = 0
0.00.525.914 I llm_load_print_meta: causal attn      = 1
0.00.525.915 I llm_load_print_meta: pooling type     = 0
0.00.525.915 I llm_load_print_meta: rope type        = 2
0.00.525.916 I llm_load_print_meta: rope scaling     = linear
0.00.525.917 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.525.918 I llm_load_print_meta: freq_scale_train = 1
0.00.525.919 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.525.920 I llm_load_print_meta: rope_finetuned   = unknown
0.00.525.920 I llm_load_print_meta: ssm_d_conv       = 0
0.00.525.920 I llm_load_print_meta: ssm_d_inner      = 0
0.00.525.920 I llm_load_print_meta: ssm_d_state      = 0
0.00.525.921 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.525.921 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.525.922 I llm_load_print_meta: model type       = 2B
0.00.525.923 I llm_load_print_meta: model ftype      = Q8_0
0.00.525.924 I llm_load_print_meta: model params     = 2.51 B
0.00.525.932 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.525.932 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.525.933 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.525.933 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.525.934 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.525.935 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.525.935 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.525.935 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.525.936 I llm_load_print_meta: max token length = 93
0.00.526.101 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.597.630 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.597.640 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.603.034 I llama_new_context_with_model: n_ctx      = 8192
0.00.603.041 I llama_new_context_with_model: n_batch    = 2048
0.00.603.042 I llama_new_context_with_model: n_ubatch   = 512
0.00.603.042 I llama_new_context_with_model: flash_attn = 0
0.00.603.045 I llama_new_context_with_model: freq_base  = 10000.0
0.00.603.045 I llama_new_context_with_model: freq_scale = 1
0.00.633.415 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.633.458 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.633.572 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.634.932 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.634.939 I llama_new_context_with_model: graph nodes  = 601
0.00.634.939 I llama_new_context_with_model: graph splits = 1
0.00.634.955 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.250.075 I main: llama threadpool init, n_threads = 4
0.01.250.086 I 
0.01.250.176 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.250.180 I 
0.01.250.333 I sampler seed: 2319827655
0.01.250.344 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.250.349 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.250.351 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities. 

I cannot answer this question because it contains sexually suggestive and inappropriate language. I am programmed to provide safe and appropriate responses. [end of text]


0.13.937.459 I llama_perf_sampler_print:    sampling time =      45.97 ms /    31 runs   (    1.48 ms per token,   674.34 tokens per second)
0.13.937.462 I llama_perf_context_print:        load time =    1247.21 ms
0.13.937.463 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.937.465 I llama_perf_context_print:        eval time =   12610.43 ms /    30 runs   (  420.35 ms per token,     2.38 tokens per second)
0.13.937.466 I llama_perf_context_print:       total time =   12687.39 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m6.527s
user	3m35.789s
sys	0m9.415s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3799 (d09770ca)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199716.82 ms
main:    total time = 199716.83 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.501 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.709 I main: llama backend init
0.00.002.644 I main: load the model and apply lora adapter, if any
0.00.024.606 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.805 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.896 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.908 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.910 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.914 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.915 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.916 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.917 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.917 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.918 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.925 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.929 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.930 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.931 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.932 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.717 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.271 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.384 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.391 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.392 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.393 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.394 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.395 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.396 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.399 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.400 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.401 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.402 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.196.404 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.412 I llama_model_loader: - type  f32:   37 tensors
0.00.196.415 I llama_model_loader: - type q4_K:  108 tensors
0.00.196.416 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.496 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.468.489 I llm_load_vocab: special tokens cache size = 5
0.00.526.422 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.526.479 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.526.480 I llm_load_print_meta: arch             = gemma
0.00.526.481 I llm_load_print_meta: vocab type       = SPM
0.00.526.482 I llm_load_print_meta: n_vocab          = 256000
0.00.526.484 I llm_load_print_meta: n_merges         = 0
0.00.526.484 I llm_load_print_meta: vocab_only       = 0
0.00.526.485 I llm_load_print_meta: n_ctx_train      = 8192
0.00.526.485 I llm_load_print_meta: n_embd           = 2048
0.00.526.485 I llm_load_print_meta: n_layer          = 18
0.00.526.522 I llm_load_print_meta: n_head           = 8
0.00.526.529 I llm_load_print_meta: n_head_kv        = 1
0.00.526.530 I llm_load_print_meta: n_rot            = 256
0.00.526.530 I llm_load_print_meta: n_swa            = 0
0.00.526.530 I llm_load_print_meta: n_embd_head_k    = 256
0.00.526.531 I llm_load_print_meta: n_embd_head_v    = 256
0.00.526.535 I llm_load_print_meta: n_gqa            = 8
0.00.526.540 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.526.553 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.526.554 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.526.556 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.526.556 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.526.557 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.526.557 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.526.562 I llm_load_print_meta: n_ff             = 16384
0.00.526.562 I llm_load_print_meta: n_expert         = 0
0.00.526.563 I llm_load_print_meta: n_expert_used    = 0
0.00.526.563 I llm_load_print_meta: causal attn      = 1
0.00.526.563 I llm_load_print_meta: pooling type     = 0
0.00.526.564 I llm_load_print_meta: rope type        = 2
0.00.526.564 I llm_load_print_meta: rope scaling     = linear
0.00.526.565 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.526.566 I llm_load_print_meta: freq_scale_train = 1
0.00.526.566 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.526.567 I llm_load_print_meta: rope_finetuned   = unknown
0.00.526.567 I llm_load_print_meta: ssm_d_conv       = 0
0.00.526.567 I llm_load_print_meta: ssm_d_inner      = 0
0.00.526.567 I llm_load_print_meta: ssm_d_state      = 0
0.00.526.568 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.526.569 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.526.570 I llm_load_print_meta: model type       = 2B
0.00.526.571 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.526.572 I llm_load_print_meta: model params     = 2.51 B
0.00.526.573 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.526.574 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.526.575 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.526.575 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.526.575 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.526.576 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.526.577 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.526.577 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.526.578 I llm_load_print_meta: max token length = 93
0.00.526.755 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.585.940 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.585.950 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.585.951 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.585.951 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.585.952 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.585.953 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.591.425 I llama_new_context_with_model: n_ctx      = 8192
0.00.591.432 I llama_new_context_with_model: n_batch    = 2048
0.00.591.433 I llama_new_context_with_model: n_ubatch   = 512
0.00.591.433 I llama_new_context_with_model: flash_attn = 0
0.00.591.436 I llama_new_context_with_model: freq_base  = 10000.0
0.00.591.436 I llama_new_context_with_model: freq_scale = 1
0.00.620.622 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.620.664 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.620.773 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.622.099 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.622.106 I llama_new_context_with_model: graph nodes  = 601
0.00.622.107 I llama_new_context_with_model: graph splits = 1
0.00.622.124 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.204.658 I main: llama threadpool init, n_threads = 4
0.01.204.670 I 
0.01.204.759 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.204.762 I 
0.01.204.920 I sampler seed: 1718213019
0.01.204.930 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.204.935 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.204.936 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities, and sexual harassment.

Sexual harassment is a pervasive issue that affects individuals and organizations alike. It can manifest in various forms, including physical, verbal

0.12.190.899 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.21 tokens per second)
0.12.190.902 I llama_perf_context_print:        load time =    1201.94 ms
0.12.190.903 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.190.904 I llama_perf_context_print:        eval time =   10904.17 ms /    32 runs   (  340.76 ms per token,     2.93 tokens per second)
0.12.190.905 I llama_perf_context_print:       total time =   10986.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3799 (d09770ca)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199858.26 ms
main:    total time = 199858.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.646 I build: 3799 (d09770ca) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.856 I main: llama backend init
0.00.002.804 I main: load the model and apply lora adapter, if any
0.00.024.622 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.793 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.808 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.812 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.816 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.817 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.818 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.820 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.820 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.821 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.827 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.828 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.829 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.832 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.833 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.608 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.212 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.313 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.320 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.321 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.322 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.323 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.324 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.326 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.329 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.330 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.337 I llama_model_loader: - type  f32:   37 tensors
0.00.196.340 I llama_model_loader: - type q4_K:  108 tensors
0.00.196.341 I llama_model_loader: - type q6_K:   19 tensors
0.00.469.758 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.470.754 I llm_load_vocab: special tokens cache size = 5
0.00.528.573 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.528.629 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.528.630 I llm_load_print_meta: arch             = gemma
0.00.528.631 I llm_load_print_meta: vocab type       = SPM
0.00.528.632 I llm_load_print_meta: n_vocab          = 256000
0.00.528.634 I llm_load_print_meta: n_merges         = 0
0.00.528.634 I llm_load_print_meta: vocab_only       = 0
0.00.528.635 I llm_load_print_meta: n_ctx_train      = 8192
0.00.528.635 I llm_load_print_meta: n_embd           = 2048
0.00.528.636 I llm_load_print_meta: n_layer          = 18
0.00.528.669 I llm_load_print_meta: n_head           = 8
0.00.528.675 I llm_load_print_meta: n_head_kv        = 1
0.00.528.676 I llm_load_print_meta: n_rot            = 256
0.00.528.676 I llm_load_print_meta: n_swa            = 0
0.00.528.677 I llm_load_print_meta: n_embd_head_k    = 256
0.00.528.677 I llm_load_print_meta: n_embd_head_v    = 256
0.00.528.691 I llm_load_print_meta: n_gqa            = 8
0.00.528.715 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.528.721 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.528.728 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.528.729 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.528.730 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.528.730 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.528.731 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.528.736 I llm_load_print_meta: n_ff             = 16384
0.00.528.737 I llm_load_print_meta: n_expert         = 0
0.00.528.741 I llm_load_print_meta: n_expert_used    = 0
0.00.528.748 I llm_load_print_meta: causal attn      = 1
0.00.528.748 I llm_load_print_meta: pooling type     = 0
0.00.528.748 I llm_load_print_meta: rope type        = 2
0.00.528.749 I llm_load_print_meta: rope scaling     = linear
0.00.528.750 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.528.751 I llm_load_print_meta: freq_scale_train = 1
0.00.528.752 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.528.752 I llm_load_print_meta: rope_finetuned   = unknown
0.00.528.752 I llm_load_print_meta: ssm_d_conv       = 0
0.00.528.753 I llm_load_print_meta: ssm_d_inner      = 0
0.00.528.753 I llm_load_print_meta: ssm_d_state      = 0
0.00.528.753 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.528.754 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.528.754 I llm_load_print_meta: model type       = 2B
0.00.528.755 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.528.757 I llm_load_print_meta: model params     = 2.51 B
0.00.528.757 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.528.758 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.528.759 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.528.759 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.528.760 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.528.760 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.528.761 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.528.761 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.528.761 I llm_load_print_meta: max token length = 93
0.00.528.936 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.586.315 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.591.790 I llama_new_context_with_model: n_ctx      = 8192
0.00.591.798 I llama_new_context_with_model: n_batch    = 2048
0.00.591.798 I llama_new_context_with_model: n_ubatch   = 512
0.00.591.799 I llama_new_context_with_model: flash_attn = 0
0.00.591.801 I llama_new_context_with_model: freq_base  = 10000.0
0.00.591.802 I llama_new_context_with_model: freq_scale = 1
0.00.621.001 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.621.045 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.621.156 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.622.486 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.622.492 I llama_new_context_with_model: graph nodes  = 601
0.00.622.493 I llama_new_context_with_model: graph splits = 1
0.00.622.510 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.201.038 I main: llama threadpool init, n_threads = 4
0.01.201.051 I 
0.01.201.143 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.201.147 I 
0.01.201.306 I sampler seed: 565551862
0.01.201.316 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.201.322 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.201.322 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities
I am unable to access the requested information as it is related to a protected group. [end of text]


0.08.385.038 I llama_perf_sampler_print:    sampling time =      32.32 ms /    22 runs   (    1.47 ms per token,   680.76 tokens per second)
0.08.385.041 I llama_perf_context_print:        load time =    1198.16 ms
0.08.385.043 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.385.045 I llama_perf_context_print:        eval time =    7129.76 ms /    21 runs   (  339.51 ms per token,     2.95 tokens per second)
0.08.385.057 I llama_perf_context_print:       total time =    7184.01 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m3.006s
user	50m6.689s
sys	0m6.366s
