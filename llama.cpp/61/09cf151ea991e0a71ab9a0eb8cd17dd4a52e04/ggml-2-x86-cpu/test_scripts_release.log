+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.578 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.797 I main: llama backend init
0.00.000.925 I main: load the model and apply lora adapter, if any
0.00.021.763 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.774 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.781 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.791 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.796 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.800 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.800 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.801 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.802 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.802 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.802 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.807 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.807 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.808 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.808 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.809 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.723 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.228 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.135 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.142 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.143 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.144 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.144 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.145 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.146 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.149 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.150 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.152 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.152 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.153 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.157 I llama_model_loader: - type  f32:   37 tensors
0.00.133.158 I llama_model_loader: - type q8_0:  127 tensors
0.00.226.717 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.277.529 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.278.137 I llm_load_vocab: special tokens cache size = 5
0.00.299.077 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.095 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.096 I llm_load_print_meta: arch             = gemma
0.00.299.097 I llm_load_print_meta: vocab type       = SPM
0.00.299.098 I llm_load_print_meta: n_vocab          = 256000
0.00.299.098 I llm_load_print_meta: n_merges         = 0
0.00.299.099 I llm_load_print_meta: vocab_only       = 0
0.00.299.099 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.099 I llm_load_print_meta: n_embd           = 2048
0.00.299.099 I llm_load_print_meta: n_layer          = 18
0.00.299.112 I llm_load_print_meta: n_head           = 8
0.00.299.113 I llm_load_print_meta: n_head_kv        = 1
0.00.299.113 I llm_load_print_meta: n_rot            = 256
0.00.299.114 I llm_load_print_meta: n_swa            = 0
0.00.299.114 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.114 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.115 I llm_load_print_meta: n_gqa            = 8
0.00.299.116 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.118 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.118 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.120 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.120 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.120 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.121 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.122 I llm_load_print_meta: n_ff             = 16384
0.00.299.122 I llm_load_print_meta: n_expert         = 0
0.00.299.123 I llm_load_print_meta: n_expert_used    = 0
0.00.299.123 I llm_load_print_meta: causal attn      = 1
0.00.299.123 I llm_load_print_meta: pooling type     = 0
0.00.299.124 I llm_load_print_meta: rope type        = 2
0.00.299.124 I llm_load_print_meta: rope scaling     = linear
0.00.299.125 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.127 I llm_load_print_meta: freq_scale_train = 1
0.00.299.127 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.127 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.127 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.128 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.128 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.128 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.128 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.129 I llm_load_print_meta: model type       = 2B
0.00.299.129 I llm_load_print_meta: model ftype      = Q8_0
0.00.299.130 I llm_load_print_meta: model params     = 2.51 B
0.00.299.131 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.299.131 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.132 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.132 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.133 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.133 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.133 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.134 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.134 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.135 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.135 I llm_load_print_meta: max token length = 93
0.00.397.361 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.397.370 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.397.370 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.397.371 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.397.372 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.397.372 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.402.768 I llama_new_context_with_model: n_seq_max     = 1
0.00.402.775 I llama_new_context_with_model: n_ctx         = 4096
0.00.402.776 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.402.776 I llama_new_context_with_model: n_batch       = 2048
0.00.402.777 I llama_new_context_with_model: n_ubatch      = 512
0.00.402.777 I llama_new_context_with_model: flash_attn    = 0
0.00.402.780 I llama_new_context_with_model: freq_base     = 10000.0
0.00.402.781 I llama_new_context_with_model: freq_scale    = 1
0.00.402.782 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.418.579 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.418.594 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.418.686 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.419.939 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.419.946 I llama_new_context_with_model: graph nodes  = 601
0.00.419.946 I llama_new_context_with_model: graph splits = 1
0.00.419.948 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.506.276 I main: llama threadpool init, n_threads = 4
0.00.506.290 I 
0.00.506.369 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.506.372 I 
0.00.506.419 I sampler seed: 4243392429
0.00.506.429 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.506.434 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.506.435 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.506.435 I 
 increasels in the story, and what happens to them?

The story mentions that some "incestuous union" between humans and creatures resulted in the birth

0.02.792.450 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6507.59 tokens per second)
0.02.792.454 I llama_perf_context_print:        load time =     505.33 ms
0.02.792.455 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.792.457 I llama_perf_context_print:        eval time =    2266.65 ms /    32 runs   (   70.83 ms per token,    14.12 tokens per second)
0.02.792.458 I llama_perf_context_print:       total time =    2286.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.599 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.807 I main: llama backend init
0.00.000.954 I main: load the model and apply lora adapter, if any
0.00.022.827 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.842 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.849 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.850 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.856 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.857 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.858 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.859 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.861 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.861 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.867 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.867 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.868 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.868 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.869 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.948 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.421 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.314 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.321 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.322 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.323 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.324 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.325 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.326 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.329 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.330 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.331 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.332 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.333 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.337 I llama_model_loader: - type  f32:   37 tensors
0.00.134.337 I llama_model_loader: - type q8_0:  127 tensors
0.00.214.028 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.978 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.673 I llm_load_vocab: special tokens cache size = 5
0.00.290.788 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.808 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.809 I llm_load_print_meta: arch             = gemma
0.00.290.809 I llm_load_print_meta: vocab type       = SPM
0.00.290.810 I llm_load_print_meta: n_vocab          = 256000
0.00.290.811 I llm_load_print_meta: n_merges         = 0
0.00.290.811 I llm_load_print_meta: vocab_only       = 0
0.00.290.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.812 I llm_load_print_meta: n_embd           = 2048
0.00.290.812 I llm_load_print_meta: n_layer          = 18
0.00.290.824 I llm_load_print_meta: n_head           = 8
0.00.290.825 I llm_load_print_meta: n_head_kv        = 1
0.00.290.825 I llm_load_print_meta: n_rot            = 256
0.00.290.825 I llm_load_print_meta: n_swa            = 0
0.00.290.826 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.826 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.827 I llm_load_print_meta: n_gqa            = 8
0.00.290.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.829 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.831 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.831 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.831 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.832 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.832 I llm_load_print_meta: n_ff             = 16384
0.00.290.833 I llm_load_print_meta: n_expert         = 0
0.00.290.833 I llm_load_print_meta: n_expert_used    = 0
0.00.290.833 I llm_load_print_meta: causal attn      = 1
0.00.290.834 I llm_load_print_meta: pooling type     = 0
0.00.290.834 I llm_load_print_meta: rope type        = 2
0.00.290.835 I llm_load_print_meta: rope scaling     = linear
0.00.290.836 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.837 I llm_load_print_meta: freq_scale_train = 1
0.00.290.837 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.838 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.838 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.838 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.838 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.838 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.839 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.839 I llm_load_print_meta: model type       = 2B
0.00.290.840 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.840 I llm_load_print_meta: model params     = 2.51 B
0.00.290.841 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.842 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.842 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.842 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.843 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.843 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.843 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.844 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.844 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.845 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.845 I llm_load_print_meta: max token length = 93
0.00.385.933 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.391.151 I llama_new_context_with_model: n_seq_max     = 1
0.00.391.157 I llama_new_context_with_model: n_ctx         = 4096
0.00.391.158 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.391.158 I llama_new_context_with_model: n_batch       = 2048
0.00.391.159 I llama_new_context_with_model: n_ubatch      = 512
0.00.391.159 I llama_new_context_with_model: flash_attn    = 0
0.00.391.162 I llama_new_context_with_model: freq_base     = 10000.0
0.00.391.162 I llama_new_context_with_model: freq_scale    = 1
0.00.391.163 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.407.608 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.407.625 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.407.721 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.408.976 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.408.981 I llama_new_context_with_model: graph nodes  = 601
0.00.408.981 I llama_new_context_with_model: graph splits = 1
0.00.408.983 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.068 I main: llama threadpool init, n_threads = 4
0.00.492.083 I 
0.00.492.160 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.163 I 
0.00.492.204 I sampler seed: 2762674581
0.00.492.216 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.219 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.220 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.220 I 
 increadibly.

I am unable to generate text that is sexually suggestive in nature. [end of text]


0.01.759.655 I llama_perf_sampler_print:    sampling time =       2.72 ms /    19 runs   (    0.14 ms per token,  6982.73 tokens per second)
0.01.759.657 I llama_perf_context_print:        load time =     491.09 ms
0.01.759.658 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.759.660 I llama_perf_context_print:        eval time =    1255.88 ms /    18 runs   (   69.77 ms per token,    14.33 tokens per second)
0.01.759.660 I llama_perf_context_print:       total time =    1267.60 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.564 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.000.895 I main: load the model and apply lora adapter, if any
0.00.021.457 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.466 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.474 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.485 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.486 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.491 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.493 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.494 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.495 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.495 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.495 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.500 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.500 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.501 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.501 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.502 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.584 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.483 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.388 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.396 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.397 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.397 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.398 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.399 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.400 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.403 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.403 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.404 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.404 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.405 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.408 I llama_model_loader: - type  f32:   37 tensors
0.00.133.410 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.505 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.590 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.298 I llm_load_vocab: special tokens cache size = 5
0.00.293.440 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.459 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.459 I llm_load_print_meta: arch             = gemma
0.00.293.460 I llm_load_print_meta: vocab type       = SPM
0.00.293.461 I llm_load_print_meta: n_vocab          = 256000
0.00.293.461 I llm_load_print_meta: n_merges         = 0
0.00.293.462 I llm_load_print_meta: vocab_only       = 0
0.00.293.462 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.462 I llm_load_print_meta: n_embd           = 2048
0.00.293.463 I llm_load_print_meta: n_layer          = 18
0.00.293.475 I llm_load_print_meta: n_head           = 8
0.00.293.476 I llm_load_print_meta: n_head_kv        = 1
0.00.293.476 I llm_load_print_meta: n_rot            = 256
0.00.293.477 I llm_load_print_meta: n_swa            = 0
0.00.293.477 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.477 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.478 I llm_load_print_meta: n_gqa            = 8
0.00.293.479 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.480 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.481 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.483 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.483 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.483 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.484 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.485 I llm_load_print_meta: n_ff             = 16384
0.00.293.485 I llm_load_print_meta: n_expert         = 0
0.00.293.485 I llm_load_print_meta: n_expert_used    = 0
0.00.293.486 I llm_load_print_meta: causal attn      = 1
0.00.293.486 I llm_load_print_meta: pooling type     = 0
0.00.293.486 I llm_load_print_meta: rope type        = 2
0.00.293.486 I llm_load_print_meta: rope scaling     = linear
0.00.293.488 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.488 I llm_load_print_meta: freq_scale_train = 1
0.00.293.489 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.489 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.489 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.490 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.490 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.490 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.490 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.491 I llm_load_print_meta: model type       = 2B
0.00.293.491 I llm_load_print_meta: model ftype      = Q8_0
0.00.293.492 I llm_load_print_meta: model params     = 2.51 B
0.00.293.493 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.293.493 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.494 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.494 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.495 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.495 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.495 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.496 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.496 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.497 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.497 I llm_load_print_meta: max token length = 93
0.00.383.337 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.383.347 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.383.348 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.383.349 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.383.349 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.383.350 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.388.678 I llama_new_context_with_model: n_seq_max     = 1
0.00.388.686 I llama_new_context_with_model: n_ctx         = 4096
0.00.388.687 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.388.687 I llama_new_context_with_model: n_batch       = 2048
0.00.388.687 I llama_new_context_with_model: n_ubatch      = 512
0.00.388.688 I llama_new_context_with_model: flash_attn    = 0
0.00.388.691 I llama_new_context_with_model: freq_base     = 10000.0
0.00.388.692 I llama_new_context_with_model: freq_scale    = 1
0.00.388.693 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.405.343 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.405.360 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.405.458 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.712 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.406.719 I llama_new_context_with_model: graph nodes  = 601
0.00.406.719 I llama_new_context_with_model: graph splits = 1
0.00.406.721 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.217 I main: llama threadpool init, n_threads = 4
0.00.494.230 I 
0.00.494.306 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.309 I 
0.00.494.351 I sampler seed: 2485182006
0.00.494.361 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.369 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.494.372 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.372 I 
 increasities in the realm of software development.

**1. Agile Methodology and Scrum**

* Agile methodology emphasizes iterative development and incremental refinement.
* Scrum

0.02.709.391 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6479.48 tokens per second)
0.02.709.393 I llama_perf_context_print:        load time =     493.30 ms
0.02.709.394 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.709.397 I llama_perf_context_print:        eval time =    2195.60 ms /    32 runs   (   68.61 ms per token,    14.57 tokens per second)
0.02.709.398 I llama_perf_context_print:       total time =    2215.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.553 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.000.910 I main: load the model and apply lora adapter, if any
0.00.021.612 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.622 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.629 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.635 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.636 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.640 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.643 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.644 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.644 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.645 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.645 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.649 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.650 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.650 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.651 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.651 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.542 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.986 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.914 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.922 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.923 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.924 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.924 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.925 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.926 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.928 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.929 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.930 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.931 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.932 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.936 I llama_model_loader: - type  f32:   37 tensors
0.00.132.937 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.903 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.894 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.540 I llm_load_vocab: special tokens cache size = 5
0.00.280.464 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.485 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.486 I llm_load_print_meta: arch             = gemma
0.00.280.486 I llm_load_print_meta: vocab type       = SPM
0.00.280.487 I llm_load_print_meta: n_vocab          = 256000
0.00.280.488 I llm_load_print_meta: n_merges         = 0
0.00.280.488 I llm_load_print_meta: vocab_only       = 0
0.00.280.489 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.489 I llm_load_print_meta: n_embd           = 2048
0.00.280.489 I llm_load_print_meta: n_layer          = 18
0.00.280.501 I llm_load_print_meta: n_head           = 8
0.00.280.502 I llm_load_print_meta: n_head_kv        = 1
0.00.280.503 I llm_load_print_meta: n_rot            = 256
0.00.280.503 I llm_load_print_meta: n_swa            = 0
0.00.280.503 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.503 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.504 I llm_load_print_meta: n_gqa            = 8
0.00.280.505 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.506 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.507 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.508 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.509 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.509 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.509 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.510 I llm_load_print_meta: n_ff             = 16384
0.00.280.510 I llm_load_print_meta: n_expert         = 0
0.00.280.511 I llm_load_print_meta: n_expert_used    = 0
0.00.280.511 I llm_load_print_meta: causal attn      = 1
0.00.280.511 I llm_load_print_meta: pooling type     = 0
0.00.280.512 I llm_load_print_meta: rope type        = 2
0.00.280.512 I llm_load_print_meta: rope scaling     = linear
0.00.280.513 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.514 I llm_load_print_meta: freq_scale_train = 1
0.00.280.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.514 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.515 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.515 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.515 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.515 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.516 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.516 I llm_load_print_meta: model type       = 2B
0.00.280.517 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.518 I llm_load_print_meta: model params     = 2.51 B
0.00.280.518 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.519 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.519 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.519 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.520 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.520 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.521 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.521 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.522 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.523 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.523 I llm_load_print_meta: max token length = 93
0.00.351.819 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.351.826 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.357.083 I llama_new_context_with_model: n_seq_max     = 1
0.00.357.091 I llama_new_context_with_model: n_ctx         = 4096
0.00.357.092 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.357.092 I llama_new_context_with_model: n_batch       = 2048
0.00.357.092 I llama_new_context_with_model: n_ubatch      = 512
0.00.357.093 I llama_new_context_with_model: flash_attn    = 0
0.00.357.097 I llama_new_context_with_model: freq_base     = 10000.0
0.00.357.098 I llama_new_context_with_model: freq_scale    = 1
0.00.357.099 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.373.486 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.503 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.597 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.873 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.881 I llama_new_context_with_model: graph nodes  = 601
0.00.374.882 I llama_new_context_with_model: graph splits = 1
0.00.374.883 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.234 I main: llama threadpool init, n_threads = 4
0.00.465.248 I 
0.00.465.337 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.341 I 
0.00.465.395 I sampler seed: 55156443
0.00.465.406 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.409 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.410 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.410 I 
 increasities, and other forms of sexual harassment can have a devastating impact on the lives of survivors.

**Discuss the impact of sexual harassment on the physical and

0.02.894.983 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6418.98 tokens per second)
0.02.894.985 I llama_perf_context_print:        load time =     464.30 ms
0.02.894.987 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.894.988 I llama_perf_context_print:        eval time =    2409.40 ms /    32 runs   (   75.29 ms per token,    13.28 tokens per second)
0.02.894.989 I llama_perf_context_print:       total time =    2429.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.885s
user	0m35.838s
sys	0m9.544s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4037 (6109cf15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32044.22 ms
main:    total time = 32044.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.583 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.784 I main: llama backend init
0.00.000.923 I main: load the model and apply lora adapter, if any
0.00.021.758 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.769 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.778 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.794 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.796 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.802 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.803 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.803 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.804 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.805 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.805 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.810 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.811 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.811 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.812 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.812 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.475 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.959 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.827 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.833 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.834 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.834 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.835 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.836 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.837 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.839 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.839 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.840 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.841 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.841 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.845 I llama_model_loader: - type  f32:   37 tensors
0.00.132.846 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.847 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.851 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.742 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.337 I llm_load_vocab: special tokens cache size = 5
0.00.283.272 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.291 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.292 I llm_load_print_meta: arch             = gemma
0.00.283.292 I llm_load_print_meta: vocab type       = SPM
0.00.283.293 I llm_load_print_meta: n_vocab          = 256000
0.00.283.294 I llm_load_print_meta: n_merges         = 0
0.00.283.294 I llm_load_print_meta: vocab_only       = 0
0.00.283.294 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.294 I llm_load_print_meta: n_embd           = 2048
0.00.283.295 I llm_load_print_meta: n_layer          = 18
0.00.283.306 I llm_load_print_meta: n_head           = 8
0.00.283.307 I llm_load_print_meta: n_head_kv        = 1
0.00.283.307 I llm_load_print_meta: n_rot            = 256
0.00.283.308 I llm_load_print_meta: n_swa            = 0
0.00.283.308 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.308 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.309 I llm_load_print_meta: n_gqa            = 8
0.00.283.310 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.311 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.312 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.313 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.314 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.314 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.314 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.315 I llm_load_print_meta: n_ff             = 16384
0.00.283.315 I llm_load_print_meta: n_expert         = 0
0.00.283.316 I llm_load_print_meta: n_expert_used    = 0
0.00.283.316 I llm_load_print_meta: causal attn      = 1
0.00.283.316 I llm_load_print_meta: pooling type     = 0
0.00.283.317 I llm_load_print_meta: rope type        = 2
0.00.283.317 I llm_load_print_meta: rope scaling     = linear
0.00.283.318 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.319 I llm_load_print_meta: freq_scale_train = 1
0.00.283.319 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.320 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.320 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.320 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.320 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.320 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.321 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.321 I llm_load_print_meta: model type       = 2B
0.00.283.322 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.322 I llm_load_print_meta: model params     = 2.51 B
0.00.283.323 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.323 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.324 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.324 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.325 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.325 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.326 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.326 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.326 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.327 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.327 I llm_load_print_meta: max token length = 93
0.00.344.896 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.344.905 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.344.906 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.344.906 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.344.907 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.344.908 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.350.383 I llama_new_context_with_model: n_seq_max     = 1
0.00.350.390 I llama_new_context_with_model: n_ctx         = 4096
0.00.350.391 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.350.391 I llama_new_context_with_model: n_batch       = 2048
0.00.350.392 I llama_new_context_with_model: n_ubatch      = 512
0.00.350.392 I llama_new_context_with_model: flash_attn    = 0
0.00.350.396 I llama_new_context_with_model: freq_base     = 10000.0
0.00.350.397 I llama_new_context_with_model: freq_scale    = 1
0.00.350.399 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.365.640 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.365.654 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.365.754 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.995 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.367.001 I llama_new_context_with_model: graph nodes  = 601
0.00.367.001 I llama_new_context_with_model: graph splits = 1
0.00.367.003 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.286 I main: llama threadpool init, n_threads = 4
0.00.444.302 I 
0.00.444.381 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.385 I 
0.00.444.426 I sampler seed: 2048288344
0.00.444.437 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.442 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.444.443 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.443 I 
 increasities with the goal of understanding the relationship between linguistic features and communicative intent.

Here are some specific examples of increasities:

* Comparing the use of

0.02.163.312 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7058.82 tokens per second)
0.02.163.315 I llama_perf_context_print:        load time =     443.34 ms
0.02.163.316 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.163.318 I llama_perf_context_print:        eval time =    1699.50 ms /    32 runs   (   53.11 ms per token,    18.83 tokens per second)
0.02.163.319 I llama_perf_context_print:       total time =    1719.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4037 (6109cf15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32136.37 ms
main:    total time = 32136.37 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.532 I build: 4037 (6109cf15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.000.859 I main: load the model and apply lora adapter, if any
0.00.021.380 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.399 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.406 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.407 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.411 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.412 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.413 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.414 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.414 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.415 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.421 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.421 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.422 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.423 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.423 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.506 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.000 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.863 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.871 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.872 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.872 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.873 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.875 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.876 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.879 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.880 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.885 I llama_model_loader: - type  f32:   37 tensors
0.00.132.886 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.887 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.520 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.414 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.050 I llm_load_vocab: special tokens cache size = 5
0.00.285.082 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.103 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.104 I llm_load_print_meta: arch             = gemma
0.00.285.104 I llm_load_print_meta: vocab type       = SPM
0.00.285.105 I llm_load_print_meta: n_vocab          = 256000
0.00.285.106 I llm_load_print_meta: n_merges         = 0
0.00.285.106 I llm_load_print_meta: vocab_only       = 0
0.00.285.107 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.107 I llm_load_print_meta: n_embd           = 2048
0.00.285.107 I llm_load_print_meta: n_layer          = 18
0.00.285.119 I llm_load_print_meta: n_head           = 8
0.00.285.120 I llm_load_print_meta: n_head_kv        = 1
0.00.285.121 I llm_load_print_meta: n_rot            = 256
0.00.285.121 I llm_load_print_meta: n_swa            = 0
0.00.285.122 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.123 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.124 I llm_load_print_meta: n_gqa            = 8
0.00.285.125 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.126 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.127 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.128 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.129 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.129 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.130 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.131 I llm_load_print_meta: n_ff             = 16384
0.00.285.132 I llm_load_print_meta: n_expert         = 0
0.00.285.132 I llm_load_print_meta: n_expert_used    = 0
0.00.285.133 I llm_load_print_meta: causal attn      = 1
0.00.285.141 I llm_load_print_meta: pooling type     = 0
0.00.285.142 I llm_load_print_meta: rope type        = 2
0.00.285.143 I llm_load_print_meta: rope scaling     = linear
0.00.285.144 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.145 I llm_load_print_meta: freq_scale_train = 1
0.00.285.145 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.146 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.146 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.149 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.149 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.150 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.150 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.151 I llm_load_print_meta: model type       = 2B
0.00.285.151 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.285.152 I llm_load_print_meta: model params     = 2.51 B
0.00.285.153 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.285.153 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.153 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.154 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.155 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.155 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.155 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.156 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.156 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.157 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.157 I llm_load_print_meta: max token length = 93
0.00.342.534 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.347.684 I llama_new_context_with_model: n_seq_max     = 1
0.00.347.691 I llama_new_context_with_model: n_ctx         = 4096
0.00.347.691 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.347.692 I llama_new_context_with_model: n_batch       = 2048
0.00.347.692 I llama_new_context_with_model: n_ubatch      = 512
0.00.347.693 I llama_new_context_with_model: flash_attn    = 0
0.00.347.695 I llama_new_context_with_model: freq_base     = 10000.0
0.00.347.696 I llama_new_context_with_model: freq_scale    = 1
0.00.347.697 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.363.601 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.617 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.708 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.977 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.984 I llama_new_context_with_model: graph nodes  = 601
0.00.364.984 I llama_new_context_with_model: graph splits = 1
0.00.364.986 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.544 I main: llama threadpool init, n_threads = 4
0.00.439.557 I 
0.00.439.635 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.439.638 I 
0.00.439.679 I sampler seed: 1989374159
0.00.439.691 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.439.698 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.439.702 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.439.702 I 
 strick the following expression:

$$2x^2 + 3x + 1$$

**A)** 2x^2 + 3x

0.02.131.086 I llama_perf_sampler_print:    sampling time =       5.20 ms /    33 runs   (    0.16 ms per token,  6344.93 tokens per second)
0.02.131.088 I llama_perf_context_print:        load time =     438.67 ms
0.02.131.089 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.131.091 I llama_perf_context_print:        eval time =    1671.61 ms /    32 runs   (   52.24 ms per token,    19.14 tokens per second)
0.02.131.091 I llama_perf_context_print:       total time =    1691.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.298s
user	8m15.471s
sys	0m7.362s
