+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.531 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.021.904 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.951 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.956 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.961 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.962 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.965 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.965 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.966 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.966 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.967 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.968 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.972 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.972 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.973 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.973 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.974 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.093 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.948 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.783 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.789 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.790 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.790 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.791 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.792 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.793 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.795 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.796 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.797 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.797 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.798 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.801 I llama_model_loader: - type  f32:   37 tensors
0.00.132.804 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.802 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.855 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.581 I llm_load_vocab: special tokens cache size = 5
0.00.233.674 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.687 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.687 I llm_load_print_meta: arch             = gemma
0.00.233.688 I llm_load_print_meta: vocab type       = SPM
0.00.233.688 I llm_load_print_meta: n_vocab          = 256000
0.00.233.689 I llm_load_print_meta: n_merges         = 0
0.00.233.689 I llm_load_print_meta: vocab_only       = 0
0.00.233.689 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.690 I llm_load_print_meta: n_embd           = 2048
0.00.233.690 I llm_load_print_meta: n_layer          = 18
0.00.233.702 I llm_load_print_meta: n_head           = 8
0.00.233.703 I llm_load_print_meta: n_head_kv        = 1
0.00.233.703 I llm_load_print_meta: n_rot            = 256
0.00.233.704 I llm_load_print_meta: n_swa            = 0
0.00.233.704 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.704 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.705 I llm_load_print_meta: n_gqa            = 8
0.00.233.706 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.707 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.708 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.710 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.710 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.711 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.711 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.712 I llm_load_print_meta: n_ff             = 16384
0.00.233.712 I llm_load_print_meta: n_expert         = 0
0.00.233.712 I llm_load_print_meta: n_expert_used    = 0
0.00.233.712 I llm_load_print_meta: causal attn      = 1
0.00.233.713 I llm_load_print_meta: pooling type     = 0
0.00.233.713 I llm_load_print_meta: rope type        = 2
0.00.233.713 I llm_load_print_meta: rope scaling     = linear
0.00.233.715 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.715 I llm_load_print_meta: freq_scale_train = 1
0.00.233.716 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.717 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.717 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.717 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.717 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.718 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.718 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.718 I llm_load_print_meta: model type       = 2B
0.00.233.719 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.720 I llm_load_print_meta: model params     = 2.51 B
0.00.233.721 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.721 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.721 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.721 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.722 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.722 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.722 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.723 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.723 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.724 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.724 I llm_load_print_meta: max token length = 93
0.00.233.740 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.239 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.246 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.247 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.248 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.248 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.249 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.437 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.444 I llama_new_context_with_model: n_batch    = 2048
0.00.339.444 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.445 I llama_new_context_with_model: flash_attn = 0
0.00.339.447 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.448 I llama_new_context_with_model: freq_scale = 1
0.00.367.940 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.956 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.048 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.895 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.902 I llama_new_context_with_model: graph nodes  = 601
0.00.368.903 I llama_new_context_with_model: graph splits = 1
0.00.368.904 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.149 I main: llama threadpool init, n_threads = 4
0.00.460.162 I 
0.00.460.233 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.236 I 
0.00.460.265 I sampler seed: 828794007
0.00.460.274 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.278 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.279 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.279 I 
 increably. [end of text]


0.00.745.408 I llama_perf_sampler_print:    sampling time =       0.73 ms /     5 runs   (    0.15 ms per token,  6887.05 tokens per second)
0.00.745.410 I llama_perf_context_print:        load time =     458.25 ms
0.00.745.411 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.745.413 I llama_perf_context_print:        eval time =     282.10 ms /     4 runs   (   70.53 ms per token,    14.18 tokens per second)
0.00.745.413 I llama_perf_context_print:       total time =     285.26 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.572 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.222 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.229 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.230 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.233 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.234 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.235 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.235 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.236 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.237 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.241 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.242 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.243 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.243 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.244 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.932 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.769 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.700 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.706 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.707 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.708 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.708 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.709 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.710 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.712 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.713 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.713 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.714 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.715 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.719 I llama_model_loader: - type  f32:   37 tensors
0.00.132.721 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.706 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.333 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.036 I llm_load_vocab: special tokens cache size = 5
0.00.233.536 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.550 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.551 I llm_load_print_meta: arch             = gemma
0.00.233.551 I llm_load_print_meta: vocab type       = SPM
0.00.233.552 I llm_load_print_meta: n_vocab          = 256000
0.00.233.552 I llm_load_print_meta: n_merges         = 0
0.00.233.552 I llm_load_print_meta: vocab_only       = 0
0.00.233.553 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.553 I llm_load_print_meta: n_embd           = 2048
0.00.233.553 I llm_load_print_meta: n_layer          = 18
0.00.233.565 I llm_load_print_meta: n_head           = 8
0.00.233.566 I llm_load_print_meta: n_head_kv        = 1
0.00.233.567 I llm_load_print_meta: n_rot            = 256
0.00.233.567 I llm_load_print_meta: n_swa            = 0
0.00.233.567 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.567 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.568 I llm_load_print_meta: n_gqa            = 8
0.00.233.570 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.570 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.571 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.573 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.573 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.573 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.574 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.575 I llm_load_print_meta: n_ff             = 16384
0.00.233.575 I llm_load_print_meta: n_expert         = 0
0.00.233.575 I llm_load_print_meta: n_expert_used    = 0
0.00.233.575 I llm_load_print_meta: causal attn      = 1
0.00.233.575 I llm_load_print_meta: pooling type     = 0
0.00.233.576 I llm_load_print_meta: rope type        = 2
0.00.233.576 I llm_load_print_meta: rope scaling     = linear
0.00.233.577 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.578 I llm_load_print_meta: freq_scale_train = 1
0.00.233.578 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.579 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.579 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.579 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.580 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.580 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.580 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.581 I llm_load_print_meta: model type       = 2B
0.00.233.581 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.582 I llm_load_print_meta: model params     = 2.51 B
0.00.233.583 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.583 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.583 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.583 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.584 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.584 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.584 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.585 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.585 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.586 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.587 I llm_load_print_meta: max token length = 93
0.00.233.603 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.614 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.335.695 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.701 I llama_new_context_with_model: n_batch    = 2048
0.00.335.701 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.702 I llama_new_context_with_model: flash_attn = 0
0.00.335.704 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.705 I llama_new_context_with_model: freq_scale = 1
0.00.365.220 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.237 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.365.330 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.235 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.242 I llama_new_context_with_model: graph nodes  = 601
0.00.366.243 I llama_new_context_with_model: graph splits = 1
0.00.366.245 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.854 I main: llama threadpool init, n_threads = 4
0.00.453.865 I 
0.00.453.939 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.942 I 
0.00.453.981 I sampler seed: 1793874008
0.00.453.990 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.993 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.453.994 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.994 I 
 increasities and inconsistencies.

This is a problem of semantic ambiguity.

**Semantics** is the study of meaning. It involves understanding the relationships between words,

0.02.636.782 I llama_perf_sampler_print:    sampling time =       5.51 ms /    33 runs   (    0.17 ms per token,  5986.94 tokens per second)
0.02.636.784 I llama_perf_context_print:        load time =     451.94 ms
0.02.636.785 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.636.787 I llama_perf_context_print:        eval time =    2164.18 ms /    32 runs   (   67.63 ms per token,    14.79 tokens per second)
0.02.636.787 I llama_perf_context_print:       total time =    2182.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.580 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.001.874 I main: load the model and apply lora adapter, if any
0.00.022.228 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.275 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.289 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.294 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.295 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.299 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.300 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.301 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.301 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.302 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.302 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.306 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.307 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.308 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.308 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.879 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.562 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.395 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.401 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.402 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.402 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.403 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.404 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.405 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.409 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.409 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.410 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.410 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.411 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.414 I llama_model_loader: - type  f32:   37 tensors
0.00.132.417 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.671 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.258 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.970 I llm_load_vocab: special tokens cache size = 5
0.00.234.367 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.380 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.381 I llm_load_print_meta: arch             = gemma
0.00.234.382 I llm_load_print_meta: vocab type       = SPM
0.00.234.382 I llm_load_print_meta: n_vocab          = 256000
0.00.234.383 I llm_load_print_meta: n_merges         = 0
0.00.234.383 I llm_load_print_meta: vocab_only       = 0
0.00.234.384 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.384 I llm_load_print_meta: n_embd           = 2048
0.00.234.384 I llm_load_print_meta: n_layer          = 18
0.00.234.396 I llm_load_print_meta: n_head           = 8
0.00.234.397 I llm_load_print_meta: n_head_kv        = 1
0.00.234.398 I llm_load_print_meta: n_rot            = 256
0.00.234.398 I llm_load_print_meta: n_swa            = 0
0.00.234.398 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.398 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.399 I llm_load_print_meta: n_gqa            = 8
0.00.234.400 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.401 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.402 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.403 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.404 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.404 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.405 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.405 I llm_load_print_meta: n_ff             = 16384
0.00.234.406 I llm_load_print_meta: n_expert         = 0
0.00.234.406 I llm_load_print_meta: n_expert_used    = 0
0.00.234.406 I llm_load_print_meta: causal attn      = 1
0.00.234.406 I llm_load_print_meta: pooling type     = 0
0.00.234.407 I llm_load_print_meta: rope type        = 2
0.00.234.407 I llm_load_print_meta: rope scaling     = linear
0.00.234.408 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.409 I llm_load_print_meta: freq_scale_train = 1
0.00.234.409 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.409 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.410 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.410 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.411 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.411 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.412 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.413 I llm_load_print_meta: model type       = 2B
0.00.234.413 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.414 I llm_load_print_meta: model params     = 2.51 B
0.00.234.415 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.415 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.416 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.416 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.416 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.416 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.417 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.417 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.418 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.418 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.419 I llm_load_print_meta: max token length = 93
0.00.234.443 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.310.094 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.310.099 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.310.100 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.310.101 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.310.101 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.310.102 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.315.137 I llama_new_context_with_model: n_ctx      = 8192
0.00.315.142 I llama_new_context_with_model: n_batch    = 2048
0.00.315.143 I llama_new_context_with_model: n_ubatch   = 512
0.00.315.144 I llama_new_context_with_model: flash_attn = 0
0.00.315.146 I llama_new_context_with_model: freq_base  = 10000.0
0.00.315.147 I llama_new_context_with_model: freq_scale = 1
0.00.345.280 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.345.295 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.384 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.273 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.346.280 I llama_new_context_with_model: graph nodes  = 601
0.00.346.280 I llama_new_context_with_model: graph splits = 1
0.00.346.282 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.517 I main: llama threadpool init, n_threads = 4
0.00.437.530 I 
0.00.437.604 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.608 I 
0.00.437.646 I sampler seed: 1439867195
0.00.437.655 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.658 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.659 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.659 I 
 increasities with an iron fist.

This passage is describing:

A) A peaceful country
B) A totalitarian government
C) A dictatorship
D

0.02.685.470 I llama_perf_sampler_print:    sampling time =       5.40 ms /    33 runs   (    0.16 ms per token,  6112.24 tokens per second)
0.02.685.472 I llama_perf_context_print:        load time =     435.62 ms
0.02.685.473 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.685.474 I llama_perf_context_print:        eval time =    2229.47 ms /    32 runs   (   69.67 ms per token,    14.35 tokens per second)
0.02.685.475 I llama_perf_context_print:       total time =    2247.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.623 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.834 I main: llama backend init
0.00.001.950 I main: load the model and apply lora adapter, if any
0.00.022.493 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.543 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.553 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.562 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.563 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.567 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.567 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.568 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.569 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.570 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.570 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.575 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.575 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.576 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.576 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.577 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.053.811 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.653 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.494 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.501 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.503 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.504 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.505 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.506 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.507 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.510 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.511 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.512 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.513 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.136.514 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.518 I llama_model_loader: - type  f32:   37 tensors
0.00.136.521 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.280 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.747 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.402 I llm_load_vocab: special tokens cache size = 5
0.00.237.956 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.969 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.970 I llm_load_print_meta: arch             = gemma
0.00.237.971 I llm_load_print_meta: vocab type       = SPM
0.00.237.971 I llm_load_print_meta: n_vocab          = 256000
0.00.237.972 I llm_load_print_meta: n_merges         = 0
0.00.237.972 I llm_load_print_meta: vocab_only       = 0
0.00.237.972 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.973 I llm_load_print_meta: n_embd           = 2048
0.00.237.973 I llm_load_print_meta: n_layer          = 18
0.00.237.984 I llm_load_print_meta: n_head           = 8
0.00.237.985 I llm_load_print_meta: n_head_kv        = 1
0.00.237.985 I llm_load_print_meta: n_rot            = 256
0.00.237.986 I llm_load_print_meta: n_swa            = 0
0.00.237.986 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.987 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.987 I llm_load_print_meta: n_gqa            = 8
0.00.237.988 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.989 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.990 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.991 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.992 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.992 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.993 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.993 I llm_load_print_meta: n_ff             = 16384
0.00.237.994 I llm_load_print_meta: n_expert         = 0
0.00.237.994 I llm_load_print_meta: n_expert_used    = 0
0.00.237.994 I llm_load_print_meta: causal attn      = 1
0.00.237.994 I llm_load_print_meta: pooling type     = 0
0.00.237.995 I llm_load_print_meta: rope type        = 2
0.00.237.995 I llm_load_print_meta: rope scaling     = linear
0.00.237.996 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.997 I llm_load_print_meta: freq_scale_train = 1
0.00.237.997 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.998 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.998 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.999 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.999 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.999 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.999 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.000 I llm_load_print_meta: model type       = 2B
0.00.238.001 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.001 I llm_load_print_meta: model params     = 2.51 B
0.00.238.002 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.002 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.003 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.003 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.003 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.004 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.004 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.005 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.005 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.005 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.006 I llm_load_print_meta: max token length = 93
0.00.238.033 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.310.255 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.310.264 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.315.295 I llama_new_context_with_model: n_ctx      = 8192
0.00.315.302 I llama_new_context_with_model: n_batch    = 2048
0.00.315.303 I llama_new_context_with_model: n_ubatch   = 512
0.00.315.303 I llama_new_context_with_model: flash_attn = 0
0.00.315.306 I llama_new_context_with_model: freq_base  = 10000.0
0.00.315.307 I llama_new_context_with_model: freq_scale = 1
0.00.346.607 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.346.623 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.346.724 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.623 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.347.631 I llama_new_context_with_model: graph nodes  = 601
0.00.347.631 I llama_new_context_with_model: graph splits = 1
0.00.347.633 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.656 I main: llama threadpool init, n_threads = 4
0.00.442.668 I 
0.00.442.742 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.746 I 
0.00.442.781 I sampler seed: 3870632531
0.00.442.790 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.792 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.442.793 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.793 I 
 increasities.

The given text contains an error. The correct spelling is "incestuous".

**Incestuous** relationships are those in which close

0.02.859.896 I llama_perf_sampler_print:    sampling time =       5.43 ms /    33 runs   (    0.16 ms per token,  6075.11 tokens per second)
0.02.859.899 I llama_perf_context_print:        load time =     440.69 ms
0.02.859.900 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.859.901 I llama_perf_context_print:        eval time =    2397.72 ms /    32 runs   (   74.93 ms per token,    13.35 tokens per second)
0.02.859.902 I llama_perf_context_print:       total time =    2417.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.687s
user	0m31.264s
sys	0m9.416s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3835 (6102037b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31994.00 ms
main:    total time = 31994.00 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.619 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.826 I main: llama backend init
0.00.002.029 I main: load the model and apply lora adapter, if any
0.00.022.154 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.206 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.221 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.234 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.238 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.242 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.244 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.246 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.247 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.248 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.249 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.253 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.254 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.254 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.255 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.256 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.703 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.070 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.093 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.100 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.100 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.101 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.102 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.103 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.104 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.107 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.108 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.108 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.109 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.110 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.114 I llama_model_loader: - type  f32:   37 tensors
0.00.134.116 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.116 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.496 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.419 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.159 I llm_load_vocab: special tokens cache size = 5
0.00.236.565 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.580 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.581 I llm_load_print_meta: arch             = gemma
0.00.236.582 I llm_load_print_meta: vocab type       = SPM
0.00.236.582 I llm_load_print_meta: n_vocab          = 256000
0.00.236.583 I llm_load_print_meta: n_merges         = 0
0.00.236.583 I llm_load_print_meta: vocab_only       = 0
0.00.236.583 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.584 I llm_load_print_meta: n_embd           = 2048
0.00.236.584 I llm_load_print_meta: n_layer          = 18
0.00.236.598 I llm_load_print_meta: n_head           = 8
0.00.236.599 I llm_load_print_meta: n_head_kv        = 1
0.00.236.599 I llm_load_print_meta: n_rot            = 256
0.00.236.599 I llm_load_print_meta: n_swa            = 0
0.00.236.600 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.601 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.602 I llm_load_print_meta: n_gqa            = 8
0.00.236.603 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.604 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.606 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.607 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.608 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.608 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.608 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.609 I llm_load_print_meta: n_ff             = 16384
0.00.236.610 I llm_load_print_meta: n_expert         = 0
0.00.236.610 I llm_load_print_meta: n_expert_used    = 0
0.00.236.610 I llm_load_print_meta: causal attn      = 1
0.00.236.611 I llm_load_print_meta: pooling type     = 0
0.00.236.612 I llm_load_print_meta: rope type        = 2
0.00.236.612 I llm_load_print_meta: rope scaling     = linear
0.00.236.613 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.614 I llm_load_print_meta: freq_scale_train = 1
0.00.236.615 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.615 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.615 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.616 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.616 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.617 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.617 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.617 I llm_load_print_meta: model type       = 2B
0.00.236.618 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.236.619 I llm_load_print_meta: model params     = 2.51 B
0.00.236.619 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.236.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.620 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.621 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.621 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.622 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.623 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.624 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.624 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.625 I llm_load_print_meta: max token length = 93
0.00.236.656 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.161 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.295.168 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.295.169 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.295.169 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.295.170 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.295.171 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.300.416 I llama_new_context_with_model: n_ctx      = 8192
0.00.300.422 I llama_new_context_with_model: n_batch    = 2048
0.00.300.423 I llama_new_context_with_model: n_ubatch   = 512
0.00.300.423 I llama_new_context_with_model: flash_attn = 0
0.00.300.426 I llama_new_context_with_model: freq_base  = 10000.0
0.00.300.426 I llama_new_context_with_model: freq_scale = 1
0.00.329.936 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.952 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.044 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.879 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.886 I llama_new_context_with_model: graph nodes  = 601
0.00.330.887 I llama_new_context_with_model: graph splits = 1
0.00.330.888 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.559 I main: llama threadpool init, n_threads = 4
0.00.419.570 I 
0.00.419.648 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.419.652 I 
0.00.419.700 I sampler seed: 430734000
0.00.419.709 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.712 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.419.713 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.713 I 
 increamically.

I'm sorry, but I cannot generate responses that promote or enable harmful or dangerous activities. [end of text]


0.01.639.503 I llama_perf_sampler_print:    sampling time =       4.05 ms /    25 runs   (    0.16 ms per token,  6178.94 tokens per second)
0.01.639.505 I llama_perf_context_print:        load time =     417.51 ms
0.01.639.506 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.639.509 I llama_perf_context_print:        eval time =    1205.45 ms /    24 runs   (   50.23 ms per token,    19.91 tokens per second)
0.01.639.510 I llama_perf_context_print:       total time =    1219.95 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3835 (6102037b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32041.80 ms
main:    total time = 32041.80 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.544 I build: 3835 (6102037b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.078 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.089 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.095 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.100 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.100 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.101 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.102 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.107 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.108 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.109 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.109 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.110 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.549 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.188 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.025 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.031 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.031 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.032 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.033 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.034 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.034 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.037 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.037 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.040 I llama_model_loader: - type  f32:   37 tensors
0.00.132.043 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.043 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.085 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.333 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.079 I llm_load_vocab: special tokens cache size = 5
0.00.234.254 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.268 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.268 I llm_load_print_meta: arch             = gemma
0.00.234.269 I llm_load_print_meta: vocab type       = SPM
0.00.234.270 I llm_load_print_meta: n_vocab          = 256000
0.00.234.270 I llm_load_print_meta: n_merges         = 0
0.00.234.271 I llm_load_print_meta: vocab_only       = 0
0.00.234.271 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.271 I llm_load_print_meta: n_embd           = 2048
0.00.234.271 I llm_load_print_meta: n_layer          = 18
0.00.234.282 I llm_load_print_meta: n_head           = 8
0.00.234.283 I llm_load_print_meta: n_head_kv        = 1
0.00.234.284 I llm_load_print_meta: n_rot            = 256
0.00.234.284 I llm_load_print_meta: n_swa            = 0
0.00.234.284 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.284 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.285 I llm_load_print_meta: n_gqa            = 8
0.00.234.286 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.287 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.288 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.289 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.289 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.290 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.291 I llm_load_print_meta: n_ff             = 16384
0.00.234.292 I llm_load_print_meta: n_expert         = 0
0.00.234.292 I llm_load_print_meta: n_expert_used    = 0
0.00.234.292 I llm_load_print_meta: causal attn      = 1
0.00.234.293 I llm_load_print_meta: pooling type     = 0
0.00.234.293 I llm_load_print_meta: rope type        = 2
0.00.234.293 I llm_load_print_meta: rope scaling     = linear
0.00.234.294 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.295 I llm_load_print_meta: freq_scale_train = 1
0.00.234.295 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.295 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.296 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.296 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.296 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.297 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.297 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.297 I llm_load_print_meta: model type       = 2B
0.00.234.298 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.298 I llm_load_print_meta: model params     = 2.51 B
0.00.234.299 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.299 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.300 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.300 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.300 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.301 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.301 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.301 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.301 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.302 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.302 I llm_load_print_meta: max token length = 93
0.00.234.330 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.277 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.297.219 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.225 I llama_new_context_with_model: n_batch    = 2048
0.00.297.225 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.226 I llama_new_context_with_model: flash_attn = 0
0.00.297.228 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.229 I llama_new_context_with_model: freq_scale = 1
0.00.326.504 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.518 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.605 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.439 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.447 I llama_new_context_with_model: graph nodes  = 601
0.00.327.447 I llama_new_context_with_model: graph splits = 1
0.00.327.449 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.410.324 I main: llama threadpool init, n_threads = 4
0.00.410.337 I 
0.00.410.416 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.410.419 I 
0.00.410.456 I sampler seed: 3533055131
0.00.410.466 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.410.468 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.410.469 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.410.469 I 
 increasities and other forms of deception.

**Answer the question using the following guidelines:**

- Use complete sentences.
- Provide specific examples.
-

0.02.022.997 I llama_perf_sampler_print:    sampling time =       5.44 ms /    33 runs   (    0.16 ms per token,  6069.52 tokens per second)
0.02.023.000 I llama_perf_context_print:        load time =     408.44 ms
0.02.023.001 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.023.003 I llama_perf_context_print:        eval time =    1594.09 ms /    32 runs   (   49.82 ms per token,    20.07 tokens per second)
0.02.023.004 I llama_perf_context_print:       total time =    1612.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.450s
user	8m13.045s
sys	0m6.802s
