+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.599 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.798 I main: llama backend init
0.00.001.890 I main: load the model and apply lora adapter, if any
0.00.022.367 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.412 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.419 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.425 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.426 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.430 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.430 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.431 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.432 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.433 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.433 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.438 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.438 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.439 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.439 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.439 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.496 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.063 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.069 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.070 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.071 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.072 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.073 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.074 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.077 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.078 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.078 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.079 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.079 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.083 I llama_model_loader: - type  f32:   37 tensors
0.00.132.085 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.350 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.717 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.233.396 I llm_load_vocab: special tokens cache size = 5
0.00.254.124 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.254.143 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.254.144 I llm_load_print_meta: arch             = gemma
0.00.254.144 I llm_load_print_meta: vocab type       = SPM
0.00.254.145 I llm_load_print_meta: n_vocab          = 256000
0.00.254.146 I llm_load_print_meta: n_merges         = 0
0.00.254.146 I llm_load_print_meta: vocab_only       = 0
0.00.254.146 I llm_load_print_meta: n_ctx_train      = 8192
0.00.254.147 I llm_load_print_meta: n_embd           = 2048
0.00.254.147 I llm_load_print_meta: n_layer          = 18
0.00.254.158 I llm_load_print_meta: n_head           = 8
0.00.254.159 I llm_load_print_meta: n_head_kv        = 1
0.00.254.159 I llm_load_print_meta: n_rot            = 256
0.00.254.160 I llm_load_print_meta: n_swa            = 0
0.00.254.160 I llm_load_print_meta: n_embd_head_k    = 256
0.00.254.160 I llm_load_print_meta: n_embd_head_v    = 256
0.00.254.161 I llm_load_print_meta: n_gqa            = 8
0.00.254.162 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.254.163 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.254.164 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.254.165 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.254.166 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.254.166 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.254.166 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.254.167 I llm_load_print_meta: n_ff             = 16384
0.00.254.168 I llm_load_print_meta: n_expert         = 0
0.00.254.168 I llm_load_print_meta: n_expert_used    = 0
0.00.254.168 I llm_load_print_meta: causal attn      = 1
0.00.254.168 I llm_load_print_meta: pooling type     = 0
0.00.254.169 I llm_load_print_meta: rope type        = 2
0.00.254.169 I llm_load_print_meta: rope scaling     = linear
0.00.254.170 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.254.171 I llm_load_print_meta: freq_scale_train = 1
0.00.254.171 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.254.172 I llm_load_print_meta: rope_finetuned   = unknown
0.00.254.172 I llm_load_print_meta: ssm_d_conv       = 0
0.00.254.172 I llm_load_print_meta: ssm_d_inner      = 0
0.00.254.173 I llm_load_print_meta: ssm_d_state      = 0
0.00.254.173 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.254.173 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.254.174 I llm_load_print_meta: model type       = 2B
0.00.254.175 I llm_load_print_meta: model ftype      = Q8_0
0.00.254.175 I llm_load_print_meta: model params     = 2.51 B
0.00.254.176 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.254.176 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.254.177 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.254.177 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.254.177 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.254.178 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.254.178 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.254.179 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.254.179 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.254.179 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.254.180 I llm_load_print_meta: max token length = 93
0.00.254.199 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.353.108 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.353.116 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.353.117 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.353.118 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.353.118 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.353.119 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.358.194 I llama_new_context_with_model: n_ctx      = 8192
0.00.358.200 I llama_new_context_with_model: n_batch    = 2048
0.00.358.200 I llama_new_context_with_model: n_ubatch   = 512
0.00.358.201 I llama_new_context_with_model: flash_attn = 0
0.00.358.203 I llama_new_context_with_model: freq_base  = 10000.0
0.00.358.204 I llama_new_context_with_model: freq_scale = 1
0.00.387.392 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.387.407 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.387.506 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.372 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.388.380 I llama_new_context_with_model: graph nodes  = 601
0.00.388.381 I llama_new_context_with_model: graph splits = 1
0.00.388.382 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.741 I main: llama threadpool init, n_threads = 4
0.00.481.754 I 
0.00.481.831 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.834 I 
0.00.481.869 I sampler seed: 4067641160
0.00.481.878 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.880 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.481.881 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.881 I 
 increasities into the 20th century.

The term "escalating crescendo" is used to describe the crescendo of tensions leading up to a conflict.

0.02.736.056 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6580.26 tokens per second)
0.02.736.059 I llama_perf_context_print:        load time =     479.78 ms
0.02.736.060 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.736.062 I llama_perf_context_print:        eval time =    2235.57 ms /    32 runs   (   69.86 ms per token,    14.31 tokens per second)
0.02.736.063 I llama_perf_context_print:       total time =    2254.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.568 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.021.891 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.906 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.913 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.914 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.919 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.919 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.920 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.921 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.922 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.922 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.927 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.927 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.928 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.928 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.929 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.771 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.956 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.766 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.771 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.772 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.773 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.773 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.774 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.775 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.777 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.778 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.778 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.779 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.780 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.783 I llama_model_loader: - type  f32:   37 tensors
0.00.132.786 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.868 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.846 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.616 I llm_load_vocab: special tokens cache size = 5
0.00.266.248 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.268 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.269 I llm_load_print_meta: arch             = gemma
0.00.266.269 I llm_load_print_meta: vocab type       = SPM
0.00.266.270 I llm_load_print_meta: n_vocab          = 256000
0.00.266.270 I llm_load_print_meta: n_merges         = 0
0.00.266.271 I llm_load_print_meta: vocab_only       = 0
0.00.266.271 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.271 I llm_load_print_meta: n_embd           = 2048
0.00.266.272 I llm_load_print_meta: n_layer          = 18
0.00.266.284 I llm_load_print_meta: n_head           = 8
0.00.266.285 I llm_load_print_meta: n_head_kv        = 1
0.00.266.286 I llm_load_print_meta: n_rot            = 256
0.00.266.286 I llm_load_print_meta: n_swa            = 0
0.00.266.286 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.286 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.287 I llm_load_print_meta: n_gqa            = 8
0.00.266.288 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.289 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.290 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.291 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.292 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.292 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.293 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.293 I llm_load_print_meta: n_ff             = 16384
0.00.266.294 I llm_load_print_meta: n_expert         = 0
0.00.266.294 I llm_load_print_meta: n_expert_used    = 0
0.00.266.294 I llm_load_print_meta: causal attn      = 1
0.00.266.294 I llm_load_print_meta: pooling type     = 0
0.00.266.295 I llm_load_print_meta: rope type        = 2
0.00.266.295 I llm_load_print_meta: rope scaling     = linear
0.00.266.296 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.297 I llm_load_print_meta: freq_scale_train = 1
0.00.266.297 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.297 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.298 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.298 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.299 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.299 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.299 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.300 I llm_load_print_meta: model type       = 2B
0.00.266.300 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.301 I llm_load_print_meta: model params     = 2.51 B
0.00.266.302 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.302 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.302 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.303 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.303 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.303 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.303 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.304 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.304 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.305 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.305 I llm_load_print_meta: max token length = 93
0.00.266.325 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.360.354 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.365.286 I llama_new_context_with_model: n_ctx      = 8192
0.00.365.292 I llama_new_context_with_model: n_batch    = 2048
0.00.365.292 I llama_new_context_with_model: n_ubatch   = 512
0.00.365.293 I llama_new_context_with_model: flash_attn = 0
0.00.365.295 I llama_new_context_with_model: freq_base  = 10000.0
0.00.365.296 I llama_new_context_with_model: freq_scale = 1
0.00.394.605 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.394.621 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.394.711 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.395.575 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.395.584 I llama_new_context_with_model: graph nodes  = 601
0.00.395.585 I llama_new_context_with_model: graph splits = 1
0.00.395.587 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.822 I main: llama threadpool init, n_threads = 4
0.00.483.834 I 
0.00.483.911 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.914 I 
0.00.483.951 I sampler seed: 204556379
0.00.483.960 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.963 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.483.963 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.963 I 
 increasels, and other creatures from folklore and mythology.

**Objective:**

* Explore the common themes and motifs found in folklore and mythology.
* Analyze

0.02.667.615 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6389.16 tokens per second)
0.02.667.619 I llama_perf_context_print:        load time =     481.88 ms
0.02.667.620 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.667.622 I llama_perf_context_print:        eval time =    2165.42 ms /    32 runs   (   67.67 ms per token,    14.78 tokens per second)
0.02.667.625 I llama_perf_context_print:       total time =    2183.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.578 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.021.864 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.912 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.920 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.924 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.925 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.929 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.931 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.931 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.932 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.933 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.933 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.938 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.938 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.939 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.939 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.939 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.119 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.059 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.893 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.901 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.902 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.903 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.903 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.905 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.906 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.910 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.911 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.911 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.912 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.913 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.918 I llama_model_loader: - type  f32:   37 tensors
0.00.131.921 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.794 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.236.042 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.236.757 I llm_load_vocab: special tokens cache size = 5
0.00.257.338 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.257.354 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.257.355 I llm_load_print_meta: arch             = gemma
0.00.257.355 I llm_load_print_meta: vocab type       = SPM
0.00.257.356 I llm_load_print_meta: n_vocab          = 256000
0.00.257.358 I llm_load_print_meta: n_merges         = 0
0.00.257.359 I llm_load_print_meta: vocab_only       = 0
0.00.257.359 I llm_load_print_meta: n_ctx_train      = 8192
0.00.257.360 I llm_load_print_meta: n_embd           = 2048
0.00.257.360 I llm_load_print_meta: n_layer          = 18
0.00.257.372 I llm_load_print_meta: n_head           = 8
0.00.257.373 I llm_load_print_meta: n_head_kv        = 1
0.00.257.373 I llm_load_print_meta: n_rot            = 256
0.00.257.373 I llm_load_print_meta: n_swa            = 0
0.00.257.374 I llm_load_print_meta: n_embd_head_k    = 256
0.00.257.374 I llm_load_print_meta: n_embd_head_v    = 256
0.00.257.375 I llm_load_print_meta: n_gqa            = 8
0.00.257.376 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.257.377 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.257.378 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.257.380 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.257.380 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.257.381 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.257.382 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.257.383 I llm_load_print_meta: n_ff             = 16384
0.00.257.383 I llm_load_print_meta: n_expert         = 0
0.00.257.383 I llm_load_print_meta: n_expert_used    = 0
0.00.257.384 I llm_load_print_meta: causal attn      = 1
0.00.257.384 I llm_load_print_meta: pooling type     = 0
0.00.257.384 I llm_load_print_meta: rope type        = 2
0.00.257.385 I llm_load_print_meta: rope scaling     = linear
0.00.257.386 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.257.387 I llm_load_print_meta: freq_scale_train = 1
0.00.257.387 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.257.388 I llm_load_print_meta: rope_finetuned   = unknown
0.00.257.388 I llm_load_print_meta: ssm_d_conv       = 0
0.00.257.389 I llm_load_print_meta: ssm_d_inner      = 0
0.00.257.389 I llm_load_print_meta: ssm_d_state      = 0
0.00.257.389 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.257.392 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.257.393 I llm_load_print_meta: model type       = 2B
0.00.257.393 I llm_load_print_meta: model ftype      = Q8_0
0.00.257.394 I llm_load_print_meta: model params     = 2.51 B
0.00.257.395 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.257.395 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.257.396 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.257.396 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.257.396 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.257.397 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.257.404 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.257.405 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.257.406 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.257.406 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.257.406 I llm_load_print_meta: max token length = 93
0.00.257.431 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.393 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.333.401 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.333.402 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.333.403 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.333.403 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.333.404 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.338.421 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.427 I llama_new_context_with_model: n_batch    = 2048
0.00.338.427 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.428 I llama_new_context_with_model: flash_attn = 0
0.00.338.431 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.432 I llama_new_context_with_model: freq_scale = 1
0.00.367.206 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.221 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.312 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.195 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.202 I llama_new_context_with_model: graph nodes  = 601
0.00.368.202 I llama_new_context_with_model: graph splits = 1
0.00.368.204 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.834 I main: llama threadpool init, n_threads = 4
0.00.458.846 I 
0.00.458.917 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.921 I 
0.00.458.956 I sampler seed: 1184223498
0.00.458.965 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.968 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.968 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.969 I 
 seconormal and arousing effects, including heightened sensory perception, increased sexual desire, and altered perception of self and others. [end of text]


0.02.305.040 I llama_perf_sampler_print:    sampling time =       4.00 ms /    27 runs   (    0.15 ms per token,  6746.63 tokens per second)
0.02.305.043 I llama_perf_context_print:        load time =     456.89 ms
0.02.305.044 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.305.046 I llama_perf_context_print:        eval time =    1830.94 ms /    26 runs   (   70.42 ms per token,    14.20 tokens per second)
0.02.305.046 I llama_perf_context_print:       total time =    1846.21 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.580 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.883 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.930 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.944 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.952 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.953 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.958 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.958 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.959 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.961 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.962 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.963 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.967 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.969 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.970 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.970 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.971 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.966 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.372 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.158 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.165 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.165 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.166 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.167 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.168 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.168 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.171 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.171 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.173 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.173 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.138.174 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.178 I llama_model_loader: - type  f32:   37 tensors
0.00.138.180 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.589 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.014 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.742 I llm_load_vocab: special tokens cache size = 5
0.00.270.180 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.197 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.198 I llm_load_print_meta: arch             = gemma
0.00.270.199 I llm_load_print_meta: vocab type       = SPM
0.00.270.199 I llm_load_print_meta: n_vocab          = 256000
0.00.270.200 I llm_load_print_meta: n_merges         = 0
0.00.270.200 I llm_load_print_meta: vocab_only       = 0
0.00.270.201 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.201 I llm_load_print_meta: n_embd           = 2048
0.00.270.201 I llm_load_print_meta: n_layer          = 18
0.00.270.213 I llm_load_print_meta: n_head           = 8
0.00.270.214 I llm_load_print_meta: n_head_kv        = 1
0.00.270.215 I llm_load_print_meta: n_rot            = 256
0.00.270.215 I llm_load_print_meta: n_swa            = 0
0.00.270.215 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.215 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.216 I llm_load_print_meta: n_gqa            = 8
0.00.270.217 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.218 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.219 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.220 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.221 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.221 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.222 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.223 I llm_load_print_meta: n_ff             = 16384
0.00.270.223 I llm_load_print_meta: n_expert         = 0
0.00.270.223 I llm_load_print_meta: n_expert_used    = 0
0.00.270.223 I llm_load_print_meta: causal attn      = 1
0.00.270.224 I llm_load_print_meta: pooling type     = 0
0.00.270.224 I llm_load_print_meta: rope type        = 2
0.00.270.224 I llm_load_print_meta: rope scaling     = linear
0.00.270.225 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.226 I llm_load_print_meta: freq_scale_train = 1
0.00.270.226 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.227 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.227 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.227 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.228 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.228 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.228 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.229 I llm_load_print_meta: model type       = 2B
0.00.270.229 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.230 I llm_load_print_meta: model params     = 2.51 B
0.00.270.231 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.231 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.232 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.232 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.232 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.233 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.233 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.233 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.234 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.235 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.235 I llm_load_print_meta: max token length = 93
0.00.270.256 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.234 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.340.240 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.345.228 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.234 I llama_new_context_with_model: n_batch    = 2048
0.00.345.234 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.235 I llama_new_context_with_model: flash_attn = 0
0.00.345.237 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.238 I llama_new_context_with_model: freq_scale = 1
0.00.374.443 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.459 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.550 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.409 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.417 I llama_new_context_with_model: graph nodes  = 601
0.00.375.418 I llama_new_context_with_model: graph splits = 1
0.00.375.420 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.589 I main: llama threadpool init, n_threads = 4
0.00.469.601 I 
0.00.469.677 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.680 I 
0.00.469.720 I sampler seed: 1729807739
0.00.469.730 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.733 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.469.733 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.734 I 
 increasities and controversies.

**Controversy 1: Sexual assault allegations against a former cast member**

- Accusations led to an investigation by the platform

0.02.870.969 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6446.57 tokens per second)
0.02.870.971 I llama_perf_context_print:        load time =     467.66 ms
0.02.870.973 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.870.974 I llama_perf_context_print:        eval time =    2382.96 ms /    32 runs   (   74.47 ms per token,    13.43 tokens per second)
0.02.870.975 I llama_perf_context_print:       total time =    2401.39 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.301s
user	0m37.703s
sys	0m9.326s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3901 (61a66f25)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32036.74 ms
main:    total time = 32036.74 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.603 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.001.929 I main: load the model and apply lora adapter, if any
0.00.022.046 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.093 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.101 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.107 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.110 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.113 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.114 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.115 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.115 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.116 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.120 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.121 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.122 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.122 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.492 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.194 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.036 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.043 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.043 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.044 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.045 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.046 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.046 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.050 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.053 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.054 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.054 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.145.055 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.059 I llama_model_loader: - type  f32:   37 tensors
0.00.145.062 I llama_model_loader: - type q4_K:  108 tensors
0.00.145.062 I llama_model_loader: - type q6_K:   19 tensors
0.00.218.845 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.145 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.876 I llm_load_vocab: special tokens cache size = 5
0.00.277.659 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.675 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.676 I llm_load_print_meta: arch             = gemma
0.00.277.677 I llm_load_print_meta: vocab type       = SPM
0.00.277.678 I llm_load_print_meta: n_vocab          = 256000
0.00.277.678 I llm_load_print_meta: n_merges         = 0
0.00.277.679 I llm_load_print_meta: vocab_only       = 0
0.00.277.679 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.680 I llm_load_print_meta: n_embd           = 2048
0.00.277.680 I llm_load_print_meta: n_layer          = 18
0.00.277.692 I llm_load_print_meta: n_head           = 8
0.00.277.693 I llm_load_print_meta: n_head_kv        = 1
0.00.277.693 I llm_load_print_meta: n_rot            = 256
0.00.277.693 I llm_load_print_meta: n_swa            = 0
0.00.277.694 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.694 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.695 I llm_load_print_meta: n_gqa            = 8
0.00.277.696 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.696 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.697 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.699 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.699 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.699 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.700 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.701 I llm_load_print_meta: n_ff             = 16384
0.00.277.701 I llm_load_print_meta: n_expert         = 0
0.00.277.701 I llm_load_print_meta: n_expert_used    = 0
0.00.277.701 I llm_load_print_meta: causal attn      = 1
0.00.277.702 I llm_load_print_meta: pooling type     = 0
0.00.277.702 I llm_load_print_meta: rope type        = 2
0.00.277.702 I llm_load_print_meta: rope scaling     = linear
0.00.277.703 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.704 I llm_load_print_meta: freq_scale_train = 1
0.00.277.704 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.705 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.705 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.705 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.705 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.706 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.706 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.706 I llm_load_print_meta: model type       = 2B
0.00.277.707 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.708 I llm_load_print_meta: model params     = 2.51 B
0.00.277.708 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.709 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.709 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.709 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.710 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.710 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.710 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.711 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.711 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.711 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.712 I llm_load_print_meta: max token length = 93
0.00.277.737 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.309 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.339.315 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.339.316 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.339.316 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.339.317 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.339.317 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.344.334 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.340 I llama_new_context_with_model: n_batch    = 2048
0.00.344.341 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.341 I llama_new_context_with_model: flash_attn = 0
0.00.344.344 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.345 I llama_new_context_with_model: freq_scale = 1
0.00.373.735 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.751 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.851 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.745 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.751 I llama_new_context_with_model: graph nodes  = 601
0.00.374.751 I llama_new_context_with_model: graph splits = 1
0.00.374.753 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.821 I main: llama threadpool init, n_threads = 4
0.00.456.834 I 
0.00.456.911 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.456.914 I 
0.00.456.950 I sampler seed: 116754698
0.00.456.959 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.962 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.456.963 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.963 I 
 squaRED with the following:

**1. A dazzling array of colors and shapes.**
**2. A kaleidoscope of emotions and experiences.**
**

0.02.072.616 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6956.16 tokens per second)
0.02.072.619 I llama_perf_context_print:        load time =     454.82 ms
0.02.072.620 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.072.621 I llama_perf_context_print:        eval time =    1597.75 ms /    32 runs   (   49.93 ms per token,    20.03 tokens per second)
0.02.072.622 I llama_perf_context_print:       total time =    1615.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3901 (61a66f25)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32085.34 ms
main:    total time = 32085.34 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.536 I build: 3901 (61a66f25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.021.563 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.575 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.582 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.583 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.586 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.587 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.587 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.588 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.588 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.589 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.593 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.593 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.594 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.595 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.596 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.809 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.871 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.663 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.669 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.670 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.671 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.671 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.672 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.673 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.675 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.677 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.681 I llama_model_loader: - type  f32:   37 tensors
0.00.131.683 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.684 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.539 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.368 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.104 I llm_load_vocab: special tokens cache size = 5
0.00.260.865 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.881 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.882 I llm_load_print_meta: arch             = gemma
0.00.260.882 I llm_load_print_meta: vocab type       = SPM
0.00.260.883 I llm_load_print_meta: n_vocab          = 256000
0.00.260.884 I llm_load_print_meta: n_merges         = 0
0.00.260.884 I llm_load_print_meta: vocab_only       = 0
0.00.260.885 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.885 I llm_load_print_meta: n_embd           = 2048
0.00.260.885 I llm_load_print_meta: n_layer          = 18
0.00.260.897 I llm_load_print_meta: n_head           = 8
0.00.260.898 I llm_load_print_meta: n_head_kv        = 1
0.00.260.899 I llm_load_print_meta: n_rot            = 256
0.00.260.899 I llm_load_print_meta: n_swa            = 0
0.00.260.899 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.899 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.900 I llm_load_print_meta: n_gqa            = 8
0.00.260.901 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.902 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.903 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.904 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.905 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.905 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.905 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.907 I llm_load_print_meta: n_ff             = 16384
0.00.260.907 I llm_load_print_meta: n_expert         = 0
0.00.260.907 I llm_load_print_meta: n_expert_used    = 0
0.00.260.908 I llm_load_print_meta: causal attn      = 1
0.00.260.908 I llm_load_print_meta: pooling type     = 0
0.00.260.908 I llm_load_print_meta: rope type        = 2
0.00.260.908 I llm_load_print_meta: rope scaling     = linear
0.00.260.910 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.910 I llm_load_print_meta: freq_scale_train = 1
0.00.260.910 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.911 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.911 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.911 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.911 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.912 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.912 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.912 I llm_load_print_meta: model type       = 2B
0.00.260.913 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.260.914 I llm_load_print_meta: model params     = 2.51 B
0.00.260.914 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.260.915 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.915 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.916 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.916 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.917 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.917 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.917 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.917 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.918 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.918 I llm_load_print_meta: max token length = 93
0.00.260.940 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.677 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.322.684 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.691 I llama_new_context_with_model: n_batch    = 2048
0.00.322.691 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.692 I llama_new_context_with_model: flash_attn = 0
0.00.322.694 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.695 I llama_new_context_with_model: freq_scale = 1
0.00.351.206 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.351.222 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.351.312 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.157 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.166 I llama_new_context_with_model: graph nodes  = 601
0.00.352.166 I llama_new_context_with_model: graph splits = 1
0.00.352.169 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.438 I main: llama threadpool init, n_threads = 4
0.00.433.450 I 
0.00.433.529 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.532 I 
0.00.433.568 I sampler seed: 1732015396
0.00.433.577 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.580 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.580 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.580 I 
 increasities?

I cannot answer this question as it contains sexually suggestive content that is not appropriate for me to provide. [end of text]


0.01.683.943 I llama_perf_sampler_print:    sampling time =       3.69 ms /    26 runs   (    0.14 ms per token,  7046.07 tokens per second)
0.01.683.945 I llama_perf_context_print:        load time =     431.50 ms
0.01.683.947 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.683.948 I llama_perf_context_print:        eval time =    1236.61 ms /    25 runs   (   49.46 ms per token,    20.22 tokens per second)
0.01.683.949 I llama_perf_context_print:       total time =    1250.51 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.671s
user	8m13.424s
sys	0m6.944s
