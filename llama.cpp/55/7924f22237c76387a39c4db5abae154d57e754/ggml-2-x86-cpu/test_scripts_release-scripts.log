+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.277 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.286 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.293 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.297 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.298 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.301 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.301 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.302 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.303 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.303 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.304 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.307 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.308 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.308 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.309 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.776 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.336 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.178 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.184 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.185 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.186 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.186 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.187 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.188 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.190 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.191 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.192 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.193 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.194 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.198 I llama_model_loader: - type  f32:   37 tensors
0.00.131.199 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.657 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.696 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.155 I llm_load_vocab: special tokens cache size = 5
0.00.258.578 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.593 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.593 I llm_load_print_meta: arch             = gemma
0.00.258.594 I llm_load_print_meta: vocab type       = SPM
0.00.258.594 I llm_load_print_meta: n_vocab          = 256000
0.00.258.595 I llm_load_print_meta: n_merges         = 0
0.00.258.595 I llm_load_print_meta: vocab_only       = 0
0.00.258.595 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.596 I llm_load_print_meta: n_embd           = 2048
0.00.258.596 I llm_load_print_meta: n_layer          = 18
0.00.258.607 I llm_load_print_meta: n_head           = 8
0.00.258.608 I llm_load_print_meta: n_head_kv        = 1
0.00.258.608 I llm_load_print_meta: n_rot            = 256
0.00.258.609 I llm_load_print_meta: n_swa            = 0
0.00.258.609 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.610 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.611 I llm_load_print_meta: n_gqa            = 8
0.00.258.612 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.613 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.614 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.616 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.616 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.616 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.617 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.618 I llm_load_print_meta: n_ff             = 16384
0.00.258.618 I llm_load_print_meta: n_expert         = 0
0.00.258.618 I llm_load_print_meta: n_expert_used    = 0
0.00.258.618 I llm_load_print_meta: causal attn      = 1
0.00.258.619 I llm_load_print_meta: pooling type     = 0
0.00.258.619 I llm_load_print_meta: rope type        = 2
0.00.258.620 I llm_load_print_meta: rope scaling     = linear
0.00.258.621 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.622 I llm_load_print_meta: freq_scale_train = 1
0.00.258.622 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.623 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.623 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.623 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.623 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.624 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.624 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.624 I llm_load_print_meta: model type       = 2B
0.00.258.625 I llm_load_print_meta: model ftype      = Q8_0
0.00.258.626 I llm_load_print_meta: model params     = 2.51 B
0.00.258.627 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.258.627 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.630 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.630 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.630 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.631 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.631 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.631 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.631 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.632 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.632 I llm_load_print_meta: max token length = 93
0.00.359.118 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.359.123 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.359.124 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.359.124 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.359.125 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.359.125 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.364.429 I llama_new_context_with_model: n_seq_max     = 1
0.00.364.435 I llama_new_context_with_model: n_ctx         = 4096
0.00.364.435 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.364.436 I llama_new_context_with_model: n_batch       = 2048
0.00.364.436 I llama_new_context_with_model: n_ubatch      = 512
0.00.364.437 I llama_new_context_with_model: flash_attn    = 0
0.00.364.438 I llama_new_context_with_model: freq_base     = 10000.0
0.00.364.439 I llama_new_context_with_model: freq_scale    = 1
0.00.364.441 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.381 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.396 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.486 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.739 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.746 I llama_new_context_with_model: graph nodes  = 601
0.00.379.747 I llama_new_context_with_model: graph splits = 1
0.00.379.748 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.483 I main: llama threadpool init, n_threads = 4
0.00.464.496 I 
0.00.464.573 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.576 I 
0.00.464.624 I sampler seed: 3755935909
0.00.464.634 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.638 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.639 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.639 I 
 increasities for those who have not experienced them.

I am unable to provide sexually suggestive or inappropriate content. [end of text]


0.02.071.573 I llama_perf_sampler_print:    sampling time =       3.47 ms /    24 runs   (    0.14 ms per token,  6918.42 tokens per second)
0.02.071.576 I llama_perf_context_print:        load time =     463.71 ms
0.02.071.578 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.071.581 I llama_perf_context_print:        eval time =    1593.50 ms /    23 runs   (   69.28 ms per token,    14.43 tokens per second)
0.02.071.582 I llama_perf_context_print:       total time =    1607.10 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.530 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.000.737 I main: load the model and apply lora adapter, if any
0.00.021.525 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.540 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.550 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.552 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.558 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.563 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.564 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.565 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.565 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.565 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.569 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.577 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.578 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.578 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.579 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.390 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.882 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.658 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.664 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.665 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.666 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.667 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.668 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.668 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.672 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.673 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.674 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.675 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.676 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.679 I llama_model_loader: - type  f32:   37 tensors
0.00.131.680 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.923 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.798 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.371 I llm_load_vocab: special tokens cache size = 5
0.00.263.960 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.975 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.976 I llm_load_print_meta: arch             = gemma
0.00.263.976 I llm_load_print_meta: vocab type       = SPM
0.00.263.977 I llm_load_print_meta: n_vocab          = 256000
0.00.263.977 I llm_load_print_meta: n_merges         = 0
0.00.263.978 I llm_load_print_meta: vocab_only       = 0
0.00.263.978 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.978 I llm_load_print_meta: n_embd           = 2048
0.00.263.979 I llm_load_print_meta: n_layer          = 18
0.00.263.989 I llm_load_print_meta: n_head           = 8
0.00.263.990 I llm_load_print_meta: n_head_kv        = 1
0.00.263.990 I llm_load_print_meta: n_rot            = 256
0.00.263.991 I llm_load_print_meta: n_swa            = 0
0.00.263.991 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.991 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.992 I llm_load_print_meta: n_gqa            = 8
0.00.263.993 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.994 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.995 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.997 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.997 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.997 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.998 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.998 I llm_load_print_meta: n_ff             = 16384
0.00.263.999 I llm_load_print_meta: n_expert         = 0
0.00.263.999 I llm_load_print_meta: n_expert_used    = 0
0.00.263.999 I llm_load_print_meta: causal attn      = 1
0.00.264.000 I llm_load_print_meta: pooling type     = 0
0.00.264.000 I llm_load_print_meta: rope type        = 2
0.00.264.000 I llm_load_print_meta: rope scaling     = linear
0.00.264.002 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.002 I llm_load_print_meta: freq_scale_train = 1
0.00.264.003 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.003 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.003 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.004 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.004 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.004 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.004 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.005 I llm_load_print_meta: model type       = 2B
0.00.264.005 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.006 I llm_load_print_meta: model params     = 2.51 B
0.00.264.007 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.007 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.007 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.008 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.008 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.008 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.009 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.009 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.009 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.010 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.010 I llm_load_print_meta: max token length = 93
0.00.358.761 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.364.012 I llama_new_context_with_model: n_seq_max     = 1
0.00.364.018 I llama_new_context_with_model: n_ctx         = 4096
0.00.364.018 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.364.019 I llama_new_context_with_model: n_batch       = 2048
0.00.364.019 I llama_new_context_with_model: n_ubatch      = 512
0.00.364.020 I llama_new_context_with_model: flash_attn    = 0
0.00.364.022 I llama_new_context_with_model: freq_base     = 10000.0
0.00.364.023 I llama_new_context_with_model: freq_scale    = 1
0.00.364.024 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.540 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.554 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.643 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.878 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.884 I llama_new_context_with_model: graph nodes  = 601
0.00.379.885 I llama_new_context_with_model: graph splits = 1
0.00.379.886 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.812 I main: llama threadpool init, n_threads = 4
0.00.461.828 I 
0.00.461.903 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.905 I 
0.00.461.948 I sampler seed: 3267854111
0.00.461.959 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.961 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.962 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.962 I 
 secon, 2023

**Title:** The Impact of Artificial Intelligence on the Future of Work

**Abstract:**

This paper explores the transformative potential

0.02.628.501 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6790.12 tokens per second)
0.02.628.504 I llama_perf_context_print:        load time =     461.06 ms
0.02.628.505 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.628.507 I llama_perf_context_print:        eval time =    2147.85 ms /    32 runs   (   67.12 ms per token,    14.90 tokens per second)
0.02.628.508 I llama_perf_context_print:       total time =    2166.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.539 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.767 I main: load the model and apply lora adapter, if any
0.00.021.308 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.316 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.324 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.329 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.334 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.338 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.340 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.341 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.342 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.343 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.343 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.349 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.350 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.351 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.352 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.353 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.082 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.825 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.677 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.684 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.684 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.685 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.686 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.687 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.690 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.691 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.692 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.693 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.696 I llama_model_loader: - type  f32:   37 tensors
0.00.131.698 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.194 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.873 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.401 I llm_load_vocab: special tokens cache size = 5
0.00.261.847 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.862 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.863 I llm_load_print_meta: arch             = gemma
0.00.261.863 I llm_load_print_meta: vocab type       = SPM
0.00.261.864 I llm_load_print_meta: n_vocab          = 256000
0.00.261.865 I llm_load_print_meta: n_merges         = 0
0.00.261.865 I llm_load_print_meta: vocab_only       = 0
0.00.261.865 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.865 I llm_load_print_meta: n_embd           = 2048
0.00.261.866 I llm_load_print_meta: n_layer          = 18
0.00.261.878 I llm_load_print_meta: n_head           = 8
0.00.261.879 I llm_load_print_meta: n_head_kv        = 1
0.00.261.880 I llm_load_print_meta: n_rot            = 256
0.00.261.880 I llm_load_print_meta: n_swa            = 0
0.00.261.880 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.880 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.881 I llm_load_print_meta: n_gqa            = 8
0.00.261.882 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.883 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.884 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.885 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.886 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.886 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.886 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.887 I llm_load_print_meta: n_ff             = 16384
0.00.261.888 I llm_load_print_meta: n_expert         = 0
0.00.261.888 I llm_load_print_meta: n_expert_used    = 0
0.00.261.889 I llm_load_print_meta: causal attn      = 1
0.00.261.889 I llm_load_print_meta: pooling type     = 0
0.00.261.889 I llm_load_print_meta: rope type        = 2
0.00.261.890 I llm_load_print_meta: rope scaling     = linear
0.00.261.891 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.892 I llm_load_print_meta: freq_scale_train = 1
0.00.261.892 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.892 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.893 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.893 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.893 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.894 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.894 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.894 I llm_load_print_meta: model type       = 2B
0.00.261.895 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.896 I llm_load_print_meta: model params     = 2.51 B
0.00.261.897 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.897 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.898 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.898 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.898 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.899 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.899 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.899 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.900 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.900 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.900 I llm_load_print_meta: max token length = 93
0.00.336.258 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.336.265 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.336.266 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.336.267 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.336.267 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.336.268 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.341.541 I llama_new_context_with_model: n_seq_max     = 1
0.00.341.547 I llama_new_context_with_model: n_ctx         = 4096
0.00.341.547 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.341.548 I llama_new_context_with_model: n_batch       = 2048
0.00.341.548 I llama_new_context_with_model: n_ubatch      = 512
0.00.341.549 I llama_new_context_with_model: flash_attn    = 0
0.00.341.551 I llama_new_context_with_model: freq_base     = 10000.0
0.00.341.552 I llama_new_context_with_model: freq_scale    = 1
0.00.341.553 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.656 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.671 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.764 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.025 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.029 I llama_new_context_with_model: graph nodes  = 601
0.00.357.029 I llama_new_context_with_model: graph splits = 1
0.00.357.031 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.893 I main: llama threadpool init, n_threads = 4
0.00.442.906 I 
0.00.442.990 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.994 I 
0.00.443.042 I sampler seed: 2540956206
0.00.443.052 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.055 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.443.056 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.056 I 
 increasities. [end of text]


0.00.726.213 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8431.70 tokens per second)
0.00.726.216 I llama_perf_context_print:        load time =     442.11 ms
0.00.726.217 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.726.219 I llama_perf_context_print:        eval time =     280.22 ms /     4 runs   (   70.05 ms per token,    14.27 tokens per second)
0.00.726.220 I llama_perf_context_print:       total time =     283.33 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.530 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.000.739 I main: load the model and apply lora adapter, if any
0.00.021.022 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.031 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.039 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.044 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.045 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.049 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.051 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.052 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.053 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.054 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.056 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.061 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.062 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.063 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.064 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.064 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.820 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.389 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.290 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.299 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.300 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.300 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.301 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.302 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.303 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.305 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.306 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.306 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.307 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.307 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.311 I llama_model_loader: - type  f32:   37 tensors
0.00.132.312 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.575 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.704 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.375 I llm_load_vocab: special tokens cache size = 5
0.00.267.550 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.570 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.571 I llm_load_print_meta: arch             = gemma
0.00.267.571 I llm_load_print_meta: vocab type       = SPM
0.00.267.572 I llm_load_print_meta: n_vocab          = 256000
0.00.267.573 I llm_load_print_meta: n_merges         = 0
0.00.267.573 I llm_load_print_meta: vocab_only       = 0
0.00.267.574 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.574 I llm_load_print_meta: n_embd           = 2048
0.00.267.574 I llm_load_print_meta: n_layer          = 18
0.00.267.586 I llm_load_print_meta: n_head           = 8
0.00.267.587 I llm_load_print_meta: n_head_kv        = 1
0.00.267.588 I llm_load_print_meta: n_rot            = 256
0.00.267.588 I llm_load_print_meta: n_swa            = 0
0.00.267.588 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.589 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.590 I llm_load_print_meta: n_gqa            = 8
0.00.267.591 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.592 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.593 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.594 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.594 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.594 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.595 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.596 I llm_load_print_meta: n_ff             = 16384
0.00.267.596 I llm_load_print_meta: n_expert         = 0
0.00.267.596 I llm_load_print_meta: n_expert_used    = 0
0.00.267.597 I llm_load_print_meta: causal attn      = 1
0.00.267.597 I llm_load_print_meta: pooling type     = 0
0.00.267.597 I llm_load_print_meta: rope type        = 2
0.00.267.598 I llm_load_print_meta: rope scaling     = linear
0.00.267.599 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.600 I llm_load_print_meta: freq_scale_train = 1
0.00.267.600 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.601 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.601 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.601 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.601 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.602 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.602 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.602 I llm_load_print_meta: model type       = 2B
0.00.267.603 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.604 I llm_load_print_meta: model params     = 2.51 B
0.00.267.605 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.605 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.606 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.606 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.606 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.607 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.607 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.607 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.608 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.608 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.608 I llm_load_print_meta: max token length = 93
0.00.338.706 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.338.713 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.344.042 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.048 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.049 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.049 I llama_new_context_with_model: n_batch       = 2048
0.00.344.050 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.050 I llama_new_context_with_model: flash_attn    = 0
0.00.344.053 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.053 I llama_new_context_with_model: freq_scale    = 1
0.00.344.054 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.559 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.576 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.666 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.052 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.058 I llama_new_context_with_model: graph nodes  = 601
0.00.360.059 I llama_new_context_with_model: graph splits = 1
0.00.360.060 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.387 I main: llama threadpool init, n_threads = 4
0.00.448.402 I 
0.00.448.485 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.489 I 
0.00.448.540 I sampler seed: 2601080342
0.00.448.551 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.554 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.448.562 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.565 I 
 maneuvled by an angry spirit.

**What is the meaning of this passage?**

The passage depicts a scene of intense anger and frustration, where

0.02.839.349 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6765.07 tokens per second)
0.02.839.351 I llama_perf_context_print:        load time =     447.63 ms
0.02.839.352 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.839.354 I llama_perf_context_print:        eval time =    2372.14 ms /    32 runs   (   74.13 ms per token,    13.49 tokens per second)
0.02.839.354 I llama_perf_context_print:       total time =    2390.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.708s
user	0m28.686s
sys	0m9.225s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4127 (557924f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40383.35 ms
main:    total time = 40383.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.756 I main: load the model and apply lora adapter, if any
0.00.021.496 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.506 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.515 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.520 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.523 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.527 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.527 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.528 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.529 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.529 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.530 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.533 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.534 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.535 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.535 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.535 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.065 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.456 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.277 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.283 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.283 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.284 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.285 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.286 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.286 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.289 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.289 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.290 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.291 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.292 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.294 I llama_model_loader: - type  f32:   37 tensors
0.00.131.295 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.297 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.444 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.909 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.519 I llm_load_vocab: special tokens cache size = 5
0.00.266.200 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.218 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.219 I llm_load_print_meta: arch             = gemma
0.00.266.219 I llm_load_print_meta: vocab type       = SPM
0.00.266.220 I llm_load_print_meta: n_vocab          = 256000
0.00.266.220 I llm_load_print_meta: n_merges         = 0
0.00.266.220 I llm_load_print_meta: vocab_only       = 0
0.00.266.221 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.221 I llm_load_print_meta: n_embd           = 2048
0.00.266.221 I llm_load_print_meta: n_layer          = 18
0.00.266.233 I llm_load_print_meta: n_head           = 8
0.00.266.234 I llm_load_print_meta: n_head_kv        = 1
0.00.266.234 I llm_load_print_meta: n_rot            = 256
0.00.266.235 I llm_load_print_meta: n_swa            = 0
0.00.266.235 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.235 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.236 I llm_load_print_meta: n_gqa            = 8
0.00.266.237 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.238 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.239 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.241 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.241 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.241 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.242 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.243 I llm_load_print_meta: n_ff             = 16384
0.00.266.243 I llm_load_print_meta: n_expert         = 0
0.00.266.243 I llm_load_print_meta: n_expert_used    = 0
0.00.266.244 I llm_load_print_meta: causal attn      = 1
0.00.266.245 I llm_load_print_meta: pooling type     = 0
0.00.266.245 I llm_load_print_meta: rope type        = 2
0.00.266.245 I llm_load_print_meta: rope scaling     = linear
0.00.266.247 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.247 I llm_load_print_meta: freq_scale_train = 1
0.00.266.248 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.248 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.249 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.249 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.249 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.250 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.250 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.250 I llm_load_print_meta: model type       = 2B
0.00.266.251 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.252 I llm_load_print_meta: model params     = 2.51 B
0.00.266.253 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.253 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.254 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.255 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.255 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.255 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.256 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.256 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.256 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.257 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.257 I llm_load_print_meta: max token length = 93
0.00.326.273 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.278 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.279 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.279 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.280 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.281 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.331.500 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.507 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.507 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.507 I llama_new_context_with_model: n_batch       = 2048
0.00.331.508 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.508 I llama_new_context_with_model: flash_attn    = 0
0.00.331.510 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.511 I llama_new_context_with_model: freq_scale    = 1
0.00.331.512 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.993 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.007 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.104 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.402 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.347.409 I llama_new_context_with_model: graph nodes  = 601
0.00.347.409 I llama_new_context_with_model: graph splits = 1
0.00.347.411 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.141 I main: llama threadpool init, n_threads = 4
0.00.422.154 I 
0.00.422.225 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.229 I 
0.00.422.273 I sampler seed: 1225045707
0.00.422.285 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.288 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.289 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.289 I 
 fufillingly in my arms. 

I yearn for the warmth of your embrace, a haven of safety and tranquility.

Your touch sends shivers down

0.01.983.829 I llama_perf_sampler_print:    sampling time =       5.36 ms /    33 runs   (    0.16 ms per token,  6152.13 tokens per second)
0.01.983.832 I llama_perf_context_print:        load time =     421.37 ms
0.01.983.834 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.983.836 I llama_perf_context_print:        eval time =    1542.64 ms /    32 runs   (   48.21 ms per token,    20.74 tokens per second)
0.01.983.837 I llama_perf_context_print:       total time =    1561.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4127 (557924f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40159.79 ms
main:    total time = 40159.79 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.572 I build: 4127 (557924f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.798 I main: load the model and apply lora adapter, if any
0.00.021.753 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.773 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.781 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.782 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.787 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.788 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.790 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.791 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.791 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.792 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.799 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.800 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.801 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.802 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.803 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.531 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.740 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.582 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.589 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.590 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.591 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.592 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.593 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.594 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.597 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.597 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.602 I llama_model_loader: - type  f32:   37 tensors
0.00.132.603 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.604 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.914 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.953 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.455 I llm_load_vocab: special tokens cache size = 5
0.00.263.044 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.058 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.059 I llm_load_print_meta: arch             = gemma
0.00.263.059 I llm_load_print_meta: vocab type       = SPM
0.00.263.060 I llm_load_print_meta: n_vocab          = 256000
0.00.263.060 I llm_load_print_meta: n_merges         = 0
0.00.263.060 I llm_load_print_meta: vocab_only       = 0
0.00.263.061 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.061 I llm_load_print_meta: n_embd           = 2048
0.00.263.061 I llm_load_print_meta: n_layer          = 18
0.00.263.072 I llm_load_print_meta: n_head           = 8
0.00.263.073 I llm_load_print_meta: n_head_kv        = 1
0.00.263.073 I llm_load_print_meta: n_rot            = 256
0.00.263.073 I llm_load_print_meta: n_swa            = 0
0.00.263.074 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.074 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.075 I llm_load_print_meta: n_gqa            = 8
0.00.263.076 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.077 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.078 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.079 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.079 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.080 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.080 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.081 I llm_load_print_meta: n_ff             = 16384
0.00.263.081 I llm_load_print_meta: n_expert         = 0
0.00.263.081 I llm_load_print_meta: n_expert_used    = 0
0.00.263.082 I llm_load_print_meta: causal attn      = 1
0.00.263.082 I llm_load_print_meta: pooling type     = 0
0.00.263.083 I llm_load_print_meta: rope type        = 2
0.00.263.083 I llm_load_print_meta: rope scaling     = linear
0.00.263.084 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.085 I llm_load_print_meta: freq_scale_train = 1
0.00.263.085 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.086 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.086 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.086 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.086 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.087 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.087 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.088 I llm_load_print_meta: model type       = 2B
0.00.263.088 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.089 I llm_load_print_meta: model params     = 2.51 B
0.00.263.090 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.090 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.091 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.091 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.091 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.092 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.092 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.092 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.093 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.093 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.093 I llm_load_print_meta: max token length = 93
0.00.318.628 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.324.000 I llama_new_context_with_model: n_seq_max     = 1
0.00.324.006 I llama_new_context_with_model: n_ctx         = 4096
0.00.324.006 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.324.007 I llama_new_context_with_model: n_batch       = 2048
0.00.324.007 I llama_new_context_with_model: n_ubatch      = 512
0.00.324.008 I llama_new_context_with_model: flash_attn    = 0
0.00.324.010 I llama_new_context_with_model: freq_base     = 10000.0
0.00.324.011 I llama_new_context_with_model: freq_scale    = 1
0.00.324.012 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.338.442 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.338.455 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.338.551 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.831 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.339.838 I llama_new_context_with_model: graph nodes  = 601
0.00.339.839 I llama_new_context_with_model: graph splits = 1
0.00.339.840 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.413.913 I main: llama threadpool init, n_threads = 4
0.00.413.926 I 
0.00.414.014 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.414.018 I 
0.00.414.071 I sampler seed: 66614251
0.00.414.084 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.414.092 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.414.093 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.414.093 I 
 increasities, and other forms of flattery to gain advantage in a negotiation.

**Answer:**

**It is unethical and unprofessional to resort to flattery and deception

0.01.958.634 I llama_perf_sampler_print:    sampling time =       5.37 ms /    33 runs   (    0.16 ms per token,  6145.25 tokens per second)
0.01.958.637 I llama_perf_context_print:        load time =     413.09 ms
0.01.958.638 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.958.640 I llama_perf_context_print:        eval time =    1525.05 ms /    32 runs   (   47.66 ms per token,    20.98 tokens per second)
0.01.958.640 I llama_perf_context_print:       total time =    1544.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.292s
user	10m23.475s
sys	0m6.879s
