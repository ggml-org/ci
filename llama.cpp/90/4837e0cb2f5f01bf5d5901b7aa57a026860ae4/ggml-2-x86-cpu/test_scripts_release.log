+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.574 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.899 I main: load the model and apply lora adapter, if any
0.00.022.454 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.510 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.521 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.530 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.536 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.540 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.541 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.541 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.542 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.542 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.543 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.547 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.547 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.548 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.549 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.558 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.145 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.377 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.235 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.241 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.242 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.243 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.243 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.244 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.245 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.247 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.249 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.250 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.251 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.255 I llama_model_loader: - type  f32:   37 tensors
0.00.133.258 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.579 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.373 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.091 I llm_load_vocab: special tokens cache size = 5
0.00.233.778 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.791 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.792 I llm_load_print_meta: arch             = gemma
0.00.233.792 I llm_load_print_meta: vocab type       = SPM
0.00.233.793 I llm_load_print_meta: n_vocab          = 256000
0.00.233.793 I llm_load_print_meta: n_merges         = 0
0.00.233.794 I llm_load_print_meta: vocab_only       = 0
0.00.233.794 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.795 I llm_load_print_meta: n_embd           = 2048
0.00.233.795 I llm_load_print_meta: n_layer          = 18
0.00.233.807 I llm_load_print_meta: n_head           = 8
0.00.233.808 I llm_load_print_meta: n_head_kv        = 1
0.00.233.808 I llm_load_print_meta: n_rot            = 256
0.00.233.809 I llm_load_print_meta: n_swa            = 0
0.00.233.809 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.809 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.810 I llm_load_print_meta: n_gqa            = 8
0.00.233.811 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.812 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.813 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.814 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.814 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.815 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.815 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.816 I llm_load_print_meta: n_ff             = 16384
0.00.233.816 I llm_load_print_meta: n_expert         = 0
0.00.233.817 I llm_load_print_meta: n_expert_used    = 0
0.00.233.817 I llm_load_print_meta: causal attn      = 1
0.00.233.817 I llm_load_print_meta: pooling type     = 0
0.00.233.817 I llm_load_print_meta: rope type        = 2
0.00.233.818 I llm_load_print_meta: rope scaling     = linear
0.00.233.819 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.820 I llm_load_print_meta: freq_scale_train = 1
0.00.233.820 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.820 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.820 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.821 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.821 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.821 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.822 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.823 I llm_load_print_meta: model type       = 2B
0.00.233.823 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.824 I llm_load_print_meta: model params     = 2.51 B
0.00.233.825 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.825 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.826 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.826 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.827 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.827 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.827 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.848 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.849 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.850 I llm_load_print_meta: max token length = 93
0.00.233.867 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.332.052 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.332.059 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.332.060 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.332.061 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.332.061 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.332.062 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.337.187 I llama_new_context_with_model: n_ctx      = 8192
0.00.337.193 I llama_new_context_with_model: n_batch    = 2048
0.00.337.193 I llama_new_context_with_model: n_ubatch   = 512
0.00.337.194 I llama_new_context_with_model: flash_attn = 0
0.00.337.196 I llama_new_context_with_model: freq_base  = 10000.0
0.00.337.197 I llama_new_context_with_model: freq_scale = 1
0.00.366.074 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.366.088 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.366.184 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.063 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.367.072 I llama_new_context_with_model: graph nodes  = 601
0.00.367.072 I llama_new_context_with_model: graph splits = 1
0.00.367.074 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.843 I main: llama threadpool init, n_threads = 4
0.00.457.854 I 
0.00.457.927 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.930 I 
0.00.457.968 I sampler seed: 2115713684
0.00.457.978 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.981 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.457.981 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.981 I 
 increadibly. [end of text]


0.00.740.226 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8103.73 tokens per second)
0.00.740.229 I llama_perf_context_print:        load time =     455.93 ms
0.00.740.230 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.740.231 I llama_perf_context_print:        eval time =     279.32 ms /     4 runs   (   69.83 ms per token,    14.32 tokens per second)
0.00.740.232 I llama_perf_context_print:       total time =     282.39 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.580 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.022.026 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.037 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.044 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.045 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.049 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.050 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.051 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.051 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.051 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.052 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.057 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.058 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.058 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.059 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.059 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.667 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.102 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.991 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.998 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.999 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.000 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.000 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.001 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.002 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.005 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.006 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.007 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.007 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.009 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.012 I llama_model_loader: - type  f32:   37 tensors
0.00.133.015 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.233 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.797 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.485 I llm_load_vocab: special tokens cache size = 5
0.00.230.846 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.860 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.861 I llm_load_print_meta: arch             = gemma
0.00.230.862 I llm_load_print_meta: vocab type       = SPM
0.00.230.863 I llm_load_print_meta: n_vocab          = 256000
0.00.230.863 I llm_load_print_meta: n_merges         = 0
0.00.230.863 I llm_load_print_meta: vocab_only       = 0
0.00.230.864 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.864 I llm_load_print_meta: n_embd           = 2048
0.00.230.864 I llm_load_print_meta: n_layer          = 18
0.00.230.877 I llm_load_print_meta: n_head           = 8
0.00.230.877 I llm_load_print_meta: n_head_kv        = 1
0.00.230.878 I llm_load_print_meta: n_rot            = 256
0.00.230.878 I llm_load_print_meta: n_swa            = 0
0.00.230.878 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.879 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.880 I llm_load_print_meta: n_gqa            = 8
0.00.230.881 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.882 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.883 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.885 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.885 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.886 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.886 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.887 I llm_load_print_meta: n_ff             = 16384
0.00.230.887 I llm_load_print_meta: n_expert         = 0
0.00.230.888 I llm_load_print_meta: n_expert_used    = 0
0.00.230.888 I llm_load_print_meta: causal attn      = 1
0.00.230.888 I llm_load_print_meta: pooling type     = 0
0.00.230.888 I llm_load_print_meta: rope type        = 2
0.00.230.889 I llm_load_print_meta: rope scaling     = linear
0.00.230.890 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.891 I llm_load_print_meta: freq_scale_train = 1
0.00.230.891 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.891 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.891 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.892 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.892 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.893 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.893 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.893 I llm_load_print_meta: model type       = 2B
0.00.230.894 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.895 I llm_load_print_meta: model params     = 2.51 B
0.00.230.896 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.896 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.896 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.897 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.897 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.897 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.898 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.898 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.898 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.899 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.899 I llm_load_print_meta: max token length = 93
0.00.230.916 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.727 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.329.726 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.732 I llama_new_context_with_model: n_batch    = 2048
0.00.329.732 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.733 I llama_new_context_with_model: flash_attn = 0
0.00.329.734 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.735 I llama_new_context_with_model: freq_scale = 1
0.00.358.828 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.843 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.933 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.774 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.781 I llama_new_context_with_model: graph nodes  = 601
0.00.359.781 I llama_new_context_with_model: graph splits = 1
0.00.359.783 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.451 I main: llama threadpool init, n_threads = 4
0.00.446.462 I 
0.00.446.534 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.537 I 
0.00.446.565 I sampler seed: 2045767796
0.00.446.575 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.579 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.446.579 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.579 I 
 increamically and answer the question.

What is the difference between a physical scientist and an astrophysicist?

**Answer:**

Physical scientists are interested in

0.02.622.115 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6550.22 tokens per second)
0.02.622.118 I llama_perf_context_print:        load time =     444.55 ms
0.02.622.119 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.622.120 I llama_perf_context_print:        eval time =    2156.26 ms /    32 runs   (   67.38 ms per token,    14.84 tokens per second)
0.02.622.121 I llama_perf_context_print:       total time =    2175.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.549 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.023.310 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.359 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.366 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.372 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.373 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.376 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.377 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.378 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.378 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.379 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.379 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.384 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.384 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.385 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.385 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.386 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.997 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.360 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.228 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.234 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.235 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.235 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.236 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.237 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.238 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.241 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.242 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.243 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.243 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.138.244 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.248 I llama_model_loader: - type  f32:   37 tensors
0.00.138.251 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.236 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.221.643 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.222.324 I llm_load_vocab: special tokens cache size = 5
0.00.240.699 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.712 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.712 I llm_load_print_meta: arch             = gemma
0.00.240.713 I llm_load_print_meta: vocab type       = SPM
0.00.240.714 I llm_load_print_meta: n_vocab          = 256000
0.00.240.714 I llm_load_print_meta: n_merges         = 0
0.00.240.715 I llm_load_print_meta: vocab_only       = 0
0.00.240.715 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.715 I llm_load_print_meta: n_embd           = 2048
0.00.240.716 I llm_load_print_meta: n_layer          = 18
0.00.240.727 I llm_load_print_meta: n_head           = 8
0.00.240.728 I llm_load_print_meta: n_head_kv        = 1
0.00.240.729 I llm_load_print_meta: n_rot            = 256
0.00.240.729 I llm_load_print_meta: n_swa            = 0
0.00.240.729 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.729 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.730 I llm_load_print_meta: n_gqa            = 8
0.00.240.731 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.732 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.733 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.734 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.734 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.735 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.735 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.736 I llm_load_print_meta: n_ff             = 16384
0.00.240.736 I llm_load_print_meta: n_expert         = 0
0.00.240.737 I llm_load_print_meta: n_expert_used    = 0
0.00.240.737 I llm_load_print_meta: causal attn      = 1
0.00.240.737 I llm_load_print_meta: pooling type     = 0
0.00.240.737 I llm_load_print_meta: rope type        = 2
0.00.240.738 I llm_load_print_meta: rope scaling     = linear
0.00.240.739 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.739 I llm_load_print_meta: freq_scale_train = 1
0.00.240.740 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.740 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.740 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.740 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.741 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.741 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.741 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.742 I llm_load_print_meta: model type       = 2B
0.00.240.742 I llm_load_print_meta: model ftype      = Q8_0
0.00.240.743 I llm_load_print_meta: model params     = 2.51 B
0.00.240.744 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.240.744 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.745 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.745 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.745 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.746 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.746 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.746 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.747 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.747 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.748 I llm_load_print_meta: max token length = 93
0.00.240.772 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.179 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.317.186 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.187 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.317.187 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.317.188 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.188 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.322.217 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.224 I llama_new_context_with_model: n_batch    = 2048
0.00.322.225 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.226 I llama_new_context_with_model: flash_attn = 0
0.00.322.228 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.229 I llama_new_context_with_model: freq_scale = 1
0.00.350.654 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.350.670 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.350.759 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.646 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.351.653 I llama_new_context_with_model: graph nodes  = 601
0.00.351.654 I llama_new_context_with_model: graph splits = 1
0.00.351.656 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.709 I main: llama threadpool init, n_threads = 4
0.00.444.722 I 
0.00.444.817 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.821 I 
0.00.444.862 I sampler seed: 2080326098
0.00.444.871 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.874 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.444.875 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.875 I 
 increadibly well with my training.

I am curious to know if you have any experience with using this training program and if you can share your insights on its

0.02.717.410 I llama_perf_sampler_print:    sampling time =       5.10 ms /    33 runs   (    0.15 ms per token,  6469.32 tokens per second)
0.02.717.413 I llama_perf_context_print:        load time =     442.84 ms
0.02.717.415 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.717.417 I llama_perf_context_print:        eval time =    2254.52 ms /    32 runs   (   70.45 ms per token,    14.19 tokens per second)
0.02.717.418 I llama_perf_context_print:       total time =    2272.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.580 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.001.893 I main: load the model and apply lora adapter, if any
0.00.021.744 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.790 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.797 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.802 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.803 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.807 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.808 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.808 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.809 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.809 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.810 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.815 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.815 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.820 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.821 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.822 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.844 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.301 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.433 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.439 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.439 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.440 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.441 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.442 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.442 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.445 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.446 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.446 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.447 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.448 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.452 I llama_model_loader: - type  f32:   37 tensors
0.00.133.454 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.726 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.348 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.099 I llm_load_vocab: special tokens cache size = 5
0.00.233.479 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.494 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.495 I llm_load_print_meta: arch             = gemma
0.00.233.495 I llm_load_print_meta: vocab type       = SPM
0.00.233.496 I llm_load_print_meta: n_vocab          = 256000
0.00.233.496 I llm_load_print_meta: n_merges         = 0
0.00.233.497 I llm_load_print_meta: vocab_only       = 0
0.00.233.497 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.498 I llm_load_print_meta: n_embd           = 2048
0.00.233.498 I llm_load_print_meta: n_layer          = 18
0.00.233.511 I llm_load_print_meta: n_head           = 8
0.00.233.512 I llm_load_print_meta: n_head_kv        = 1
0.00.233.512 I llm_load_print_meta: n_rot            = 256
0.00.233.513 I llm_load_print_meta: n_swa            = 0
0.00.233.513 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.513 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.514 I llm_load_print_meta: n_gqa            = 8
0.00.233.515 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.516 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.517 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.518 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.519 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.519 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.520 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.521 I llm_load_print_meta: n_ff             = 16384
0.00.233.521 I llm_load_print_meta: n_expert         = 0
0.00.233.521 I llm_load_print_meta: n_expert_used    = 0
0.00.233.521 I llm_load_print_meta: causal attn      = 1
0.00.233.522 I llm_load_print_meta: pooling type     = 0
0.00.233.522 I llm_load_print_meta: rope type        = 2
0.00.233.522 I llm_load_print_meta: rope scaling     = linear
0.00.233.524 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.525 I llm_load_print_meta: freq_scale_train = 1
0.00.233.525 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.525 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.525 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.526 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.526 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.526 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.526 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.527 I llm_load_print_meta: model type       = 2B
0.00.233.527 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.528 I llm_load_print_meta: model params     = 2.51 B
0.00.233.529 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.529 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.530 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.530 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.530 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.530 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.531 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.531 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.531 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.532 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.532 I llm_load_print_meta: max token length = 93
0.00.233.557 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.313 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.304.321 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.309.239 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.246 I llama_new_context_with_model: n_batch    = 2048
0.00.309.246 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.247 I llama_new_context_with_model: flash_attn = 0
0.00.309.249 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.250 I llama_new_context_with_model: freq_scale = 1
0.00.338.762 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.777 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.868 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.718 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.726 I llama_new_context_with_model: graph nodes  = 601
0.00.339.726 I llama_new_context_with_model: graph splits = 1
0.00.339.728 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.366 I main: llama threadpool init, n_threads = 4
0.00.433.380 I 
0.00.433.476 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.480 I 
0.00.433.509 I sampler seed: 104287033
0.00.433.518 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.521 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.522 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.522 I 
 increamental. [end of text]


0.00.739.278 I llama_perf_sampler_print:    sampling time =       0.66 ms /     5 runs   (    0.13 ms per token,  7541.48 tokens per second)
0.00.739.281 I llama_perf_context_print:        load time =     431.46 ms
0.00.739.282 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.739.285 I llama_perf_context_print:        eval time =     302.74 ms /     4 runs   (   75.69 ms per token,    13.21 tokens per second)
0.00.739.285 I llama_perf_context_print:       total time =     305.92 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.757s
user	0m22.897s
sys	0m9.468s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3822 (904837e0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32290.65 ms
main:    total time = 32290.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.551 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.873 I main: load the model and apply lora adapter, if any
0.00.024.354 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.427 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.442 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.448 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.453 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.458 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.463 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.464 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.465 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.466 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.467 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.472 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.473 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.474 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.476 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.477 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.052.450 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.467 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.335 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.341 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.342 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.343 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.344 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.345 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.347 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.351 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.351 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.352 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.353 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.139.354 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.358 I llama_model_loader: - type  f32:   37 tensors
0.00.139.361 I llama_model_loader: - type q4_K:  108 tensors
0.00.139.362 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.076 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.226.586 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.227.356 I llm_load_vocab: special tokens cache size = 5
0.00.245.675 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.245.694 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.245.695 I llm_load_print_meta: arch             = gemma
0.00.245.695 I llm_load_print_meta: vocab type       = SPM
0.00.245.696 I llm_load_print_meta: n_vocab          = 256000
0.00.245.696 I llm_load_print_meta: n_merges         = 0
0.00.245.697 I llm_load_print_meta: vocab_only       = 0
0.00.245.697 I llm_load_print_meta: n_ctx_train      = 8192
0.00.245.697 I llm_load_print_meta: n_embd           = 2048
0.00.245.698 I llm_load_print_meta: n_layer          = 18
0.00.245.711 I llm_load_print_meta: n_head           = 8
0.00.245.712 I llm_load_print_meta: n_head_kv        = 1
0.00.245.713 I llm_load_print_meta: n_rot            = 256
0.00.245.713 I llm_load_print_meta: n_swa            = 0
0.00.245.713 I llm_load_print_meta: n_embd_head_k    = 256
0.00.245.714 I llm_load_print_meta: n_embd_head_v    = 256
0.00.245.715 I llm_load_print_meta: n_gqa            = 8
0.00.245.716 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.245.717 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.245.717 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.245.718 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.245.719 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.245.719 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.245.720 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.245.721 I llm_load_print_meta: n_ff             = 16384
0.00.245.721 I llm_load_print_meta: n_expert         = 0
0.00.245.721 I llm_load_print_meta: n_expert_used    = 0
0.00.245.722 I llm_load_print_meta: causal attn      = 1
0.00.245.722 I llm_load_print_meta: pooling type     = 0
0.00.245.722 I llm_load_print_meta: rope type        = 2
0.00.245.722 I llm_load_print_meta: rope scaling     = linear
0.00.245.723 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.245.724 I llm_load_print_meta: freq_scale_train = 1
0.00.245.724 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.245.725 I llm_load_print_meta: rope_finetuned   = unknown
0.00.245.725 I llm_load_print_meta: ssm_d_conv       = 0
0.00.245.725 I llm_load_print_meta: ssm_d_inner      = 0
0.00.245.725 I llm_load_print_meta: ssm_d_state      = 0
0.00.245.726 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.245.726 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.245.727 I llm_load_print_meta: model type       = 2B
0.00.245.727 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.245.728 I llm_load_print_meta: model params     = 2.51 B
0.00.245.728 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.245.729 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.245.729 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.245.730 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.245.730 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.245.730 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.245.730 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.245.731 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.245.731 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.245.732 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.245.732 I llm_load_print_meta: max token length = 93
0.00.245.751 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.805 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.304.814 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.304.815 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.304.815 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.304.816 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.304.816 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.309.974 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.982 I llama_new_context_with_model: n_batch    = 2048
0.00.309.983 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.984 I llama_new_context_with_model: flash_attn = 0
0.00.309.988 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.989 I llama_new_context_with_model: freq_scale = 1
0.00.340.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.442 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.532 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.392 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.399 I llama_new_context_with_model: graph nodes  = 601
0.00.341.399 I llama_new_context_with_model: graph splits = 1
0.00.341.401 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.905 I main: llama threadpool init, n_threads = 4
0.00.422.917 I 
0.00.422.992 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.996 I 
0.00.423.035 I sampler seed: 2878059365
0.00.423.045 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.049 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.423.049 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.050 I 
 seconally.

I am unable to generate a response because the provided context does not contain any information regarding an ability to generate responses. [end of text]


0.01.806.074 I llama_perf_sampler_print:    sampling time =       4.14 ms /    29 runs   (    0.14 ms per token,  7008.22 tokens per second)
0.01.806.076 I llama_perf_context_print:        load time =     421.01 ms
0.01.806.077 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.806.078 I llama_perf_context_print:        eval time =    1367.43 ms /    28 runs   (   48.84 ms per token,    20.48 tokens per second)
0.01.806.079 I llama_perf_context_print:       total time =    1383.18 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3822 (904837e0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32032.11 ms
main:    total time = 32032.11 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.544 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.857 I main: load the model and apply lora adapter, if any
0.00.021.865 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.877 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.883 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.884 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.888 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.889 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.892 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.893 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.893 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.894 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.897 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.898 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.899 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.899 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.900 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.462 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.468 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.326 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.332 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.333 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.334 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.335 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.337 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.338 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.341 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.341 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.346 I llama_model_loader: - type  f32:   37 tensors
0.00.132.348 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.349 I llama_model_loader: - type q6_K:   19 tensors
0.00.197.240 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.212 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.947 I llm_load_vocab: special tokens cache size = 5
0.00.230.341 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.355 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.356 I llm_load_print_meta: arch             = gemma
0.00.230.356 I llm_load_print_meta: vocab type       = SPM
0.00.230.357 I llm_load_print_meta: n_vocab          = 256000
0.00.230.357 I llm_load_print_meta: n_merges         = 0
0.00.230.357 I llm_load_print_meta: vocab_only       = 0
0.00.230.358 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.358 I llm_load_print_meta: n_embd           = 2048
0.00.230.358 I llm_load_print_meta: n_layer          = 18
0.00.230.370 I llm_load_print_meta: n_head           = 8
0.00.230.370 I llm_load_print_meta: n_head_kv        = 1
0.00.230.371 I llm_load_print_meta: n_rot            = 256
0.00.230.371 I llm_load_print_meta: n_swa            = 0
0.00.230.371 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.372 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.373 I llm_load_print_meta: n_gqa            = 8
0.00.230.373 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.375 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.376 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.377 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.377 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.377 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.378 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.379 I llm_load_print_meta: n_ff             = 16384
0.00.230.379 I llm_load_print_meta: n_expert         = 0
0.00.230.379 I llm_load_print_meta: n_expert_used    = 0
0.00.230.379 I llm_load_print_meta: causal attn      = 1
0.00.230.380 I llm_load_print_meta: pooling type     = 0
0.00.230.380 I llm_load_print_meta: rope type        = 2
0.00.230.380 I llm_load_print_meta: rope scaling     = linear
0.00.230.382 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.382 I llm_load_print_meta: freq_scale_train = 1
0.00.230.383 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.383 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.383 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.384 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.384 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.384 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.384 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.385 I llm_load_print_meta: model type       = 2B
0.00.230.386 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.386 I llm_load_print_meta: model params     = 2.51 B
0.00.230.387 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.387 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.388 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.388 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.389 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.389 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.389 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.389 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.390 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.390 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.390 I llm_load_print_meta: max token length = 93
0.00.230.407 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.286.955 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.291.873 I llama_new_context_with_model: n_ctx      = 8192
0.00.291.880 I llama_new_context_with_model: n_batch    = 2048
0.00.291.880 I llama_new_context_with_model: n_ubatch   = 512
0.00.291.881 I llama_new_context_with_model: flash_attn = 0
0.00.291.883 I llama_new_context_with_model: freq_base  = 10000.0
0.00.291.884 I llama_new_context_with_model: freq_scale = 1
0.00.320.737 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.320.752 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.320.839 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.321.666 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.321.675 I llama_new_context_with_model: graph nodes  = 601
0.00.321.675 I llama_new_context_with_model: graph splits = 1
0.00.321.677 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.402.422 I main: llama threadpool init, n_threads = 4
0.00.402.433 I 
0.00.402.507 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.402.510 I 
0.00.402.538 I sampler seed: 2748816400
0.00.402.547 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.402.551 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.402.552 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.402.552 I 
 seconded!

I'm not sure what you mean. Can you please provide more context? [end of text]


0.01.441.165 I llama_perf_sampler_print:    sampling time =       3.11 ms /    22 runs   (    0.14 ms per token,  7078.51 tokens per second)
0.01.441.168 I llama_perf_context_print:        load time =     400.55 ms
0.01.441.170 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.441.171 I llama_perf_context_print:        eval time =    1026.76 ms /    21 runs   (   48.89 ms per token,    20.45 tokens per second)
0.01.441.172 I llama_perf_context_print:       total time =    1038.75 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.468s
user	8m11.598s
sys	0m6.927s
