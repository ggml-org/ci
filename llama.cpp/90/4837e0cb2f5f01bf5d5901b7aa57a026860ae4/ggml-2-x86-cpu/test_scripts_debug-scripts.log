+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.610 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.817 I main: llama backend init
0.00.002.752 I main: load the model and apply lora adapter, if any
0.00.024.854 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.049 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.139 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.151 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.152 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.157 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.160 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.161 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.162 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.163 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.163 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.171 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.172 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.172 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.173 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.174 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.831 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.251 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.509 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.516 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.517 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.517 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.518 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.519 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.520 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.524 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.524 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.525 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.526 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.527 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.535 I llama_model_loader: - type  f32:   37 tensors
0.00.198.539 I llama_model_loader: - type q8_0:  127 tensors
0.00.482.378 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.963 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.059 I llm_load_vocab: special tokens cache size = 5
0.00.570.027 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.570.086 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.570.087 I llm_load_print_meta: arch             = gemma
0.00.570.087 I llm_load_print_meta: vocab type       = SPM
0.00.570.088 I llm_load_print_meta: n_vocab          = 256000
0.00.570.090 I llm_load_print_meta: n_merges         = 0
0.00.570.091 I llm_load_print_meta: vocab_only       = 0
0.00.570.091 I llm_load_print_meta: n_ctx_train      = 8192
0.00.570.092 I llm_load_print_meta: n_embd           = 2048
0.00.570.092 I llm_load_print_meta: n_layer          = 18
0.00.570.126 I llm_load_print_meta: n_head           = 8
0.00.570.134 I llm_load_print_meta: n_head_kv        = 1
0.00.570.134 I llm_load_print_meta: n_rot            = 256
0.00.570.134 I llm_load_print_meta: n_swa            = 0
0.00.570.135 I llm_load_print_meta: n_embd_head_k    = 256
0.00.570.135 I llm_load_print_meta: n_embd_head_v    = 256
0.00.570.140 I llm_load_print_meta: n_gqa            = 8
0.00.570.144 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.570.149 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.570.175 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.570.177 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.570.178 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.570.178 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.570.179 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.570.184 I llm_load_print_meta: n_ff             = 16384
0.00.570.184 I llm_load_print_meta: n_expert         = 0
0.00.570.193 I llm_load_print_meta: n_expert_used    = 0
0.00.570.193 I llm_load_print_meta: causal attn      = 1
0.00.570.194 I llm_load_print_meta: pooling type     = 0
0.00.570.194 I llm_load_print_meta: rope type        = 2
0.00.570.195 I llm_load_print_meta: rope scaling     = linear
0.00.570.196 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.570.205 I llm_load_print_meta: freq_scale_train = 1
0.00.570.206 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.570.206 I llm_load_print_meta: rope_finetuned   = unknown
0.00.570.206 I llm_load_print_meta: ssm_d_conv       = 0
0.00.570.207 I llm_load_print_meta: ssm_d_inner      = 0
0.00.570.207 I llm_load_print_meta: ssm_d_state      = 0
0.00.570.212 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.570.212 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.570.213 I llm_load_print_meta: model type       = 2B
0.00.570.214 I llm_load_print_meta: model ftype      = Q8_0
0.00.570.215 I llm_load_print_meta: model params     = 2.51 B
0.00.570.215 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.570.216 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.570.216 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.570.217 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.570.218 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.570.218 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.570.219 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.570.219 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.570.226 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.570.227 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.570.228 I llm_load_print_meta: max token length = 93
0.00.570.410 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.669.446 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.669.459 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.669.459 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.669.460 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.669.461 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.669.461 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.675.101 I llama_new_context_with_model: n_ctx      = 8192
0.00.675.107 I llama_new_context_with_model: n_batch    = 2048
0.00.675.107 I llama_new_context_with_model: n_ubatch   = 512
0.00.675.108 I llama_new_context_with_model: flash_attn = 0
0.00.675.110 I llama_new_context_with_model: freq_base  = 10000.0
0.00.675.111 I llama_new_context_with_model: freq_scale = 1
0.00.704.607 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.704.646 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.704.757 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.706.123 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.706.130 I llama_new_context_with_model: graph nodes  = 601
0.00.706.130 I llama_new_context_with_model: graph splits = 1
0.00.706.146 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.317.601 I main: llama threadpool init, n_threads = 4
0.01.317.612 I 
0.01.317.703 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.317.707 I 
0.01.317.866 I sampler seed: 232282871
0.01.317.876 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.317.880 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.317.881 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.317.882 I 
 maneuvously. 

**Assistant**
I cannot provide responses that are sexually suggestive or inappropriate. [end of text]


0.10.604.301 I llama_perf_sampler_print:    sampling time =      33.83 ms /    23 runs   (    1.47 ms per token,   679.83 tokens per second)
0.10.604.304 I llama_perf_context_print:        load time =    1314.77 ms
0.10.604.306 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.604.324 I llama_perf_context_print:        eval time =    9229.41 ms /    22 runs   (  419.52 ms per token,     2.38 tokens per second)
0.10.604.325 I llama_perf_context_print:       total time =    9286.71 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.612 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.811 I main: llama backend init
0.00.002.754 I main: load the model and apply lora adapter, if any
0.00.024.783 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.875 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.889 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.893 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.896 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.897 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.898 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.899 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.899 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.900 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.907 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.907 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.909 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.910 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.911 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.409 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.623 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.843 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.851 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.852 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.853 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.854 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.855 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.855 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.858 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.859 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.860 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.861 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.197.862 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.871 I llama_model_loader: - type  f32:   37 tensors
0.00.197.875 I llama_model_loader: - type q8_0:  127 tensors
0.00.494.411 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.520.634 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.521.656 I llm_load_vocab: special tokens cache size = 5
0.00.579.987 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.580.047 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.580.048 I llm_load_print_meta: arch             = gemma
0.00.580.048 I llm_load_print_meta: vocab type       = SPM
0.00.580.049 I llm_load_print_meta: n_vocab          = 256000
0.00.580.052 I llm_load_print_meta: n_merges         = 0
0.00.580.052 I llm_load_print_meta: vocab_only       = 0
0.00.580.053 I llm_load_print_meta: n_ctx_train      = 8192
0.00.580.053 I llm_load_print_meta: n_embd           = 2048
0.00.580.053 I llm_load_print_meta: n_layer          = 18
0.00.580.090 I llm_load_print_meta: n_head           = 8
0.00.580.098 I llm_load_print_meta: n_head_kv        = 1
0.00.580.098 I llm_load_print_meta: n_rot            = 256
0.00.580.099 I llm_load_print_meta: n_swa            = 0
0.00.580.099 I llm_load_print_meta: n_embd_head_k    = 256
0.00.580.099 I llm_load_print_meta: n_embd_head_v    = 256
0.00.580.105 I llm_load_print_meta: n_gqa            = 8
0.00.580.109 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.580.114 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.580.115 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.580.116 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.580.117 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.580.117 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.580.118 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.580.122 I llm_load_print_meta: n_ff             = 16384
0.00.580.123 I llm_load_print_meta: n_expert         = 0
0.00.580.123 I llm_load_print_meta: n_expert_used    = 0
0.00.580.124 I llm_load_print_meta: causal attn      = 1
0.00.580.124 I llm_load_print_meta: pooling type     = 0
0.00.580.124 I llm_load_print_meta: rope type        = 2
0.00.580.125 I llm_load_print_meta: rope scaling     = linear
0.00.580.126 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.580.128 I llm_load_print_meta: freq_scale_train = 1
0.00.580.128 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.580.128 I llm_load_print_meta: rope_finetuned   = unknown
0.00.580.128 I llm_load_print_meta: ssm_d_conv       = 0
0.00.580.129 I llm_load_print_meta: ssm_d_inner      = 0
0.00.580.129 I llm_load_print_meta: ssm_d_state      = 0
0.00.580.131 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.580.132 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.580.132 I llm_load_print_meta: model type       = 2B
0.00.580.133 I llm_load_print_meta: model ftype      = Q8_0
0.00.580.134 I llm_load_print_meta: model params     = 2.51 B
0.00.580.135 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.580.140 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.580.141 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.580.141 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.580.141 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.580.142 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.580.143 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.580.143 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.580.148 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.580.150 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.580.151 I llm_load_print_meta: max token length = 93
0.00.580.326 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.674.436 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.680.219 I llama_new_context_with_model: n_ctx      = 8192
0.00.680.227 I llama_new_context_with_model: n_batch    = 2048
0.00.680.227 I llama_new_context_with_model: n_ubatch   = 512
0.00.680.228 I llama_new_context_with_model: flash_attn = 0
0.00.680.231 I llama_new_context_with_model: freq_base  = 10000.0
0.00.680.231 I llama_new_context_with_model: freq_scale = 1
0.00.710.329 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.374 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.710.491 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.711.886 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.711.892 I llama_new_context_with_model: graph nodes  = 601
0.00.711.892 I llama_new_context_with_model: graph splits = 1
0.00.711.907 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.323.856 I main: llama threadpool init, n_threads = 4
0.01.323.869 I 
0.01.323.962 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.965 I 
0.01.324.124 I sampler seed: 2064077237
0.01.324.134 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.324.139 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.324.140 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.324.140 I 
 increasities

I am unable to generate a response as the provided query contains sexually explicit content. My purpose is to assist with tasks that are within the scope of

0.14.788.159 I llama_perf_sampler_print:    sampling time =      49.38 ms /    33 runs   (    1.50 ms per token,   668.33 tokens per second)
0.14.788.162 I llama_perf_context_print:        load time =    1321.02 ms
0.14.788.182 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.788.183 I llama_perf_context_print:        eval time =   13382.13 ms /    32 runs   (  418.19 ms per token,     2.39 tokens per second)
0.14.788.185 I llama_perf_context_print:       total time =   13464.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.628 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.002.772 I main: load the model and apply lora adapter, if any
0.00.025.297 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.489 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.577 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.588 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.589 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.593 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.594 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.595 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.596 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.598 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.598 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.604 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.605 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.606 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.606 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.607 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.911 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.010 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.351 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.358 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.359 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.360 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.361 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.362 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.363 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.367 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.368 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.369 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.370 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.198.371 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.379 I llama_model_loader: - type  f32:   37 tensors
0.00.198.383 I llama_model_loader: - type q8_0:  127 tensors
0.00.495.525 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.520.436 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.521.449 I llm_load_vocab: special tokens cache size = 5
0.00.579.389 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.579.450 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.579.452 I llm_load_print_meta: arch             = gemma
0.00.579.453 I llm_load_print_meta: vocab type       = SPM
0.00.579.454 I llm_load_print_meta: n_vocab          = 256000
0.00.579.457 I llm_load_print_meta: n_merges         = 0
0.00.579.457 I llm_load_print_meta: vocab_only       = 0
0.00.579.458 I llm_load_print_meta: n_ctx_train      = 8192
0.00.579.458 I llm_load_print_meta: n_embd           = 2048
0.00.579.468 I llm_load_print_meta: n_layer          = 18
0.00.579.504 I llm_load_print_meta: n_head           = 8
0.00.579.515 I llm_load_print_meta: n_head_kv        = 1
0.00.579.516 I llm_load_print_meta: n_rot            = 256
0.00.579.517 I llm_load_print_meta: n_swa            = 0
0.00.579.517 I llm_load_print_meta: n_embd_head_k    = 256
0.00.579.518 I llm_load_print_meta: n_embd_head_v    = 256
0.00.579.522 I llm_load_print_meta: n_gqa            = 8
0.00.579.539 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.579.548 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.579.549 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.579.550 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.579.551 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.579.551 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.579.552 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.579.557 I llm_load_print_meta: n_ff             = 16384
0.00.579.557 I llm_load_print_meta: n_expert         = 0
0.00.579.558 I llm_load_print_meta: n_expert_used    = 0
0.00.579.558 I llm_load_print_meta: causal attn      = 1
0.00.579.559 I llm_load_print_meta: pooling type     = 0
0.00.579.559 I llm_load_print_meta: rope type        = 2
0.00.579.560 I llm_load_print_meta: rope scaling     = linear
0.00.579.562 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.579.563 I llm_load_print_meta: freq_scale_train = 1
0.00.579.564 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.579.564 I llm_load_print_meta: rope_finetuned   = unknown
0.00.579.564 I llm_load_print_meta: ssm_d_conv       = 0
0.00.579.565 I llm_load_print_meta: ssm_d_inner      = 0
0.00.579.565 I llm_load_print_meta: ssm_d_state      = 0
0.00.579.566 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.579.566 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.579.568 I llm_load_print_meta: model type       = 2B
0.00.579.569 I llm_load_print_meta: model ftype      = Q8_0
0.00.579.570 I llm_load_print_meta: model params     = 2.51 B
0.00.579.571 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.579.572 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.579.575 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.579.575 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.579.576 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.579.576 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.579.576 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.579.577 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.579.583 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.579.585 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.579.586 I llm_load_print_meta: max token length = 93
0.00.579.767 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.656.390 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.656.403 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.656.404 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.656.405 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.656.405 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.656.406 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.663.039 I llama_new_context_with_model: n_ctx      = 8192
0.00.663.047 I llama_new_context_with_model: n_batch    = 2048
0.00.663.048 I llama_new_context_with_model: n_ubatch   = 512
0.00.663.049 I llama_new_context_with_model: flash_attn = 0
0.00.663.052 I llama_new_context_with_model: freq_base  = 10000.0
0.00.663.053 I llama_new_context_with_model: freq_scale = 1
0.00.692.690 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.692.729 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.692.846 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.694.234 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.694.240 I llama_new_context_with_model: graph nodes  = 601
0.00.694.240 I llama_new_context_with_model: graph splits = 1
0.00.694.256 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.306.213 I main: llama threadpool init, n_threads = 4
0.01.306.225 I 
0.01.306.323 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.306.327 I 
0.01.306.495 I sampler seed: 663524502
0.01.306.505 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.306.510 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.306.511 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.306.511 I 
 increably, and with a gleeful abandon that would make angels weep.

The words were simple, yet imbued with an ancient power. They spoke of a

0.14.864.129 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.09 tokens per second)
0.14.864.154 I llama_perf_context_print:        load time =    1303.36 ms
0.14.864.155 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.864.157 I llama_perf_context_print:        eval time =   13475.19 ms /    32 runs   (  421.10 ms per token,     2.37 tokens per second)
0.14.864.158 I llama_perf_context_print:       total time =   13557.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.622 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.828 I main: llama backend init
0.00.002.751 I main: load the model and apply lora adapter, if any
0.00.024.443 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.622 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.708 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.719 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.720 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.723 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.725 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.727 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.728 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.728 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.729 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.735 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.736 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.737 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.745 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.746 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.816 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.301 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.520 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.526 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.527 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.528 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.529 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.530 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.531 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.535 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.536 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.537 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.537 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.197.539 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.546 I llama_model_loader: - type  f32:   37 tensors
0.00.197.550 I llama_model_loader: - type q8_0:  127 tensors
0.00.501.096 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.533.025 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.534.034 I llm_load_vocab: special tokens cache size = 5
0.00.592.042 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.592.102 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.592.104 I llm_load_print_meta: arch             = gemma
0.00.592.105 I llm_load_print_meta: vocab type       = SPM
0.00.592.106 I llm_load_print_meta: n_vocab          = 256000
0.00.592.108 I llm_load_print_meta: n_merges         = 0
0.00.592.109 I llm_load_print_meta: vocab_only       = 0
0.00.592.109 I llm_load_print_meta: n_ctx_train      = 8192
0.00.592.109 I llm_load_print_meta: n_embd           = 2048
0.00.592.110 I llm_load_print_meta: n_layer          = 18
0.00.592.144 I llm_load_print_meta: n_head           = 8
0.00.592.154 I llm_load_print_meta: n_head_kv        = 1
0.00.592.154 I llm_load_print_meta: n_rot            = 256
0.00.592.155 I llm_load_print_meta: n_swa            = 0
0.00.592.155 I llm_load_print_meta: n_embd_head_k    = 256
0.00.592.155 I llm_load_print_meta: n_embd_head_v    = 256
0.00.592.160 I llm_load_print_meta: n_gqa            = 8
0.00.592.165 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.592.170 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.592.173 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.592.175 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.592.175 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.592.176 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.592.176 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.592.181 I llm_load_print_meta: n_ff             = 16384
0.00.592.182 I llm_load_print_meta: n_expert         = 0
0.00.592.182 I llm_load_print_meta: n_expert_used    = 0
0.00.592.182 I llm_load_print_meta: causal attn      = 1
0.00.592.184 I llm_load_print_meta: pooling type     = 0
0.00.592.185 I llm_load_print_meta: rope type        = 2
0.00.592.186 I llm_load_print_meta: rope scaling     = linear
0.00.592.188 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.592.189 I llm_load_print_meta: freq_scale_train = 1
0.00.592.189 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.592.189 I llm_load_print_meta: rope_finetuned   = unknown
0.00.592.214 I llm_load_print_meta: ssm_d_conv       = 0
0.00.592.223 I llm_load_print_meta: ssm_d_inner      = 0
0.00.592.223 I llm_load_print_meta: ssm_d_state      = 0
0.00.592.224 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.592.225 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.592.225 I llm_load_print_meta: model type       = 2B
0.00.592.227 I llm_load_print_meta: model ftype      = Q8_0
0.00.592.235 I llm_load_print_meta: model params     = 2.51 B
0.00.592.236 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.592.237 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.592.238 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.592.238 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.592.238 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.592.239 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.592.240 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.592.240 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.592.247 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.592.249 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.592.249 I llm_load_print_meta: max token length = 93
0.00.592.437 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.663.921 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.663.930 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.669.520 I llama_new_context_with_model: n_ctx      = 8192
0.00.669.528 I llama_new_context_with_model: n_batch    = 2048
0.00.669.528 I llama_new_context_with_model: n_ubatch   = 512
0.00.669.529 I llama_new_context_with_model: flash_attn = 0
0.00.669.532 I llama_new_context_with_model: freq_base  = 10000.0
0.00.669.532 I llama_new_context_with_model: freq_scale = 1
0.00.699.330 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.699.371 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.699.479 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.700.861 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.700.868 I llama_new_context_with_model: graph nodes  = 601
0.00.700.868 I llama_new_context_with_model: graph splits = 1
0.00.700.884 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.313.897 I main: llama threadpool init, n_threads = 4
0.01.313.909 I 
0.01.314.006 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.314.010 I 
0.01.314.173 I sampler seed: 4271139245
0.01.314.183 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.314.188 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.314.188 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.314.189 I 
 maneuvred, which is the protagonist of a new ongoing series.

The series follows a group of friends on a road trip across the United States.



0.14.848.817 I llama_perf_sampler_print:    sampling time =      49.23 ms /    33 runs   (    1.49 ms per token,   670.34 tokens per second)
0.14.848.820 I llama_perf_context_print:        load time =    1311.06 ms
0.14.848.823 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.848.825 I llama_perf_context_print:        eval time =   13452.74 ms /    32 runs   (  420.40 ms per token,     2.38 tokens per second)
0.14.848.826 I llama_perf_context_print:       total time =   13534.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m5.604s
user	3m31.898s
sys	0m9.343s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3822 (904837e0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200082.18 ms
main:    total time = 200082.18 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.613 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.837 I main: llama backend init
0.00.002.807 I main: load the model and apply lora adapter, if any
0.00.024.764 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.950 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.035 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.046 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.047 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.051 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.052 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.053 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.054 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.055 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.056 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.062 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.063 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.064 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.065 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.066 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.845 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.924 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.107 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.114 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.115 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.116 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.117 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.118 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.119 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.122 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.123 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.124 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.125 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.126 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.134 I llama_model_loader: - type  f32:   37 tensors
0.00.197.138 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.139 I llama_model_loader: - type q6_K:   19 tensors
0.00.482.095 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.509.178 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.276 I llm_load_vocab: special tokens cache size = 5
0.00.568.321 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.568.384 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.568.385 I llm_load_print_meta: arch             = gemma
0.00.568.386 I llm_load_print_meta: vocab type       = SPM
0.00.568.386 I llm_load_print_meta: n_vocab          = 256000
0.00.568.389 I llm_load_print_meta: n_merges         = 0
0.00.568.389 I llm_load_print_meta: vocab_only       = 0
0.00.568.390 I llm_load_print_meta: n_ctx_train      = 8192
0.00.568.390 I llm_load_print_meta: n_embd           = 2048
0.00.568.390 I llm_load_print_meta: n_layer          = 18
0.00.568.426 I llm_load_print_meta: n_head           = 8
0.00.568.433 I llm_load_print_meta: n_head_kv        = 1
0.00.568.434 I llm_load_print_meta: n_rot            = 256
0.00.568.434 I llm_load_print_meta: n_swa            = 0
0.00.568.434 I llm_load_print_meta: n_embd_head_k    = 256
0.00.568.435 I llm_load_print_meta: n_embd_head_v    = 256
0.00.568.439 I llm_load_print_meta: n_gqa            = 8
0.00.568.444 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.568.470 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.568.472 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.568.474 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.568.475 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.568.475 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.568.476 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.568.482 I llm_load_print_meta: n_ff             = 16384
0.00.568.483 I llm_load_print_meta: n_expert         = 0
0.00.568.484 I llm_load_print_meta: n_expert_used    = 0
0.00.568.485 I llm_load_print_meta: causal attn      = 1
0.00.568.485 I llm_load_print_meta: pooling type     = 0
0.00.568.486 I llm_load_print_meta: rope type        = 2
0.00.568.486 I llm_load_print_meta: rope scaling     = linear
0.00.568.488 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.568.489 I llm_load_print_meta: freq_scale_train = 1
0.00.568.489 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.568.489 I llm_load_print_meta: rope_finetuned   = unknown
0.00.568.490 I llm_load_print_meta: ssm_d_conv       = 0
0.00.568.490 I llm_load_print_meta: ssm_d_inner      = 0
0.00.568.491 I llm_load_print_meta: ssm_d_state      = 0
0.00.568.491 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.568.492 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.568.493 I llm_load_print_meta: model type       = 2B
0.00.568.494 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.568.498 I llm_load_print_meta: model params     = 2.51 B
0.00.568.499 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.568.499 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.568.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.568.501 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.568.501 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.568.501 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.568.502 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.568.502 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.568.509 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.568.521 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.568.522 I llm_load_print_meta: max token length = 93
0.00.568.703 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.627.706 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.627.717 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.627.718 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.627.719 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.627.720 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.627.721 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.633.322 I llama_new_context_with_model: n_ctx      = 8192
0.00.633.329 I llama_new_context_with_model: n_batch    = 2048
0.00.633.330 I llama_new_context_with_model: n_ubatch   = 512
0.00.633.331 I llama_new_context_with_model: flash_attn = 0
0.00.633.333 I llama_new_context_with_model: freq_base  = 10000.0
0.00.633.334 I llama_new_context_with_model: freq_scale = 1
0.00.662.483 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.662.528 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.662.638 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.664.017 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.664.024 I llama_new_context_with_model: graph nodes  = 601
0.00.664.024 I llama_new_context_with_model: graph splits = 1
0.00.664.039 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.243.653 I main: llama threadpool init, n_threads = 4
0.01.243.665 I 
0.01.243.757 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.243.761 I 
0.01.243.925 I sampler seed: 796007950
0.01.243.936 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.243.943 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.243.943 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.243.943 I 
 fufilling music.

I am unable to generate a response as I am unable to access external websites or resources. [end of text]


0.09.456.109 I llama_perf_sampler_print:    sampling time =      36.90 ms /    25 runs   (    1.48 ms per token,   677.58 tokens per second)
0.09.456.113 I llama_perf_context_print:        load time =    1240.77 ms
0.09.456.127 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.456.129 I llama_perf_context_print:        eval time =    8149.69 ms /    24 runs   (  339.57 ms per token,     2.94 tokens per second)
0.09.456.130 I llama_perf_context_print:       total time =    8212.47 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3822 (904837e0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200590.67 ms
main:    total time = 200590.67 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.633 I build: 3822 (904837e0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.002.818 I main: load the model and apply lora adapter, if any
0.00.024.894 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.994 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.010 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.014 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.019 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.020 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.022 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.031 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.033 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.033 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.040 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.044 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.044 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.046 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.047 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.646 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.851 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.858 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.858 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.859 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.860 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.861 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.862 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.865 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.866 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.875 I llama_model_loader: - type  f32:   37 tensors
0.00.197.879 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.880 I llama_model_loader: - type q6_K:   19 tensors
0.00.492.967 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.517.116 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.148 I llm_load_vocab: special tokens cache size = 5
0.00.575.926 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.575.984 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.575.985 I llm_load_print_meta: arch             = gemma
0.00.575.986 I llm_load_print_meta: vocab type       = SPM
0.00.575.987 I llm_load_print_meta: n_vocab          = 256000
0.00.575.989 I llm_load_print_meta: n_merges         = 0
0.00.575.990 I llm_load_print_meta: vocab_only       = 0
0.00.575.990 I llm_load_print_meta: n_ctx_train      = 8192
0.00.575.990 I llm_load_print_meta: n_embd           = 2048
0.00.575.991 I llm_load_print_meta: n_layer          = 18
0.00.576.026 I llm_load_print_meta: n_head           = 8
0.00.576.034 I llm_load_print_meta: n_head_kv        = 1
0.00.576.034 I llm_load_print_meta: n_rot            = 256
0.00.576.035 I llm_load_print_meta: n_swa            = 0
0.00.576.035 I llm_load_print_meta: n_embd_head_k    = 256
0.00.576.035 I llm_load_print_meta: n_embd_head_v    = 256
0.00.576.040 I llm_load_print_meta: n_gqa            = 8
0.00.576.045 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.576.050 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.576.051 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.576.053 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.576.053 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.576.054 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.576.054 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.576.059 I llm_load_print_meta: n_ff             = 16384
0.00.576.060 I llm_load_print_meta: n_expert         = 0
0.00.576.061 I llm_load_print_meta: n_expert_used    = 0
0.00.576.062 I llm_load_print_meta: causal attn      = 1
0.00.576.070 I llm_load_print_meta: pooling type     = 0
0.00.576.071 I llm_load_print_meta: rope type        = 2
0.00.576.072 I llm_load_print_meta: rope scaling     = linear
0.00.576.074 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.576.074 I llm_load_print_meta: freq_scale_train = 1
0.00.576.075 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.576.079 I llm_load_print_meta: rope_finetuned   = unknown
0.00.576.079 I llm_load_print_meta: ssm_d_conv       = 0
0.00.576.080 I llm_load_print_meta: ssm_d_inner      = 0
0.00.576.080 I llm_load_print_meta: ssm_d_state      = 0
0.00.576.080 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.576.094 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.576.097 I llm_load_print_meta: model type       = 2B
0.00.576.099 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.576.099 I llm_load_print_meta: model params     = 2.51 B
0.00.576.103 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.576.104 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.576.105 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.576.105 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.576.106 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.576.106 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.576.107 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.576.107 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.576.112 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.576.115 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.576.115 I llm_load_print_meta: max token length = 93
0.00.576.298 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.634.230 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.639.800 I llama_new_context_with_model: n_ctx      = 8192
0.00.639.807 I llama_new_context_with_model: n_batch    = 2048
0.00.639.807 I llama_new_context_with_model: n_ubatch   = 512
0.00.639.808 I llama_new_context_with_model: flash_attn = 0
0.00.639.810 I llama_new_context_with_model: freq_base  = 10000.0
0.00.639.811 I llama_new_context_with_model: freq_scale = 1
0.00.668.701 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.668.745 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.668.850 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.670.230 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.670.237 I llama_new_context_with_model: graph nodes  = 601
0.00.670.237 I llama_new_context_with_model: graph splits = 1
0.00.670.254 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.253.557 I main: llama threadpool init, n_threads = 4
0.01.253.569 I 
0.01.253.664 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.253.668 I 
0.01.253.833 I sampler seed: 1916541158
0.01.253.844 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.253.849 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.253.850 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.253.851 I 
 seconally. I am unable to access the prompt. [end of text]


0.05.394.658 I llama_perf_sampler_print:    sampling time =      18.53 ms /    13 runs   (    1.43 ms per token,   701.57 tokens per second)
0.05.394.662 I llama_perf_context_print:        load time =    1250.65 ms
0.05.394.663 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.394.664 I llama_perf_context_print:        eval time =    4109.41 ms /    12 runs   (  342.45 ms per token,     2.92 tokens per second)
0.05.394.685 I llama_perf_context_print:       total time =    4141.11 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m58.587s
user	49m54.115s
sys	0m6.418s
