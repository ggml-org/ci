+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.564 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.001.884 I main: load the model and apply lora adapter, if any
0.00.023.256 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.268 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.276 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.282 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.283 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.289 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.290 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.292 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.292 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.293 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.294 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.299 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.299 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.300 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.300 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.301 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.027 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.256 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.121 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.129 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.130 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.131 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.131 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.132 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.133 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.136 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.136 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.138 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.139 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.140 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.144 I llama_model_loader: - type  f32:   37 tensors
0.00.134.146 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.369 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.844 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.428 I llm_load_vocab: special tokens cache size = 5
0.00.282.250 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.277 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.278 I llm_load_print_meta: arch             = gemma
0.00.282.279 I llm_load_print_meta: vocab type       = SPM
0.00.282.279 I llm_load_print_meta: n_vocab          = 256000
0.00.282.280 I llm_load_print_meta: n_merges         = 0
0.00.282.281 I llm_load_print_meta: vocab_only       = 0
0.00.282.281 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.282 I llm_load_print_meta: n_embd           = 2048
0.00.282.282 I llm_load_print_meta: n_layer          = 18
0.00.282.294 I llm_load_print_meta: n_head           = 8
0.00.282.295 I llm_load_print_meta: n_head_kv        = 1
0.00.282.295 I llm_load_print_meta: n_rot            = 256
0.00.282.296 I llm_load_print_meta: n_swa            = 0
0.00.282.296 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.297 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.298 I llm_load_print_meta: n_gqa            = 8
0.00.282.299 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.299 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.300 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.302 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.302 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.302 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.303 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.304 I llm_load_print_meta: n_ff             = 16384
0.00.282.304 I llm_load_print_meta: n_expert         = 0
0.00.282.304 I llm_load_print_meta: n_expert_used    = 0
0.00.282.305 I llm_load_print_meta: causal attn      = 1
0.00.282.305 I llm_load_print_meta: pooling type     = 0
0.00.282.305 I llm_load_print_meta: rope type        = 2
0.00.282.306 I llm_load_print_meta: rope scaling     = linear
0.00.282.308 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.308 I llm_load_print_meta: freq_scale_train = 1
0.00.282.308 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.309 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.309 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.309 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.309 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.310 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.310 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.310 I llm_load_print_meta: model type       = 2B
0.00.282.311 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.312 I llm_load_print_meta: model params     = 2.51 B
0.00.282.313 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.313 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.313 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.314 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.314 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.314 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.315 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.315 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.316 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.316 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.317 I llm_load_print_meta: max token length = 93
0.00.387.475 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.387.483 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.387.484 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.387.484 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.387.485 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.387.485 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.392.735 I llama_new_context_with_model: n_ctx      = 8192
0.00.392.741 I llama_new_context_with_model: n_batch    = 2048
0.00.392.741 I llama_new_context_with_model: n_ubatch   = 512
0.00.392.742 I llama_new_context_with_model: flash_attn = 0
0.00.392.744 I llama_new_context_with_model: freq_base  = 10000.0
0.00.392.745 I llama_new_context_with_model: freq_scale = 1
0.00.421.545 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.421.559 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.421.656 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.422.968 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.422.973 I llama_new_context_with_model: graph nodes  = 601
0.00.422.974 I llama_new_context_with_model: graph splits = 1
0.00.422.976 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.514.028 I main: llama threadpool init, n_threads = 4
0.00.514.042 I 
0.00.514.117 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.514.120 I 
0.00.514.161 I sampler seed: 3360857956
0.00.514.173 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.514.176 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.514.177 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.514.177 I 
 increably.

I cannot answer this question as it contains offensive language. [end of text]


0.01.657.473 I llama_perf_sampler_print:    sampling time =       2.50 ms /    17 runs   (    0.15 ms per token,  6805.44 tokens per second)
0.01.657.475 I llama_perf_context_print:        load time =     512.12 ms
0.01.657.476 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.657.478 I llama_perf_context_print:        eval time =    1132.52 ms /    16 runs   (   70.78 ms per token,    14.13 tokens per second)
0.01.657.479 I llama_perf_context_print:       total time =    1143.45 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.553 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.953 I main: load the model and apply lora adapter, if any
0.00.022.683 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.697 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.704 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.708 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.714 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.716 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.717 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.717 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.718 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.722 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.729 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.729 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.731 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.732 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.733 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.956 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.545 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.380 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.387 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.387 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.388 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.388 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.389 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.390 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.392 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.393 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.394 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.395 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.395 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.398 I llama_model_loader: - type  f32:   37 tensors
0.00.132.400 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.623 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.259.016 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.468 I llm_load_vocab: special tokens cache size = 5
0.00.280.203 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.219 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.220 I llm_load_print_meta: arch             = gemma
0.00.280.220 I llm_load_print_meta: vocab type       = SPM
0.00.280.221 I llm_load_print_meta: n_vocab          = 256000
0.00.280.221 I llm_load_print_meta: n_merges         = 0
0.00.280.221 I llm_load_print_meta: vocab_only       = 0
0.00.280.222 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.222 I llm_load_print_meta: n_embd           = 2048
0.00.280.222 I llm_load_print_meta: n_layer          = 18
0.00.280.235 I llm_load_print_meta: n_head           = 8
0.00.280.236 I llm_load_print_meta: n_head_kv        = 1
0.00.280.236 I llm_load_print_meta: n_rot            = 256
0.00.280.236 I llm_load_print_meta: n_swa            = 0
0.00.280.236 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.237 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.238 I llm_load_print_meta: n_gqa            = 8
0.00.280.239 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.240 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.240 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.241 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.242 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.242 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.242 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.243 I llm_load_print_meta: n_ff             = 16384
0.00.280.244 I llm_load_print_meta: n_expert         = 0
0.00.280.244 I llm_load_print_meta: n_expert_used    = 0
0.00.280.244 I llm_load_print_meta: causal attn      = 1
0.00.280.244 I llm_load_print_meta: pooling type     = 0
0.00.280.245 I llm_load_print_meta: rope type        = 2
0.00.280.245 I llm_load_print_meta: rope scaling     = linear
0.00.280.247 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.247 I llm_load_print_meta: freq_scale_train = 1
0.00.280.248 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.248 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.248 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.249 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.249 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.249 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.249 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.250 I llm_load_print_meta: model type       = 2B
0.00.280.251 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.252 I llm_load_print_meta: model params     = 2.51 B
0.00.280.252 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.253 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.253 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.253 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.254 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.254 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.255 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.255 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.255 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.256 I llm_load_print_meta: max token length = 93
0.00.379.450 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.384.768 I llama_new_context_with_model: n_ctx      = 8192
0.00.384.774 I llama_new_context_with_model: n_batch    = 2048
0.00.384.774 I llama_new_context_with_model: n_ubatch   = 512
0.00.384.775 I llama_new_context_with_model: flash_attn = 0
0.00.384.777 I llama_new_context_with_model: freq_base  = 10000.0
0.00.384.778 I llama_new_context_with_model: freq_scale = 1
0.00.414.400 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.414.418 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.414.511 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.786 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.415.792 I llama_new_context_with_model: graph nodes  = 601
0.00.415.792 I llama_new_context_with_model: graph splits = 1
0.00.415.794 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.503.919 I main: llama threadpool init, n_threads = 4
0.00.503.932 I 
0.00.504.018 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.504.022 I 
0.00.504.069 I sampler seed: 34788035
0.00.504.080 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.504.083 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.504.084 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.504.084 I 
 increasities. [end of text]


0.00.781.927 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8196.72 tokens per second)
0.00.781.930 I llama_perf_context_print:        load time =     501.94 ms
0.00.781.931 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.781.933 I llama_perf_context_print:        eval time =     274.42 ms /     4 runs   (   68.60 ms per token,    14.58 tokens per second)
0.00.781.934 I llama_perf_context_print:       total time =     278.02 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.537 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.468 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.476 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.484 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.493 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.496 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.500 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.501 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.503 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.504 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.504 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.505 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.509 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.510 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.511 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.511 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.512 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.995 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.446 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.500 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.508 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.508 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.509 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.510 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.510 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.511 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.514 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.514 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.515 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.516 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.517 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.520 I llama_model_loader: - type  f32:   37 tensors
0.00.133.521 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.395 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.516 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.110 I llm_load_vocab: special tokens cache size = 5
0.00.268.933 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.950 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.951 I llm_load_print_meta: arch             = gemma
0.00.268.951 I llm_load_print_meta: vocab type       = SPM
0.00.268.952 I llm_load_print_meta: n_vocab          = 256000
0.00.268.952 I llm_load_print_meta: n_merges         = 0
0.00.268.953 I llm_load_print_meta: vocab_only       = 0
0.00.268.953 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.953 I llm_load_print_meta: n_embd           = 2048
0.00.268.954 I llm_load_print_meta: n_layer          = 18
0.00.268.965 I llm_load_print_meta: n_head           = 8
0.00.268.966 I llm_load_print_meta: n_head_kv        = 1
0.00.268.967 I llm_load_print_meta: n_rot            = 256
0.00.268.967 I llm_load_print_meta: n_swa            = 0
0.00.268.967 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.968 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.969 I llm_load_print_meta: n_gqa            = 8
0.00.268.970 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.971 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.972 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.973 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.973 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.973 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.974 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.974 I llm_load_print_meta: n_ff             = 16384
0.00.268.975 I llm_load_print_meta: n_expert         = 0
0.00.268.975 I llm_load_print_meta: n_expert_used    = 0
0.00.268.975 I llm_load_print_meta: causal attn      = 1
0.00.268.976 I llm_load_print_meta: pooling type     = 0
0.00.268.976 I llm_load_print_meta: rope type        = 2
0.00.268.976 I llm_load_print_meta: rope scaling     = linear
0.00.268.978 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.978 I llm_load_print_meta: freq_scale_train = 1
0.00.268.979 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.979 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.979 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.979 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.980 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.980 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.980 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.981 I llm_load_print_meta: model type       = 2B
0.00.268.981 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.982 I llm_load_print_meta: model params     = 2.51 B
0.00.268.983 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.983 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.984 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.984 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.985 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.985 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.985 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.986 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.986 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.986 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.987 I llm_load_print_meta: max token length = 93
0.00.364.299 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.364.309 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.364.310 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.364.310 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.364.311 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.364.312 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.369.723 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.730 I llama_new_context_with_model: n_batch    = 2048
0.00.369.731 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.731 I llama_new_context_with_model: flash_attn = 0
0.00.369.736 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.737 I llama_new_context_with_model: freq_scale = 1
0.00.399.594 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.612 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.704 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.959 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.965 I llama_new_context_with_model: graph nodes  = 601
0.00.400.966 I llama_new_context_with_model: graph splits = 1
0.00.400.967 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.308 I main: llama threadpool init, n_threads = 4
0.00.493.322 I 
0.00.493.402 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.406 I 
0.00.493.463 I sampler seed: 2954442268
0.00.493.473 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.481 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.493.483 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.483 I 
 increasities by framing them as a challenge to be overcome.

**Example:**

"The new policy requires employees to embrace change and innovate. It's

0.02.659.059 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6716.87 tokens per second)
0.02.659.061 I llama_perf_context_print:        load time =     491.39 ms
0.02.659.063 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.659.065 I llama_perf_context_print:        eval time =    2145.17 ms /    32 runs   (   67.04 ms per token,    14.92 tokens per second)
0.02.659.065 I llama_perf_context_print:       total time =    2165.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.353 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.363 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.370 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.380 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.382 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.387 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.389 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.391 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.392 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.393 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.394 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.399 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.400 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.401 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.402 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.403 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.707 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.431 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.311 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.317 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.318 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.318 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.319 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.319 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.320 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.323 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.323 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.323 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.324 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.325 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.330 I llama_model_loader: - type  f32:   37 tensors
0.00.132.331 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.221 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.076 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.650 I llm_load_vocab: special tokens cache size = 5
0.00.266.352 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.369 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.370 I llm_load_print_meta: arch             = gemma
0.00.266.370 I llm_load_print_meta: vocab type       = SPM
0.00.266.371 I llm_load_print_meta: n_vocab          = 256000
0.00.266.372 I llm_load_print_meta: n_merges         = 0
0.00.266.372 I llm_load_print_meta: vocab_only       = 0
0.00.266.372 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.372 I llm_load_print_meta: n_embd           = 2048
0.00.266.373 I llm_load_print_meta: n_layer          = 18
0.00.266.384 I llm_load_print_meta: n_head           = 8
0.00.266.385 I llm_load_print_meta: n_head_kv        = 1
0.00.266.386 I llm_load_print_meta: n_rot            = 256
0.00.266.386 I llm_load_print_meta: n_swa            = 0
0.00.266.386 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.387 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.388 I llm_load_print_meta: n_gqa            = 8
0.00.266.389 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.390 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.390 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.392 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.392 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.392 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.392 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.393 I llm_load_print_meta: n_ff             = 16384
0.00.266.394 I llm_load_print_meta: n_expert         = 0
0.00.266.394 I llm_load_print_meta: n_expert_used    = 0
0.00.266.394 I llm_load_print_meta: causal attn      = 1
0.00.266.395 I llm_load_print_meta: pooling type     = 0
0.00.266.395 I llm_load_print_meta: rope type        = 2
0.00.266.396 I llm_load_print_meta: rope scaling     = linear
0.00.266.397 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.398 I llm_load_print_meta: freq_scale_train = 1
0.00.266.398 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.398 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.398 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.399 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.399 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.399 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.399 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.400 I llm_load_print_meta: model type       = 2B
0.00.266.400 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.401 I llm_load_print_meta: model params     = 2.51 B
0.00.266.402 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.402 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.403 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.403 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.404 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.404 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.404 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.405 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.405 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.406 I llm_load_print_meta: max token length = 93
0.00.339.469 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.339.475 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.344.912 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.916 I llama_new_context_with_model: n_batch    = 2048
0.00.344.917 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.917 I llama_new_context_with_model: flash_attn = 0
0.00.344.920 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.920 I llama_new_context_with_model: freq_scale = 1
0.00.374.379 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.394 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.485 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.725 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.732 I llama_new_context_with_model: graph nodes  = 601
0.00.375.732 I llama_new_context_with_model: graph splits = 1
0.00.375.734 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.405 I main: llama threadpool init, n_threads = 4
0.00.469.420 I 
0.00.469.504 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.520 I 
0.00.469.576 I sampler seed: 4214842501
0.00.469.586 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.589 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.469.590 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.590 I 
 increasities!

I am unable to access the content of the page due to the limitations of my current capabilities. [end of text]


0.02.211.386 I llama_perf_sampler_print:    sampling time =       3.88 ms /    25 runs   (    0.16 ms per token,  6444.96 tokens per second)
0.02.211.389 I llama_perf_context_print:        load time =     467.48 ms
0.02.211.390 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.211.392 I llama_perf_context_print:        eval time =    1726.33 ms /    24 runs   (   71.93 ms per token,    13.90 tokens per second)
0.02.211.393 I llama_perf_context_print:       total time =    1741.99 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.065s
user	0m24.211s
sys	0m9.567s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4011 (a6744e43)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32240.22 ms
main:    total time = 32240.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.579 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.022.726 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.737 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.746 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.751 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.752 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.757 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.757 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.758 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.759 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.759 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.760 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.764 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.765 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.766 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.766 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.766 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.520 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.617 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.865 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.872 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.873 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.874 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.874 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.875 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.876 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.879 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.879 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.880 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.880 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.881 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.884 I llama_model_loader: - type  f32:   37 tensors
0.00.134.886 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.886 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.122 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.268 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.727 I llm_load_vocab: special tokens cache size = 5
0.00.263.569 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.584 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.585 I llm_load_print_meta: arch             = gemma
0.00.263.586 I llm_load_print_meta: vocab type       = SPM
0.00.263.586 I llm_load_print_meta: n_vocab          = 256000
0.00.263.587 I llm_load_print_meta: n_merges         = 0
0.00.263.587 I llm_load_print_meta: vocab_only       = 0
0.00.263.587 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.588 I llm_load_print_meta: n_embd           = 2048
0.00.263.588 I llm_load_print_meta: n_layer          = 18
0.00.263.600 I llm_load_print_meta: n_head           = 8
0.00.263.601 I llm_load_print_meta: n_head_kv        = 1
0.00.263.601 I llm_load_print_meta: n_rot            = 256
0.00.263.602 I llm_load_print_meta: n_swa            = 0
0.00.263.602 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.602 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.604 I llm_load_print_meta: n_gqa            = 8
0.00.263.605 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.606 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.606 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.607 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.608 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.608 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.608 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.609 I llm_load_print_meta: n_ff             = 16384
0.00.263.610 I llm_load_print_meta: n_expert         = 0
0.00.263.610 I llm_load_print_meta: n_expert_used    = 0
0.00.263.610 I llm_load_print_meta: causal attn      = 1
0.00.263.610 I llm_load_print_meta: pooling type     = 0
0.00.263.611 I llm_load_print_meta: rope type        = 2
0.00.263.611 I llm_load_print_meta: rope scaling     = linear
0.00.263.613 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.613 I llm_load_print_meta: freq_scale_train = 1
0.00.263.613 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.614 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.614 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.614 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.614 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.615 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.615 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.615 I llm_load_print_meta: model type       = 2B
0.00.263.616 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.617 I llm_load_print_meta: model params     = 2.51 B
0.00.263.617 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.618 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.618 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.618 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.619 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.619 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.619 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.619 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.620 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.620 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.621 I llm_load_print_meta: max token length = 93
0.00.325.323 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.325.329 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.325.330 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.325.330 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.325.331 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.325.332 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.330.526 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.532 I llama_new_context_with_model: n_batch    = 2048
0.00.330.533 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.533 I llama_new_context_with_model: flash_attn = 0
0.00.330.535 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.536 I llama_new_context_with_model: freq_scale = 1
0.00.359.514 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.528 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.623 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.928 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.934 I llama_new_context_with_model: graph nodes  = 601
0.00.360.935 I llama_new_context_with_model: graph splits = 1
0.00.360.937 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.050 I main: llama threadpool init, n_threads = 4
0.00.442.064 I 
0.00.442.139 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.142 I 
0.00.442.183 I sampler seed: 3075323028
0.00.442.193 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.197 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.442.198 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.199 I 
 squaRED VELVET

The Velvet Underground was a groundbreaking band that challenged conventional musical norms and pushed the boundaries of sonic experimentation.

**Musical Innovation:**

-

0.02.097.500 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6708.68 tokens per second)
0.02.097.502 I llama_perf_context_print:        load time =     440.15 ms
0.02.097.503 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.097.504 I llama_perf_context_print:        eval time =    1635.43 ms /    32 runs   (   51.11 ms per token,    19.57 tokens per second)
0.02.097.505 I llama_perf_context_print:       total time =    1655.46 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4011 (a6744e43)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31995.74 ms
main:    total time = 31995.74 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.537 I build: 4011 (a6744e43) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.022.460 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.475 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.485 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.487 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.491 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.492 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.493 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.493 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.494 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.495 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.498 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.499 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.500 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.500 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.501 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.458 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.263 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.144 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.145 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.145 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.146 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.147 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.147 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.150 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.151 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.155 I llama_model_loader: - type  f32:   37 tensors
0.00.132.156 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.156 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.066 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.952 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.467 I llm_load_vocab: special tokens cache size = 5
0.00.263.501 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.516 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.517 I llm_load_print_meta: arch             = gemma
0.00.263.517 I llm_load_print_meta: vocab type       = SPM
0.00.263.518 I llm_load_print_meta: n_vocab          = 256000
0.00.263.519 I llm_load_print_meta: n_merges         = 0
0.00.263.519 I llm_load_print_meta: vocab_only       = 0
0.00.263.520 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.520 I llm_load_print_meta: n_embd           = 2048
0.00.263.520 I llm_load_print_meta: n_layer          = 18
0.00.263.533 I llm_load_print_meta: n_head           = 8
0.00.263.534 I llm_load_print_meta: n_head_kv        = 1
0.00.263.534 I llm_load_print_meta: n_rot            = 256
0.00.263.535 I llm_load_print_meta: n_swa            = 0
0.00.263.535 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.536 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.536 I llm_load_print_meta: n_gqa            = 8
0.00.263.537 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.538 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.539 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.540 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.541 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.541 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.541 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.542 I llm_load_print_meta: n_ff             = 16384
0.00.263.543 I llm_load_print_meta: n_expert         = 0
0.00.263.543 I llm_load_print_meta: n_expert_used    = 0
0.00.263.543 I llm_load_print_meta: causal attn      = 1
0.00.263.543 I llm_load_print_meta: pooling type     = 0
0.00.263.544 I llm_load_print_meta: rope type        = 2
0.00.263.544 I llm_load_print_meta: rope scaling     = linear
0.00.263.546 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.547 I llm_load_print_meta: freq_scale_train = 1
0.00.263.547 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.547 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.548 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.548 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.548 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.548 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.549 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.549 I llm_load_print_meta: model type       = 2B
0.00.263.549 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.550 I llm_load_print_meta: model params     = 2.51 B
0.00.263.551 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.551 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.551 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.552 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.552 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.552 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.553 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.553 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.554 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.555 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.555 I llm_load_print_meta: max token length = 93
0.00.321.835 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.326.967 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.974 I llama_new_context_with_model: n_batch    = 2048
0.00.326.974 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.974 I llama_new_context_with_model: flash_attn = 0
0.00.326.976 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.977 I llama_new_context_with_model: freq_scale = 1
0.00.355.579 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.594 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.686 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.971 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.977 I llama_new_context_with_model: graph nodes  = 601
0.00.356.978 I llama_new_context_with_model: graph splits = 1
0.00.356.980 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.220 I main: llama threadpool init, n_threads = 4
0.00.437.235 I 
0.00.437.329 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.332 I 
0.00.437.371 I sampler seed: 2901684054
0.00.437.382 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.390 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.437.393 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.393 I 
 increasities?

I am unable to answer your question as it contains sexually suggestive and inappropriate content. I am designed to provide safe and responsible responses, and I

0.02.033.390 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6935.69 tokens per second)
0.02.033.393 I llama_perf_context_print:        load time =     435.33 ms
0.02.033.394 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.033.395 I llama_perf_context_print:        eval time =    1577.48 ms /    32 runs   (   49.30 ms per token,    20.29 tokens per second)
0.02.033.396 I llama_perf_context_print:       total time =    1596.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.750s
user	8m14.240s
sys	0m7.105s
