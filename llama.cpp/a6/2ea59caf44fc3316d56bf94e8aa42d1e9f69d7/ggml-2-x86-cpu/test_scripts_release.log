+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.816 I main: load the model and apply lora adapter, if any
0.00.022.322 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.371 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.381 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.387 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.390 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.395 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.396 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.397 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.397 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.398 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.398 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.403 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.404 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.404 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.404 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.060 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.212 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.034 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.040 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.041 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.042 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.043 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.044 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.046 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.050 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.051 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.053 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.054 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.058 I llama_model_loader: - type  f32:   37 tensors
0.00.133.061 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.214 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.241 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.012 I llm_load_vocab: special tokens cache size = 5
0.00.232.151 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.165 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.166 I llm_load_print_meta: arch             = gemma
0.00.232.166 I llm_load_print_meta: vocab type       = SPM
0.00.232.167 I llm_load_print_meta: n_vocab          = 256000
0.00.232.167 I llm_load_print_meta: n_merges         = 0
0.00.232.168 I llm_load_print_meta: vocab_only       = 0
0.00.232.168 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.168 I llm_load_print_meta: n_embd           = 2048
0.00.232.169 I llm_load_print_meta: n_layer          = 18
0.00.232.183 I llm_load_print_meta: n_head           = 8
0.00.232.184 I llm_load_print_meta: n_head_kv        = 1
0.00.232.184 I llm_load_print_meta: n_rot            = 256
0.00.232.185 I llm_load_print_meta: n_swa            = 0
0.00.232.185 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.185 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.187 I llm_load_print_meta: n_gqa            = 8
0.00.232.188 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.189 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.190 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.192 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.192 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.192 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.193 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.194 I llm_load_print_meta: n_ff             = 16384
0.00.232.194 I llm_load_print_meta: n_expert         = 0
0.00.232.194 I llm_load_print_meta: n_expert_used    = 0
0.00.232.195 I llm_load_print_meta: causal attn      = 1
0.00.232.195 I llm_load_print_meta: pooling type     = 0
0.00.232.195 I llm_load_print_meta: rope type        = 2
0.00.232.196 I llm_load_print_meta: rope scaling     = linear
0.00.232.197 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.198 I llm_load_print_meta: freq_scale_train = 1
0.00.232.198 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.198 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.199 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.199 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.199 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.200 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.200 I llm_load_print_meta: model type       = 2B
0.00.232.201 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.202 I llm_load_print_meta: model params     = 2.51 B
0.00.232.203 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.203 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.203 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.204 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.204 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.204 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.205 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.205 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.206 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.206 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.207 I llm_load_print_meta: max token length = 93
0.00.232.234 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.140 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.331.145 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.331.146 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.331.147 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.331.148 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.331.148 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.336.225 I llama_new_context_with_model: n_ctx      = 8192
0.00.336.231 I llama_new_context_with_model: n_batch    = 2048
0.00.336.231 I llama_new_context_with_model: n_ubatch   = 512
0.00.336.232 I llama_new_context_with_model: flash_attn = 0
0.00.336.235 I llama_new_context_with_model: freq_base  = 10000.0
0.00.336.236 I llama_new_context_with_model: freq_scale = 1
0.00.364.863 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.878 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.882 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.890 I llama_new_context_with_model: graph nodes  = 601
0.00.365.890 I llama_new_context_with_model: graph splits = 1
0.00.365.892 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.883 I main: llama threadpool init, n_threads = 4
0.00.457.895 I 
0.00.457.969 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.973 I 
0.00.458.008 I sampler seed: 129069237
0.00.458.017 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.024 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.025 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.027 I 
 increably. I am unable to fully understand the intricacies of your reasoning and would appreciate clarification.

Could you please elaborate on the specific aspects of your reasoning that

0.02.742.992 I llama_perf_sampler_print:    sampling time =       5.80 ms /    33 runs   (    0.18 ms per token,  5689.66 tokens per second)
0.02.742.995 I llama_perf_context_print:        load time =     456.00 ms
0.02.742.996 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.742.998 I llama_perf_context_print:        eval time =    2264.95 ms /    32 runs   (   70.78 ms per token,    14.13 tokens per second)
0.02.742.999 I llama_perf_context_print:       total time =    2285.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.592 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.001.952 I main: load the model and apply lora adapter, if any
0.00.022.515 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.531 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.539 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.540 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.544 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.545 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.546 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.546 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.547 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.548 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.553 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.554 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.554 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.555 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.556 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.043 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.800 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.030 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.036 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.037 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.038 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.038 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.039 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.040 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.043 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.043 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.044 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.045 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.135.045 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.049 I llama_model_loader: - type  f32:   37 tensors
0.00.135.052 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.384 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.908 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.716 I llm_load_vocab: special tokens cache size = 5
0.00.241.993 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.009 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.010 I llm_load_print_meta: arch             = gemma
0.00.242.010 I llm_load_print_meta: vocab type       = SPM
0.00.242.011 I llm_load_print_meta: n_vocab          = 256000
0.00.242.012 I llm_load_print_meta: n_merges         = 0
0.00.242.012 I llm_load_print_meta: vocab_only       = 0
0.00.242.012 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.012 I llm_load_print_meta: n_embd           = 2048
0.00.242.013 I llm_load_print_meta: n_layer          = 18
0.00.242.027 I llm_load_print_meta: n_head           = 8
0.00.242.028 I llm_load_print_meta: n_head_kv        = 1
0.00.242.028 I llm_load_print_meta: n_rot            = 256
0.00.242.029 I llm_load_print_meta: n_swa            = 0
0.00.242.029 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.029 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.030 I llm_load_print_meta: n_gqa            = 8
0.00.242.031 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.032 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.034 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.036 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.036 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.037 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.037 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.038 I llm_load_print_meta: n_ff             = 16384
0.00.242.038 I llm_load_print_meta: n_expert         = 0
0.00.242.039 I llm_load_print_meta: n_expert_used    = 0
0.00.242.039 I llm_load_print_meta: causal attn      = 1
0.00.242.039 I llm_load_print_meta: pooling type     = 0
0.00.242.040 I llm_load_print_meta: rope type        = 2
0.00.242.040 I llm_load_print_meta: rope scaling     = linear
0.00.242.041 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.042 I llm_load_print_meta: freq_scale_train = 1
0.00.242.042 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.043 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.043 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.043 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.043 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.044 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.044 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.044 I llm_load_print_meta: model type       = 2B
0.00.242.045 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.046 I llm_load_print_meta: model params     = 2.51 B
0.00.242.047 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.047 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.047 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.048 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.048 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.048 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.049 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.049 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.049 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.050 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.050 I llm_load_print_meta: max token length = 93
0.00.242.081 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.075 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.340.242 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.249 I llama_new_context_with_model: n_batch    = 2048
0.00.340.249 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.250 I llama_new_context_with_model: flash_attn = 0
0.00.340.253 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.254 I llama_new_context_with_model: freq_scale = 1
0.00.370.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.791 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.885 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.766 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.774 I llama_new_context_with_model: graph nodes  = 601
0.00.371.774 I llama_new_context_with_model: graph splits = 1
0.00.371.777 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.103 I main: llama threadpool init, n_threads = 4
0.00.461.116 I 
0.00.461.192 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.196 I 
0.00.461.232 I sampler seed: 2656928266
0.00.461.243 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.245 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.461.246 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.246 I 
 increasities, a mischievous young gnome who plays tricks on those who annoy him.

**Activities:**

* Trickery pranks
* Making mischief
* Engaging

0.02.685.405 I llama_perf_sampler_print:    sampling time =       5.79 ms /    33 runs   (    0.18 ms per token,  5697.51 tokens per second)
0.02.685.407 I llama_perf_context_print:        load time =     459.08 ms
0.02.685.409 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.685.412 I llama_perf_context_print:        eval time =    2204.20 ms /    32 runs   (   68.88 ms per token,    14.52 tokens per second)
0.02.685.413 I llama_perf_context_print:       total time =    2224.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.657 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.881 I main: llama backend init
0.00.002.014 I main: load the model and apply lora adapter, if any
0.00.022.193 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.262 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.270 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.275 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.276 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.281 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.282 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.283 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.284 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.285 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.286 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.292 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.293 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.293 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.294 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.295 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.989 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.230 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.079 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.086 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.086 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.087 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.088 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.089 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.089 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.093 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.094 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.095 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.095 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.096 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.102 I llama_model_loader: - type  f32:   37 tensors
0.00.133.105 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.718 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.993 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.886 I llm_load_vocab: special tokens cache size = 5
0.00.227.979 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.994 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.994 I llm_load_print_meta: arch             = gemma
0.00.227.995 I llm_load_print_meta: vocab type       = SPM
0.00.227.996 I llm_load_print_meta: n_vocab          = 256000
0.00.227.996 I llm_load_print_meta: n_merges         = 0
0.00.227.996 I llm_load_print_meta: vocab_only       = 0
0.00.227.997 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.997 I llm_load_print_meta: n_embd           = 2048
0.00.227.997 I llm_load_print_meta: n_layer          = 18
0.00.228.010 I llm_load_print_meta: n_head           = 8
0.00.228.011 I llm_load_print_meta: n_head_kv        = 1
0.00.228.012 I llm_load_print_meta: n_rot            = 256
0.00.228.012 I llm_load_print_meta: n_swa            = 0
0.00.228.012 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.013 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.014 I llm_load_print_meta: n_gqa            = 8
0.00.228.015 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.016 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.016 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.018 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.018 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.019 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.019 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.020 I llm_load_print_meta: n_ff             = 16384
0.00.228.021 I llm_load_print_meta: n_expert         = 0
0.00.228.021 I llm_load_print_meta: n_expert_used    = 0
0.00.228.021 I llm_load_print_meta: causal attn      = 1
0.00.228.021 I llm_load_print_meta: pooling type     = 0
0.00.228.022 I llm_load_print_meta: rope type        = 2
0.00.228.022 I llm_load_print_meta: rope scaling     = linear
0.00.228.023 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.023 I llm_load_print_meta: freq_scale_train = 1
0.00.228.024 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.024 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.024 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.025 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.025 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.025 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.026 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.026 I llm_load_print_meta: model type       = 2B
0.00.228.027 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.028 I llm_load_print_meta: model params     = 2.51 B
0.00.228.029 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.029 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.029 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.029 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.030 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.030 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.031 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.031 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.031 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.032 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.032 I llm_load_print_meta: max token length = 93
0.00.228.051 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.302.780 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.302.787 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.302.787 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.302.788 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.302.788 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.302.789 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.307.976 I llama_new_context_with_model: n_ctx      = 8192
0.00.307.984 I llama_new_context_with_model: n_batch    = 2048
0.00.307.985 I llama_new_context_with_model: n_ubatch   = 512
0.00.307.985 I llama_new_context_with_model: flash_attn = 0
0.00.307.988 I llama_new_context_with_model: freq_base  = 10000.0
0.00.307.989 I llama_new_context_with_model: freq_scale = 1
0.00.338.021 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.036 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.141 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.025 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.033 I llama_new_context_with_model: graph nodes  = 601
0.00.339.033 I llama_new_context_with_model: graph splits = 1
0.00.339.035 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.159 I main: llama threadpool init, n_threads = 4
0.00.434.172 I 
0.00.434.263 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.434.267 I 
0.00.434.309 I sampler seed: 1208791511
0.00.434.319 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.322 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.434.323 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.324 I 
 seconally:
- **The Importance of Mindfulness:** Mindfulness allows people to stay present, observe their thoughts and feelings without judgment, and respond to situations calmly and

0.02.729.439 I llama_perf_sampler_print:    sampling time =       5.74 ms /    33 runs   (    0.17 ms per token,  5747.13 tokens per second)
0.02.729.442 I llama_perf_context_print:        load time =     432.06 ms
0.02.729.443 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.729.444 I llama_perf_context_print:        eval time =    2276.03 ms /    32 runs   (   71.13 ms per token,    14.06 tokens per second)
0.02.729.445 I llama_perf_context_print:       total time =    2295.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.578 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.950 I main: load the model and apply lora adapter, if any
0.00.022.087 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.137 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.150 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.161 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.166 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.171 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.172 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.173 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.174 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.174 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.175 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.181 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.181 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.182 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.183 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.683 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.015 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.843 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.850 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.850 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.851 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.851 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.852 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.853 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.856 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.856 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.858 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.858 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.859 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.863 I llama_model_loader: - type  f32:   37 tensors
0.00.131.866 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.907 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.120 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.022 I llm_load_vocab: special tokens cache size = 5
0.00.227.178 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.193 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.194 I llm_load_print_meta: arch             = gemma
0.00.227.195 I llm_load_print_meta: vocab type       = SPM
0.00.227.195 I llm_load_print_meta: n_vocab          = 256000
0.00.227.196 I llm_load_print_meta: n_merges         = 0
0.00.227.196 I llm_load_print_meta: vocab_only       = 0
0.00.227.197 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.197 I llm_load_print_meta: n_embd           = 2048
0.00.227.198 I llm_load_print_meta: n_layer          = 18
0.00.227.211 I llm_load_print_meta: n_head           = 8
0.00.227.212 I llm_load_print_meta: n_head_kv        = 1
0.00.227.212 I llm_load_print_meta: n_rot            = 256
0.00.227.212 I llm_load_print_meta: n_swa            = 0
0.00.227.212 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.213 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.214 I llm_load_print_meta: n_gqa            = 8
0.00.227.215 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.216 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.216 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.218 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.218 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.218 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.219 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.220 I llm_load_print_meta: n_ff             = 16384
0.00.227.220 I llm_load_print_meta: n_expert         = 0
0.00.227.221 I llm_load_print_meta: n_expert_used    = 0
0.00.227.221 I llm_load_print_meta: causal attn      = 1
0.00.227.221 I llm_load_print_meta: pooling type     = 0
0.00.227.221 I llm_load_print_meta: rope type        = 2
0.00.227.222 I llm_load_print_meta: rope scaling     = linear
0.00.227.223 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.224 I llm_load_print_meta: freq_scale_train = 1
0.00.227.224 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.224 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.225 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.225 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.225 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.226 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.226 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.227 I llm_load_print_meta: model type       = 2B
0.00.227.227 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.228 I llm_load_print_meta: model params     = 2.51 B
0.00.227.229 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.230 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.230 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.230 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.230 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.231 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.232 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.232 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.232 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.233 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.233 I llm_load_print_meta: max token length = 93
0.00.227.262 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.297.559 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.297.566 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.302.619 I llama_new_context_with_model: n_ctx      = 8192
0.00.302.626 I llama_new_context_with_model: n_batch    = 2048
0.00.302.626 I llama_new_context_with_model: n_ubatch   = 512
0.00.302.626 I llama_new_context_with_model: flash_attn = 0
0.00.302.629 I llama_new_context_with_model: freq_base  = 10000.0
0.00.302.630 I llama_new_context_with_model: freq_scale = 1
0.00.331.946 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.961 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.052 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.915 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.923 I llama_new_context_with_model: graph nodes  = 601
0.00.332.923 I llama_new_context_with_model: graph splits = 1
0.00.332.925 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.184 I main: llama threadpool init, n_threads = 4
0.00.435.196 I 
0.00.435.281 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.285 I 
0.00.435.330 I sampler seed: 2648398353
0.00.435.340 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.343 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.343 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.343 I 
 increasities for a living. 

I am unable to generate the requested content as it contains sexually suggestive or inappropriate content. [end of text]


0.02.425.511 I llama_perf_sampler_print:    sampling time =       4.99 ms /    27 runs   (    0.18 ms per token,  5408.65 tokens per second)
0.02.425.514 I llama_perf_context_print:        load time =     433.15 ms
0.02.425.516 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.425.517 I llama_perf_context_print:        eval time =    1973.28 ms /    26 runs   (   75.90 ms per token,    13.18 tokens per second)
0.02.425.518 I llama_perf_context_print:       total time =    1990.33 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.240s
user	0m38.028s
sys	0m9.465s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3881 (a62ea59c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32262.85 ms
main:    total time = 32262.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.022.344 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.391 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.399 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.405 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.406 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.412 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.413 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.413 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.414 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.416 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.417 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.422 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.422 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.423 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.423 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.424 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.054 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.126 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.937 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.943 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.944 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.945 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.946 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.947 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.948 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.952 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.953 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.954 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.955 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.956 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.959 I llama_model_loader: - type  f32:   37 tensors
0.00.132.962 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.963 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.847 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.096 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.841 I llm_load_vocab: special tokens cache size = 5
0.00.224.938 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.952 I llm_load_print_meta: arch             = gemma
0.00.224.952 I llm_load_print_meta: vocab type       = SPM
0.00.224.953 I llm_load_print_meta: n_vocab          = 256000
0.00.224.954 I llm_load_print_meta: n_merges         = 0
0.00.224.954 I llm_load_print_meta: vocab_only       = 0
0.00.224.954 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.955 I llm_load_print_meta: n_embd           = 2048
0.00.224.955 I llm_load_print_meta: n_layer          = 18
0.00.224.969 I llm_load_print_meta: n_head           = 8
0.00.224.969 I llm_load_print_meta: n_head_kv        = 1
0.00.224.970 I llm_load_print_meta: n_rot            = 256
0.00.224.970 I llm_load_print_meta: n_swa            = 0
0.00.224.970 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.970 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.971 I llm_load_print_meta: n_gqa            = 8
0.00.224.972 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.973 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.974 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.976 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.976 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.977 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.977 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.978 I llm_load_print_meta: n_ff             = 16384
0.00.224.978 I llm_load_print_meta: n_expert         = 0
0.00.224.978 I llm_load_print_meta: n_expert_used    = 0
0.00.224.979 I llm_load_print_meta: causal attn      = 1
0.00.224.979 I llm_load_print_meta: pooling type     = 0
0.00.224.979 I llm_load_print_meta: rope type        = 2
0.00.224.979 I llm_load_print_meta: rope scaling     = linear
0.00.224.981 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.981 I llm_load_print_meta: freq_scale_train = 1
0.00.224.982 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.982 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.982 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.983 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.983 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.983 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.984 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.984 I llm_load_print_meta: model type       = 2B
0.00.224.985 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.985 I llm_load_print_meta: model params     = 2.51 B
0.00.224.986 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.986 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.987 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.987 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.987 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.988 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.988 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.989 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.989 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.989 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.990 I llm_load_print_meta: max token length = 93
0.00.225.008 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.282.085 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.282.093 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.282.094 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.282.094 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.282.095 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.282.095 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.287.185 I llama_new_context_with_model: n_ctx      = 8192
0.00.287.192 I llama_new_context_with_model: n_batch    = 2048
0.00.287.192 I llama_new_context_with_model: n_ubatch   = 512
0.00.287.193 I llama_new_context_with_model: flash_attn = 0
0.00.287.195 I llama_new_context_with_model: freq_base  = 10000.0
0.00.287.196 I llama_new_context_with_model: freq_scale = 1
0.00.315.995 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.011 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.102 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.008 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.015 I llama_new_context_with_model: graph nodes  = 601
0.00.317.015 I llama_new_context_with_model: graph splits = 1
0.00.317.017 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.011 I main: llama threadpool init, n_threads = 4
0.00.399.023 I 
0.00.399.101 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.104 I 
0.00.399.141 I sampler seed: 914551375
0.00.399.152 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.156 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.157 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.159 I 
 seconally.

The sentence is about someone who is struggling with addiction.

**Interpretation:**

The sentence suggests that the person is struggling with addiction and is

0.02.017.516 I llama_perf_sampler_print:    sampling time =       5.79 ms /    33 runs   (    0.18 ms per token,  5701.45 tokens per second)
0.02.017.518 I llama_perf_context_print:        load time =     397.06 ms
0.02.017.519 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.017.521 I llama_perf_context_print:        eval time =    1598.82 ms /    32 runs   (   49.96 ms per token,    20.01 tokens per second)
0.02.017.521 I llama_perf_context_print:       total time =    1618.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3881 (a62ea59c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32022.59 ms
main:    total time = 32022.59 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.567 I build: 3881 (a62ea59c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.901 I main: load the model and apply lora adapter, if any
0.00.022.894 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.906 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.914 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.916 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.921 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.921 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.922 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.923 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.924 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.925 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.931 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.932 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.933 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.934 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.935 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.164 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.107 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.895 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.902 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.903 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.903 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.904 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.905 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.906 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.909 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.909 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.913 I llama_model_loader: - type  f32:   37 tensors
0.00.132.916 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.917 I llama_model_loader: - type q6_K:   19 tensors
0.00.189.812 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.900 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.617 I llm_load_vocab: special tokens cache size = 5
0.00.224.382 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.396 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.397 I llm_load_print_meta: arch             = gemma
0.00.224.398 I llm_load_print_meta: vocab type       = SPM
0.00.224.398 I llm_load_print_meta: n_vocab          = 256000
0.00.224.399 I llm_load_print_meta: n_merges         = 0
0.00.224.399 I llm_load_print_meta: vocab_only       = 0
0.00.224.399 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.400 I llm_load_print_meta: n_embd           = 2048
0.00.224.400 I llm_load_print_meta: n_layer          = 18
0.00.224.411 I llm_load_print_meta: n_head           = 8
0.00.224.413 I llm_load_print_meta: n_head_kv        = 1
0.00.224.413 I llm_load_print_meta: n_rot            = 256
0.00.224.413 I llm_load_print_meta: n_swa            = 0
0.00.224.414 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.414 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.415 I llm_load_print_meta: n_gqa            = 8
0.00.224.416 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.416 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.417 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.418 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.419 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.419 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.419 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.420 I llm_load_print_meta: n_ff             = 16384
0.00.224.421 I llm_load_print_meta: n_expert         = 0
0.00.224.421 I llm_load_print_meta: n_expert_used    = 0
0.00.224.421 I llm_load_print_meta: causal attn      = 1
0.00.224.422 I llm_load_print_meta: pooling type     = 0
0.00.224.422 I llm_load_print_meta: rope type        = 2
0.00.224.422 I llm_load_print_meta: rope scaling     = linear
0.00.224.424 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.424 I llm_load_print_meta: freq_scale_train = 1
0.00.224.425 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.425 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.425 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.426 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.426 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.426 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.427 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.427 I llm_load_print_meta: model type       = 2B
0.00.224.428 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.429 I llm_load_print_meta: model params     = 2.51 B
0.00.224.430 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.430 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.431 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.431 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.431 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.432 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.432 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.432 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.433 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.433 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.434 I llm_load_print_meta: max token length = 93
0.00.224.453 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.282.080 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.287.161 I llama_new_context_with_model: n_ctx      = 8192
0.00.287.167 I llama_new_context_with_model: n_batch    = 2048
0.00.287.167 I llama_new_context_with_model: n_ubatch   = 512
0.00.287.168 I llama_new_context_with_model: flash_attn = 0
0.00.287.170 I llama_new_context_with_model: freq_base  = 10000.0
0.00.287.171 I llama_new_context_with_model: freq_scale = 1
0.00.316.416 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.432 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.534 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.408 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.417 I llama_new_context_with_model: graph nodes  = 601
0.00.317.417 I llama_new_context_with_model: graph splits = 1
0.00.317.419 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.398.298 I main: llama threadpool init, n_threads = 4
0.00.398.310 I 
0.00.398.400 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.398.404 I 
0.00.398.449 I sampler seed: 2727797923
0.00.398.459 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.398.461 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.398.462 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.398.462 I 
 seconally. I am unable to hear you clearly. Please repeat yourself. [end of text]


0.01.200.608 I llama_perf_sampler_print:    sampling time =       2.83 ms /    17 runs   (    0.17 ms per token,  6017.70 tokens per second)
0.01.200.610 I llama_perf_context_print:        load time =     396.32 ms
0.01.200.611 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.200.613 I llama_perf_context_print:        eval time =     792.38 ms /    16 runs   (   49.52 ms per token,    20.19 tokens per second)
0.01.200.614 I llama_perf_context_print:       total time =     802.32 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.546s
user	8m11.182s
sys	0m7.125s
