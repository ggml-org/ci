+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.563 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.763 I main: load the model and apply lora adapter, if any
0.00.021.495 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.505 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.517 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.526 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.530 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.533 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.534 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.535 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.535 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.536 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.536 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.540 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.541 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.542 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.542 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.543 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.303 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.838 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.728 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.735 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.736 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.737 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.737 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.739 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.739 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.742 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.742 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.743 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.743 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.744 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.748 I llama_model_loader: - type  f32:   37 tensors
0.00.131.749 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.447 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.479 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.226 I llm_load_vocab: special tokens cache size = 5
0.00.278.704 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.724 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.725 I llm_load_print_meta: arch             = gemma
0.00.278.725 I llm_load_print_meta: vocab type       = SPM
0.00.278.726 I llm_load_print_meta: n_vocab          = 256000
0.00.278.727 I llm_load_print_meta: n_merges         = 0
0.00.278.727 I llm_load_print_meta: vocab_only       = 0
0.00.278.727 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.728 I llm_load_print_meta: n_embd           = 2048
0.00.278.728 I llm_load_print_meta: n_layer          = 18
0.00.278.740 I llm_load_print_meta: n_head           = 8
0.00.278.741 I llm_load_print_meta: n_head_kv        = 1
0.00.278.742 I llm_load_print_meta: n_rot            = 256
0.00.278.742 I llm_load_print_meta: n_swa            = 0
0.00.278.742 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.742 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.743 I llm_load_print_meta: n_gqa            = 8
0.00.278.744 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.745 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.746 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.747 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.748 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.748 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.749 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.750 I llm_load_print_meta: n_ff             = 16384
0.00.278.750 I llm_load_print_meta: n_expert         = 0
0.00.278.750 I llm_load_print_meta: n_expert_used    = 0
0.00.278.751 I llm_load_print_meta: causal attn      = 1
0.00.278.751 I llm_load_print_meta: pooling type     = 0
0.00.278.751 I llm_load_print_meta: rope type        = 2
0.00.278.751 I llm_load_print_meta: rope scaling     = linear
0.00.278.753 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.753 I llm_load_print_meta: freq_scale_train = 1
0.00.278.753 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.754 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.754 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.754 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.754 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.755 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.755 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.756 I llm_load_print_meta: model type       = 2B
0.00.278.756 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.757 I llm_load_print_meta: model params     = 2.51 B
0.00.278.758 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.758 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.759 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.759 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.759 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.759 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.760 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.760 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.761 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.762 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.762 I llm_load_print_meta: max token length = 93
0.00.379.560 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.379.569 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.379.570 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.379.571 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.379.571 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.379.572 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.384.926 I llama_new_context_with_model: n_seq_max     = 1
0.00.384.932 I llama_new_context_with_model: n_ctx         = 4096
0.00.384.932 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.384.933 I llama_new_context_with_model: n_batch       = 2048
0.00.384.933 I llama_new_context_with_model: n_ubatch      = 512
0.00.384.934 I llama_new_context_with_model: flash_attn    = 0
0.00.384.936 I llama_new_context_with_model: freq_base     = 10000.0
0.00.384.937 I llama_new_context_with_model: freq_scale    = 1
0.00.384.938 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.399.852 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.399.867 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.399.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.401.275 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.401.281 I llama_new_context_with_model: graph nodes  = 601
0.00.401.282 I llama_new_context_with_model: graph splits = 1
0.00.401.284 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.401.284 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.868 I main: llama threadpool init, n_threads = 4
0.00.487.884 I 
0.00.487.959 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.487.962 I 
0.00.488.005 I sampler seed: 934561218
0.00.488.015 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.020 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.488.021 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.021 I 
 increasities, and other forms of sexual harassment.

**Sexual harassment is a pervasive problem affecting individuals and organizations across all sectors.** It undermines the principles of equality

0.02.764.834 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6978.22 tokens per second)
0.02.764.837 I llama_perf_context_print:        load time =     487.09 ms
0.02.764.838 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.764.839 I llama_perf_context_print:        eval time =    2257.10 ms /    32 runs   (   70.53 ms per token,    14.18 tokens per second)
0.02.764.840 I llama_perf_context_print:       total time =    2276.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.175 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.410 I main: llama backend init
0.00.000.417 I main: load the model and apply lora adapter, if any
0.00.020.706 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.720 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.727 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.728 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.732 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.733 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.734 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.734 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.736 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.737 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.742 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.743 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.744 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.745 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.746 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.047.914 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.513 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.404 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.411 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.412 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.412 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.413 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.414 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.415 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.417 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.418 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.419 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.420 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.421 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.424 I llama_model_loader: - type  f32:   37 tensors
0.00.130.425 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.269 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.674 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.340 I llm_load_vocab: special tokens cache size = 5
0.00.277.755 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.774 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.774 I llm_load_print_meta: arch             = gemma
0.00.277.775 I llm_load_print_meta: vocab type       = SPM
0.00.277.776 I llm_load_print_meta: n_vocab          = 256000
0.00.277.777 I llm_load_print_meta: n_merges         = 0
0.00.277.778 I llm_load_print_meta: vocab_only       = 0
0.00.277.778 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.778 I llm_load_print_meta: n_embd           = 2048
0.00.277.779 I llm_load_print_meta: n_layer          = 18
0.00.277.791 I llm_load_print_meta: n_head           = 8
0.00.277.792 I llm_load_print_meta: n_head_kv        = 1
0.00.277.792 I llm_load_print_meta: n_rot            = 256
0.00.277.792 I llm_load_print_meta: n_swa            = 0
0.00.277.793 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.793 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.794 I llm_load_print_meta: n_gqa            = 8
0.00.277.795 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.796 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.796 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.798 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.799 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.799 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.799 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.800 I llm_load_print_meta: n_ff             = 16384
0.00.277.801 I llm_load_print_meta: n_expert         = 0
0.00.277.801 I llm_load_print_meta: n_expert_used    = 0
0.00.277.801 I llm_load_print_meta: causal attn      = 1
0.00.277.801 I llm_load_print_meta: pooling type     = 0
0.00.277.802 I llm_load_print_meta: rope type        = 2
0.00.277.802 I llm_load_print_meta: rope scaling     = linear
0.00.277.804 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.804 I llm_load_print_meta: freq_scale_train = 1
0.00.277.804 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.805 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.805 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.805 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.805 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.806 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.806 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.807 I llm_load_print_meta: model type       = 2B
0.00.277.807 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.808 I llm_load_print_meta: model params     = 2.51 B
0.00.277.809 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.809 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.810 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.810 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.810 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.811 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.811 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.811 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.812 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.812 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.813 I llm_load_print_meta: max token length = 93
0.00.373.333 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.378.636 I llama_new_context_with_model: n_seq_max     = 1
0.00.378.644 I llama_new_context_with_model: n_ctx         = 4096
0.00.378.644 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.378.645 I llama_new_context_with_model: n_batch       = 2048
0.00.378.645 I llama_new_context_with_model: n_ubatch      = 512
0.00.378.646 I llama_new_context_with_model: flash_attn    = 0
0.00.378.649 I llama_new_context_with_model: freq_base     = 10000.0
0.00.378.650 I llama_new_context_with_model: freq_scale    = 1
0.00.378.651 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.394.554 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.394.570 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.394.666 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.395.916 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.395.923 I llama_new_context_with_model: graph nodes  = 601
0.00.395.924 I llama_new_context_with_model: graph splits = 1
0.00.395.926 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.395.926 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.272 I main: llama threadpool init, n_threads = 4
0.00.480.286 I 
0.00.480.365 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.480.369 I 
0.00.480.429 I sampler seed: 2878307505
0.00.480.440 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.451 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.480.455 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.456 I 
 increasively. [end of text]


0.00.757.115 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8000.00 tokens per second)
0.00.757.118 I llama_perf_context_print:        load time =     479.84 ms
0.00.757.119 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.757.120 I llama_perf_context_print:        eval time =     273.26 ms /     4 runs   (   68.32 ms per token,    14.64 tokens per second)
0.00.757.121 I llama_perf_context_print:       total time =     276.85 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.175 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.414 I main: llama backend init
0.00.000.420 I main: load the model and apply lora adapter, if any
0.00.021.150 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.159 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.167 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.172 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.173 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.176 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.177 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.178 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.179 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.180 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.180 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.185 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.186 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.187 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.188 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.189 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.014 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.273 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.204 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.205 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.206 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.206 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.208 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.209 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.212 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.213 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.214 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.215 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.216 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.220 I llama_model_loader: - type  f32:   37 tensors
0.00.132.221 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.336 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.758 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.310 I llm_load_vocab: special tokens cache size = 5
0.00.287.581 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.601 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.602 I llm_load_print_meta: arch             = gemma
0.00.287.602 I llm_load_print_meta: vocab type       = SPM
0.00.287.603 I llm_load_print_meta: n_vocab          = 256000
0.00.287.604 I llm_load_print_meta: n_merges         = 0
0.00.287.604 I llm_load_print_meta: vocab_only       = 0
0.00.287.605 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.605 I llm_load_print_meta: n_embd           = 2048
0.00.287.605 I llm_load_print_meta: n_layer          = 18
0.00.287.617 I llm_load_print_meta: n_head           = 8
0.00.287.618 I llm_load_print_meta: n_head_kv        = 1
0.00.287.618 I llm_load_print_meta: n_rot            = 256
0.00.287.618 I llm_load_print_meta: n_swa            = 0
0.00.287.619 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.619 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.620 I llm_load_print_meta: n_gqa            = 8
0.00.287.621 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.622 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.623 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.624 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.624 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.625 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.625 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.626 I llm_load_print_meta: n_ff             = 16384
0.00.287.626 I llm_load_print_meta: n_expert         = 0
0.00.287.626 I llm_load_print_meta: n_expert_used    = 0
0.00.287.627 I llm_load_print_meta: causal attn      = 1
0.00.287.627 I llm_load_print_meta: pooling type     = 0
0.00.287.627 I llm_load_print_meta: rope type        = 2
0.00.287.628 I llm_load_print_meta: rope scaling     = linear
0.00.287.629 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.629 I llm_load_print_meta: freq_scale_train = 1
0.00.287.630 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.630 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.630 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.630 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.631 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.631 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.631 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.632 I llm_load_print_meta: model type       = 2B
0.00.287.632 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.633 I llm_load_print_meta: model params     = 2.51 B
0.00.287.634 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.634 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.635 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.635 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.635 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.636 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.636 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.637 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.637 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.638 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.638 I llm_load_print_meta: max token length = 93
0.00.365.038 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.365.046 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.365.047 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.365.047 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.365.048 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.365.048 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.370.211 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.218 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.219 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.219 I llama_new_context_with_model: n_batch       = 2048
0.00.370.220 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.220 I llama_new_context_with_model: flash_attn    = 0
0.00.370.222 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.223 I llama_new_context_with_model: freq_scale    = 1
0.00.370.224 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.306 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.322 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.423 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.737 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.745 I llama_new_context_with_model: graph nodes  = 601
0.00.386.745 I llama_new_context_with_model: graph splits = 1
0.00.386.747 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.386.747 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.400 I main: llama threadpool init, n_threads = 4
0.00.483.416 I 
0.00.483.495 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.483.498 I 
0.00.483.543 I sampler seed: 1836360584
0.00.483.554 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.567 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.483.570 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.570 I 
 secon.

I understand that you are looking for information about [insert topic]. However, I am unable to access or provide personal or sensitive information, including personal

0.02.801.297 I llama_perf_sampler_print:    sampling time =       5.18 ms /    33 runs   (    0.16 ms per token,  6365.74 tokens per second)
0.02.801.300 I llama_perf_context_print:        load time =     482.96 ms
0.02.801.301 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.801.302 I llama_perf_context_print:        eval time =    2298.58 ms /    32 runs   (   71.83 ms per token,    13.92 tokens per second)
0.02.801.303 I llama_perf_context_print:       total time =    2317.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.556 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.000.769 I main: load the model and apply lora adapter, if any
0.00.021.311 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.321 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.329 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.334 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.335 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.340 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.341 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.342 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.344 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.344 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.345 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.350 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.351 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.352 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.352 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.353 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.872 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.089 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.990 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.997 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.997 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.998 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.998 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.999 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.000 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.002 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.003 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.003 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.005 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.006 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.009 I llama_model_loader: - type  f32:   37 tensors
0.00.131.010 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.034 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.322 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.931 I llm_load_vocab: special tokens cache size = 5
0.00.282.034 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.050 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.050 I llm_load_print_meta: arch             = gemma
0.00.282.051 I llm_load_print_meta: vocab type       = SPM
0.00.282.051 I llm_load_print_meta: n_vocab          = 256000
0.00.282.052 I llm_load_print_meta: n_merges         = 0
0.00.282.052 I llm_load_print_meta: vocab_only       = 0
0.00.282.052 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.053 I llm_load_print_meta: n_embd           = 2048
0.00.282.053 I llm_load_print_meta: n_layer          = 18
0.00.282.065 I llm_load_print_meta: n_head           = 8
0.00.282.066 I llm_load_print_meta: n_head_kv        = 1
0.00.282.066 I llm_load_print_meta: n_rot            = 256
0.00.282.066 I llm_load_print_meta: n_swa            = 0
0.00.282.067 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.067 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.068 I llm_load_print_meta: n_gqa            = 8
0.00.282.069 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.069 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.070 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.072 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.072 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.073 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.073 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.074 I llm_load_print_meta: n_ff             = 16384
0.00.282.074 I llm_load_print_meta: n_expert         = 0
0.00.282.075 I llm_load_print_meta: n_expert_used    = 0
0.00.282.075 I llm_load_print_meta: causal attn      = 1
0.00.282.075 I llm_load_print_meta: pooling type     = 0
0.00.282.075 I llm_load_print_meta: rope type        = 2
0.00.282.076 I llm_load_print_meta: rope scaling     = linear
0.00.282.077 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.077 I llm_load_print_meta: freq_scale_train = 1
0.00.282.078 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.078 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.078 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.079 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.079 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.079 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.080 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.080 I llm_load_print_meta: model type       = 2B
0.00.282.081 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.081 I llm_load_print_meta: model params     = 2.51 B
0.00.282.082 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.083 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.083 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.083 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.083 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.084 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.084 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.084 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.085 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.085 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.086 I llm_load_print_meta: max token length = 93
0.00.353.018 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.353.024 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.358.093 I llama_new_context_with_model: n_seq_max     = 1
0.00.358.100 I llama_new_context_with_model: n_ctx         = 4096
0.00.358.100 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.358.100 I llama_new_context_with_model: n_batch       = 2048
0.00.358.101 I llama_new_context_with_model: n_ubatch      = 512
0.00.358.101 I llama_new_context_with_model: flash_attn    = 0
0.00.358.103 I llama_new_context_with_model: freq_base     = 10000.0
0.00.358.104 I llama_new_context_with_model: freq_scale    = 1
0.00.358.105 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.372.800 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.372.813 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.372.903 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.136 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.142 I llama_new_context_with_model: graph nodes  = 601
0.00.374.143 I llama_new_context_with_model: graph splits = 1
0.00.374.145 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.374.145 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.983 I main: llama threadpool init, n_threads = 4
0.00.460.999 I 
0.00.461.073 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.461.076 I 
0.00.461.120 I sampler seed: 2859533213
0.00.461.131 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.143 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.147 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.147 I 
 increasities, the company's top-tier executives, are discussing the company's future plans.

The executives are divided on the following:

*

0.02.917.088 I llama_perf_sampler_print:    sampling time =       4.84 ms /    33 runs   (    0.15 ms per token,  6823.82 tokens per second)
0.02.917.091 I llama_perf_context_print:        load time =     460.20 ms
0.02.917.092 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.917.093 I llama_perf_context_print:        eval time =    2436.19 ms /    32 runs   (   76.13 ms per token,    13.14 tokens per second)
0.02.917.094 I llama_perf_context_print:       total time =    2456.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.793s
user	0m32.248s
sys	0m9.503s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4343 (0006f5a7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40225.17 ms
main:    total time = 40225.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.000.770 I main: load the model and apply lora adapter, if any
0.00.020.917 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.927 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.936 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.941 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.942 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.946 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.947 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.949 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.950 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.950 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.951 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.955 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.956 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.957 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.960 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.960 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.703 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.022 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.962 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.969 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.970 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.971 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.971 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.973 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.974 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.977 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.977 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.978 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.978 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.979 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.983 I llama_model_loader: - type  f32:   37 tensors
0.00.130.984 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.985 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.905 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.278 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.813 I llm_load_vocab: special tokens cache size = 5
0.00.275.906 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.924 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.925 I llm_load_print_meta: arch             = gemma
0.00.275.925 I llm_load_print_meta: vocab type       = SPM
0.00.275.926 I llm_load_print_meta: n_vocab          = 256000
0.00.275.927 I llm_load_print_meta: n_merges         = 0
0.00.275.927 I llm_load_print_meta: vocab_only       = 0
0.00.275.928 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.928 I llm_load_print_meta: n_embd           = 2048
0.00.275.928 I llm_load_print_meta: n_layer          = 18
0.00.275.940 I llm_load_print_meta: n_head           = 8
0.00.275.941 I llm_load_print_meta: n_head_kv        = 1
0.00.275.941 I llm_load_print_meta: n_rot            = 256
0.00.275.942 I llm_load_print_meta: n_swa            = 0
0.00.275.942 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.942 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.943 I llm_load_print_meta: n_gqa            = 8
0.00.275.944 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.945 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.946 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.948 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.948 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.948 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.949 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.950 I llm_load_print_meta: n_ff             = 16384
0.00.275.950 I llm_load_print_meta: n_expert         = 0
0.00.275.950 I llm_load_print_meta: n_expert_used    = 0
0.00.275.951 I llm_load_print_meta: causal attn      = 1
0.00.275.951 I llm_load_print_meta: pooling type     = 0
0.00.275.951 I llm_load_print_meta: rope type        = 2
0.00.275.952 I llm_load_print_meta: rope scaling     = linear
0.00.275.953 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.953 I llm_load_print_meta: freq_scale_train = 1
0.00.275.954 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.954 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.955 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.955 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.955 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.956 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.956 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.957 I llm_load_print_meta: model type       = 2B
0.00.275.957 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.275.958 I llm_load_print_meta: model params     = 2.51 B
0.00.275.959 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.275.959 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.959 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.959 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.960 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.960 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.960 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.961 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.962 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.962 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.963 I llm_load_print_meta: max token length = 93
0.00.336.800 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.336.807 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.336.808 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.336.809 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.336.809 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.336.810 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.341.892 I llama_new_context_with_model: n_seq_max     = 1
0.00.341.898 I llama_new_context_with_model: n_ctx         = 4096
0.00.341.898 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.341.899 I llama_new_context_with_model: n_batch       = 2048
0.00.341.899 I llama_new_context_with_model: n_ubatch      = 512
0.00.341.900 I llama_new_context_with_model: flash_attn    = 0
0.00.341.903 I llama_new_context_with_model: freq_base     = 10000.0
0.00.341.903 I llama_new_context_with_model: freq_scale    = 1
0.00.341.904 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.356.186 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.356.200 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.356.291 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.536 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.540 I llama_new_context_with_model: graph nodes  = 601
0.00.357.541 I llama_new_context_with_model: graph splits = 1
0.00.357.543 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.357.544 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.407 I main: llama threadpool init, n_threads = 4
0.00.433.422 I 
0.00.433.499 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.433.503 I 
0.00.433.547 I sampler seed: 3648617759
0.00.433.558 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.570 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.433.574 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.574 I 
 increasities and other harmful sexual behavior?

I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.01.490.198 I llama_perf_sampler_print:    sampling time =       3.45 ms /    22 runs   (    0.16 ms per token,  6373.12 tokens per second)
0.01.490.200 I llama_perf_context_print:        load time =     432.62 ms
0.01.490.202 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.490.203 I llama_perf_context_print:        eval time =    1043.79 ms /    21 runs   (   49.70 ms per token,    20.12 tokens per second)
0.01.490.204 I llama_perf_context_print:       total time =    1056.80 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4343 (0006f5a7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40199.14 ms
main:    total time = 40199.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.594 I build: 4343 (0006f5a7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.807 I main: llama backend init
0.00.000.814 I main: load the model and apply lora adapter, if any
0.00.021.087 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.107 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.114 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.115 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.119 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.120 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.121 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.122 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.122 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.123 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.127 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.128 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.128 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.129 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.130 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.544 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.023 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.279 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.286 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.287 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.287 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.288 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.289 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.289 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.292 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.293 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.296 I llama_model_loader: - type  f32:   37 tensors
0.00.132.297 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.297 I llama_model_loader: - type q6_K:   19 tensors
0.00.225.465 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.277.793 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.278.396 I llm_load_vocab: special tokens cache size = 5
0.00.299.539 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.558 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.558 I llm_load_print_meta: arch             = gemma
0.00.299.559 I llm_load_print_meta: vocab type       = SPM
0.00.299.559 I llm_load_print_meta: n_vocab          = 256000
0.00.299.560 I llm_load_print_meta: n_merges         = 0
0.00.299.560 I llm_load_print_meta: vocab_only       = 0
0.00.299.561 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.561 I llm_load_print_meta: n_embd           = 2048
0.00.299.561 I llm_load_print_meta: n_layer          = 18
0.00.299.572 I llm_load_print_meta: n_head           = 8
0.00.299.573 I llm_load_print_meta: n_head_kv        = 1
0.00.299.574 I llm_load_print_meta: n_rot            = 256
0.00.299.574 I llm_load_print_meta: n_swa            = 0
0.00.299.574 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.575 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.575 I llm_load_print_meta: n_gqa            = 8
0.00.299.577 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.578 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.578 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.580 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.580 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.580 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.581 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.582 I llm_load_print_meta: n_ff             = 16384
0.00.299.582 I llm_load_print_meta: n_expert         = 0
0.00.299.582 I llm_load_print_meta: n_expert_used    = 0
0.00.299.583 I llm_load_print_meta: causal attn      = 1
0.00.299.583 I llm_load_print_meta: pooling type     = 0
0.00.299.583 I llm_load_print_meta: rope type        = 2
0.00.299.584 I llm_load_print_meta: rope scaling     = linear
0.00.299.585 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.586 I llm_load_print_meta: freq_scale_train = 1
0.00.299.586 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.586 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.587 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.587 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.587 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.587 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.588 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.588 I llm_load_print_meta: model type       = 2B
0.00.299.588 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.299.589 I llm_load_print_meta: model params     = 2.51 B
0.00.299.590 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.299.590 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.591 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.591 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.592 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.592 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.592 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.592 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.593 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.594 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.594 I llm_load_print_meta: max token length = 93
0.00.357.077 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.362.165 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.171 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.171 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.171 I llama_new_context_with_model: n_batch       = 2048
0.00.362.172 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.172 I llama_new_context_with_model: flash_attn    = 0
0.00.362.176 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.177 I llama_new_context_with_model: freq_scale    = 1
0.00.362.178 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.377.139 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.154 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.256 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.558 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.378.563 I llama_new_context_with_model: graph nodes  = 601
0.00.378.564 I llama_new_context_with_model: graph splits = 1
0.00.378.566 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.378.567 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.127 I main: llama threadpool init, n_threads = 4
0.00.454.142 I 
0.00.454.220 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.454.224 I 
0.00.454.271 I sampler seed: 1709821336
0.00.454.282 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.294 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.454.297 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.298 I 
 seconal in the statement "The speaker was in a state of perplexity and bewilderment."

**a**. bewilderment
**b**. perplexity


0.02.036.432 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6529.48 tokens per second)
0.02.036.437 I llama_perf_context_print:        load time =     453.30 ms
0.02.036.438 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.036.440 I llama_perf_context_print:        eval time =    1563.32 ms /    32 runs   (   48.85 ms per token,    20.47 tokens per second)
0.02.036.440 I llama_perf_context_print:       total time =    1582.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.835s
user	10m22.150s
sys	0m7.026s
