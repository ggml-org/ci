+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.557 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.158 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.206 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.213 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.218 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.219 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.222 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.223 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.223 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.224 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.225 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.225 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.229 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.230 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.230 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.231 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.231 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.771 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.073 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.961 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.962 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.963 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.964 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.965 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.966 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.969 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.970 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.971 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.972 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.973 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.977 I llama_model_loader: - type  f32:   37 tensors
0.00.132.980 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.511 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.424 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.167 I llm_load_vocab: special tokens cache size = 5
0.00.227.235 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.249 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.250 I llm_load_print_meta: arch             = gemma
0.00.227.250 I llm_load_print_meta: vocab type       = SPM
0.00.227.251 I llm_load_print_meta: n_vocab          = 256000
0.00.227.251 I llm_load_print_meta: n_merges         = 0
0.00.227.252 I llm_load_print_meta: vocab_only       = 0
0.00.227.253 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.253 I llm_load_print_meta: n_embd           = 2048
0.00.227.253 I llm_load_print_meta: n_layer          = 18
0.00.227.267 I llm_load_print_meta: n_head           = 8
0.00.227.268 I llm_load_print_meta: n_head_kv        = 1
0.00.227.268 I llm_load_print_meta: n_rot            = 256
0.00.227.269 I llm_load_print_meta: n_swa            = 0
0.00.227.269 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.269 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.270 I llm_load_print_meta: n_gqa            = 8
0.00.227.271 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.272 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.273 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.274 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.275 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.275 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.276 I llm_load_print_meta: n_ff             = 16384
0.00.227.277 I llm_load_print_meta: n_expert         = 0
0.00.227.277 I llm_load_print_meta: n_expert_used    = 0
0.00.227.277 I llm_load_print_meta: causal attn      = 1
0.00.227.277 I llm_load_print_meta: pooling type     = 0
0.00.227.278 I llm_load_print_meta: rope type        = 2
0.00.227.278 I llm_load_print_meta: rope scaling     = linear
0.00.227.280 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.280 I llm_load_print_meta: freq_scale_train = 1
0.00.227.281 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.281 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.281 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.282 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.282 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.282 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.282 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.283 I llm_load_print_meta: model type       = 2B
0.00.227.283 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.284 I llm_load_print_meta: model params     = 2.51 B
0.00.227.285 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.285 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.286 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.286 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.286 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.287 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.287 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.287 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.288 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.288 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.289 I llm_load_print_meta: max token length = 93
0.00.227.304 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.270 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.325.277 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.325.278 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.325.279 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.325.279 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.325.280 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.330.409 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.415 I llama_new_context_with_model: n_batch    = 2048
0.00.330.416 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.416 I llama_new_context_with_model: flash_attn = 0
0.00.330.419 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.420 I llama_new_context_with_model: freq_scale = 1
0.00.359.946 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.964 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.052 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.931 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.938 I llama_new_context_with_model: graph nodes  = 601
0.00.360.939 I llama_new_context_with_model: graph splits = 1
0.00.360.941 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.915 I main: llama threadpool init, n_threads = 4
0.00.454.930 I 
0.00.455.008 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.011 I 
0.00.455.048 I sampler seed: 462537345
0.00.455.057 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.060 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.455.061 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.061 I 
 increasities and the like.

I am unable to provide sexually suggestive or inappropriate content. [end of text]


0.01.812.139 I llama_perf_sampler_print:    sampling time =       2.82 ms /    20 runs   (    0.14 ms per token,  7099.75 tokens per second)
0.01.812.141 I llama_perf_context_print:        load time =     453.00 ms
0.01.812.142 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.812.144 I llama_perf_context_print:        eval time =    1345.38 ms /    19 runs   (   70.81 ms per token,    14.12 tokens per second)
0.01.812.144 I llama_perf_context_print:       total time =    1357.23 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.560 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.771 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.785 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.792 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.793 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.796 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.797 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.798 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.798 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.799 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.800 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.805 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.806 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.806 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.807 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.807 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.498 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.404 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.271 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.278 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.279 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.280 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.280 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.281 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.282 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.285 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.285 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.286 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.287 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.287 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.290 I llama_model_loader: - type  f32:   37 tensors
0.00.133.294 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.283 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.186 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.978 I llm_load_vocab: special tokens cache size = 5
0.00.229.280 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.295 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.296 I llm_load_print_meta: arch             = gemma
0.00.229.296 I llm_load_print_meta: vocab type       = SPM
0.00.229.297 I llm_load_print_meta: n_vocab          = 256000
0.00.229.298 I llm_load_print_meta: n_merges         = 0
0.00.229.298 I llm_load_print_meta: vocab_only       = 0
0.00.229.299 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.299 I llm_load_print_meta: n_embd           = 2048
0.00.229.299 I llm_load_print_meta: n_layer          = 18
0.00.229.313 I llm_load_print_meta: n_head           = 8
0.00.229.314 I llm_load_print_meta: n_head_kv        = 1
0.00.229.314 I llm_load_print_meta: n_rot            = 256
0.00.229.314 I llm_load_print_meta: n_swa            = 0
0.00.229.315 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.315 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.316 I llm_load_print_meta: n_gqa            = 8
0.00.229.317 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.318 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.319 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.320 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.321 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.321 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.323 I llm_load_print_meta: n_ff             = 16384
0.00.229.323 I llm_load_print_meta: n_expert         = 0
0.00.229.323 I llm_load_print_meta: n_expert_used    = 0
0.00.229.324 I llm_load_print_meta: causal attn      = 1
0.00.229.324 I llm_load_print_meta: pooling type     = 0
0.00.229.324 I llm_load_print_meta: rope type        = 2
0.00.229.324 I llm_load_print_meta: rope scaling     = linear
0.00.229.326 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.326 I llm_load_print_meta: freq_scale_train = 1
0.00.229.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.327 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.327 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.328 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.328 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.328 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.328 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.329 I llm_load_print_meta: model type       = 2B
0.00.229.330 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.330 I llm_load_print_meta: model params     = 2.51 B
0.00.229.331 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.331 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.332 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.332 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.332 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.333 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.333 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.334 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.334 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.334 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.335 I llm_load_print_meta: max token length = 93
0.00.229.353 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.322.978 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.327.980 I llama_new_context_with_model: n_ctx      = 8192
0.00.327.987 I llama_new_context_with_model: n_batch    = 2048
0.00.327.987 I llama_new_context_with_model: n_ubatch   = 512
0.00.327.988 I llama_new_context_with_model: flash_attn = 0
0.00.327.991 I llama_new_context_with_model: freq_base  = 10000.0
0.00.327.992 I llama_new_context_with_model: freq_scale = 1
0.00.357.485 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.500 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.357.590 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.478 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.486 I llama_new_context_with_model: graph nodes  = 601
0.00.358.487 I llama_new_context_with_model: graph splits = 1
0.00.358.489 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.540 I main: llama threadpool init, n_threads = 4
0.00.445.552 I 
0.00.445.626 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.629 I 
0.00.445.667 I sampler seed: 2473987394
0.00.445.677 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.681 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.682 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.682 I 
 increamental

I am unable to generate a response as requested because the provided context does not contain any information regarding the specific rules or parameters that govern the generation of

0.02.639.595 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7025.76 tokens per second)
0.02.639.597 I llama_perf_context_print:        load time =     443.68 ms
0.02.639.598 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.639.599 I llama_perf_context_print:        eval time =    2176.32 ms /    32 runs   (   68.01 ms per token,    14.70 tokens per second)
0.02.639.600 I llama_perf_context_print:       total time =    2194.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.550 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.896 I main: load the model and apply lora adapter, if any
0.00.022.106 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.153 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.160 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.166 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.167 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.170 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.171 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.172 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.173 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.174 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.175 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.180 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.181 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.181 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.182 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.523 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.280 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.145 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.152 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.153 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.154 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.155 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.156 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.157 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.160 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.162 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.163 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.163 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.165 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.168 I llama_model_loader: - type  f32:   37 tensors
0.00.133.171 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.062 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.548 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.303 I llm_load_vocab: special tokens cache size = 5
0.00.228.331 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.345 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.345 I llm_load_print_meta: arch             = gemma
0.00.228.346 I llm_load_print_meta: vocab type       = SPM
0.00.228.346 I llm_load_print_meta: n_vocab          = 256000
0.00.228.347 I llm_load_print_meta: n_merges         = 0
0.00.228.347 I llm_load_print_meta: vocab_only       = 0
0.00.228.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.348 I llm_load_print_meta: n_embd           = 2048
0.00.228.348 I llm_load_print_meta: n_layer          = 18
0.00.228.360 I llm_load_print_meta: n_head           = 8
0.00.228.361 I llm_load_print_meta: n_head_kv        = 1
0.00.228.362 I llm_load_print_meta: n_rot            = 256
0.00.228.362 I llm_load_print_meta: n_swa            = 0
0.00.228.362 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.362 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.363 I llm_load_print_meta: n_gqa            = 8
0.00.228.364 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.365 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.366 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.367 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.368 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.368 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.369 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.370 I llm_load_print_meta: n_ff             = 16384
0.00.228.370 I llm_load_print_meta: n_expert         = 0
0.00.228.370 I llm_load_print_meta: n_expert_used    = 0
0.00.228.370 I llm_load_print_meta: causal attn      = 1
0.00.228.370 I llm_load_print_meta: pooling type     = 0
0.00.228.371 I llm_load_print_meta: rope type        = 2
0.00.228.371 I llm_load_print_meta: rope scaling     = linear
0.00.228.372 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.373 I llm_load_print_meta: freq_scale_train = 1
0.00.228.373 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.374 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.374 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.374 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.375 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.375 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.375 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.376 I llm_load_print_meta: model type       = 2B
0.00.228.376 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.377 I llm_load_print_meta: model params     = 2.51 B
0.00.228.378 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.378 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.378 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.379 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.379 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.379 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.380 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.380 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.381 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.381 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.382 I llm_load_print_meta: max token length = 93
0.00.228.399 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.377 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.304.384 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.385 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.304.386 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.304.386 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.387 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.309.747 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.755 I llama_new_context_with_model: n_batch    = 2048
0.00.309.755 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.756 I llama_new_context_with_model: flash_attn = 0
0.00.309.758 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.759 I llama_new_context_with_model: freq_scale = 1
0.00.338.431 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.449 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.540 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.391 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.398 I llama_new_context_with_model: graph nodes  = 601
0.00.339.398 I llama_new_context_with_model: graph splits = 1
0.00.339.400 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.479 I main: llama threadpool init, n_threads = 4
0.00.432.492 I 
0.00.432.566 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.432.569 I 
0.00.432.605 I sampler seed: 3561796071
0.00.432.615 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.617 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.432.618 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.618 I 
 increamically, while the narrator reflects on the fleeting nature of time and the importance of living in the moment.

The hands of the clock ticked with relentless speed

0.02.720.064 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6830.88 tokens per second)
0.02.720.066 I llama_perf_context_print:        load time =     430.57 ms
0.02.720.067 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.720.069 I llama_perf_context_print:        eval time =    2269.50 ms /    32 runs   (   70.92 ms per token,    14.10 tokens per second)
0.02.720.069 I llama_perf_context_print:       total time =    2287.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.579 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.021.925 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.969 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.981 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.982 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.988 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.989 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.990 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.990 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.991 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.995 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.996 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.997 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.998 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.998 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.812 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.953 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.820 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.827 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.828 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.828 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.829 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.830 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.830 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.833 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.834 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.835 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.835 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.836 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.839 I llama_model_loader: - type  f32:   37 tensors
0.00.133.842 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.496 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.829 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.594 I llm_load_vocab: special tokens cache size = 5
0.00.234.640 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.653 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.654 I llm_load_print_meta: arch             = gemma
0.00.234.654 I llm_load_print_meta: vocab type       = SPM
0.00.234.655 I llm_load_print_meta: n_vocab          = 256000
0.00.234.655 I llm_load_print_meta: n_merges         = 0
0.00.234.656 I llm_load_print_meta: vocab_only       = 0
0.00.234.656 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.656 I llm_load_print_meta: n_embd           = 2048
0.00.234.657 I llm_load_print_meta: n_layer          = 18
0.00.234.670 I llm_load_print_meta: n_head           = 8
0.00.234.671 I llm_load_print_meta: n_head_kv        = 1
0.00.234.672 I llm_load_print_meta: n_rot            = 256
0.00.234.672 I llm_load_print_meta: n_swa            = 0
0.00.234.672 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.672 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.673 I llm_load_print_meta: n_gqa            = 8
0.00.234.674 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.675 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.676 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.677 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.678 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.678 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.678 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.679 I llm_load_print_meta: n_ff             = 16384
0.00.234.679 I llm_load_print_meta: n_expert         = 0
0.00.234.680 I llm_load_print_meta: n_expert_used    = 0
0.00.234.680 I llm_load_print_meta: causal attn      = 1
0.00.234.680 I llm_load_print_meta: pooling type     = 0
0.00.234.680 I llm_load_print_meta: rope type        = 2
0.00.234.681 I llm_load_print_meta: rope scaling     = linear
0.00.234.682 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.682 I llm_load_print_meta: freq_scale_train = 1
0.00.234.683 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.683 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.683 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.684 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.684 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.684 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.684 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.685 I llm_load_print_meta: model type       = 2B
0.00.234.686 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.686 I llm_load_print_meta: model params     = 2.51 B
0.00.234.687 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.687 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.688 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.688 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.688 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.689 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.689 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.689 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.690 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.690 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.691 I llm_load_print_meta: max token length = 93
0.00.234.710 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.305.571 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.305.577 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.310.546 I llama_new_context_with_model: n_ctx      = 8192
0.00.310.552 I llama_new_context_with_model: n_batch    = 2048
0.00.310.552 I llama_new_context_with_model: n_ubatch   = 512
0.00.310.553 I llama_new_context_with_model: flash_attn = 0
0.00.310.555 I llama_new_context_with_model: freq_base  = 10000.0
0.00.310.556 I llama_new_context_with_model: freq_scale = 1
0.00.340.819 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.836 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.937 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.854 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.862 I llama_new_context_with_model: graph nodes  = 601
0.00.341.863 I llama_new_context_with_model: graph splits = 1
0.00.341.865 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.003 I main: llama threadpool init, n_threads = 4
0.00.437.015 I 
0.00.437.090 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.093 I 
0.00.437.127 I sampler seed: 1755436292
0.00.437.137 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.140 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.141 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.141 I 
 increably.

**Assistant**

I understand. I will adjust my language and tone to suit your specific needs. [end of text]


0.02.338.045 I llama_perf_sampler_print:    sampling time =       3.78 ms /    26 runs   (    0.15 ms per token,  6872.85 tokens per second)
0.02.338.047 I llama_perf_context_print:        load time =     435.10 ms
0.02.338.048 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.338.050 I llama_perf_context_print:        eval time =    1885.83 ms /    25 runs   (   75.43 ms per token,    13.26 tokens per second)
0.02.338.050 I llama_perf_context_print:       total time =    1901.05 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.170s
user	0m33.696s
sys	0m9.506s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3865 (00b7317e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32202.03 ms
main:    total time = 32202.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.967 I main: load the model and apply lora adapter, if any
0.00.022.357 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.405 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.413 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.419 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.420 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.423 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.424 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.425 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.425 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.426 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.426 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.430 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.430 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.431 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.432 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.432 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.845 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.058 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.912 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.919 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.920 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.920 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.921 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.922 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.922 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.924 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.925 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.926 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.926 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.927 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.931 I llama_model_loader: - type  f32:   37 tensors
0.00.132.933 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.934 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.618 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.158 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.858 I llm_load_vocab: special tokens cache size = 5
0.00.227.019 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.033 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.033 I llm_load_print_meta: arch             = gemma
0.00.227.034 I llm_load_print_meta: vocab type       = SPM
0.00.227.035 I llm_load_print_meta: n_vocab          = 256000
0.00.227.035 I llm_load_print_meta: n_merges         = 0
0.00.227.036 I llm_load_print_meta: vocab_only       = 0
0.00.227.036 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.036 I llm_load_print_meta: n_embd           = 2048
0.00.227.037 I llm_load_print_meta: n_layer          = 18
0.00.227.049 I llm_load_print_meta: n_head           = 8
0.00.227.050 I llm_load_print_meta: n_head_kv        = 1
0.00.227.051 I llm_load_print_meta: n_rot            = 256
0.00.227.051 I llm_load_print_meta: n_swa            = 0
0.00.227.051 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.051 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.052 I llm_load_print_meta: n_gqa            = 8
0.00.227.053 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.054 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.055 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.057 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.057 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.057 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.058 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.059 I llm_load_print_meta: n_ff             = 16384
0.00.227.059 I llm_load_print_meta: n_expert         = 0
0.00.227.059 I llm_load_print_meta: n_expert_used    = 0
0.00.227.059 I llm_load_print_meta: causal attn      = 1
0.00.227.059 I llm_load_print_meta: pooling type     = 0
0.00.227.060 I llm_load_print_meta: rope type        = 2
0.00.227.060 I llm_load_print_meta: rope scaling     = linear
0.00.227.061 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.062 I llm_load_print_meta: freq_scale_train = 1
0.00.227.062 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.063 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.063 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.063 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.064 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.064 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.064 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.065 I llm_load_print_meta: model type       = 2B
0.00.227.065 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.227.066 I llm_load_print_meta: model params     = 2.51 B
0.00.227.066 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.227.067 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.067 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.068 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.068 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.068 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.069 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.069 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.069 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.070 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.070 I llm_load_print_meta: max token length = 93
0.00.227.088 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.284.305 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.284.310 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.284.311 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.284.312 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.284.312 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.284.313 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.289.335 I llama_new_context_with_model: n_ctx      = 8192
0.00.289.342 I llama_new_context_with_model: n_batch    = 2048
0.00.289.342 I llama_new_context_with_model: n_ubatch   = 512
0.00.289.343 I llama_new_context_with_model: flash_attn = 0
0.00.289.345 I llama_new_context_with_model: freq_base  = 10000.0
0.00.289.346 I llama_new_context_with_model: freq_scale = 1
0.00.318.341 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.318.356 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.318.449 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.319.314 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.319.322 I llama_new_context_with_model: graph nodes  = 601
0.00.319.322 I llama_new_context_with_model: graph splits = 1
0.00.319.324 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.400.169 I main: llama threadpool init, n_threads = 4
0.00.400.181 I 
0.00.400.254 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.400.257 I 
0.00.400.293 I sampler seed: 60266460
0.00.400.302 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.400.305 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.400.305 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.400.305 I 
 increasities:

The premise of the question is flawed. It is not possible to determine the feasibility of extraterrestrial life without extensive scientific research and observation. [end of text]


0.01.997.992 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6879.30 tokens per second)
0.01.997.995 I llama_perf_context_print:        load time =     398.18 ms
0.01.998.006 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.998.008 I llama_perf_context_print:        eval time =    1579.96 ms /    32 runs   (   49.37 ms per token,    20.25 tokens per second)
0.01.998.009 I llama_perf_context_print:       total time =    1597.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3865 (00b7317e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32056.64 ms
main:    total time = 32056.64 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.581 I build: 3865 (00b7317e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.019 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.030 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.037 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.038 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.042 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.042 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.043 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.043 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.044 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.045 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.049 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.049 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.050 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.050 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.052 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.200 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.776 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.702 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.708 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.709 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.710 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.711 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.712 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.713 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.717 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.719 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.722 I llama_model_loader: - type  f32:   37 tensors
0.00.132.724 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.725 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.558 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.700 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.423 I llm_load_vocab: special tokens cache size = 5
0.00.224.448 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.462 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.462 I llm_load_print_meta: arch             = gemma
0.00.224.463 I llm_load_print_meta: vocab type       = SPM
0.00.224.463 I llm_load_print_meta: n_vocab          = 256000
0.00.224.464 I llm_load_print_meta: n_merges         = 0
0.00.224.464 I llm_load_print_meta: vocab_only       = 0
0.00.224.465 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.465 I llm_load_print_meta: n_embd           = 2048
0.00.224.465 I llm_load_print_meta: n_layer          = 18
0.00.224.477 I llm_load_print_meta: n_head           = 8
0.00.224.478 I llm_load_print_meta: n_head_kv        = 1
0.00.224.479 I llm_load_print_meta: n_rot            = 256
0.00.224.479 I llm_load_print_meta: n_swa            = 0
0.00.224.479 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.480 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.480 I llm_load_print_meta: n_gqa            = 8
0.00.224.481 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.482 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.483 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.484 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.485 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.485 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.486 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.487 I llm_load_print_meta: n_ff             = 16384
0.00.224.487 I llm_load_print_meta: n_expert         = 0
0.00.224.487 I llm_load_print_meta: n_expert_used    = 0
0.00.224.488 I llm_load_print_meta: causal attn      = 1
0.00.224.488 I llm_load_print_meta: pooling type     = 0
0.00.224.488 I llm_load_print_meta: rope type        = 2
0.00.224.488 I llm_load_print_meta: rope scaling     = linear
0.00.224.489 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.490 I llm_load_print_meta: freq_scale_train = 1
0.00.224.490 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.491 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.491 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.491 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.491 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.492 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.492 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.492 I llm_load_print_meta: model type       = 2B
0.00.224.493 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.494 I llm_load_print_meta: model params     = 2.51 B
0.00.224.494 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.494 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.495 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.495 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.495 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.496 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.496 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.496 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.497 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.497 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.498 I llm_load_print_meta: max token length = 93
0.00.224.515 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.594 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.285.572 I llama_new_context_with_model: n_ctx      = 8192
0.00.285.578 I llama_new_context_with_model: n_batch    = 2048
0.00.285.578 I llama_new_context_with_model: n_ubatch   = 512
0.00.285.579 I llama_new_context_with_model: flash_attn = 0
0.00.285.580 I llama_new_context_with_model: freq_base  = 10000.0
0.00.285.581 I llama_new_context_with_model: freq_scale = 1
0.00.314.853 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.314.870 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.314.960 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.315.804 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.315.813 I llama_new_context_with_model: graph nodes  = 601
0.00.315.813 I llama_new_context_with_model: graph splits = 1
0.00.315.816 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.396.407 I main: llama threadpool init, n_threads = 4
0.00.396.419 I 
0.00.396.496 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.396.499 I 
0.00.396.537 I sampler seed: 1199067414
0.00.396.548 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.396.550 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.396.551 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.396.554 I 
 squaRED!

I am unable to generate a response that contains offensive or derogatory language. My purpose is to assist with tasks and provide information in a respectful and

0.01.997.579 I llama_perf_sampler_print:    sampling time =       5.11 ms /    33 runs   (    0.15 ms per token,  6455.40 tokens per second)
0.01.997.582 I llama_perf_context_print:        load time =     394.53 ms
0.01.997.583 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.997.585 I llama_perf_context_print:        eval time =    1581.99 ms /    32 runs   (   49.44 ms per token,    20.23 tokens per second)
0.01.997.587 I llama_perf_context_print:       total time =    1601.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.602s
user	8m14.540s
sys	0m6.876s
