+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.024.106 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.154 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.161 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.166 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.167 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.171 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.171 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.172 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.172 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.173 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.173 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.178 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.178 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.179 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.180 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.180 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.611 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.128 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.950 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.956 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.957 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.958 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.958 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.959 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.960 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.964 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.965 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.966 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.967 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.967 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.971 I llama_model_loader: - type  f32:   37 tensors
0.00.133.974 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.884 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.739 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.404 I llm_load_vocab: special tokens cache size = 5
0.00.221.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.984 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.985 I llm_load_print_meta: arch             = gemma
0.00.221.985 I llm_load_print_meta: vocab type       = SPM
0.00.221.986 I llm_load_print_meta: n_vocab          = 256000
0.00.221.986 I llm_load_print_meta: n_merges         = 0
0.00.221.986 I llm_load_print_meta: vocab_only       = 0
0.00.221.987 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.987 I llm_load_print_meta: n_embd           = 2048
0.00.221.987 I llm_load_print_meta: n_layer          = 18
0.00.222.000 I llm_load_print_meta: n_head           = 8
0.00.222.001 I llm_load_print_meta: n_head_kv        = 1
0.00.222.001 I llm_load_print_meta: n_rot            = 256
0.00.222.001 I llm_load_print_meta: n_swa            = 0
0.00.222.002 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.002 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.003 I llm_load_print_meta: n_gqa            = 8
0.00.222.004 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.004 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.005 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.006 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.007 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.007 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.008 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.009 I llm_load_print_meta: n_ff             = 16384
0.00.222.009 I llm_load_print_meta: n_expert         = 0
0.00.222.009 I llm_load_print_meta: n_expert_used    = 0
0.00.222.010 I llm_load_print_meta: causal attn      = 1
0.00.222.010 I llm_load_print_meta: pooling type     = 0
0.00.222.010 I llm_load_print_meta: rope type        = 2
0.00.222.011 I llm_load_print_meta: rope scaling     = linear
0.00.222.012 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.012 I llm_load_print_meta: freq_scale_train = 1
0.00.222.013 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.013 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.013 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.014 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.014 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.014 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.014 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.015 I llm_load_print_meta: model type       = 2B
0.00.222.016 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.016 I llm_load_print_meta: model params     = 2.51 B
0.00.222.017 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.018 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.018 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.019 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.019 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.019 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.020 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.020 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.020 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.021 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.021 I llm_load_print_meta: max token length = 93
0.00.222.046 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.223 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.319.231 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.319.231 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.319.232 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.319.233 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.319.233 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.324.322 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.328 I llama_new_context_with_model: n_batch    = 2048
0.00.324.328 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.329 I llama_new_context_with_model: flash_attn = 0
0.00.324.331 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.332 I llama_new_context_with_model: freq_scale = 1
0.00.353.285 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.299 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.391 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.253 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.260 I llama_new_context_with_model: graph nodes  = 601
0.00.354.261 I llama_new_context_with_model: graph splits = 1
0.00.354.263 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.288 I main: llama threadpool init, n_threads = 4
0.00.445.300 I 
0.00.445.372 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.375 I 
0.00.445.414 I sampler seed: 1910792168
0.00.445.424 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.426 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.427 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.427 I 
 increasities.

I cannot answer this question as it contains sexually suggestive content that is not appropriate for me to discuss. [end of text]


0.02.192.817 I llama_perf_sampler_print:    sampling time =       4.52 ms /    26 runs   (    0.17 ms per token,  5752.21 tokens per second)
0.02.192.820 I llama_perf_context_print:        load time =     443.44 ms
0.02.192.822 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.192.824 I llama_perf_context_print:        eval time =    1732.60 ms /    25 runs   (   69.30 ms per token,    14.43 tokens per second)
0.02.192.824 I llama_perf_context_print:       total time =    1747.54 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.556 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.022.002 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.013 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.020 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.021 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.025 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.025 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.026 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.026 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.027 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.027 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.031 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.032 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.032 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.033 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.034 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.579 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.904 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.722 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.728 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.729 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.729 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.730 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.731 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.732 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.734 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.735 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.736 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.737 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.738 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.741 I llama_model_loader: - type  f32:   37 tensors
0.00.131.743 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.161 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.754 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.300 I llm_load_vocab: special tokens cache size = 5
0.00.217.740 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.217.752 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.217.753 I llm_load_print_meta: arch             = gemma
0.00.217.753 I llm_load_print_meta: vocab type       = SPM
0.00.217.754 I llm_load_print_meta: n_vocab          = 256000
0.00.217.754 I llm_load_print_meta: n_merges         = 0
0.00.217.755 I llm_load_print_meta: vocab_only       = 0
0.00.217.755 I llm_load_print_meta: n_ctx_train      = 8192
0.00.217.755 I llm_load_print_meta: n_embd           = 2048
0.00.217.756 I llm_load_print_meta: n_layer          = 18
0.00.217.766 I llm_load_print_meta: n_head           = 8
0.00.217.767 I llm_load_print_meta: n_head_kv        = 1
0.00.217.767 I llm_load_print_meta: n_rot            = 256
0.00.217.767 I llm_load_print_meta: n_swa            = 0
0.00.217.768 I llm_load_print_meta: n_embd_head_k    = 256
0.00.217.768 I llm_load_print_meta: n_embd_head_v    = 256
0.00.217.769 I llm_load_print_meta: n_gqa            = 8
0.00.217.770 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.217.771 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.217.771 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.217.772 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.217.773 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.217.773 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.217.774 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.217.774 I llm_load_print_meta: n_ff             = 16384
0.00.217.775 I llm_load_print_meta: n_expert         = 0
0.00.217.775 I llm_load_print_meta: n_expert_used    = 0
0.00.217.775 I llm_load_print_meta: causal attn      = 1
0.00.217.776 I llm_load_print_meta: pooling type     = 0
0.00.217.776 I llm_load_print_meta: rope type        = 2
0.00.217.776 I llm_load_print_meta: rope scaling     = linear
0.00.217.778 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.217.778 I llm_load_print_meta: freq_scale_train = 1
0.00.217.779 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.217.779 I llm_load_print_meta: rope_finetuned   = unknown
0.00.217.779 I llm_load_print_meta: ssm_d_conv       = 0
0.00.217.779 I llm_load_print_meta: ssm_d_inner      = 0
0.00.217.780 I llm_load_print_meta: ssm_d_state      = 0
0.00.217.780 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.217.780 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.217.781 I llm_load_print_meta: model type       = 2B
0.00.217.781 I llm_load_print_meta: model ftype      = Q8_0
0.00.217.782 I llm_load_print_meta: model params     = 2.51 B
0.00.217.783 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.217.783 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.217.784 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.217.784 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.217.784 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.217.784 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.217.785 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.217.785 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.217.785 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.217.786 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.217.786 I llm_load_print_meta: max token length = 93
0.00.217.801 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.310.711 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.315.788 I llama_new_context_with_model: n_ctx      = 8192
0.00.315.794 I llama_new_context_with_model: n_batch    = 2048
0.00.315.795 I llama_new_context_with_model: n_ubatch   = 512
0.00.315.795 I llama_new_context_with_model: flash_attn = 0
0.00.315.798 I llama_new_context_with_model: freq_base  = 10000.0
0.00.315.799 I llama_new_context_with_model: freq_scale = 1
0.00.345.568 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.345.583 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.672 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.579 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.346.588 I llama_new_context_with_model: graph nodes  = 601
0.00.346.589 I llama_new_context_with_model: graph splits = 1
0.00.346.591 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.223 I main: llama threadpool init, n_threads = 4
0.00.433.234 I 
0.00.433.305 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.309 I 
0.00.433.346 I sampler seed: 1682779228
0.00.433.356 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.358 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.359 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.359 I 
 increasities. [end of text]


0.00.704.172 I llama_perf_sampler_print:    sampling time =       0.70 ms /     5 runs   (    0.14 ms per token,  7163.32 tokens per second)
0.00.704.174 I llama_perf_context_print:        load time =     431.36 ms
0.00.704.175 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.704.176 I llama_perf_context_print:        eval time =     267.52 ms /     4 runs   (   66.88 ms per token,    14.95 tokens per second)
0.00.704.177 I llama_perf_context_print:       total time =     270.96 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.612 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.843 I main: llama backend init
0.00.002.024 I main: load the model and apply lora adapter, if any
0.00.022.458 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.506 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.518 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.524 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.525 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.529 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.529 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.530 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.530 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.531 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.532 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.537 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.537 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.538 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.539 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.539 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.134 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.596 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.784 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.790 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.791 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.792 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.792 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.793 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.794 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.796 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.797 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.797 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.799 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.799 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.803 I llama_model_loader: - type  f32:   37 tensors
0.00.133.805 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.334 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.003 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.799 I llm_load_vocab: special tokens cache size = 5
0.00.228.744 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.759 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.760 I llm_load_print_meta: arch             = gemma
0.00.228.760 I llm_load_print_meta: vocab type       = SPM
0.00.228.761 I llm_load_print_meta: n_vocab          = 256000
0.00.228.761 I llm_load_print_meta: n_merges         = 0
0.00.228.762 I llm_load_print_meta: vocab_only       = 0
0.00.228.762 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.762 I llm_load_print_meta: n_embd           = 2048
0.00.228.762 I llm_load_print_meta: n_layer          = 18
0.00.228.775 I llm_load_print_meta: n_head           = 8
0.00.228.776 I llm_load_print_meta: n_head_kv        = 1
0.00.228.776 I llm_load_print_meta: n_rot            = 256
0.00.228.777 I llm_load_print_meta: n_swa            = 0
0.00.228.777 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.777 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.778 I llm_load_print_meta: n_gqa            = 8
0.00.228.779 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.780 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.781 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.782 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.782 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.783 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.783 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.784 I llm_load_print_meta: n_ff             = 16384
0.00.228.784 I llm_load_print_meta: n_expert         = 0
0.00.228.785 I llm_load_print_meta: n_expert_used    = 0
0.00.228.785 I llm_load_print_meta: causal attn      = 1
0.00.228.785 I llm_load_print_meta: pooling type     = 0
0.00.228.785 I llm_load_print_meta: rope type        = 2
0.00.228.786 I llm_load_print_meta: rope scaling     = linear
0.00.228.787 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.788 I llm_load_print_meta: freq_scale_train = 1
0.00.228.788 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.788 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.789 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.789 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.789 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.789 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.790 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.790 I llm_load_print_meta: model type       = 2B
0.00.228.791 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.792 I llm_load_print_meta: model params     = 2.51 B
0.00.228.793 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.793 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.794 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.794 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.794 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.795 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.795 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.796 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.796 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.797 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.797 I llm_load_print_meta: max token length = 93
0.00.228.821 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.865 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.304.872 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.873 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.304.874 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.304.874 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.875 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.310.022 I llama_new_context_with_model: n_ctx      = 8192
0.00.310.029 I llama_new_context_with_model: n_batch    = 2048
0.00.310.029 I llama_new_context_with_model: n_ubatch   = 512
0.00.310.029 I llama_new_context_with_model: flash_attn = 0
0.00.310.032 I llama_new_context_with_model: freq_base  = 10000.0
0.00.310.032 I llama_new_context_with_model: freq_scale = 1
0.00.339.500 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.339.515 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.339.608 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.466 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.340.475 I llama_new_context_with_model: graph nodes  = 601
0.00.340.475 I llama_new_context_with_model: graph splits = 1
0.00.340.477 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.242 I main: llama threadpool init, n_threads = 4
0.00.431.255 I 
0.00.431.329 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.332 I 
0.00.431.369 I sampler seed: 1720107691
0.00.431.379 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.384 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.385 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.385 I 
 increabling, and a more balanced approach to assessing the performance of healthcare providers. [end of text]


0.01.636.653 I llama_perf_sampler_print:    sampling time =       3.04 ms /    18 runs   (    0.17 ms per token,  5924.95 tokens per second)
0.01.636.655 I llama_perf_context_print:        load time =     429.20 ms
0.01.636.656 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.636.658 I llama_perf_context_print:        eval time =    1194.39 ms /    17 runs   (   70.26 ms per token,    14.23 tokens per second)
0.01.636.658 I llama_perf_context_print:       total time =    1205.42 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.547 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.880 I main: load the model and apply lora adapter, if any
0.00.022.192 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.239 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.246 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.251 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.254 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.258 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.259 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.260 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.260 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.261 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.261 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.267 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.267 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.268 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.269 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.269 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.931 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.540 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.366 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.372 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.373 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.373 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.374 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.375 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.375 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.379 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.380 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.381 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.382 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.383 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.386 I llama_model_loader: - type  f32:   37 tensors
0.00.132.389 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.045 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.035 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.687 I llm_load_vocab: special tokens cache size = 5
0.00.219.115 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.219.129 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.219.130 I llm_load_print_meta: arch             = gemma
0.00.219.130 I llm_load_print_meta: vocab type       = SPM
0.00.219.131 I llm_load_print_meta: n_vocab          = 256000
0.00.219.132 I llm_load_print_meta: n_merges         = 0
0.00.219.132 I llm_load_print_meta: vocab_only       = 0
0.00.219.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.219.133 I llm_load_print_meta: n_embd           = 2048
0.00.219.133 I llm_load_print_meta: n_layer          = 18
0.00.219.144 I llm_load_print_meta: n_head           = 8
0.00.219.145 I llm_load_print_meta: n_head_kv        = 1
0.00.219.146 I llm_load_print_meta: n_rot            = 256
0.00.219.146 I llm_load_print_meta: n_swa            = 0
0.00.219.146 I llm_load_print_meta: n_embd_head_k    = 256
0.00.219.146 I llm_load_print_meta: n_embd_head_v    = 256
0.00.219.147 I llm_load_print_meta: n_gqa            = 8
0.00.219.149 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.219.150 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.219.151 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.219.152 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.219.152 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.219.153 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.219.153 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.219.154 I llm_load_print_meta: n_ff             = 16384
0.00.219.154 I llm_load_print_meta: n_expert         = 0
0.00.219.155 I llm_load_print_meta: n_expert_used    = 0
0.00.219.155 I llm_load_print_meta: causal attn      = 1
0.00.219.155 I llm_load_print_meta: pooling type     = 0
0.00.219.156 I llm_load_print_meta: rope type        = 2
0.00.219.157 I llm_load_print_meta: rope scaling     = linear
0.00.219.158 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.219.159 I llm_load_print_meta: freq_scale_train = 1
0.00.219.159 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.219.159 I llm_load_print_meta: rope_finetuned   = unknown
0.00.219.159 I llm_load_print_meta: ssm_d_conv       = 0
0.00.219.160 I llm_load_print_meta: ssm_d_inner      = 0
0.00.219.160 I llm_load_print_meta: ssm_d_state      = 0
0.00.219.160 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.219.161 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.219.161 I llm_load_print_meta: model type       = 2B
0.00.219.162 I llm_load_print_meta: model ftype      = Q8_0
0.00.219.163 I llm_load_print_meta: model params     = 2.51 B
0.00.219.163 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.219.164 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.219.165 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.219.165 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.219.165 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.219.165 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.219.166 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.219.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.219.166 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.219.167 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.219.167 I llm_load_print_meta: max token length = 93
0.00.219.183 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.493 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.289.500 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.294.506 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.513 I llama_new_context_with_model: n_batch    = 2048
0.00.294.513 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.514 I llama_new_context_with_model: flash_attn = 0
0.00.294.516 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.517 I llama_new_context_with_model: freq_scale = 1
0.00.322.678 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.691 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.782 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.643 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.651 I llama_new_context_with_model: graph nodes  = 601
0.00.323.651 I llama_new_context_with_model: graph splits = 1
0.00.323.654 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.376 I main: llama threadpool init, n_threads = 4
0.00.418.390 I 
0.00.418.464 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.467 I 
0.00.418.504 I sampler seed: 2889803462
0.00.418.513 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.516 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.418.516 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.516 I 
 increasities and anxieties.

I am unable to generate textual content that expresses personal opinions or subjective experiences. [end of text]


0.02.072.086 I llama_perf_sampler_print:    sampling time =       4.23 ms /    23 runs   (    0.18 ms per token,  5438.64 tokens per second)
0.02.072.088 I llama_perf_context_print:        load time =     416.48 ms
0.02.072.089 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.072.091 I llama_perf_context_print:        eval time =    1639.97 ms /    22 runs   (   74.54 ms per token,    13.41 tokens per second)
0.02.072.091 I llama_perf_context_print:       total time =    1653.72 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.042s
user	0m22.201s
sys	0m9.366s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3839 (00b33760)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32022.08 ms
main:    total time = 32022.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.001.869 I main: load the model and apply lora adapter, if any
0.00.022.381 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.428 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.436 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.441 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.442 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.446 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.447 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.447 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.448 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.449 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.449 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.453 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.453 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.456 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.457 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.458 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.982 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.671 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.522 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.528 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.529 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.530 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.530 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.531 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.532 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.534 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.535 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.536 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.537 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.538 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.541 I llama_model_loader: - type  f32:   37 tensors
0.00.132.544 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.545 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.878 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.048 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.702 I llm_load_vocab: special tokens cache size = 5
0.00.219.295 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.219.309 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.219.310 I llm_load_print_meta: arch             = gemma
0.00.219.310 I llm_load_print_meta: vocab type       = SPM
0.00.219.311 I llm_load_print_meta: n_vocab          = 256000
0.00.219.312 I llm_load_print_meta: n_merges         = 0
0.00.219.312 I llm_load_print_meta: vocab_only       = 0
0.00.219.312 I llm_load_print_meta: n_ctx_train      = 8192
0.00.219.313 I llm_load_print_meta: n_embd           = 2048
0.00.219.313 I llm_load_print_meta: n_layer          = 18
0.00.219.326 I llm_load_print_meta: n_head           = 8
0.00.219.327 I llm_load_print_meta: n_head_kv        = 1
0.00.219.327 I llm_load_print_meta: n_rot            = 256
0.00.219.328 I llm_load_print_meta: n_swa            = 0
0.00.219.328 I llm_load_print_meta: n_embd_head_k    = 256
0.00.219.328 I llm_load_print_meta: n_embd_head_v    = 256
0.00.219.329 I llm_load_print_meta: n_gqa            = 8
0.00.219.330 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.219.331 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.219.332 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.219.333 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.219.333 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.219.334 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.219.334 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.219.335 I llm_load_print_meta: n_ff             = 16384
0.00.219.335 I llm_load_print_meta: n_expert         = 0
0.00.219.335 I llm_load_print_meta: n_expert_used    = 0
0.00.219.336 I llm_load_print_meta: causal attn      = 1
0.00.219.336 I llm_load_print_meta: pooling type     = 0
0.00.219.336 I llm_load_print_meta: rope type        = 2
0.00.219.336 I llm_load_print_meta: rope scaling     = linear
0.00.219.337 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.219.338 I llm_load_print_meta: freq_scale_train = 1
0.00.219.338 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.219.338 I llm_load_print_meta: rope_finetuned   = unknown
0.00.219.339 I llm_load_print_meta: ssm_d_conv       = 0
0.00.219.339 I llm_load_print_meta: ssm_d_inner      = 0
0.00.219.339 I llm_load_print_meta: ssm_d_state      = 0
0.00.219.339 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.219.340 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.219.340 I llm_load_print_meta: model type       = 2B
0.00.219.341 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.219.342 I llm_load_print_meta: model params     = 2.51 B
0.00.219.343 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.219.343 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.219.343 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.219.344 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.219.344 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.219.344 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.219.344 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.219.345 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.219.345 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.219.346 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.219.346 I llm_load_print_meta: max token length = 93
0.00.219.367 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.278.621 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.278.627 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.278.628 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.278.629 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.278.629 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.278.630 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.283.815 I llama_new_context_with_model: n_ctx      = 8192
0.00.283.822 I llama_new_context_with_model: n_batch    = 2048
0.00.283.822 I llama_new_context_with_model: n_ubatch   = 512
0.00.283.823 I llama_new_context_with_model: flash_attn = 0
0.00.283.826 I llama_new_context_with_model: freq_base  = 10000.0
0.00.283.826 I llama_new_context_with_model: freq_scale = 1
0.00.313.485 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.499 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.595 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.609 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.619 I llama_new_context_with_model: graph nodes  = 601
0.00.314.620 I llama_new_context_with_model: graph splits = 1
0.00.314.622 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.358 I main: llama threadpool init, n_threads = 4
0.00.397.370 I 
0.00.397.459 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.464 I 
0.00.397.510 I sampler seed: 2455327408
0.00.397.519 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.522 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.522 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.523 I 
 encompassing all the senses, a fragrant, earthy scent wafted through the air, evoking a sense of peace and tranquility.

The scent was earthy,

0.02.014.308 I llama_perf_sampler_print:    sampling time =       6.02 ms /    33 runs   (    0.18 ms per token,  5478.09 tokens per second)
0.02.014.310 I llama_perf_context_print:        load time =     395.47 ms
0.02.014.312 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.014.313 I llama_perf_context_print:        eval time =    1597.30 ms /    32 runs   (   49.92 ms per token,    20.03 tokens per second)
0.02.014.314 I llama_perf_context_print:       total time =    1616.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3839 (00b33760)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32127.07 ms
main:    total time = 32127.07 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.528 I build: 3839 (00b33760) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.022.229 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.244 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.254 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.255 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.259 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.259 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.260 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.260 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.261 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.261 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.265 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.266 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.266 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.266 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.267 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.927 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.221 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.053 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.059 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.060 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.061 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.061 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.062 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.063 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.066 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.066 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.069 I llama_model_loader: - type  f32:   37 tensors
0.00.132.073 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.073 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.533 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.774 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.478 I llm_load_vocab: special tokens cache size = 5
0.00.220.097 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.111 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.112 I llm_load_print_meta: arch             = gemma
0.00.220.113 I llm_load_print_meta: vocab type       = SPM
0.00.220.113 I llm_load_print_meta: n_vocab          = 256000
0.00.220.114 I llm_load_print_meta: n_merges         = 0
0.00.220.114 I llm_load_print_meta: vocab_only       = 0
0.00.220.114 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.115 I llm_load_print_meta: n_embd           = 2048
0.00.220.115 I llm_load_print_meta: n_layer          = 18
0.00.220.126 I llm_load_print_meta: n_head           = 8
0.00.220.127 I llm_load_print_meta: n_head_kv        = 1
0.00.220.128 I llm_load_print_meta: n_rot            = 256
0.00.220.128 I llm_load_print_meta: n_swa            = 0
0.00.220.128 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.129 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.130 I llm_load_print_meta: n_gqa            = 8
0.00.220.131 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.131 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.132 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.134 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.134 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.135 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.135 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.136 I llm_load_print_meta: n_ff             = 16384
0.00.220.136 I llm_load_print_meta: n_expert         = 0
0.00.220.137 I llm_load_print_meta: n_expert_used    = 0
0.00.220.137 I llm_load_print_meta: causal attn      = 1
0.00.220.138 I llm_load_print_meta: pooling type     = 0
0.00.220.138 I llm_load_print_meta: rope type        = 2
0.00.220.139 I llm_load_print_meta: rope scaling     = linear
0.00.220.141 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.141 I llm_load_print_meta: freq_scale_train = 1
0.00.220.142 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.143 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.143 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.144 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.146 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.147 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.147 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.147 I llm_load_print_meta: model type       = 2B
0.00.220.148 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.220.149 I llm_load_print_meta: model params     = 2.51 B
0.00.220.149 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.220.150 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.150 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.162 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.163 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.163 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.164 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.164 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.165 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.165 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.165 I llm_load_print_meta: max token length = 93
0.00.220.184 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.926.009 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.931.128 I llama_new_context_with_model: n_ctx      = 8192
0.00.931.135 I llama_new_context_with_model: n_batch    = 2048
0.00.931.136 I llama_new_context_with_model: n_ubatch   = 512
0.00.931.137 I llama_new_context_with_model: flash_attn = 0
0.00.931.139 I llama_new_context_with_model: freq_base  = 10000.0
0.00.931.140 I llama_new_context_with_model: freq_scale = 1
0.00.961.921 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.961.937 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.962.031 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.962.875 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.962.883 I llama_new_context_with_model: graph nodes  = 601
0.00.962.883 I llama_new_context_with_model: graph splits = 1
0.00.962.885 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.044.627 I main: llama threadpool init, n_threads = 4
0.01.044.642 I 
0.01.044.721 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.044.725 I 
0.01.044.762 I sampler seed: 1076755058
0.01.044.772 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.044.774 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.044.775 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.044.775 I 
 increably.

I apologize for the inconvenience caused. I hope this message finds you well.

**Question:**

What is the meaning of the idiom "

0.02.631.719 I llama_perf_sampler_print:    sampling time =       5.67 ms /    33 runs   (    0.17 ms per token,  5823.19 tokens per second)
0.02.631.722 I llama_perf_context_print:        load time =    1042.76 ms
0.02.631.723 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.631.725 I llama_perf_context_print:        eval time =    1567.54 ms /    32 runs   (   48.99 ms per token,    20.41 tokens per second)
0.02.631.726 I llama_perf_context_print:       total time =    1587.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.596s
user	8m14.656s
sys	0m6.962s
