+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.560 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.893 I main: load the model and apply lora adapter, if any
0.00.021.438 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.446 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.453 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.461 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.462 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.466 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.466 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.467 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.468 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.469 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.470 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.474 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.475 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.475 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.476 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.476 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.303 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.649 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.469 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.476 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.476 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.477 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.477 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.478 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.479 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.481 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.482 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.482 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.483 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.483 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.486 I llama_model_loader: - type  f32:   37 tensors
0.00.131.488 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.129 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.142 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.657 I llm_load_vocab: special tokens cache size = 5
0.00.266.448 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.464 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.464 I llm_load_print_meta: arch             = gemma
0.00.266.465 I llm_load_print_meta: vocab type       = SPM
0.00.266.465 I llm_load_print_meta: n_vocab          = 256000
0.00.266.466 I llm_load_print_meta: n_merges         = 0
0.00.266.466 I llm_load_print_meta: vocab_only       = 0
0.00.266.466 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.467 I llm_load_print_meta: n_embd           = 2048
0.00.266.467 I llm_load_print_meta: n_layer          = 18
0.00.266.479 I llm_load_print_meta: n_head           = 8
0.00.266.480 I llm_load_print_meta: n_head_kv        = 1
0.00.266.480 I llm_load_print_meta: n_rot            = 256
0.00.266.480 I llm_load_print_meta: n_swa            = 0
0.00.266.481 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.481 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.482 I llm_load_print_meta: n_gqa            = 8
0.00.266.483 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.484 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.485 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.486 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.486 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.487 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.487 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.488 I llm_load_print_meta: n_ff             = 16384
0.00.266.488 I llm_load_print_meta: n_expert         = 0
0.00.266.489 I llm_load_print_meta: n_expert_used    = 0
0.00.266.489 I llm_load_print_meta: causal attn      = 1
0.00.266.489 I llm_load_print_meta: pooling type     = 0
0.00.266.489 I llm_load_print_meta: rope type        = 2
0.00.266.490 I llm_load_print_meta: rope scaling     = linear
0.00.266.491 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.491 I llm_load_print_meta: freq_scale_train = 1
0.00.266.492 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.492 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.492 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.493 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.493 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.494 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.494 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.494 I llm_load_print_meta: model type       = 2B
0.00.266.495 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.496 I llm_load_print_meta: model params     = 2.51 B
0.00.266.497 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.497 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.497 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.498 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.498 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.498 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.499 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.499 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.499 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.500 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.500 I llm_load_print_meta: max token length = 93
0.00.364.820 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.364.827 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.364.828 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.364.828 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.364.829 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.364.830 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.370.271 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.277 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.278 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.278 I llama_new_context_with_model: n_batch       = 2048
0.00.370.278 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.279 I llama_new_context_with_model: flash_attn    = 0
0.00.370.282 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.283 I llama_new_context_with_model: freq_scale    = 1
0.00.370.284 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.387.167 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.387.186 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.387.290 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.574 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.388.582 I llama_new_context_with_model: graph nodes  = 601
0.00.388.582 I llama_new_context_with_model: graph splits = 1
0.00.388.584 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.277 I main: llama threadpool init, n_threads = 4
0.00.476.291 I 
0.00.476.373 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.376 I 
0.00.476.415 I sampler seed: 4029637209
0.00.476.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.429 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.476.430 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.433 I 
 increasities.

I am unable to generate text that is sexually suggestive or inappropriate. [end of text]


0.01.755.157 I llama_perf_sampler_print:    sampling time =       2.88 ms /    19 runs   (    0.15 ms per token,  6588.07 tokens per second)
0.01.755.161 I llama_perf_context_print:        load time =     475.36 ms
0.01.755.162 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.755.164 I llama_perf_context_print:        eval time =    1267.43 ms /    18 runs   (   70.41 ms per token,    14.20 tokens per second)
0.01.755.165 I llama_perf_context_print:       total time =    1278.89 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.571 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.807 I main: llama backend init
0.00.000.948 I main: load the model and apply lora adapter, if any
0.00.021.298 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.311 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.319 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.320 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.325 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.329 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.330 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.331 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.332 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.333 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.339 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.341 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.342 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.343 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.344 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.024 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.252 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.160 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.167 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.168 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.168 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.169 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.170 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.170 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.173 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.175 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.175 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.176 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.180 I llama_model_loader: - type  f32:   37 tensors
0.00.132.181 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.049 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.072 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.626 I llm_load_vocab: special tokens cache size = 5
0.00.268.300 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.316 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.316 I llm_load_print_meta: arch             = gemma
0.00.268.317 I llm_load_print_meta: vocab type       = SPM
0.00.268.318 I llm_load_print_meta: n_vocab          = 256000
0.00.268.318 I llm_load_print_meta: n_merges         = 0
0.00.268.319 I llm_load_print_meta: vocab_only       = 0
0.00.268.319 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.320 I llm_load_print_meta: n_embd           = 2048
0.00.268.320 I llm_load_print_meta: n_layer          = 18
0.00.268.332 I llm_load_print_meta: n_head           = 8
0.00.268.333 I llm_load_print_meta: n_head_kv        = 1
0.00.268.333 I llm_load_print_meta: n_rot            = 256
0.00.268.333 I llm_load_print_meta: n_swa            = 0
0.00.268.334 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.334 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.335 I llm_load_print_meta: n_gqa            = 8
0.00.268.336 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.337 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.338 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.339 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.340 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.340 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.340 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.341 I llm_load_print_meta: n_ff             = 16384
0.00.268.341 I llm_load_print_meta: n_expert         = 0
0.00.268.342 I llm_load_print_meta: n_expert_used    = 0
0.00.268.342 I llm_load_print_meta: causal attn      = 1
0.00.268.342 I llm_load_print_meta: pooling type     = 0
0.00.268.343 I llm_load_print_meta: rope type        = 2
0.00.268.343 I llm_load_print_meta: rope scaling     = linear
0.00.268.344 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.345 I llm_load_print_meta: freq_scale_train = 1
0.00.268.345 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.346 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.346 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.346 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.346 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.347 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.347 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.347 I llm_load_print_meta: model type       = 2B
0.00.268.348 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.349 I llm_load_print_meta: model params     = 2.51 B
0.00.268.349 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.350 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.350 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.351 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.351 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.351 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.352 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.352 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.352 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.353 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.353 I llm_load_print_meta: max token length = 93
0.00.364.587 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.370.034 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.041 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.042 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.042 I llama_new_context_with_model: n_batch       = 2048
0.00.370.042 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.043 I llama_new_context_with_model: flash_attn    = 0
0.00.370.045 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.046 I llama_new_context_with_model: freq_scale    = 1
0.00.370.047 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.385.722 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.738 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.835 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.067 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.074 I llama_new_context_with_model: graph nodes  = 601
0.00.387.074 I llama_new_context_with_model: graph splits = 1
0.00.387.076 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.796 I main: llama threadpool init, n_threads = 4
0.00.468.810 I 
0.00.468.900 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.903 I 
0.00.468.956 I sampler seed: 2537081389
0.00.468.967 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.971 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.973 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.973 I 
 increasels are a unique type of reptile found in tropical rainforests. They are small, nocturnal, and have a distinctive triangular marking on their backs.

**

0.02.670.457 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6742.95 tokens per second)
0.02.670.459 I llama_perf_context_print:        load time =     467.83 ms
0.02.670.460 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.670.462 I llama_perf_context_print:        eval time =    2182.75 ms /    32 runs   (   68.21 ms per token,    14.66 tokens per second)
0.02.670.463 I llama_perf_context_print:       total time =    2201.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.545 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.000.905 I main: load the model and apply lora adapter, if any
0.00.021.483 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.493 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.501 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.506 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.508 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.511 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.512 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.513 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.513 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.514 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.514 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.519 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.521 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.521 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.578 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.339 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.195 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.202 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.203 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.204 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.204 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.205 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.206 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.208 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.209 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.210 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.211 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.212 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.215 I llama_model_loader: - type  f32:   37 tensors
0.00.132.216 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.868 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.839 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.516 I llm_load_vocab: special tokens cache size = 5
0.00.279.264 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.280 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.281 I llm_load_print_meta: arch             = gemma
0.00.279.281 I llm_load_print_meta: vocab type       = SPM
0.00.279.282 I llm_load_print_meta: n_vocab          = 256000
0.00.279.282 I llm_load_print_meta: n_merges         = 0
0.00.279.283 I llm_load_print_meta: vocab_only       = 0
0.00.279.283 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.283 I llm_load_print_meta: n_embd           = 2048
0.00.279.284 I llm_load_print_meta: n_layer          = 18
0.00.279.297 I llm_load_print_meta: n_head           = 8
0.00.279.298 I llm_load_print_meta: n_head_kv        = 1
0.00.279.298 I llm_load_print_meta: n_rot            = 256
0.00.279.298 I llm_load_print_meta: n_swa            = 0
0.00.279.299 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.299 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.300 I llm_load_print_meta: n_gqa            = 8
0.00.279.301 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.302 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.303 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.305 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.305 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.306 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.306 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.307 I llm_load_print_meta: n_ff             = 16384
0.00.279.307 I llm_load_print_meta: n_expert         = 0
0.00.279.307 I llm_load_print_meta: n_expert_used    = 0
0.00.279.308 I llm_load_print_meta: causal attn      = 1
0.00.279.309 I llm_load_print_meta: pooling type     = 0
0.00.279.309 I llm_load_print_meta: rope type        = 2
0.00.279.309 I llm_load_print_meta: rope scaling     = linear
0.00.279.311 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.312 I llm_load_print_meta: freq_scale_train = 1
0.00.279.312 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.312 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.313 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.314 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.314 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.315 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.315 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.316 I llm_load_print_meta: model type       = 2B
0.00.279.317 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.317 I llm_load_print_meta: model params     = 2.51 B
0.00.279.318 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.319 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.319 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.320 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.320 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.320 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.321 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.321 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.321 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.322 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.322 I llm_load_print_meta: max token length = 93
0.00.360.426 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.360.434 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.360.435 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.360.436 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.360.436 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.360.437 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.365.782 I llama_new_context_with_model: n_seq_max     = 1
0.00.365.790 I llama_new_context_with_model: n_ctx         = 4096
0.00.365.790 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.365.791 I llama_new_context_with_model: n_batch       = 2048
0.00.365.791 I llama_new_context_with_model: n_ubatch      = 512
0.00.365.792 I llama_new_context_with_model: flash_attn    = 0
0.00.365.796 I llama_new_context_with_model: freq_base     = 10000.0
0.00.365.797 I llama_new_context_with_model: freq_scale    = 1
0.00.365.798 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.179 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.194 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.287 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.518 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.525 I llama_new_context_with_model: graph nodes  = 601
0.00.384.525 I llama_new_context_with_model: graph splits = 1
0.00.384.527 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.471.737 I main: llama threadpool init, n_threads = 4
0.00.471.752 I 
0.00.471.829 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.471.832 I 
0.00.471.877 I sampler seed: 3521700436
0.00.471.888 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.891 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.891 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.892 I 
 increasities, and other forms of sexual harassment can have devastating consequences for victims.

**What are some ways to prevent sexual harassment and create a safe and respectful

0.02.707.037 I llama_perf_sampler_print:    sampling time =       4.87 ms /    33 runs   (    0.15 ms per token,  6770.62 tokens per second)
0.02.707.040 I llama_perf_context_print:        load time =     470.81 ms
0.02.707.041 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.707.043 I llama_perf_context_print:        eval time =    2215.95 ms /    32 runs   (   69.25 ms per token,    14.44 tokens per second)
0.02.707.045 I llama_perf_context_print:       total time =    2235.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.549 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.741 I main: llama backend init
0.00.000.867 I main: load the model and apply lora adapter, if any
0.00.021.166 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.176 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.184 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.193 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.196 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.200 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.201 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.202 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.202 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.203 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.203 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.208 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.208 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.209 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.209 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.210 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.820 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.212 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.049 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.055 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.057 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.057 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.058 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.059 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.060 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.063 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.064 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.065 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.066 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.067 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.070 I llama_model_loader: - type  f32:   37 tensors
0.00.131.071 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.294 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.599 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.161 I llm_load_vocab: special tokens cache size = 5
0.00.269.657 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.674 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.674 I llm_load_print_meta: arch             = gemma
0.00.269.675 I llm_load_print_meta: vocab type       = SPM
0.00.269.676 I llm_load_print_meta: n_vocab          = 256000
0.00.269.676 I llm_load_print_meta: n_merges         = 0
0.00.269.676 I llm_load_print_meta: vocab_only       = 0
0.00.269.677 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.677 I llm_load_print_meta: n_embd           = 2048
0.00.269.677 I llm_load_print_meta: n_layer          = 18
0.00.269.690 I llm_load_print_meta: n_head           = 8
0.00.269.691 I llm_load_print_meta: n_head_kv        = 1
0.00.269.691 I llm_load_print_meta: n_rot            = 256
0.00.269.691 I llm_load_print_meta: n_swa            = 0
0.00.269.692 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.692 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.693 I llm_load_print_meta: n_gqa            = 8
0.00.269.694 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.695 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.696 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.697 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.698 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.698 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.698 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.699 I llm_load_print_meta: n_ff             = 16384
0.00.269.700 I llm_load_print_meta: n_expert         = 0
0.00.269.700 I llm_load_print_meta: n_expert_used    = 0
0.00.269.700 I llm_load_print_meta: causal attn      = 1
0.00.269.701 I llm_load_print_meta: pooling type     = 0
0.00.269.701 I llm_load_print_meta: rope type        = 2
0.00.269.702 I llm_load_print_meta: rope scaling     = linear
0.00.269.703 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.704 I llm_load_print_meta: freq_scale_train = 1
0.00.269.704 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.704 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.705 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.705 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.705 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.705 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.705 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.706 I llm_load_print_meta: model type       = 2B
0.00.269.706 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.707 I llm_load_print_meta: model params     = 2.51 B
0.00.269.708 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.708 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.709 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.709 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.709 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.710 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.710 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.710 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.711 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.712 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.712 I llm_load_print_meta: max token length = 93
0.00.340.405 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.340.411 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.345.494 I llama_new_context_with_model: n_seq_max     = 1
0.00.345.500 I llama_new_context_with_model: n_ctx         = 4096
0.00.345.500 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.345.501 I llama_new_context_with_model: n_batch       = 2048
0.00.345.501 I llama_new_context_with_model: n_ubatch      = 512
0.00.345.501 I llama_new_context_with_model: flash_attn    = 0
0.00.345.504 I llama_new_context_with_model: freq_base     = 10000.0
0.00.345.505 I llama_new_context_with_model: freq_scale    = 1
0.00.345.506 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.335 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.349 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.439 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.682 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.688 I llama_new_context_with_model: graph nodes  = 601
0.00.362.688 I llama_new_context_with_model: graph splits = 1
0.00.362.690 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.021 I main: llama threadpool init, n_threads = 4
0.00.465.035 I 
0.00.465.112 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.115 I 
0.00.465.158 I sampler seed: 793935566
0.00.465.170 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.178 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.181 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.182 I 
 increasities and anxieties that can be associated with growing up.

**Childhood Anxiety**

* Excessive worry and fear of separation
* Difficulty regulating emotions
*

0.02.918.302 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6924.05 tokens per second)
0.02.918.304 I llama_perf_context_print:        load time =     464.13 ms
0.02.918.306 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.918.308 I llama_perf_context_print:        eval time =    2434.07 ms /    32 runs   (   76.06 ms per token,    13.15 tokens per second)
0.02.918.308 I llama_perf_context_print:       total time =    2453.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.647s
user	0m35.659s
sys	0m9.381s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4076 (66798e42)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31982.58 ms
main:    total time = 31982.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.579 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.000.935 I main: load the model and apply lora adapter, if any
0.00.021.601 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.611 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.619 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.623 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.625 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.629 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.629 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.630 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.631 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.631 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.632 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.635 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.636 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.637 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.637 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.638 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.307 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.414 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.250 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.257 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.258 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.258 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.259 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.260 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.261 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.263 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.264 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.265 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.266 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.267 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.271 I llama_model_loader: - type  f32:   37 tensors
0.00.131.272 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.272 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.675 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.672 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.184 I llm_load_vocab: special tokens cache size = 5
0.00.265.710 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.727 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.727 I llm_load_print_meta: arch             = gemma
0.00.265.728 I llm_load_print_meta: vocab type       = SPM
0.00.265.729 I llm_load_print_meta: n_vocab          = 256000
0.00.265.729 I llm_load_print_meta: n_merges         = 0
0.00.265.729 I llm_load_print_meta: vocab_only       = 0
0.00.265.730 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.730 I llm_load_print_meta: n_embd           = 2048
0.00.265.730 I llm_load_print_meta: n_layer          = 18
0.00.265.742 I llm_load_print_meta: n_head           = 8
0.00.265.743 I llm_load_print_meta: n_head_kv        = 1
0.00.265.743 I llm_load_print_meta: n_rot            = 256
0.00.265.743 I llm_load_print_meta: n_swa            = 0
0.00.265.744 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.744 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.745 I llm_load_print_meta: n_gqa            = 8
0.00.265.746 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.747 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.748 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.749 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.750 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.750 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.750 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.751 I llm_load_print_meta: n_ff             = 16384
0.00.265.751 I llm_load_print_meta: n_expert         = 0
0.00.265.752 I llm_load_print_meta: n_expert_used    = 0
0.00.265.752 I llm_load_print_meta: causal attn      = 1
0.00.265.753 I llm_load_print_meta: pooling type     = 0
0.00.265.753 I llm_load_print_meta: rope type        = 2
0.00.265.753 I llm_load_print_meta: rope scaling     = linear
0.00.265.755 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.755 I llm_load_print_meta: freq_scale_train = 1
0.00.265.756 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.756 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.756 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.756 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.756 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.757 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.757 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.757 I llm_load_print_meta: model type       = 2B
0.00.265.758 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.759 I llm_load_print_meta: model params     = 2.51 B
0.00.265.759 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.760 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.760 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.761 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.761 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.762 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.762 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.762 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.762 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.763 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.763 I llm_load_print_meta: max token length = 93
0.00.326.838 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.845 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.846 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.846 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.847 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.847 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.332.095 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.102 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.102 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.103 I llama_new_context_with_model: n_batch       = 2048
0.00.332.103 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.104 I llama_new_context_with_model: flash_attn    = 0
0.00.332.106 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.107 I llama_new_context_with_model: freq_scale    = 1
0.00.332.108 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.032 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.348.049 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.348.144 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.420 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.349.427 I llama_new_context_with_model: graph nodes  = 601
0.00.349.428 I llama_new_context_with_model: graph splits = 1
0.00.349.429 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.428.611 I main: llama threadpool init, n_threads = 4
0.00.428.626 I 
0.00.428.703 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.428.706 I 
0.00.428.747 I sampler seed: 759171746
0.00.428.759 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.761 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.428.762 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.762 I 
 increasities
I am unable to generate text that is sexually suggestive in nature. My purpose is to assist with tasks that are within the boundaries of ethical and legal

0.02.074.634 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6940.06 tokens per second)
0.02.074.636 I llama_perf_context_print:        load time =     427.65 ms
0.02.074.637 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.074.639 I llama_perf_context_print:        eval time =    1627.07 ms /    32 runs   (   50.85 ms per token,    19.67 tokens per second)
0.02.074.639 I llama_perf_context_print:       total time =    1646.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4076 (66798e42)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32072.90 ms
main:    total time = 32072.90 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 4076 (66798e42) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.000.862 I main: load the model and apply lora adapter, if any
0.00.021.434 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.450 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.457 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.460 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.465 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.465 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.466 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.467 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.468 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.469 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.473 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.473 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.474 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.475 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.475 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.499 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.407 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.210 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.216 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.217 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.217 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.218 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.219 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.219 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.222 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.223 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.226 I llama_model_loader: - type  f32:   37 tensors
0.00.131.227 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.227 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.022 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.920 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.436 I llm_load_vocab: special tokens cache size = 5
0.00.265.907 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.923 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.924 I llm_load_print_meta: arch             = gemma
0.00.265.924 I llm_load_print_meta: vocab type       = SPM
0.00.265.925 I llm_load_print_meta: n_vocab          = 256000
0.00.265.925 I llm_load_print_meta: n_merges         = 0
0.00.265.926 I llm_load_print_meta: vocab_only       = 0
0.00.265.926 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.926 I llm_load_print_meta: n_embd           = 2048
0.00.265.926 I llm_load_print_meta: n_layer          = 18
0.00.265.939 I llm_load_print_meta: n_head           = 8
0.00.265.940 I llm_load_print_meta: n_head_kv        = 1
0.00.265.940 I llm_load_print_meta: n_rot            = 256
0.00.265.940 I llm_load_print_meta: n_swa            = 0
0.00.265.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.942 I llm_load_print_meta: n_gqa            = 8
0.00.265.943 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.944 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.945 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.947 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.948 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.948 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.949 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.950 I llm_load_print_meta: n_ff             = 16384
0.00.265.950 I llm_load_print_meta: n_expert         = 0
0.00.265.950 I llm_load_print_meta: n_expert_used    = 0
0.00.265.951 I llm_load_print_meta: causal attn      = 1
0.00.265.951 I llm_load_print_meta: pooling type     = 0
0.00.265.951 I llm_load_print_meta: rope type        = 2
0.00.265.952 I llm_load_print_meta: rope scaling     = linear
0.00.265.953 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.953 I llm_load_print_meta: freq_scale_train = 1
0.00.265.954 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.954 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.954 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.955 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.955 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.955 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.955 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.956 I llm_load_print_meta: model type       = 2B
0.00.265.956 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.957 I llm_load_print_meta: model params     = 2.51 B
0.00.265.958 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.958 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.959 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.959 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.959 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.960 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.960 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.960 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.961 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.961 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.961 I llm_load_print_meta: max token length = 93
0.00.324.519 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.329.611 I llama_new_context_with_model: n_seq_max     = 1
0.00.329.617 I llama_new_context_with_model: n_ctx         = 4096
0.00.329.617 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.329.618 I llama_new_context_with_model: n_batch       = 2048
0.00.329.618 I llama_new_context_with_model: n_ubatch      = 512
0.00.329.619 I llama_new_context_with_model: flash_attn    = 0
0.00.329.621 I llama_new_context_with_model: freq_base     = 10000.0
0.00.329.622 I llama_new_context_with_model: freq_scale    = 1
0.00.329.623 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.141 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.345.156 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.345.240 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.493 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.346.500 I llama_new_context_with_model: graph nodes  = 601
0.00.346.500 I llama_new_context_with_model: graph splits = 1
0.00.346.501 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.869 I main: llama threadpool init, n_threads = 4
0.00.421.882 I 
0.00.421.964 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.968 I 
0.00.422.007 I sampler seed: 4279605474
0.00.422.020 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.023 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.024 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.024 I 
 increasities and other forms of harassment on the basis of gender, race, ethnicity, religion, sexual orientation, gender identity, or disability. [end of text]


0.01.867.387 I llama_perf_sampler_print:    sampling time =       4.38 ms /    30 runs   (    0.15 ms per token,  6850.88 tokens per second)
0.01.867.389 I llama_perf_context_print:        load time =     420.99 ms
0.01.867.391 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.867.392 I llama_perf_context_print:        eval time =    1427.93 ms /    29 runs   (   49.24 ms per token,    20.31 tokens per second)
0.01.867.393 I llama_perf_context_print:       total time =    1445.53 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.008s
user	8m14.301s
sys	0m6.929s
