+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.570 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.856 I main: load the model and apply lora adapter, if any
0.00.022.055 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.105 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.113 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.119 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.123 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.127 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.128 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.129 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.130 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.131 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.132 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.137 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.138 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.139 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.139 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.140 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.231 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.357 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.234 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.241 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.242 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.242 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.243 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.244 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.244 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.247 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.248 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.249 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.250 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.254 I llama_model_loader: - type  f32:   37 tensors
0.00.133.257 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.307 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.448 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.110 I llm_load_vocab: special tokens cache size = 5
0.00.278.331 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.352 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.352 I llm_load_print_meta: arch             = gemma
0.00.278.353 I llm_load_print_meta: vocab type       = SPM
0.00.278.354 I llm_load_print_meta: n_vocab          = 256000
0.00.278.354 I llm_load_print_meta: n_merges         = 0
0.00.278.355 I llm_load_print_meta: vocab_only       = 0
0.00.278.355 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.355 I llm_load_print_meta: n_embd           = 2048
0.00.278.355 I llm_load_print_meta: n_layer          = 18
0.00.278.367 I llm_load_print_meta: n_head           = 8
0.00.278.368 I llm_load_print_meta: n_head_kv        = 1
0.00.278.368 I llm_load_print_meta: n_rot            = 256
0.00.278.368 I llm_load_print_meta: n_swa            = 0
0.00.278.369 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.369 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.370 I llm_load_print_meta: n_gqa            = 8
0.00.278.371 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.372 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.373 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.374 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.375 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.375 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.376 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.376 I llm_load_print_meta: n_ff             = 16384
0.00.278.377 I llm_load_print_meta: n_expert         = 0
0.00.278.377 I llm_load_print_meta: n_expert_used    = 0
0.00.278.377 I llm_load_print_meta: causal attn      = 1
0.00.278.377 I llm_load_print_meta: pooling type     = 0
0.00.278.377 I llm_load_print_meta: rope type        = 2
0.00.278.378 I llm_load_print_meta: rope scaling     = linear
0.00.278.379 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.380 I llm_load_print_meta: freq_scale_train = 1
0.00.278.380 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.380 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.381 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.381 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.381 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.382 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.382 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.383 I llm_load_print_meta: model type       = 2B
0.00.278.383 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.384 I llm_load_print_meta: model params     = 2.51 B
0.00.278.385 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.385 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.386 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.386 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.386 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.387 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.387 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.388 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.388 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.389 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.389 I llm_load_print_meta: max token length = 93
0.00.278.411 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.378.443 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.378.452 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.378.452 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.378.453 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.378.453 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.378.454 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.383.499 I llama_new_context_with_model: n_ctx      = 8192
0.00.383.507 I llama_new_context_with_model: n_batch    = 2048
0.00.383.507 I llama_new_context_with_model: n_ubatch   = 512
0.00.383.508 I llama_new_context_with_model: flash_attn = 0
0.00.383.511 I llama_new_context_with_model: freq_base  = 10000.0
0.00.383.511 I llama_new_context_with_model: freq_scale = 1
0.00.413.572 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.413.588 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.413.690 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.529 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.414.538 I llama_new_context_with_model: graph nodes  = 601
0.00.414.538 I llama_new_context_with_model: graph splits = 1
0.00.414.540 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.508.510 I main: llama threadpool init, n_threads = 4
0.00.508.524 I 
0.00.508.605 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.508.608 I 
0.00.508.651 I sampler seed: 3491495238
0.00.508.661 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.664 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.508.665 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.665 I 
 increamentalism to a modern world context.

**Answer:**

**Decentralization and fragmentation:**

* The rise of social media platforms and decentralized technologies

0.02.814.600 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7006.37 tokens per second)
0.02.814.602 I llama_perf_context_print:        load time =     506.63 ms
0.02.814.604 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.814.605 I llama_perf_context_print:        eval time =    2286.34 ms /    32 runs   (   71.45 ms per token,    14.00 tokens per second)
0.02.814.606 I llama_perf_context_print:       total time =    2306.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.575 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.286 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.298 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.306 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.306 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.311 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.312 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.313 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.314 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.315 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.315 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.320 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.321 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.322 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.323 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.323 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.159 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.210 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.093 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.100 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.101 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.102 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.102 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.103 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.103 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.106 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.106 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.107 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.107 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.108 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.113 I llama_model_loader: - type  f32:   37 tensors
0.00.133.116 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.745 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.264.531 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.180 I llm_load_vocab: special tokens cache size = 5
0.00.286.253 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.273 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.273 I llm_load_print_meta: arch             = gemma
0.00.286.274 I llm_load_print_meta: vocab type       = SPM
0.00.286.274 I llm_load_print_meta: n_vocab          = 256000
0.00.286.275 I llm_load_print_meta: n_merges         = 0
0.00.286.275 I llm_load_print_meta: vocab_only       = 0
0.00.286.276 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.276 I llm_load_print_meta: n_embd           = 2048
0.00.286.276 I llm_load_print_meta: n_layer          = 18
0.00.286.289 I llm_load_print_meta: n_head           = 8
0.00.286.290 I llm_load_print_meta: n_head_kv        = 1
0.00.286.291 I llm_load_print_meta: n_rot            = 256
0.00.286.291 I llm_load_print_meta: n_swa            = 0
0.00.286.291 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.291 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.292 I llm_load_print_meta: n_gqa            = 8
0.00.286.293 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.294 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.295 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.297 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.297 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.297 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.298 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.299 I llm_load_print_meta: n_ff             = 16384
0.00.286.300 I llm_load_print_meta: n_expert         = 0
0.00.286.300 I llm_load_print_meta: n_expert_used    = 0
0.00.286.300 I llm_load_print_meta: causal attn      = 1
0.00.286.300 I llm_load_print_meta: pooling type     = 0
0.00.286.300 I llm_load_print_meta: rope type        = 2
0.00.286.301 I llm_load_print_meta: rope scaling     = linear
0.00.286.302 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.302 I llm_load_print_meta: freq_scale_train = 1
0.00.286.303 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.303 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.303 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.304 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.304 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.304 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.305 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.305 I llm_load_print_meta: model type       = 2B
0.00.286.306 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.306 I llm_load_print_meta: model params     = 2.51 B
0.00.286.307 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.308 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.308 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.308 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.309 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.309 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.309 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.310 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.311 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.311 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.312 I llm_load_print_meta: max token length = 93
0.00.286.336 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.379.294 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.385.278 I llama_new_context_with_model: n_ctx      = 8192
0.00.385.287 I llama_new_context_with_model: n_batch    = 2048
0.00.385.287 I llama_new_context_with_model: n_ubatch   = 512
0.00.385.288 I llama_new_context_with_model: flash_attn = 0
0.00.385.291 I llama_new_context_with_model: freq_base  = 10000.0
0.00.385.293 I llama_new_context_with_model: freq_scale = 1
0.00.415.702 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.415.719 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.415.815 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.416.730 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.416.738 I llama_new_context_with_model: graph nodes  = 601
0.00.416.738 I llama_new_context_with_model: graph splits = 1
0.00.416.740 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.505.521 I main: llama threadpool init, n_threads = 4
0.00.505.537 I 
0.00.505.635 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.505.639 I 
0.00.505.698 I sampler seed: 3686454962
0.00.505.710 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.715 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.505.716 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.716 I 
 increasities. 

The provided text contains a misspelling and illogical sentence structure. It is difficult to understand the meaning of the text.

Please provide a

0.02.762.963 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6926.95 tokens per second)
0.02.762.966 I llama_perf_context_print:        load time =     503.60 ms
0.02.762.967 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.762.969 I llama_perf_context_print:        eval time =    2237.04 ms /    32 runs   (   69.91 ms per token,    14.30 tokens per second)
0.02.762.970 I llama_perf_context_print:       total time =    2257.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.802 I main: llama backend init
0.00.001.946 I main: load the model and apply lora adapter, if any
0.00.028.019 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.028.077 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.028.086 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.100 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.104 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.110 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.111 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.112 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.113 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.115 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.123 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.124 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.125 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.126 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.028.127 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.887 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.340 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.348 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.357 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.358 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.359 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.359 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.360 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.361 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.363 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.364 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.364 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.366 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.367 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.371 I llama_model_loader: - type  f32:   37 tensors
0.00.145.374 I llama_model_loader: - type q8_0:  127 tensors
0.00.236.520 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.290.796 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.291.554 I llm_load_vocab: special tokens cache size = 5
0.00.316.709 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.316.732 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.316.734 I llm_load_print_meta: arch             = gemma
0.00.316.737 I llm_load_print_meta: vocab type       = SPM
0.00.316.738 I llm_load_print_meta: n_vocab          = 256000
0.00.316.739 I llm_load_print_meta: n_merges         = 0
0.00.316.739 I llm_load_print_meta: vocab_only       = 0
0.00.316.740 I llm_load_print_meta: n_ctx_train      = 8192
0.00.316.740 I llm_load_print_meta: n_embd           = 2048
0.00.316.741 I llm_load_print_meta: n_layer          = 18
0.00.316.756 I llm_load_print_meta: n_head           = 8
0.00.316.757 I llm_load_print_meta: n_head_kv        = 1
0.00.316.758 I llm_load_print_meta: n_rot            = 256
0.00.316.758 I llm_load_print_meta: n_swa            = 0
0.00.316.759 I llm_load_print_meta: n_embd_head_k    = 256
0.00.316.759 I llm_load_print_meta: n_embd_head_v    = 256
0.00.316.761 I llm_load_print_meta: n_gqa            = 8
0.00.316.763 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.316.764 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.316.765 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.316.767 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.316.768 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.316.768 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.316.769 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.316.771 I llm_load_print_meta: n_ff             = 16384
0.00.316.772 I llm_load_print_meta: n_expert         = 0
0.00.316.772 I llm_load_print_meta: n_expert_used    = 0
0.00.316.773 I llm_load_print_meta: causal attn      = 1
0.00.316.773 I llm_load_print_meta: pooling type     = 0
0.00.316.774 I llm_load_print_meta: rope type        = 2
0.00.316.774 I llm_load_print_meta: rope scaling     = linear
0.00.316.776 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.316.777 I llm_load_print_meta: freq_scale_train = 1
0.00.316.777 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.316.778 I llm_load_print_meta: rope_finetuned   = unknown
0.00.316.779 I llm_load_print_meta: ssm_d_conv       = 0
0.00.316.779 I llm_load_print_meta: ssm_d_inner      = 0
0.00.316.780 I llm_load_print_meta: ssm_d_state      = 0
0.00.316.780 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.316.781 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.316.782 I llm_load_print_meta: model type       = 2B
0.00.316.782 I llm_load_print_meta: model ftype      = Q8_0
0.00.316.783 I llm_load_print_meta: model params     = 2.51 B
0.00.316.785 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.316.785 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.316.786 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.316.786 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.316.787 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.316.788 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.316.789 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.316.790 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.316.790 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.316.792 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.316.792 I llm_load_print_meta: max token length = 93
0.00.316.819 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.394.444 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.394.453 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.394.454 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.394.455 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.394.455 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.394.456 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.399.683 I llama_new_context_with_model: n_ctx      = 8192
0.00.399.691 I llama_new_context_with_model: n_batch    = 2048
0.00.399.692 I llama_new_context_with_model: n_ubatch   = 512
0.00.399.692 I llama_new_context_with_model: flash_attn = 0
0.00.399.695 I llama_new_context_with_model: freq_base  = 10000.0
0.00.399.696 I llama_new_context_with_model: freq_scale = 1
0.00.431.334 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.431.350 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.431.443 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.432.330 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.432.338 I llama_new_context_with_model: graph nodes  = 601
0.00.432.338 I llama_new_context_with_model: graph splits = 1
0.00.432.340 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.526.873 I main: llama threadpool init, n_threads = 4
0.00.526.888 I 
0.00.526.966 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.526.969 I 
0.00.527.010 I sampler seed: 2288772315
0.00.527.021 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.527.024 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.527.025 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.527.025 I 
 increasities with an enigmatic smile, and a voice that whispers secrets to the hearts of those who dare to listen.

Who is she? [end of text]


0.02.645.260 I llama_perf_sampler_print:    sampling time =       4.76 ms /    30 runs   (    0.16 ms per token,  6307.82 tokens per second)
0.02.645.263 I llama_perf_context_print:        load time =     524.90 ms
0.02.645.264 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.645.265 I llama_perf_context_print:        eval time =    2099.78 ms /    29 runs   (   72.41 ms per token,    13.81 tokens per second)
0.02.645.266 I llama_perf_context_print:       total time =    2118.39 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.577 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.022.181 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.231 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.239 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.245 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.246 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.250 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.251 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.252 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.252 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.253 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.253 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.259 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.259 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.260 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.261 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.261 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.879 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.449 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.185 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.193 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.194 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.194 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.195 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.196 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.196 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.199 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.199 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.200 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.201 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.138.202 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.206 I llama_model_loader: - type  f32:   37 tensors
0.00.138.208 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.261 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.760 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.515 I llm_load_vocab: special tokens cache size = 5
0.00.295.511 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.538 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.538 I llm_load_print_meta: arch             = gemma
0.00.295.539 I llm_load_print_meta: vocab type       = SPM
0.00.295.540 I llm_load_print_meta: n_vocab          = 256000
0.00.295.541 I llm_load_print_meta: n_merges         = 0
0.00.295.541 I llm_load_print_meta: vocab_only       = 0
0.00.295.542 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.542 I llm_load_print_meta: n_embd           = 2048
0.00.295.543 I llm_load_print_meta: n_layer          = 18
0.00.295.559 I llm_load_print_meta: n_head           = 8
0.00.295.561 I llm_load_print_meta: n_head_kv        = 1
0.00.295.561 I llm_load_print_meta: n_rot            = 256
0.00.295.562 I llm_load_print_meta: n_swa            = 0
0.00.295.562 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.563 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.564 I llm_load_print_meta: n_gqa            = 8
0.00.295.566 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.568 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.569 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.571 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.571 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.572 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.573 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.574 I llm_load_print_meta: n_ff             = 16384
0.00.295.575 I llm_load_print_meta: n_expert         = 0
0.00.295.575 I llm_load_print_meta: n_expert_used    = 0
0.00.295.576 I llm_load_print_meta: causal attn      = 1
0.00.295.576 I llm_load_print_meta: pooling type     = 0
0.00.295.576 I llm_load_print_meta: rope type        = 2
0.00.295.577 I llm_load_print_meta: rope scaling     = linear
0.00.295.579 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.580 I llm_load_print_meta: freq_scale_train = 1
0.00.295.580 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.581 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.581 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.582 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.582 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.583 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.583 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.585 I llm_load_print_meta: model type       = 2B
0.00.295.585 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.586 I llm_load_print_meta: model params     = 2.51 B
0.00.295.588 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.588 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.589 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.589 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.590 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.591 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.591 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.592 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.592 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.593 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.594 I llm_load_print_meta: max token length = 93
0.00.295.622 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.582 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.367.589 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.372.694 I llama_new_context_with_model: n_ctx      = 8192
0.00.372.700 I llama_new_context_with_model: n_batch    = 2048
0.00.372.701 I llama_new_context_with_model: n_ubatch   = 512
0.00.372.701 I llama_new_context_with_model: flash_attn = 0
0.00.372.704 I llama_new_context_with_model: freq_base  = 10000.0
0.00.372.705 I llama_new_context_with_model: freq_scale = 1
0.00.403.299 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.403.318 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.403.413 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.325 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.404.333 I llama_new_context_with_model: graph nodes  = 601
0.00.404.333 I llama_new_context_with_model: graph splits = 1
0.00.404.335 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.500.699 I main: llama threadpool init, n_threads = 4
0.00.500.713 I 
0.00.500.793 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.500.796 I 
0.00.500.838 I sampler seed: 826423317
0.00.500.850 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.500.854 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.500.854 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.500.855 I 
 increably, her eyes gleaming with mischief.

**Answer:**

I am unable to generate sexually suggestive or inappropriate content, including romantic or sexual themes. My

0.03.006.189 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6631.83 tokens per second)
0.03.006.193 I llama_perf_context_print:        load time =     498.81 ms
0.03.006.195 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.006.197 I llama_perf_context_print:        eval time =    2484.70 ms /    32 runs   (   77.65 ms per token,    12.88 tokens per second)
0.03.006.198 I llama_perf_context_print:       total time =    2505.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.949s
user	0m39.875s
sys	0m9.537s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3979 (66875035)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32058.24 ms
main:    total time = 32058.24 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.021.864 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.917 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.927 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.933 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.938 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.943 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.957 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.958 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.959 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.960 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.961 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.966 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.969 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.970 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.971 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.972 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.809 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.905 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.879 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.889 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.890 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.890 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.891 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.892 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.892 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.896 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.896 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.897 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.898 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.899 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.903 I llama_model_loader: - type  f32:   37 tensors
0.00.132.906 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.906 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.715 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.074 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.691 I llm_load_vocab: special tokens cache size = 5
0.00.283.781 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.797 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.797 I llm_load_print_meta: arch             = gemma
0.00.283.798 I llm_load_print_meta: vocab type       = SPM
0.00.283.798 I llm_load_print_meta: n_vocab          = 256000
0.00.283.799 I llm_load_print_meta: n_merges         = 0
0.00.283.799 I llm_load_print_meta: vocab_only       = 0
0.00.283.799 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.800 I llm_load_print_meta: n_embd           = 2048
0.00.283.800 I llm_load_print_meta: n_layer          = 18
0.00.283.812 I llm_load_print_meta: n_head           = 8
0.00.283.813 I llm_load_print_meta: n_head_kv        = 1
0.00.283.813 I llm_load_print_meta: n_rot            = 256
0.00.283.813 I llm_load_print_meta: n_swa            = 0
0.00.283.814 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.814 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.815 I llm_load_print_meta: n_gqa            = 8
0.00.283.830 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.832 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.833 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.834 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.835 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.835 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.835 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.836 I llm_load_print_meta: n_ff             = 16384
0.00.283.837 I llm_load_print_meta: n_expert         = 0
0.00.283.837 I llm_load_print_meta: n_expert_used    = 0
0.00.283.837 I llm_load_print_meta: causal attn      = 1
0.00.283.838 I llm_load_print_meta: pooling type     = 0
0.00.283.838 I llm_load_print_meta: rope type        = 2
0.00.283.838 I llm_load_print_meta: rope scaling     = linear
0.00.283.839 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.840 I llm_load_print_meta: freq_scale_train = 1
0.00.283.841 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.841 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.841 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.842 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.843 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.843 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.843 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.844 I llm_load_print_meta: model type       = 2B
0.00.283.845 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.846 I llm_load_print_meta: model params     = 2.51 B
0.00.283.846 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.847 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.848 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.848 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.849 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.849 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.850 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.851 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.851 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.851 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.852 I llm_load_print_meta: max token length = 93
0.00.283.879 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.644 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.342.653 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.342.654 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.342.655 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.342.655 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.342.656 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.347.844 I llama_new_context_with_model: n_ctx      = 8192
0.00.347.850 I llama_new_context_with_model: n_batch    = 2048
0.00.347.851 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.851 I llama_new_context_with_model: flash_attn = 0
0.00.347.854 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.855 I llama_new_context_with_model: freq_scale = 1
0.00.377.271 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.377.288 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.377.382 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.266 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.378.274 I llama_new_context_with_model: graph nodes  = 601
0.00.378.275 I llama_new_context_with_model: graph splits = 1
0.00.378.277 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.661 I main: llama threadpool init, n_threads = 4
0.00.460.674 I 
0.00.460.756 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.760 I 
0.00.460.814 I sampler seed: 3072903139
0.00.460.826 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.832 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.832 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.833 I 
 increamically. I'm not sure if I should be concerned.

I'm experiencing some concerning symptoms such as:

- Intense abdominal pain
-

0.02.116.292 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6705.95 tokens per second)
0.02.116.294 I llama_perf_context_print:        load time =     458.75 ms
0.02.116.295 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.116.296 I llama_perf_context_print:        eval time =    1635.10 ms /    32 runs   (   51.10 ms per token,    19.57 tokens per second)
0.02.116.297 I llama_perf_context_print:       total time =    1655.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3979 (66875035)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32090.82 ms
main:    total time = 32090.82 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.560 I build: 3979 (66875035) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.022.324 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.336 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.343 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.345 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.349 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.350 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.350 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.351 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.351 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.352 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.356 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.356 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.357 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.358 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.358 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.242 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.495 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.332 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.339 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.340 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.340 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.341 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.342 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.342 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.344 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.345 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.349 I llama_model_loader: - type  f32:   37 tensors
0.00.133.352 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.352 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.978 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.518 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.160 I llm_load_vocab: special tokens cache size = 5
0.00.287.258 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.277 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.277 I llm_load_print_meta: arch             = gemma
0.00.287.278 I llm_load_print_meta: vocab type       = SPM
0.00.287.278 I llm_load_print_meta: n_vocab          = 256000
0.00.287.279 I llm_load_print_meta: n_merges         = 0
0.00.287.279 I llm_load_print_meta: vocab_only       = 0
0.00.287.280 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.280 I llm_load_print_meta: n_embd           = 2048
0.00.287.280 I llm_load_print_meta: n_layer          = 18
0.00.287.292 I llm_load_print_meta: n_head           = 8
0.00.287.293 I llm_load_print_meta: n_head_kv        = 1
0.00.287.294 I llm_load_print_meta: n_rot            = 256
0.00.287.294 I llm_load_print_meta: n_swa            = 0
0.00.287.295 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.296 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.297 I llm_load_print_meta: n_gqa            = 8
0.00.287.298 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.299 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.300 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.302 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.302 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.303 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.308 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.309 I llm_load_print_meta: n_ff             = 16384
0.00.287.309 I llm_load_print_meta: n_expert         = 0
0.00.287.309 I llm_load_print_meta: n_expert_used    = 0
0.00.287.310 I llm_load_print_meta: causal attn      = 1
0.00.287.310 I llm_load_print_meta: pooling type     = 0
0.00.287.310 I llm_load_print_meta: rope type        = 2
0.00.287.311 I llm_load_print_meta: rope scaling     = linear
0.00.287.312 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.313 I llm_load_print_meta: freq_scale_train = 1
0.00.287.313 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.313 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.314 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.314 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.314 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.314 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.315 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.316 I llm_load_print_meta: model type       = 2B
0.00.287.316 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.287.317 I llm_load_print_meta: model params     = 2.51 B
0.00.287.318 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.287.319 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.319 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.320 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.320 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.321 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.322 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.322 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.323 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.323 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.324 I llm_load_print_meta: max token length = 93
0.00.287.349 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.344.132 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.349.269 I llama_new_context_with_model: n_ctx      = 8192
0.00.349.276 I llama_new_context_with_model: n_batch    = 2048
0.00.349.276 I llama_new_context_with_model: n_ubatch   = 512
0.00.349.277 I llama_new_context_with_model: flash_attn = 0
0.00.349.279 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.280 I llama_new_context_with_model: freq_scale = 1
0.00.380.070 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.087 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.188 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.086 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.092 I llama_new_context_with_model: graph nodes  = 601
0.00.381.093 I llama_new_context_with_model: graph splits = 1
0.00.381.095 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.364 I main: llama threadpool init, n_threads = 4
0.00.462.378 I 
0.00.462.460 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.464 I 
0.00.462.510 I sampler seed: 631401818
0.00.462.523 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.527 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.462.528 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.529 I 
 seconally, the sentence will read: "We have reached the conclusion that the company's financial performance has been unsatisfactory for the past few years, and we

0.02.147.786 I llama_perf_sampler_print:    sampling time =       5.38 ms /    33 runs   (    0.16 ms per token,  6133.83 tokens per second)
0.02.147.788 I llama_perf_context_print:        load time =     460.46 ms
0.02.147.790 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.147.791 I llama_perf_context_print:        eval time =    1663.93 ms /    32 runs   (   52.00 ms per token,    19.23 tokens per second)
0.02.147.792 I llama_perf_context_print:       total time =    1685.43 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.302s
user	8m15.520s
sys	0m7.176s
