+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.554 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.022.020 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.069 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.080 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.085 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.089 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.095 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.097 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.097 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.097 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.102 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.103 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.103 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.104 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.104 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.539 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.389 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.264 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.271 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.271 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.272 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.273 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.274 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.275 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.280 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.281 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.281 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.282 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.284 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.287 I llama_model_loader: - type  f32:   37 tensors
0.00.132.290 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.266 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.441 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.252.977 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.257.804 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.267.924 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.580 I llm_load_vocab: special tokens cache size = 5
0.00.289.351 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.289.370 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.289.370 I llm_load_print_meta: arch             = gemma
0.00.289.371 I llm_load_print_meta: vocab type       = SPM
0.00.289.371 I llm_load_print_meta: n_vocab          = 256000
0.00.289.372 I llm_load_print_meta: n_merges         = 0
0.00.289.372 I llm_load_print_meta: vocab_only       = 0
0.00.289.373 I llm_load_print_meta: n_ctx_train      = 8192
0.00.289.373 I llm_load_print_meta: n_embd           = 2048
0.00.289.373 I llm_load_print_meta: n_layer          = 18
0.00.289.386 I llm_load_print_meta: n_head           = 8
0.00.289.387 I llm_load_print_meta: n_head_kv        = 1
0.00.289.387 I llm_load_print_meta: n_rot            = 256
0.00.289.387 I llm_load_print_meta: n_swa            = 0
0.00.289.388 I llm_load_print_meta: n_embd_head_k    = 256
0.00.289.388 I llm_load_print_meta: n_embd_head_v    = 256
0.00.289.389 I llm_load_print_meta: n_gqa            = 8
0.00.289.390 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.289.391 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.289.392 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.289.393 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.289.393 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.289.394 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.289.394 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.289.395 I llm_load_print_meta: n_ff             = 16384
0.00.289.395 I llm_load_print_meta: n_expert         = 0
0.00.289.396 I llm_load_print_meta: n_expert_used    = 0
0.00.289.396 I llm_load_print_meta: causal attn      = 1
0.00.289.396 I llm_load_print_meta: pooling type     = 0
0.00.289.397 I llm_load_print_meta: rope type        = 2
0.00.289.397 I llm_load_print_meta: rope scaling     = linear
0.00.289.398 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.289.399 I llm_load_print_meta: freq_scale_train = 1
0.00.289.399 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.289.399 I llm_load_print_meta: rope_finetuned   = unknown
0.00.289.400 I llm_load_print_meta: ssm_d_conv       = 0
0.00.289.400 I llm_load_print_meta: ssm_d_inner      = 0
0.00.289.400 I llm_load_print_meta: ssm_d_state      = 0
0.00.289.400 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.289.400 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.289.401 I llm_load_print_meta: model type       = 2B
0.00.289.401 I llm_load_print_meta: model ftype      = Q8_0
0.00.289.402 I llm_load_print_meta: model params     = 2.51 B
0.00.289.403 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.289.404 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.289.404 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.289.405 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.289.405 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.289.406 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.289.406 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.289.406 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.289.406 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.289.407 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.289.408 I llm_load_print_meta: max token length = 93
0.00.289.427 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.389.404 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.389.413 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.389.413 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.389.414 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.389.414 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.389.415 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.394.590 I llama_new_context_with_model: n_ctx      = 8192
0.00.394.596 I llama_new_context_with_model: n_batch    = 2048
0.00.394.597 I llama_new_context_with_model: n_ubatch   = 512
0.00.394.597 I llama_new_context_with_model: flash_attn = 0
0.00.394.599 I llama_new_context_with_model: freq_base  = 10000.0
0.00.394.601 I llama_new_context_with_model: freq_scale = 1
0.00.422.979 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.422.994 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.423.086 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.423.944 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.423.952 I llama_new_context_with_model: graph nodes  = 601
0.00.423.953 I llama_new_context_with_model: graph splits = 1
0.00.423.955 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.516.248 I main: llama threadpool init, n_threads = 4
0.00.516.260 I 
0.00.516.338 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.516.341 I 
0.00.516.382 I sampler seed: 2397672490
0.00.516.394 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.516.397 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.516.398 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.516.398 I 
 increasels, and the like, are known to attack humans, causing significant physical and emotional harm. [end of text]


0.02.011.943 I llama_perf_sampler_print:    sampling time =       3.23 ms /    22 runs   (    0.15 ms per token,  6821.71 tokens per second)
0.02.011.946 I llama_perf_context_print:        load time =     514.39 ms
0.02.011.947 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.011.949 I llama_perf_context_print:        eval time =    1483.39 ms /    21 runs   (   70.64 ms per token,    14.16 tokens per second)
0.02.011.949 I llama_perf_context_print:       total time =    1495.70 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.569 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.850 I main: load the model and apply lora adapter, if any
0.00.021.888 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.902 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.909 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.910 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.914 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.917 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.918 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.918 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.919 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.919 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.923 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.924 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.924 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.925 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.925 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.594 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.736 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.652 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.658 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.659 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.659 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.660 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.661 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.662 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.664 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.665 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.666 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.666 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.667 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.671 I llama_model_loader: - type  f32:   37 tensors
0.00.131.673 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.671 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.936 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.242.152 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.245.856 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.253.616 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.231 I llm_load_vocab: special tokens cache size = 5
0.00.274.955 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.971 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.971 I llm_load_print_meta: arch             = gemma
0.00.274.972 I llm_load_print_meta: vocab type       = SPM
0.00.274.972 I llm_load_print_meta: n_vocab          = 256000
0.00.274.973 I llm_load_print_meta: n_merges         = 0
0.00.274.973 I llm_load_print_meta: vocab_only       = 0
0.00.274.973 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.974 I llm_load_print_meta: n_embd           = 2048
0.00.274.974 I llm_load_print_meta: n_layer          = 18
0.00.274.985 I llm_load_print_meta: n_head           = 8
0.00.274.986 I llm_load_print_meta: n_head_kv        = 1
0.00.274.986 I llm_load_print_meta: n_rot            = 256
0.00.274.987 I llm_load_print_meta: n_swa            = 0
0.00.274.987 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.987 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.988 I llm_load_print_meta: n_gqa            = 8
0.00.274.989 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.990 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.991 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.992 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.992 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.993 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.993 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.994 I llm_load_print_meta: n_ff             = 16384
0.00.274.994 I llm_load_print_meta: n_expert         = 0
0.00.274.994 I llm_load_print_meta: n_expert_used    = 0
0.00.274.995 I llm_load_print_meta: causal attn      = 1
0.00.274.995 I llm_load_print_meta: pooling type     = 0
0.00.274.995 I llm_load_print_meta: rope type        = 2
0.00.274.996 I llm_load_print_meta: rope scaling     = linear
0.00.274.997 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.998 I llm_load_print_meta: freq_scale_train = 1
0.00.274.998 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.998 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.999 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.999 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.999 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.999 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.999 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.000 I llm_load_print_meta: model type       = 2B
0.00.275.001 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.002 I llm_load_print_meta: model params     = 2.51 B
0.00.275.003 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.003 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.003 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.004 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.004 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.004 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.004 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.005 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.005 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.006 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.006 I llm_load_print_meta: max token length = 93
0.00.275.024 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.879 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.374.868 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.874 I llama_new_context_with_model: n_batch    = 2048
0.00.374.875 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.875 I llama_new_context_with_model: flash_attn = 0
0.00.374.877 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.878 I llama_new_context_with_model: freq_scale = 1
0.00.404.248 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.266 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.357 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.209 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.217 I llama_new_context_with_model: graph nodes  = 601
0.00.405.218 I llama_new_context_with_model: graph splits = 1
0.00.405.219 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.307 I main: llama threadpool init, n_threads = 4
0.00.492.318 I 
0.00.492.394 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.398 I 
0.00.492.437 I sampler seed: 248607569
0.00.492.448 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.455 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.492.456 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.456 I 
 increamically. I was going to ask you about your plans for the future, but now I see you're occupied with other matters. Please accept my apologies

0.02.694.208 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6726.46 tokens per second)
0.02.694.211 I llama_perf_context_print:        load time =     490.43 ms
0.02.694.212 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.694.214 I llama_perf_context_print:        eval time =    2183.12 ms /    32 runs   (   68.22 ms per token,    14.66 tokens per second)
0.02.694.214 I llama_perf_context_print:       total time =    2201.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.587 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.783 I main: llama backend init
0.00.001.869 I main: load the model and apply lora adapter, if any
0.00.022.179 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.229 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.236 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.241 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.243 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.247 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.249 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.249 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.250 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.250 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.251 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.255 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.255 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.257 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.721 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.777 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.749 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.756 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.757 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.758 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.758 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.759 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.760 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.763 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.764 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.765 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.765 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.766 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.769 I llama_model_loader: - type  f32:   37 tensors
0.00.132.772 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.649 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.564 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.245.975 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.250.429 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.259.484 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.089 I llm_load_vocab: special tokens cache size = 5
0.00.280.988 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.004 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.005 I llm_load_print_meta: arch             = gemma
0.00.281.005 I llm_load_print_meta: vocab type       = SPM
0.00.281.006 I llm_load_print_meta: n_vocab          = 256000
0.00.281.006 I llm_load_print_meta: n_merges         = 0
0.00.281.007 I llm_load_print_meta: vocab_only       = 0
0.00.281.007 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.007 I llm_load_print_meta: n_embd           = 2048
0.00.281.008 I llm_load_print_meta: n_layer          = 18
0.00.281.019 I llm_load_print_meta: n_head           = 8
0.00.281.020 I llm_load_print_meta: n_head_kv        = 1
0.00.281.020 I llm_load_print_meta: n_rot            = 256
0.00.281.020 I llm_load_print_meta: n_swa            = 0
0.00.281.021 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.021 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.022 I llm_load_print_meta: n_gqa            = 8
0.00.281.023 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.024 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.024 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.026 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.026 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.026 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.027 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.027 I llm_load_print_meta: n_ff             = 16384
0.00.281.028 I llm_load_print_meta: n_expert         = 0
0.00.281.028 I llm_load_print_meta: n_expert_used    = 0
0.00.281.028 I llm_load_print_meta: causal attn      = 1
0.00.281.029 I llm_load_print_meta: pooling type     = 0
0.00.281.029 I llm_load_print_meta: rope type        = 2
0.00.281.029 I llm_load_print_meta: rope scaling     = linear
0.00.281.031 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.032 I llm_load_print_meta: freq_scale_train = 1
0.00.281.032 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.032 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.032 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.033 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.033 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.033 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.033 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.034 I llm_load_print_meta: model type       = 2B
0.00.281.034 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.035 I llm_load_print_meta: model params     = 2.51 B
0.00.281.036 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.036 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.037 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.037 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.037 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.038 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.038 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.038 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.038 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.039 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.039 I llm_load_print_meta: max token length = 93
0.00.281.070 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.358.271 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.358.279 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.358.280 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.358.281 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.358.281 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.358.282 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.363.431 I llama_new_context_with_model: n_ctx      = 8192
0.00.363.438 I llama_new_context_with_model: n_batch    = 2048
0.00.363.439 I llama_new_context_with_model: n_ubatch   = 512
0.00.363.439 I llama_new_context_with_model: flash_attn = 0
0.00.363.443 I llama_new_context_with_model: freq_base  = 10000.0
0.00.363.444 I llama_new_context_with_model: freq_scale = 1
0.00.393.916 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.393.932 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.394.026 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.938 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.394.946 I llama_new_context_with_model: graph nodes  = 601
0.00.394.947 I llama_new_context_with_model: graph splits = 1
0.00.394.948 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.040 I main: llama threadpool init, n_threads = 4
0.00.489.052 I 
0.00.489.128 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.131 I 
0.00.489.170 I sampler seed: 1435721186
0.00.489.180 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.184 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.489.184 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.185 I 
 increably.

I am unable to generate a response as requested because the provided context contains potentially harmful and inappropriate content. [end of text]


0.02.257.664 I llama_perf_sampler_print:    sampling time =       3.97 ms /    26 runs   (    0.15 ms per token,  6544.17 tokens per second)
0.02.257.667 I llama_perf_context_print:        load time =     487.15 ms
0.02.257.668 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.257.669 I llama_perf_context_print:        eval time =    1753.28 ms /    25 runs   (   70.13 ms per token,    14.26 tokens per second)
0.02.257.670 I llama_perf_context_print:       total time =    1768.63 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.564 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.021.903 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.948 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.955 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.960 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.961 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.965 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.966 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.967 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.967 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.968 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.968 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.973 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.974 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.975 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.975 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.976 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.189 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.084 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.897 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.904 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.905 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.905 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.906 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.907 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.908 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.911 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.912 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.913 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.913 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.914 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.918 I llama_model_loader: - type  f32:   37 tensors
0.00.131.921 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.040 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.994 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.235.181 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.238.818 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.246.489 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.070 I llm_load_vocab: special tokens cache size = 5
0.00.267.854 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.871 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.872 I llm_load_print_meta: arch             = gemma
0.00.267.872 I llm_load_print_meta: vocab type       = SPM
0.00.267.873 I llm_load_print_meta: n_vocab          = 256000
0.00.267.873 I llm_load_print_meta: n_merges         = 0
0.00.267.873 I llm_load_print_meta: vocab_only       = 0
0.00.267.874 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.874 I llm_load_print_meta: n_embd           = 2048
0.00.267.874 I llm_load_print_meta: n_layer          = 18
0.00.267.886 I llm_load_print_meta: n_head           = 8
0.00.267.887 I llm_load_print_meta: n_head_kv        = 1
0.00.267.887 I llm_load_print_meta: n_rot            = 256
0.00.267.888 I llm_load_print_meta: n_swa            = 0
0.00.267.888 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.888 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.889 I llm_load_print_meta: n_gqa            = 8
0.00.267.890 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.891 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.892 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.893 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.894 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.894 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.894 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.895 I llm_load_print_meta: n_ff             = 16384
0.00.267.896 I llm_load_print_meta: n_expert         = 0
0.00.267.896 I llm_load_print_meta: n_expert_used    = 0
0.00.267.896 I llm_load_print_meta: causal attn      = 1
0.00.267.897 I llm_load_print_meta: pooling type     = 0
0.00.267.897 I llm_load_print_meta: rope type        = 2
0.00.267.898 I llm_load_print_meta: rope scaling     = linear
0.00.267.899 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.900 I llm_load_print_meta: freq_scale_train = 1
0.00.267.900 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.900 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.901 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.901 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.901 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.901 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.901 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.902 I llm_load_print_meta: model type       = 2B
0.00.267.902 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.903 I llm_load_print_meta: model params     = 2.51 B
0.00.267.904 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.905 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.905 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.905 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.906 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.906 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.907 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.907 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.907 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.908 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.908 I llm_load_print_meta: max token length = 93
0.00.267.933 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.457 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.338.465 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.343.575 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.582 I llama_new_context_with_model: n_batch    = 2048
0.00.343.582 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.583 I llama_new_context_with_model: flash_attn = 0
0.00.343.585 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.586 I llama_new_context_with_model: freq_scale = 1
0.00.371.380 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.371.393 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.371.485 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.350 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.372.359 I llama_new_context_with_model: graph nodes  = 601
0.00.372.359 I llama_new_context_with_model: graph splits = 1
0.00.372.361 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.430 I main: llama threadpool init, n_threads = 4
0.00.467.443 I 
0.00.467.519 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.523 I 
0.00.467.561 I sampler seed: 1370139616
0.00.467.571 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.574 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.467.575 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.575 I 
 seconormal, a person who acts as a mediator between two or more parties in a dispute.

**Additional Information:**

- This definition is based on common

0.02.901.646 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6734.69 tokens per second)
0.02.901.648 I llama_perf_context_print:        load time =     465.56 ms
0.02.901.649 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.901.651 I llama_perf_context_print:        eval time =    2415.04 ms /    32 runs   (   75.47 ms per token,    13.25 tokens per second)
0.02.901.652 I llama_perf_context_print:       total time =    2434.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.380s
user	0m34.542s
sys	0m9.469s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3928 (66c2c930)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32006.58 ms
main:    total time = 32006.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.022.442 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.492 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.500 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.505 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.506 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.510 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.511 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.511 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.512 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.512 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.514 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.517 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.518 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.518 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.519 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.520 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.709 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.112 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.975 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.981 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.982 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.982 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.983 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.984 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.984 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.987 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.988 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.988 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.989 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.990 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.993 I llama_model_loader: - type  f32:   37 tensors
0.00.131.997 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.997 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.214 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.236.124 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.237.378 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.241.245 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.249.289 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.870 I llm_load_vocab: special tokens cache size = 5
0.00.270.421 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.440 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.440 I llm_load_print_meta: arch             = gemma
0.00.270.441 I llm_load_print_meta: vocab type       = SPM
0.00.270.442 I llm_load_print_meta: n_vocab          = 256000
0.00.270.442 I llm_load_print_meta: n_merges         = 0
0.00.270.444 I llm_load_print_meta: vocab_only       = 0
0.00.270.445 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.445 I llm_load_print_meta: n_embd           = 2048
0.00.270.445 I llm_load_print_meta: n_layer          = 18
0.00.270.457 I llm_load_print_meta: n_head           = 8
0.00.270.458 I llm_load_print_meta: n_head_kv        = 1
0.00.270.458 I llm_load_print_meta: n_rot            = 256
0.00.270.459 I llm_load_print_meta: n_swa            = 0
0.00.270.459 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.460 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.461 I llm_load_print_meta: n_gqa            = 8
0.00.270.462 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.463 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.464 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.465 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.466 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.466 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.467 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.468 I llm_load_print_meta: n_ff             = 16384
0.00.270.469 I llm_load_print_meta: n_expert         = 0
0.00.270.469 I llm_load_print_meta: n_expert_used    = 0
0.00.270.469 I llm_load_print_meta: causal attn      = 1
0.00.270.470 I llm_load_print_meta: pooling type     = 0
0.00.270.471 I llm_load_print_meta: rope type        = 2
0.00.270.471 I llm_load_print_meta: rope scaling     = linear
0.00.270.473 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.474 I llm_load_print_meta: freq_scale_train = 1
0.00.270.474 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.474 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.475 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.475 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.475 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.476 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.476 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.477 I llm_load_print_meta: model type       = 2B
0.00.270.477 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.270.478 I llm_load_print_meta: model params     = 2.51 B
0.00.270.479 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.270.479 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.480 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.480 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.481 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.481 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.481 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.482 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.482 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.483 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.483 I llm_load_print_meta: max token length = 93
0.00.270.510 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.688 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.329.695 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.329.696 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.329.696 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.329.697 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.329.697 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.334.739 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.745 I llama_new_context_with_model: n_batch    = 2048
0.00.334.745 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.746 I llama_new_context_with_model: flash_attn = 0
0.00.334.748 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.749 I llama_new_context_with_model: freq_scale = 1
0.00.363.194 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.207 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.298 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.166 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.174 I llama_new_context_with_model: graph nodes  = 601
0.00.364.174 I llama_new_context_with_model: graph splits = 1
0.00.364.176 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.514 I main: llama threadpool init, n_threads = 4
0.00.445.528 I 
0.00.445.606 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.609 I 
0.00.445.649 I sampler seed: 3229393581
0.00.445.659 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.664 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.445.665 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.665 I 
 seconally.

The sentence is about a person who is struggling with their mental health.

**Structure:**

* The sentence uses informal language and contractions.

0.02.096.855 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6758.14 tokens per second)
0.02.096.858 I llama_perf_context_print:        load time =     443.62 ms
0.02.096.859 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.096.860 I llama_perf_context_print:        eval time =    1632.71 ms /    32 runs   (   51.02 ms per token,    19.60 tokens per second)
0.02.096.861 I llama_perf_context_print:       total time =    1651.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3928 (66c2c930)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32091.61 ms
main:    total time = 32091.62 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.550 I build: 3928 (66c2c930) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.768 I main: llama backend init
0.00.001.861 I main: load the model and apply lora adapter, if any
0.00.022.090 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.106 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.113 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.114 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.119 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.122 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.123 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.123 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.124 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.124 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.128 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.129 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.129 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.130 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.131 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.490 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.720 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.620 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.628 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.629 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.630 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.630 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.631 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.632 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.634 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.634 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.638 I llama_model_loader: - type  f32:   37 tensors
0.00.131.640 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.641 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.885 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.745 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.246.058 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.250.088 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.258.178 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.729 I llm_load_vocab: special tokens cache size = 5
0.00.279.299 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.323 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.323 I llm_load_print_meta: arch             = gemma
0.00.279.324 I llm_load_print_meta: vocab type       = SPM
0.00.279.325 I llm_load_print_meta: n_vocab          = 256000
0.00.279.325 I llm_load_print_meta: n_merges         = 0
0.00.279.326 I llm_load_print_meta: vocab_only       = 0
0.00.279.326 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.327 I llm_load_print_meta: n_embd           = 2048
0.00.279.327 I llm_load_print_meta: n_layer          = 18
0.00.279.338 I llm_load_print_meta: n_head           = 8
0.00.279.339 I llm_load_print_meta: n_head_kv        = 1
0.00.279.339 I llm_load_print_meta: n_rot            = 256
0.00.279.340 I llm_load_print_meta: n_swa            = 0
0.00.279.340 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.340 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.341 I llm_load_print_meta: n_gqa            = 8
0.00.279.343 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.344 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.344 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.346 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.346 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.347 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.347 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.348 I llm_load_print_meta: n_ff             = 16384
0.00.279.348 I llm_load_print_meta: n_expert         = 0
0.00.279.349 I llm_load_print_meta: n_expert_used    = 0
0.00.279.349 I llm_load_print_meta: causal attn      = 1
0.00.279.349 I llm_load_print_meta: pooling type     = 0
0.00.279.349 I llm_load_print_meta: rope type        = 2
0.00.279.350 I llm_load_print_meta: rope scaling     = linear
0.00.279.352 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.352 I llm_load_print_meta: freq_scale_train = 1
0.00.279.353 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.353 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.353 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.353 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.354 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.354 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.354 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.355 I llm_load_print_meta: model type       = 2B
0.00.279.356 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.356 I llm_load_print_meta: model params     = 2.51 B
0.00.279.358 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.358 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.358 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.359 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.359 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.360 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.360 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.360 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.360 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.361 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.361 I llm_load_print_meta: max token length = 93
0.00.279.382 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.282 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.341.325 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.332 I llama_new_context_with_model: n_batch    = 2048
0.00.341.332 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.333 I llama_new_context_with_model: flash_attn = 0
0.00.341.336 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.337 I llama_new_context_with_model: freq_scale = 1
0.00.370.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.792 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.882 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.734 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.741 I llama_new_context_with_model: graph nodes  = 601
0.00.371.741 I llama_new_context_with_model: graph splits = 1
0.00.371.743 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.589 I main: llama threadpool init, n_threads = 4
0.00.452.602 I 
0.00.452.679 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.682 I 
0.00.452.722 I sampler seed: 3636835333
0.00.452.733 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.737 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.452.738 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.740 I 
 seconal of the sun and moon.

The Sun and the Moon form a unique relationship characterized by a harmonious balance between their physical forces and their emotional connection.

0.02.084.665 I llama_perf_sampler_print:    sampling time =       5.46 ms /    33 runs   (    0.17 ms per token,  6042.85 tokens per second)
0.02.084.668 I llama_perf_context_print:        load time =     450.70 ms
0.02.084.669 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.084.671 I llama_perf_context_print:        eval time =    1612.02 ms /    32 runs   (   50.38 ms per token,    19.85 tokens per second)
0.02.084.672 I llama_perf_context_print:       total time =    1632.08 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.157s
user	8m15.133s
sys	0m7.030s
