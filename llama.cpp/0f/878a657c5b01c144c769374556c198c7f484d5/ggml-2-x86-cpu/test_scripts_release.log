+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.579 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.000.781 I main: load the model and apply lora adapter, if any
0.00.021.671 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.682 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.689 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.694 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.696 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.700 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.701 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.701 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.702 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.702 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.703 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.707 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.708 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.708 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.710 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.710 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.005 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.842 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.723 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.730 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.731 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.732 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.733 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.734 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.735 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.740 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.741 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.742 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.743 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.744 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.749 I llama_model_loader: - type  f32:   37 tensors
0.00.132.750 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.168 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.425 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.067 I llm_load_vocab: special tokens cache size = 5
0.00.282.213 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.234 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.235 I llm_load_print_meta: arch             = gemma
0.00.282.236 I llm_load_print_meta: vocab type       = SPM
0.00.282.238 I llm_load_print_meta: n_vocab          = 256000
0.00.282.238 I llm_load_print_meta: n_merges         = 0
0.00.282.238 I llm_load_print_meta: vocab_only       = 0
0.00.282.240 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.241 I llm_load_print_meta: n_embd           = 2048
0.00.282.242 I llm_load_print_meta: n_layer          = 18
0.00.282.256 I llm_load_print_meta: n_head           = 8
0.00.282.258 I llm_load_print_meta: n_head_kv        = 1
0.00.282.258 I llm_load_print_meta: n_rot            = 256
0.00.282.259 I llm_load_print_meta: n_swa            = 0
0.00.282.260 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.260 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.262 I llm_load_print_meta: n_gqa            = 8
0.00.282.263 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.265 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.266 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.268 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.269 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.270 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.270 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.272 I llm_load_print_meta: n_ff             = 16384
0.00.282.273 I llm_load_print_meta: n_expert         = 0
0.00.282.273 I llm_load_print_meta: n_expert_used    = 0
0.00.282.274 I llm_load_print_meta: causal attn      = 1
0.00.282.274 I llm_load_print_meta: pooling type     = 0
0.00.282.275 I llm_load_print_meta: rope type        = 2
0.00.282.279 I llm_load_print_meta: rope scaling     = linear
0.00.282.281 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.282 I llm_load_print_meta: freq_scale_train = 1
0.00.282.282 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.283 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.283 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.284 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.285 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.285 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.285 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.287 I llm_load_print_meta: model type       = 2B
0.00.282.288 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.289 I llm_load_print_meta: model params     = 2.51 B
0.00.282.291 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.291 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.292 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.293 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.293 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.294 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.294 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.294 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.295 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.296 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.297 I llm_load_print_meta: max token length = 93
0.00.382.554 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.382.564 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.382.565 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.382.565 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.382.566 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.382.567 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.387.961 I llama_new_context_with_model: n_seq_max     = 1
0.00.387.967 I llama_new_context_with_model: n_ctx         = 4096
0.00.387.967 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.387.968 I llama_new_context_with_model: n_batch       = 2048
0.00.387.969 I llama_new_context_with_model: n_ubatch      = 512
0.00.387.969 I llama_new_context_with_model: flash_attn    = 0
0.00.387.973 I llama_new_context_with_model: freq_base     = 10000.0
0.00.387.974 I llama_new_context_with_model: freq_scale    = 1
0.00.387.975 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.402.509 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.402.523 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.402.618 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.886 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.403.892 I llama_new_context_with_model: graph nodes  = 601
0.00.403.892 I llama_new_context_with_model: graph splits = 1
0.00.403.895 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.056 I main: llama threadpool init, n_threads = 4
0.00.490.072 I 
0.00.490.156 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.158 I 
0.00.490.210 I sampler seed: 3357137395
0.00.490.224 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.228 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.229 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.230 I 
 increasities

The provided text does not contain any information regarding "jerking", "escalating", or "zipping", so I am unable to extract the

0.02.765.572 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6918.24 tokens per second)
0.02.765.575 I llama_perf_context_print:        load time =     489.26 ms
0.02.765.577 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.765.579 I llama_perf_context_print:        eval time =    2255.64 ms /    32 runs   (   70.49 ms per token,    14.19 tokens per second)
0.02.765.580 I llama_perf_context_print:       total time =    2275.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.551 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.353 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.368 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.379 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.381 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.386 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.389 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.390 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.390 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.391 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.391 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.396 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.397 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.397 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.398 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.399 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.270 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.791 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.692 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.699 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.700 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.700 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.701 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.702 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.702 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.705 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.705 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.707 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.708 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.709 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.712 I llama_model_loader: - type  f32:   37 tensors
0.00.131.713 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.847 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.072 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.662 I llm_load_vocab: special tokens cache size = 5
0.00.284.158 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.178 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.178 I llm_load_print_meta: arch             = gemma
0.00.284.179 I llm_load_print_meta: vocab type       = SPM
0.00.284.180 I llm_load_print_meta: n_vocab          = 256000
0.00.284.180 I llm_load_print_meta: n_merges         = 0
0.00.284.180 I llm_load_print_meta: vocab_only       = 0
0.00.284.181 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.181 I llm_load_print_meta: n_embd           = 2048
0.00.284.181 I llm_load_print_meta: n_layer          = 18
0.00.284.193 I llm_load_print_meta: n_head           = 8
0.00.284.194 I llm_load_print_meta: n_head_kv        = 1
0.00.284.195 I llm_load_print_meta: n_rot            = 256
0.00.284.195 I llm_load_print_meta: n_swa            = 0
0.00.284.195 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.196 I llm_load_print_meta: n_gqa            = 8
0.00.284.197 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.198 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.199 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.201 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.201 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.201 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.202 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.203 I llm_load_print_meta: n_ff             = 16384
0.00.284.203 I llm_load_print_meta: n_expert         = 0
0.00.284.203 I llm_load_print_meta: n_expert_used    = 0
0.00.284.204 I llm_load_print_meta: causal attn      = 1
0.00.284.204 I llm_load_print_meta: pooling type     = 0
0.00.284.204 I llm_load_print_meta: rope type        = 2
0.00.284.205 I llm_load_print_meta: rope scaling     = linear
0.00.284.206 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.207 I llm_load_print_meta: freq_scale_train = 1
0.00.284.207 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.207 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.207 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.208 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.208 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.208 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.208 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.209 I llm_load_print_meta: model type       = 2B
0.00.284.210 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.210 I llm_load_print_meta: model params     = 2.51 B
0.00.284.211 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.212 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.212 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.213 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.213 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.213 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.214 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.214 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.215 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.215 I llm_load_print_meta: max token length = 93
0.00.377.038 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.382.266 I llama_new_context_with_model: n_seq_max     = 1
0.00.382.272 I llama_new_context_with_model: n_ctx         = 4096
0.00.382.272 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.382.273 I llama_new_context_with_model: n_batch       = 2048
0.00.382.273 I llama_new_context_with_model: n_ubatch      = 512
0.00.382.274 I llama_new_context_with_model: flash_attn    = 0
0.00.382.276 I llama_new_context_with_model: freq_base     = 10000.0
0.00.382.277 I llama_new_context_with_model: freq_scale    = 1
0.00.382.277 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.397.655 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.397.673 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.397.777 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.049 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.399.056 I llama_new_context_with_model: graph nodes  = 601
0.00.399.056 I llama_new_context_with_model: graph splits = 1
0.00.399.058 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.494 I main: llama threadpool init, n_threads = 4
0.00.480.507 I 
0.00.480.585 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.480.590 I 
0.00.480.638 I sampler seed: 1871184159
0.00.480.651 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.654 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.480.655 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.656 I 
 maneuvled with a crown and scepter. He is depicted in a seated position, his face obscured by a flowing hood.

Who is this figure?

0.02.674.478 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6582.88 tokens per second)
0.02.674.482 I llama_perf_context_print:        load time =     479.70 ms
0.02.674.483 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.674.485 I llama_perf_context_print:        eval time =    2173.92 ms /    32 runs   (   67.93 ms per token,    14.72 tokens per second)
0.02.674.486 I llama_perf_context_print:       total time =    2193.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.608 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.820 I main: llama backend init
0.00.000.827 I main: load the model and apply lora adapter, if any
0.00.021.304 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.315 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.323 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.330 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.331 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.337 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.338 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.339 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.340 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.341 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.341 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.349 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.350 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.351 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.352 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.354 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.072 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.844 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.773 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.781 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.782 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.783 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.783 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.785 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.785 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.788 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.789 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.790 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.790 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.791 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.796 I llama_model_loader: - type  f32:   37 tensors
0.00.131.798 I llama_model_loader: - type q8_0:  127 tensors
0.00.228.295 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.281.871 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.282.538 I llm_load_vocab: special tokens cache size = 5
0.00.303.537 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.303.557 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.303.557 I llm_load_print_meta: arch             = gemma
0.00.303.558 I llm_load_print_meta: vocab type       = SPM
0.00.303.570 I llm_load_print_meta: n_vocab          = 256000
0.00.303.571 I llm_load_print_meta: n_merges         = 0
0.00.303.571 I llm_load_print_meta: vocab_only       = 0
0.00.303.572 I llm_load_print_meta: n_ctx_train      = 8192
0.00.303.572 I llm_load_print_meta: n_embd           = 2048
0.00.303.572 I llm_load_print_meta: n_layer          = 18
0.00.303.585 I llm_load_print_meta: n_head           = 8
0.00.303.587 I llm_load_print_meta: n_head_kv        = 1
0.00.303.588 I llm_load_print_meta: n_rot            = 256
0.00.303.588 I llm_load_print_meta: n_swa            = 0
0.00.303.589 I llm_load_print_meta: n_embd_head_k    = 256
0.00.303.589 I llm_load_print_meta: n_embd_head_v    = 256
0.00.303.591 I llm_load_print_meta: n_gqa            = 8
0.00.303.592 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.303.594 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.303.595 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.303.597 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.303.598 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.303.598 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.303.599 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.303.600 I llm_load_print_meta: n_ff             = 16384
0.00.303.601 I llm_load_print_meta: n_expert         = 0
0.00.303.604 I llm_load_print_meta: n_expert_used    = 0
0.00.303.605 I llm_load_print_meta: causal attn      = 1
0.00.303.605 I llm_load_print_meta: pooling type     = 0
0.00.303.606 I llm_load_print_meta: rope type        = 2
0.00.303.606 I llm_load_print_meta: rope scaling     = linear
0.00.303.608 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.303.609 I llm_load_print_meta: freq_scale_train = 1
0.00.303.609 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.303.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.303.610 I llm_load_print_meta: ssm_d_conv       = 0
0.00.303.611 I llm_load_print_meta: ssm_d_inner      = 0
0.00.303.612 I llm_load_print_meta: ssm_d_state      = 0
0.00.303.612 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.303.612 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.303.613 I llm_load_print_meta: model type       = 2B
0.00.303.614 I llm_load_print_meta: model ftype      = Q8_0
0.00.303.615 I llm_load_print_meta: model params     = 2.51 B
0.00.303.616 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.303.617 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.303.619 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.303.619 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.303.620 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.303.620 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.303.620 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.303.621 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.303.621 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.303.622 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.303.623 I llm_load_print_meta: max token length = 93
0.00.376.263 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.376.269 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.376.270 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.376.271 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.376.271 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.376.272 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.381.640 I llama_new_context_with_model: n_seq_max     = 1
0.00.381.650 I llama_new_context_with_model: n_ctx         = 4096
0.00.381.650 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.381.651 I llama_new_context_with_model: n_batch       = 2048
0.00.381.651 I llama_new_context_with_model: n_ubatch      = 512
0.00.381.652 I llama_new_context_with_model: flash_attn    = 0
0.00.381.656 I llama_new_context_with_model: freq_base     = 10000.0
0.00.381.657 I llama_new_context_with_model: freq_scale    = 1
0.00.381.658 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.398.143 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.398.158 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.398.251 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.502 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.399.509 I llama_new_context_with_model: graph nodes  = 601
0.00.399.510 I llama_new_context_with_model: graph splits = 1
0.00.399.512 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.462 I main: llama threadpool init, n_threads = 4
0.00.489.475 I 
0.00.489.564 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.568 I 
0.00.489.619 I sampler seed: 1475896522
0.00.489.630 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.633 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.489.634 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.636 I 
 increasities can lead to:

a) Increased risk of infection
b) Immune system activation
c) Increased inflammation
d) Increased secretion of antibodies



0.02.809.096 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6703.23 tokens per second)
0.02.809.098 I llama_perf_context_print:        load time =     488.61 ms
0.02.809.099 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.809.101 I llama_perf_context_print:        eval time =    2300.38 ms /    32 runs   (   71.89 ms per token,    13.91 tokens per second)
0.02.809.101 I llama_perf_context_print:       total time =    2319.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.633 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.855 I main: llama backend init
0.00.000.862 I main: load the model and apply lora adapter, if any
0.00.021.983 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.996 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.003 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.010 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.011 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.017 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.018 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.020 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.021 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.022 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.023 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.030 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.032 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.033 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.034 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.035 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.254 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.914 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.893 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.900 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.900 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.901 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.901 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.903 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.903 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.905 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.906 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.907 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.907 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.908 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.912 I llama_model_loader: - type  f32:   37 tensors
0.00.132.913 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.323 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.321 I llm_load_vocab: special tokens cache size = 5
0.00.285.881 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.900 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.901 I llm_load_print_meta: arch             = gemma
0.00.285.901 I llm_load_print_meta: vocab type       = SPM
0.00.285.902 I llm_load_print_meta: n_vocab          = 256000
0.00.285.903 I llm_load_print_meta: n_merges         = 0
0.00.285.903 I llm_load_print_meta: vocab_only       = 0
0.00.285.903 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.904 I llm_load_print_meta: n_embd           = 2048
0.00.285.904 I llm_load_print_meta: n_layer          = 18
0.00.285.916 I llm_load_print_meta: n_head           = 8
0.00.285.917 I llm_load_print_meta: n_head_kv        = 1
0.00.285.917 I llm_load_print_meta: n_rot            = 256
0.00.285.918 I llm_load_print_meta: n_swa            = 0
0.00.285.918 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.918 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.919 I llm_load_print_meta: n_gqa            = 8
0.00.285.920 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.921 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.922 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.923 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.923 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.924 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.924 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.925 I llm_load_print_meta: n_ff             = 16384
0.00.285.925 I llm_load_print_meta: n_expert         = 0
0.00.285.926 I llm_load_print_meta: n_expert_used    = 0
0.00.285.926 I llm_load_print_meta: causal attn      = 1
0.00.285.926 I llm_load_print_meta: pooling type     = 0
0.00.285.926 I llm_load_print_meta: rope type        = 2
0.00.285.927 I llm_load_print_meta: rope scaling     = linear
0.00.285.928 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.928 I llm_load_print_meta: freq_scale_train = 1
0.00.285.929 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.929 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.929 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.930 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.930 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.930 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.930 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.931 I llm_load_print_meta: model type       = 2B
0.00.285.931 I llm_load_print_meta: model ftype      = Q8_0
0.00.285.932 I llm_load_print_meta: model params     = 2.51 B
0.00.285.933 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.285.933 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.934 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.935 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.935 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.935 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.935 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.936 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.936 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.937 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.937 I llm_load_print_meta: max token length = 93
0.00.356.514 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.356.523 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.362.127 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.134 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.135 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.135 I llama_new_context_with_model: n_batch       = 2048
0.00.362.136 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.137 I llama_new_context_with_model: flash_attn    = 0
0.00.362.140 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.141 I llama_new_context_with_model: freq_scale    = 1
0.00.362.142 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.377.759 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.775 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.879 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.193 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.199 I llama_new_context_with_model: graph nodes  = 601
0.00.379.199 I llama_new_context_with_model: graph splits = 1
0.00.379.201 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.697 I main: llama threadpool init, n_threads = 4
0.00.469.713 I 
0.00.469.807 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.811 I 
0.00.469.862 I sampler seed: 1956851830
0.00.469.874 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.877 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.469.881 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.882 I 
 increably. [end of text]


0.00.778.442 I llama_perf_sampler_print:    sampling time =       0.65 ms /     5 runs   (    0.13 ms per token,  7704.16 tokens per second)
0.00.778.445 I llama_perf_context_print:        load time =     468.81 ms
0.00.778.448 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.778.449 I llama_perf_context_print:        eval time =     305.16 ms /     4 runs   (   76.29 ms per token,    13.11 tokens per second)
0.00.778.450 I llama_perf_context_print:       total time =     308.75 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.943s
user	0m31.397s
sys	0m9.470s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4152 (0f878a65)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40234.72 ms
main:    total time = 40234.72 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.021.532 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.541 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.550 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.556 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.557 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.561 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.561 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.562 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.562 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.563 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.563 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.567 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.568 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.568 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.569 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.569 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.609 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.550 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.378 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.387 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.388 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.388 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.389 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.390 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.391 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.393 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.394 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.395 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.395 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.396 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.400 I llama_model_loader: - type  f32:   37 tensors
0.00.132.401 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.401 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.130 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.272.973 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.273.677 I llm_load_vocab: special tokens cache size = 5
0.00.294.563 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.581 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.581 I llm_load_print_meta: arch             = gemma
0.00.294.582 I llm_load_print_meta: vocab type       = SPM
0.00.294.583 I llm_load_print_meta: n_vocab          = 256000
0.00.294.584 I llm_load_print_meta: n_merges         = 0
0.00.294.584 I llm_load_print_meta: vocab_only       = 0
0.00.294.584 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.585 I llm_load_print_meta: n_embd           = 2048
0.00.294.585 I llm_load_print_meta: n_layer          = 18
0.00.294.596 I llm_load_print_meta: n_head           = 8
0.00.294.597 I llm_load_print_meta: n_head_kv        = 1
0.00.294.597 I llm_load_print_meta: n_rot            = 256
0.00.294.597 I llm_load_print_meta: n_swa            = 0
0.00.294.598 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.598 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.599 I llm_load_print_meta: n_gqa            = 8
0.00.294.600 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.601 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.602 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.603 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.604 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.604 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.605 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.605 I llm_load_print_meta: n_ff             = 16384
0.00.294.606 I llm_load_print_meta: n_expert         = 0
0.00.294.606 I llm_load_print_meta: n_expert_used    = 0
0.00.294.606 I llm_load_print_meta: causal attn      = 1
0.00.294.607 I llm_load_print_meta: pooling type     = 0
0.00.294.607 I llm_load_print_meta: rope type        = 2
0.00.294.607 I llm_load_print_meta: rope scaling     = linear
0.00.294.609 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.609 I llm_load_print_meta: freq_scale_train = 1
0.00.294.609 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.610 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.610 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.610 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.611 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.611 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.611 I llm_load_print_meta: model type       = 2B
0.00.294.612 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.294.613 I llm_load_print_meta: model params     = 2.51 B
0.00.294.613 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.294.614 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.614 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.614 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.615 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.615 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.615 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.616 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.616 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.617 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.617 I llm_load_print_meta: max token length = 93
0.00.352.563 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.352.571 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.352.572 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.352.572 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.352.573 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.352.574 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.357.948 I llama_new_context_with_model: n_seq_max     = 1
0.00.357.954 I llama_new_context_with_model: n_ctx         = 4096
0.00.357.955 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.357.955 I llama_new_context_with_model: n_batch       = 2048
0.00.357.956 I llama_new_context_with_model: n_ubatch      = 512
0.00.357.957 I llama_new_context_with_model: flash_attn    = 0
0.00.357.960 I llama_new_context_with_model: freq_base     = 10000.0
0.00.357.960 I llama_new_context_with_model: freq_scale    = 1
0.00.357.961 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.373.148 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.163 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.267 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.606 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.613 I llama_new_context_with_model: graph nodes  = 601
0.00.374.613 I llama_new_context_with_model: graph splits = 1
0.00.374.615 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.783 I main: llama threadpool init, n_threads = 4
0.00.453.798 I 
0.00.453.877 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.881 I 
0.00.453.923 I sampler seed: 2344654057
0.00.453.934 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.938 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.453.938 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.939 I 
 seconally.

I am unable to access the specified page because it is currently unavailable. Please check back later or try again later.

This message appears when

0.02.117.335 I llama_perf_sampler_print:    sampling time =       5.62 ms /    33 runs   (    0.17 ms per token,  5870.84 tokens per second)
0.02.117.338 I llama_perf_context_print:        load time =     453.02 ms
0.02.117.340 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.117.342 I llama_perf_context_print:        eval time =    1643.47 ms /    32 runs   (   51.36 ms per token,    19.47 tokens per second)
0.02.117.343 I llama_perf_context_print:       total time =    1663.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4152 (0f878a65)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40233.82 ms
main:    total time = 40233.82 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.587 I build: 4152 (0f878a65) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.807 I main: llama backend init
0.00.000.814 I main: load the model and apply lora adapter, if any
0.00.022.075 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.092 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.099 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.100 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.104 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.105 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.106 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.107 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.107 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.108 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.113 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.113 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.114 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.115 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.115 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.436 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.583 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.431 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.437 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.438 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.438 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.439 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.440 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.440 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.443 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.443 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.448 I llama_model_loader: - type  f32:   37 tensors
0.00.132.449 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.449 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.892 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.224 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.922 I llm_load_vocab: special tokens cache size = 5
0.00.276.977 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.996 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.996 I llm_load_print_meta: arch             = gemma
0.00.276.997 I llm_load_print_meta: vocab type       = SPM
0.00.276.999 I llm_load_print_meta: n_vocab          = 256000
0.00.276.999 I llm_load_print_meta: n_merges         = 0
0.00.277.000 I llm_load_print_meta: vocab_only       = 0
0.00.277.000 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.000 I llm_load_print_meta: n_embd           = 2048
0.00.277.001 I llm_load_print_meta: n_layer          = 18
0.00.277.012 I llm_load_print_meta: n_head           = 8
0.00.277.013 I llm_load_print_meta: n_head_kv        = 1
0.00.277.014 I llm_load_print_meta: n_rot            = 256
0.00.277.014 I llm_load_print_meta: n_swa            = 0
0.00.277.014 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.014 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.016 I llm_load_print_meta: n_gqa            = 8
0.00.277.017 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.018 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.018 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.020 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.020 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.021 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.021 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.022 I llm_load_print_meta: n_ff             = 16384
0.00.277.023 I llm_load_print_meta: n_expert         = 0
0.00.277.024 I llm_load_print_meta: n_expert_used    = 0
0.00.277.024 I llm_load_print_meta: causal attn      = 1
0.00.277.024 I llm_load_print_meta: pooling type     = 0
0.00.277.024 I llm_load_print_meta: rope type        = 2
0.00.277.025 I llm_load_print_meta: rope scaling     = linear
0.00.277.026 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.027 I llm_load_print_meta: freq_scale_train = 1
0.00.277.027 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.028 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.028 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.028 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.030 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.030 I llm_load_print_meta: model type       = 2B
0.00.277.031 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.032 I llm_load_print_meta: model params     = 2.51 B
0.00.277.033 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.033 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.033 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.034 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.034 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.034 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.035 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.035 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.036 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.037 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.037 I llm_load_print_meta: max token length = 93
0.00.329.103 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.334.369 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.376 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.377 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.377 I llama_new_context_with_model: n_batch       = 2048
0.00.334.378 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.378 I llama_new_context_with_model: flash_attn    = 0
0.00.334.380 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.381 I llama_new_context_with_model: freq_scale    = 1
0.00.334.382 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.349.225 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.349.240 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.349.330 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.611 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.350.617 I llama_new_context_with_model: graph nodes  = 601
0.00.350.617 I llama_new_context_with_model: graph splits = 1
0.00.350.619 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.424.895 I main: llama threadpool init, n_threads = 4
0.00.424.909 I 
0.00.424.985 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.424.988 I 
0.00.425.035 I sampler seed: 769262687
0.00.425.046 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.049 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.049 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.050 I 
 seconded information from the internet. [end of text]


0.00.827.294 I llama_perf_sampler_print:    sampling time =       1.35 ms /     9 runs   (    0.15 ms per token,  6646.97 tokens per second)
0.00.827.296 I llama_perf_context_print:        load time =     424.06 ms
0.00.827.298 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.827.299 I llama_perf_context_print:        eval time =     396.43 ms /     8 runs   (   49.55 ms per token,    20.18 tokens per second)
0.00.827.300 I llama_perf_context_print:       total time =     402.41 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.233s
user	10m20.556s
sys	0m7.027s
