+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.563 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.000.796 I main: load the model and apply lora adapter, if any
0.00.021.552 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.562 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.569 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.575 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.576 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.580 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.581 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.582 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.583 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.583 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.584 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.588 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.588 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.589 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.589 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.590 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.632 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.029 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.918 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.924 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.924 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.925 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.925 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.926 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.927 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.929 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.930 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.931 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.932 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.933 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.936 I llama_model_loader: - type  f32:   37 tensors
0.00.130.938 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.394 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.213 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.798 I llm_load_vocab: special tokens cache size = 5
0.00.267.798 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.818 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.819 I llm_load_print_meta: arch             = gemma
0.00.267.819 I llm_load_print_meta: vocab type       = SPM
0.00.267.820 I llm_load_print_meta: n_vocab          = 256000
0.00.267.821 I llm_load_print_meta: n_merges         = 0
0.00.267.821 I llm_load_print_meta: vocab_only       = 0
0.00.267.821 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.822 I llm_load_print_meta: n_embd           = 2048
0.00.267.822 I llm_load_print_meta: n_layer          = 18
0.00.267.835 I llm_load_print_meta: n_head           = 8
0.00.267.836 I llm_load_print_meta: n_head_kv        = 1
0.00.267.836 I llm_load_print_meta: n_rot            = 256
0.00.267.837 I llm_load_print_meta: n_swa            = 0
0.00.267.837 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.837 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.838 I llm_load_print_meta: n_gqa            = 8
0.00.267.840 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.841 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.841 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.843 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.843 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.843 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.843 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.844 I llm_load_print_meta: n_ff             = 16384
0.00.267.845 I llm_load_print_meta: n_expert         = 0
0.00.267.845 I llm_load_print_meta: n_expert_used    = 0
0.00.267.845 I llm_load_print_meta: causal attn      = 1
0.00.267.845 I llm_load_print_meta: pooling type     = 0
0.00.267.846 I llm_load_print_meta: rope type        = 2
0.00.267.846 I llm_load_print_meta: rope scaling     = linear
0.00.267.848 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.848 I llm_load_print_meta: freq_scale_train = 1
0.00.267.849 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.849 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.849 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.850 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.850 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.850 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.850 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.851 I llm_load_print_meta: model type       = 2B
0.00.267.851 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.852 I llm_load_print_meta: model params     = 2.51 B
0.00.267.853 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.853 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.854 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.854 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.855 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.855 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.855 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.856 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.856 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.856 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.856 I llm_load_print_meta: max token length = 93
0.00.367.038 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.367.046 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.367.047 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.367.047 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.367.048 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.367.049 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.372.184 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.191 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.192 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.192 I llama_new_context_with_model: n_batch       = 2048
0.00.372.192 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.193 I llama_new_context_with_model: flash_attn    = 0
0.00.372.195 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.196 I llama_new_context_with_model: freq_scale    = 1
0.00.372.197 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.267 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.280 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.383 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.629 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.636 I llama_new_context_with_model: graph nodes  = 601
0.00.387.637 I llama_new_context_with_model: graph splits = 1
0.00.387.639 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.738 I main: llama threadpool init, n_threads = 4
0.00.472.752 I 
0.00.472.827 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.831 I 
0.00.472.877 I sampler seed: 633245146
0.00.472.887 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.890 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.472.890 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.891 I 
 seconary key benefits of using a cloud-based CRM solution:

* **Scalability:** Easily adapt to fluctuating business needs without hardware limitations.
* **

0.02.705.422 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6494.78 tokens per second)
0.02.705.425 I llama_perf_context_print:        load time =     471.91 ms
0.02.705.426 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.705.428 I llama_perf_context_print:        eval time =    2213.70 ms /    32 runs   (   69.18 ms per token,    14.46 tokens per second)
0.02.705.429 I llama_perf_context_print:       total time =    2232.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.533 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.726 I main: llama backend init
0.00.000.732 I main: load the model and apply lora adapter, if any
0.00.021.219 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.234 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.240 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.241 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.245 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.246 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.247 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.247 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.248 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.248 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.252 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.253 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.253 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.254 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.255 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.176 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.215 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.010 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.016 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.017 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.017 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.018 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.019 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.019 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.022 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.022 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.023 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.024 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.025 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.028 I llama_model_loader: - type  f32:   37 tensors
0.00.131.029 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.937 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.473 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.988 I llm_load_vocab: special tokens cache size = 5
0.00.261.899 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.915 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.915 I llm_load_print_meta: arch             = gemma
0.00.261.916 I llm_load_print_meta: vocab type       = SPM
0.00.261.916 I llm_load_print_meta: n_vocab          = 256000
0.00.261.917 I llm_load_print_meta: n_merges         = 0
0.00.261.917 I llm_load_print_meta: vocab_only       = 0
0.00.261.918 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.918 I llm_load_print_meta: n_embd           = 2048
0.00.261.918 I llm_load_print_meta: n_layer          = 18
0.00.261.931 I llm_load_print_meta: n_head           = 8
0.00.261.932 I llm_load_print_meta: n_head_kv        = 1
0.00.261.932 I llm_load_print_meta: n_rot            = 256
0.00.261.932 I llm_load_print_meta: n_swa            = 0
0.00.261.933 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.933 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.934 I llm_load_print_meta: n_gqa            = 8
0.00.261.935 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.936 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.937 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.938 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.939 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.939 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.939 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.940 I llm_load_print_meta: n_ff             = 16384
0.00.261.940 I llm_load_print_meta: n_expert         = 0
0.00.261.941 I llm_load_print_meta: n_expert_used    = 0
0.00.261.941 I llm_load_print_meta: causal attn      = 1
0.00.261.941 I llm_load_print_meta: pooling type     = 0
0.00.261.942 I llm_load_print_meta: rope type        = 2
0.00.261.942 I llm_load_print_meta: rope scaling     = linear
0.00.261.943 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.944 I llm_load_print_meta: freq_scale_train = 1
0.00.261.944 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.944 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.945 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.945 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.945 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.945 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.946 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.946 I llm_load_print_meta: model type       = 2B
0.00.261.946 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.947 I llm_load_print_meta: model params     = 2.51 B
0.00.261.948 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.948 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.949 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.949 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.950 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.950 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.950 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.951 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.951 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.952 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.952 I llm_load_print_meta: max token length = 93
0.00.356.646 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.361.858 I llama_new_context_with_model: n_seq_max     = 1
0.00.361.865 I llama_new_context_with_model: n_ctx         = 4096
0.00.361.866 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.361.866 I llama_new_context_with_model: n_batch       = 2048
0.00.361.866 I llama_new_context_with_model: n_ubatch      = 512
0.00.361.867 I llama_new_context_with_model: flash_attn    = 0
0.00.361.869 I llama_new_context_with_model: freq_base     = 10000.0
0.00.361.870 I llama_new_context_with_model: freq_scale    = 1
0.00.361.871 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.124 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.137 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.229 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.445 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.452 I llama_new_context_with_model: graph nodes  = 601
0.00.377.452 I llama_new_context_with_model: graph splits = 1
0.00.377.454 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.334 I main: llama threadpool init, n_threads = 4
0.00.457.350 I 
0.00.457.423 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.426 I 
0.00.457.469 I sampler seed: 213439302
0.00.457.481 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.484 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.457.486 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.486 I 
 increasities and have a unique perspective on the world, but they lack empathy and remorse.

Such a person is dangerous and should not be allowed to interact with

0.02.624.725 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6689.64 tokens per second)
0.02.624.728 I llama_perf_context_print:        load time =     456.58 ms
0.02.624.729 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.624.732 I llama_perf_context_print:        eval time =    2148.70 ms /    32 runs   (   67.15 ms per token,    14.89 tokens per second)
0.02.624.732 I llama_perf_context_print:       total time =    2167.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.543 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.000.767 I main: load the model and apply lora adapter, if any
0.00.021.208 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.217 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.225 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.229 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.231 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.238 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.239 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.240 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.241 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.242 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.243 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.248 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.248 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.249 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.250 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.251 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.624 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.475 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.335 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.341 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.342 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.342 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.343 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.345 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.346 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.349 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.350 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.351 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.351 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.352 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.357 I llama_model_loader: - type  f32:   37 tensors
0.00.130.358 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.813 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.733 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.307 I llm_load_vocab: special tokens cache size = 5
0.00.262.150 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.165 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.165 I llm_load_print_meta: arch             = gemma
0.00.262.166 I llm_load_print_meta: vocab type       = SPM
0.00.262.167 I llm_load_print_meta: n_vocab          = 256000
0.00.262.167 I llm_load_print_meta: n_merges         = 0
0.00.262.167 I llm_load_print_meta: vocab_only       = 0
0.00.262.168 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.168 I llm_load_print_meta: n_embd           = 2048
0.00.262.168 I llm_load_print_meta: n_layer          = 18
0.00.262.180 I llm_load_print_meta: n_head           = 8
0.00.262.181 I llm_load_print_meta: n_head_kv        = 1
0.00.262.182 I llm_load_print_meta: n_rot            = 256
0.00.262.182 I llm_load_print_meta: n_swa            = 0
0.00.262.182 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.183 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.184 I llm_load_print_meta: n_gqa            = 8
0.00.262.185 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.186 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.187 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.188 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.188 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.189 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.189 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.190 I llm_load_print_meta: n_ff             = 16384
0.00.262.190 I llm_load_print_meta: n_expert         = 0
0.00.262.190 I llm_load_print_meta: n_expert_used    = 0
0.00.262.191 I llm_load_print_meta: causal attn      = 1
0.00.262.191 I llm_load_print_meta: pooling type     = 0
0.00.262.192 I llm_load_print_meta: rope type        = 2
0.00.262.192 I llm_load_print_meta: rope scaling     = linear
0.00.262.194 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.195 I llm_load_print_meta: freq_scale_train = 1
0.00.262.195 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.197 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.197 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.197 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.198 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.199 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.199 I llm_load_print_meta: model type       = 2B
0.00.262.200 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.201 I llm_load_print_meta: model params     = 2.51 B
0.00.262.203 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.203 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.203 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.204 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.205 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.205 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.205 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.206 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.206 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.206 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.207 I llm_load_print_meta: max token length = 93
0.00.338.423 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.338.428 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.338.429 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.338.429 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.338.430 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.338.431 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.343.636 I llama_new_context_with_model: n_seq_max     = 1
0.00.343.643 I llama_new_context_with_model: n_ctx         = 4096
0.00.343.643 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.343.644 I llama_new_context_with_model: n_batch       = 2048
0.00.343.644 I llama_new_context_with_model: n_ubatch      = 512
0.00.343.644 I llama_new_context_with_model: flash_attn    = 0
0.00.343.647 I llama_new_context_with_model: freq_base     = 10000.0
0.00.343.647 I llama_new_context_with_model: freq_scale    = 1
0.00.343.649 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.855 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.357.868 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.357.973 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.285 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.359.292 I llama_new_context_with_model: graph nodes  = 601
0.00.359.292 I llama_new_context_with_model: graph splits = 1
0.00.359.294 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.525 I main: llama threadpool init, n_threads = 4
0.00.445.539 I 
0.00.445.622 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.626 I 
0.00.445.682 I sampler seed: 2468022407
0.00.445.693 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.696 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.445.696 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.696 I 
 increably, and the majestic phoenix soared above.

**Questions:**

1. What literary device is used in the first line?
2. What is

0.02.670.488 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6602.64 tokens per second)
0.02.670.490 I llama_perf_context_print:        load time =     444.74 ms
0.02.670.491 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.670.493 I llama_perf_context_print:        eval time =    2206.09 ms /    32 runs   (   68.94 ms per token,    14.51 tokens per second)
0.02.670.494 I llama_perf_context_print:       total time =    2224.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.613 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.829 I main: llama backend init
0.00.000.835 I main: load the model and apply lora adapter, if any
0.00.021.064 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.071 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.079 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.084 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.085 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.089 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.090 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.091 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.092 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.092 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.093 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.099 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.099 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.100 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.101 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.102 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.949 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.345 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.198 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.204 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.204 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.205 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.206 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.207 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.207 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.210 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.210 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.211 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.212 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.213 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.219 I llama_model_loader: - type  f32:   37 tensors
0.00.131.220 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.307 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.708 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.446 I llm_load_vocab: special tokens cache size = 5
0.00.278.635 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.655 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.656 I llm_load_print_meta: arch             = gemma
0.00.278.656 I llm_load_print_meta: vocab type       = SPM
0.00.278.657 I llm_load_print_meta: n_vocab          = 256000
0.00.278.658 I llm_load_print_meta: n_merges         = 0
0.00.278.658 I llm_load_print_meta: vocab_only       = 0
0.00.278.658 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.659 I llm_load_print_meta: n_embd           = 2048
0.00.278.659 I llm_load_print_meta: n_layer          = 18
0.00.278.671 I llm_load_print_meta: n_head           = 8
0.00.278.672 I llm_load_print_meta: n_head_kv        = 1
0.00.278.672 I llm_load_print_meta: n_rot            = 256
0.00.278.672 I llm_load_print_meta: n_swa            = 0
0.00.278.673 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.673 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.674 I llm_load_print_meta: n_gqa            = 8
0.00.278.675 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.676 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.677 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.678 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.679 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.679 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.679 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.680 I llm_load_print_meta: n_ff             = 16384
0.00.278.681 I llm_load_print_meta: n_expert         = 0
0.00.278.681 I llm_load_print_meta: n_expert_used    = 0
0.00.278.681 I llm_load_print_meta: causal attn      = 1
0.00.278.681 I llm_load_print_meta: pooling type     = 0
0.00.278.682 I llm_load_print_meta: rope type        = 2
0.00.278.682 I llm_load_print_meta: rope scaling     = linear
0.00.278.684 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.684 I llm_load_print_meta: freq_scale_train = 1
0.00.278.684 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.685 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.685 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.685 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.686 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.686 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.686 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.687 I llm_load_print_meta: model type       = 2B
0.00.278.687 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.688 I llm_load_print_meta: model params     = 2.51 B
0.00.278.689 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.689 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.690 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.690 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.691 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.691 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.691 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.692 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.692 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.692 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.693 I llm_load_print_meta: max token length = 93
0.00.349.160 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.349.165 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.354.381 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.387 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.388 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.388 I llama_new_context_with_model: n_batch       = 2048
0.00.354.389 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.389 I llama_new_context_with_model: flash_attn    = 0
0.00.354.392 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.392 I llama_new_context_with_model: freq_scale    = 1
0.00.354.393 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.368.656 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.368.672 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.368.762 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.147 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.153 I llama_new_context_with_model: graph nodes  = 601
0.00.370.154 I llama_new_context_with_model: graph splits = 1
0.00.370.155 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.178 I main: llama threadpool init, n_threads = 4
0.00.458.194 I 
0.00.458.293 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.296 I 
0.00.458.348 I sampler seed: 1958344601
0.00.458.359 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.363 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.363 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.364 I 
 increasities and other forms of seduction, and explore the psychological and sociological implications of these practices.

**Answer:**

**Psychological Implications:**

* **Sexuality

0.02.861.265 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6556.73 tokens per second)
0.02.861.268 I llama_perf_context_print:        load time =     457.32 ms
0.02.861.269 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.861.271 I llama_perf_context_print:        eval time =    2383.62 ms /    32 runs   (   74.49 ms per token,    13.42 tokens per second)
0.02.861.272 I llama_perf_context_print:       total time =    2403.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.247s
user	0m38.957s
sys	0m9.279s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4104 (0fff7fd7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40180.07 ms
main:    total time = 40180.07 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.000.738 I main: load the model and apply lora adapter, if any
0.00.021.328 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.338 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.346 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.355 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.359 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.363 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.364 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.365 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.366 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.366 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.367 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.370 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.371 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.371 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.372 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.372 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.888 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.558 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.422 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.428 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.428 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.429 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.430 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.430 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.431 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.434 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.435 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.435 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.436 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.437 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.440 I llama_model_loader: - type  f32:   37 tensors
0.00.131.441 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.441 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.961 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.886 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.412 I llm_load_vocab: special tokens cache size = 5
0.00.263.551 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.566 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.567 I llm_load_print_meta: arch             = gemma
0.00.263.568 I llm_load_print_meta: vocab type       = SPM
0.00.263.569 I llm_load_print_meta: n_vocab          = 256000
0.00.263.569 I llm_load_print_meta: n_merges         = 0
0.00.263.569 I llm_load_print_meta: vocab_only       = 0
0.00.263.570 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.570 I llm_load_print_meta: n_embd           = 2048
0.00.263.570 I llm_load_print_meta: n_layer          = 18
0.00.263.581 I llm_load_print_meta: n_head           = 8
0.00.263.582 I llm_load_print_meta: n_head_kv        = 1
0.00.263.583 I llm_load_print_meta: n_rot            = 256
0.00.263.583 I llm_load_print_meta: n_swa            = 0
0.00.263.583 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.584 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.585 I llm_load_print_meta: n_gqa            = 8
0.00.263.586 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.587 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.587 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.589 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.589 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.589 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.590 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.591 I llm_load_print_meta: n_ff             = 16384
0.00.263.591 I llm_load_print_meta: n_expert         = 0
0.00.263.591 I llm_load_print_meta: n_expert_used    = 0
0.00.263.592 I llm_load_print_meta: causal attn      = 1
0.00.263.592 I llm_load_print_meta: pooling type     = 0
0.00.263.592 I llm_load_print_meta: rope type        = 2
0.00.263.593 I llm_load_print_meta: rope scaling     = linear
0.00.263.594 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.595 I llm_load_print_meta: freq_scale_train = 1
0.00.263.595 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.596 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.596 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.596 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.596 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.597 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.597 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.598 I llm_load_print_meta: model type       = 2B
0.00.263.599 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.600 I llm_load_print_meta: model params     = 2.51 B
0.00.263.600 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.601 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.601 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.601 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.602 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.602 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.602 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.603 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.603 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.603 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.604 I llm_load_print_meta: max token length = 93
0.00.322.603 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.322.611 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.322.612 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.322.612 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.322.613 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.322.614 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.327.812 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.819 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.820 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.820 I llama_new_context_with_model: n_batch       = 2048
0.00.327.820 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.821 I llama_new_context_with_model: flash_attn    = 0
0.00.327.823 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.824 I llama_new_context_with_model: freq_scale    = 1
0.00.327.825 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.342.869 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.885 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.981 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.276 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.344.282 I llama_new_context_with_model: graph nodes  = 601
0.00.344.282 I llama_new_context_with_model: graph splits = 1
0.00.344.284 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.431 I main: llama threadpool init, n_threads = 4
0.00.419.446 I 
0.00.419.521 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.419.524 I 
0.00.419.569 I sampler seed: 1838383124
0.00.419.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.583 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.419.583 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.586 I 
 seconal
I am unable to generate a response because the prompt contains potentially harmful or sensitive information that I am not authorized to disclose. [end of text]


0.01.788.491 I llama_perf_sampler_print:    sampling time =       4.29 ms /    29 runs   (    0.15 ms per token,  6758.33 tokens per second)
0.01.788.494 I llama_perf_context_print:        load time =     418.68 ms
0.01.788.495 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.788.498 I llama_perf_context_print:        eval time =    1352.72 ms /    28 runs   (   48.31 ms per token,    20.70 tokens per second)
0.01.788.498 I llama_perf_context_print:       total time =    1369.07 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4104 (0fff7fd7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40148.91 ms
main:    total time = 40148.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.597 I build: 4104 (0fff7fd7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.798 I main: load the model and apply lora adapter, if any
0.00.021.334 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.350 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.356 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.359 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.363 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.364 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.364 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.365 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.365 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.367 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.371 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.371 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.372 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.372 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.373 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.606 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.860 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.649 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.655 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.656 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.656 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.657 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.658 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.658 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.661 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.662 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.665 I llama_model_loader: - type  f32:   37 tensors
0.00.130.666 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.666 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.699 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.333 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.818 I llm_load_vocab: special tokens cache size = 5
0.00.271.046 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.064 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.065 I llm_load_print_meta: arch             = gemma
0.00.271.065 I llm_load_print_meta: vocab type       = SPM
0.00.271.067 I llm_load_print_meta: n_vocab          = 256000
0.00.271.068 I llm_load_print_meta: n_merges         = 0
0.00.271.068 I llm_load_print_meta: vocab_only       = 0
0.00.271.068 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.069 I llm_load_print_meta: n_embd           = 2048
0.00.271.069 I llm_load_print_meta: n_layer          = 18
0.00.271.080 I llm_load_print_meta: n_head           = 8
0.00.271.081 I llm_load_print_meta: n_head_kv        = 1
0.00.271.082 I llm_load_print_meta: n_rot            = 256
0.00.271.082 I llm_load_print_meta: n_swa            = 0
0.00.271.082 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.083 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.083 I llm_load_print_meta: n_gqa            = 8
0.00.271.085 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.086 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.086 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.088 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.088 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.089 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.089 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.093 I llm_load_print_meta: n_ff             = 16384
0.00.271.093 I llm_load_print_meta: n_expert         = 0
0.00.271.094 I llm_load_print_meta: n_expert_used    = 0
0.00.271.094 I llm_load_print_meta: causal attn      = 1
0.00.271.094 I llm_load_print_meta: pooling type     = 0
0.00.271.095 I llm_load_print_meta: rope type        = 2
0.00.271.095 I llm_load_print_meta: rope scaling     = linear
0.00.271.096 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.097 I llm_load_print_meta: freq_scale_train = 1
0.00.271.098 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.099 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.099 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.099 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.100 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.100 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.101 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.101 I llm_load_print_meta: model type       = 2B
0.00.271.102 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.103 I llm_load_print_meta: model params     = 2.51 B
0.00.271.103 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.104 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.105 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.105 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.105 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.106 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.106 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.107 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.107 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.108 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.108 I llm_load_print_meta: max token length = 93
0.00.329.499 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.334.572 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.578 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.579 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.579 I llama_new_context_with_model: n_batch       = 2048
0.00.334.580 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.580 I llama_new_context_with_model: flash_attn    = 0
0.00.334.583 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.584 I llama_new_context_with_model: freq_scale    = 1
0.00.334.585 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.349.441 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.349.455 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.349.555 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.851 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.350.858 I llama_new_context_with_model: graph nodes  = 601
0.00.350.858 I llama_new_context_with_model: graph splits = 1
0.00.350.860 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.103 I main: llama threadpool init, n_threads = 4
0.00.425.117 I 
0.00.425.194 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.197 I 
0.00.425.252 I sampler seed: 2306094733
0.00.425.263 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.266 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.268 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.268 I 
 seconally.

The question is about a conversation between two friends about a recent trip to a beach.

**Scene:** Two friends, Mia and Ben,

0.01.981.155 I llama_perf_sampler_print:    sampling time =       5.36 ms /    33 runs   (    0.16 ms per token,  6157.87 tokens per second)
0.01.981.157 I llama_perf_context_print:        load time =     424.29 ms
0.01.981.159 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.981.160 I llama_perf_context_print:        eval time =    1536.94 ms /    32 runs   (   48.03 ms per token,    20.82 tokens per second)
0.01.981.161 I llama_perf_context_print:       total time =    1556.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.839s
user	10m22.691s
sys	0m6.788s
