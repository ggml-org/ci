+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.566 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.000.935 I main: load the model and apply lora adapter, if any
0.00.021.336 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.348 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.356 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.361 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.362 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.366 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.367 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.368 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.369 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.370 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.370 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.375 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.376 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.376 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.377 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.377 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.353 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.391 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.232 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.239 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.240 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.241 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.242 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.243 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.244 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.247 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.249 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.250 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.251 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.254 I llama_model_loader: - type  f32:   37 tensors
0.00.132.256 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.742 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.151 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.271.756 I llm_load_vocab: special tokens cache size = 5
0.00.292.385 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.403 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.403 I llm_load_print_meta: arch             = gemma
0.00.292.404 I llm_load_print_meta: vocab type       = SPM
0.00.292.405 I llm_load_print_meta: n_vocab          = 256000
0.00.292.405 I llm_load_print_meta: n_merges         = 0
0.00.292.406 I llm_load_print_meta: vocab_only       = 0
0.00.292.406 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.406 I llm_load_print_meta: n_embd           = 2048
0.00.292.406 I llm_load_print_meta: n_layer          = 18
0.00.292.418 I llm_load_print_meta: n_head           = 8
0.00.292.419 I llm_load_print_meta: n_head_kv        = 1
0.00.292.420 I llm_load_print_meta: n_rot            = 256
0.00.292.420 I llm_load_print_meta: n_swa            = 0
0.00.292.420 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.421 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.421 I llm_load_print_meta: n_gqa            = 8
0.00.292.423 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.424 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.424 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.426 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.427 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.427 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.427 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.428 I llm_load_print_meta: n_ff             = 16384
0.00.292.429 I llm_load_print_meta: n_expert         = 0
0.00.292.429 I llm_load_print_meta: n_expert_used    = 0
0.00.292.429 I llm_load_print_meta: causal attn      = 1
0.00.292.430 I llm_load_print_meta: pooling type     = 0
0.00.292.430 I llm_load_print_meta: rope type        = 2
0.00.292.431 I llm_load_print_meta: rope scaling     = linear
0.00.292.432 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.433 I llm_load_print_meta: freq_scale_train = 1
0.00.292.433 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.433 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.434 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.434 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.434 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.434 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.434 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.435 I llm_load_print_meta: model type       = 2B
0.00.292.435 I llm_load_print_meta: model ftype      = Q8_0
0.00.292.436 I llm_load_print_meta: model params     = 2.51 B
0.00.292.437 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.292.438 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.438 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.439 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.439 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.439 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.440 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.440 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.440 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.441 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.441 I llm_load_print_meta: max token length = 93
0.00.393.255 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.393.264 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.393.265 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.393.266 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.393.266 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.393.267 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.398.486 I llama_new_context_with_model: n_seq_max     = 1
0.00.398.493 I llama_new_context_with_model: n_ctx         = 4096
0.00.398.493 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.398.493 I llama_new_context_with_model: n_batch       = 2048
0.00.398.494 I llama_new_context_with_model: n_ubatch      = 512
0.00.398.494 I llama_new_context_with_model: flash_attn    = 0
0.00.398.497 I llama_new_context_with_model: freq_base     = 10000.0
0.00.398.497 I llama_new_context_with_model: freq_scale    = 1
0.00.398.498 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.413.960 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.413.975 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.414.063 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.300 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.415.306 I llama_new_context_with_model: graph nodes  = 601
0.00.415.306 I llama_new_context_with_model: graph splits = 1
0.00.415.308 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.501.107 I main: llama threadpool init, n_threads = 4
0.00.501.120 I 
0.00.501.194 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.501.197 I 
0.00.501.236 I sampler seed: 974881564
0.00.501.247 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.501.249 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.501.250 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.501.250 I 
 increasities.

I cannot answer this question as it contains sexually suggestive and inappropriate content. [end of text]


0.01.862.481 I llama_perf_sampler_print:    sampling time =       2.90 ms /    20 runs   (    0.14 ms per token,  6896.55 tokens per second)
0.01.862.483 I llama_perf_context_print:        load time =     500.15 ms
0.01.862.484 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.862.485 I llama_perf_context_print:        eval time =    1349.09 ms /    19 runs   (   71.00 ms per token,    14.08 tokens per second)
0.01.862.486 I llama_perf_context_print:       total time =    1361.38 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.554 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.000.886 I main: load the model and apply lora adapter, if any
0.00.021.623 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.638 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.649 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.653 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.656 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.657 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.658 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.659 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.660 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.660 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.665 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.666 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.666 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.667 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.667 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.308 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.037 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.338 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.344 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.345 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.346 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.347 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.348 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.349 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.353 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.353 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.355 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.355 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.356 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.360 I llama_model_loader: - type  f32:   37 tensors
0.00.133.362 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.690 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.015 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.275.775 I llm_load_vocab: special tokens cache size = 5
0.00.296.992 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.012 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.013 I llm_load_print_meta: arch             = gemma
0.00.297.014 I llm_load_print_meta: vocab type       = SPM
0.00.297.014 I llm_load_print_meta: n_vocab          = 256000
0.00.297.015 I llm_load_print_meta: n_merges         = 0
0.00.297.015 I llm_load_print_meta: vocab_only       = 0
0.00.297.015 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.016 I llm_load_print_meta: n_embd           = 2048
0.00.297.016 I llm_load_print_meta: n_layer          = 18
0.00.297.028 I llm_load_print_meta: n_head           = 8
0.00.297.029 I llm_load_print_meta: n_head_kv        = 1
0.00.297.029 I llm_load_print_meta: n_rot            = 256
0.00.297.030 I llm_load_print_meta: n_swa            = 0
0.00.297.030 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.030 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.031 I llm_load_print_meta: n_gqa            = 8
0.00.297.032 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.033 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.034 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.036 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.036 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.037 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.037 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.038 I llm_load_print_meta: n_ff             = 16384
0.00.297.038 I llm_load_print_meta: n_expert         = 0
0.00.297.038 I llm_load_print_meta: n_expert_used    = 0
0.00.297.039 I llm_load_print_meta: causal attn      = 1
0.00.297.039 I llm_load_print_meta: pooling type     = 0
0.00.297.039 I llm_load_print_meta: rope type        = 2
0.00.297.040 I llm_load_print_meta: rope scaling     = linear
0.00.297.041 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.042 I llm_load_print_meta: freq_scale_train = 1
0.00.297.042 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.042 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.043 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.043 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.043 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.043 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.043 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.044 I llm_load_print_meta: model type       = 2B
0.00.297.044 I llm_load_print_meta: model ftype      = Q8_0
0.00.297.045 I llm_load_print_meta: model params     = 2.51 B
0.00.297.046 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.297.046 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.047 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.047 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.048 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.048 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.048 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.049 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.049 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.049 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.050 I llm_load_print_meta: max token length = 93
0.00.395.447 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.400.773 I llama_new_context_with_model: n_seq_max     = 1
0.00.400.779 I llama_new_context_with_model: n_ctx         = 4096
0.00.400.780 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.400.780 I llama_new_context_with_model: n_batch       = 2048
0.00.400.781 I llama_new_context_with_model: n_ubatch      = 512
0.00.400.781 I llama_new_context_with_model: flash_attn    = 0
0.00.400.784 I llama_new_context_with_model: freq_base     = 10000.0
0.00.400.785 I llama_new_context_with_model: freq_scale    = 1
0.00.400.786 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.417.291 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.417.307 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.417.405 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.418.625 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.418.632 I llama_new_context_with_model: graph nodes  = 601
0.00.418.632 I llama_new_context_with_model: graph splits = 1
0.00.418.634 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.502.608 I main: llama threadpool init, n_threads = 4
0.00.502.622 I 
0.00.502.696 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.502.700 I 
0.00.502.741 I sampler seed: 3866026777
0.00.502.753 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.502.755 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.502.756 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.502.758 I 
 increamically, and then fell silent.

What happened? [end of text]


0.01.404.341 I llama_perf_sampler_print:    sampling time =       1.98 ms /    14 runs   (    0.14 ms per token,  7074.28 tokens per second)
0.01.404.343 I llama_perf_context_print:        load time =     501.70 ms
0.01.404.344 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.404.346 I llama_perf_context_print:        eval time =     893.01 ms /    13 runs   (   68.69 ms per token,    14.56 tokens per second)
0.01.404.347 I llama_perf_context_print:       total time =     901.74 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.552 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.000.890 I main: load the model and apply lora adapter, if any
0.00.021.532 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.542 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.550 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.554 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.555 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.559 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.560 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.560 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.561 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.562 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.562 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.567 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.567 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.568 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.569 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.569 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.580 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.272 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.177 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.184 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.185 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.185 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.186 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.187 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.187 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.190 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.190 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.191 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.191 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.193 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.197 I llama_model_loader: - type  f32:   37 tensors
0.00.132.198 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.361 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.805 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.422 I llm_load_vocab: special tokens cache size = 5
0.00.274.201 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.219 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.220 I llm_load_print_meta: arch             = gemma
0.00.274.221 I llm_load_print_meta: vocab type       = SPM
0.00.274.221 I llm_load_print_meta: n_vocab          = 256000
0.00.274.222 I llm_load_print_meta: n_merges         = 0
0.00.274.222 I llm_load_print_meta: vocab_only       = 0
0.00.274.223 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.223 I llm_load_print_meta: n_embd           = 2048
0.00.274.223 I llm_load_print_meta: n_layer          = 18
0.00.274.236 I llm_load_print_meta: n_head           = 8
0.00.274.237 I llm_load_print_meta: n_head_kv        = 1
0.00.274.237 I llm_load_print_meta: n_rot            = 256
0.00.274.238 I llm_load_print_meta: n_swa            = 0
0.00.274.238 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.239 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.241 I llm_load_print_meta: n_gqa            = 8
0.00.274.242 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.243 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.244 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.245 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.245 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.246 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.246 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.247 I llm_load_print_meta: n_ff             = 16384
0.00.274.248 I llm_load_print_meta: n_expert         = 0
0.00.274.249 I llm_load_print_meta: n_expert_used    = 0
0.00.274.249 I llm_load_print_meta: causal attn      = 1
0.00.274.250 I llm_load_print_meta: pooling type     = 0
0.00.274.250 I llm_load_print_meta: rope type        = 2
0.00.274.250 I llm_load_print_meta: rope scaling     = linear
0.00.274.252 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.252 I llm_load_print_meta: freq_scale_train = 1
0.00.274.253 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.253 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.253 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.254 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.254 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.254 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.255 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.255 I llm_load_print_meta: model type       = 2B
0.00.274.256 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.257 I llm_load_print_meta: model params     = 2.51 B
0.00.274.258 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.259 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.259 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.260 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.260 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.260 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.261 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.261 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.262 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.262 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.263 I llm_load_print_meta: max token length = 93
0.00.354.317 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.354.322 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.354.323 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.354.324 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.354.325 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.354.325 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.359.744 I llama_new_context_with_model: n_seq_max     = 1
0.00.359.751 I llama_new_context_with_model: n_ctx         = 4096
0.00.359.752 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.359.752 I llama_new_context_with_model: n_batch       = 2048
0.00.359.753 I llama_new_context_with_model: n_ubatch      = 512
0.00.359.753 I llama_new_context_with_model: flash_attn    = 0
0.00.359.756 I llama_new_context_with_model: freq_base     = 10000.0
0.00.359.758 I llama_new_context_with_model: freq_scale    = 1
0.00.359.759 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.259 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.272 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.367 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.586 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.592 I llama_new_context_with_model: graph nodes  = 601
0.00.377.592 I llama_new_context_with_model: graph splits = 1
0.00.377.594 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.323 I main: llama threadpool init, n_threads = 4
0.00.465.336 I 
0.00.465.417 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.420 I 
0.00.465.463 I sampler seed: 4130723670
0.00.465.474 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.483 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.488 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.489 I 
 increasities, a mesmerizing display of synchronized swimming.

**Answer:** Acrobatic swimming [end of text]


0.01.781.405 I llama_perf_sampler_print:    sampling time =       2.99 ms /    20 runs   (    0.15 ms per token,  6697.92 tokens per second)
0.01.781.408 I llama_perf_context_print:        load time =     464.41 ms
0.01.781.410 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.781.411 I llama_perf_context_print:        eval time =    1304.05 ms /    19 runs   (   68.63 ms per token,    14.57 tokens per second)
0.01.781.412 I llama_perf_context_print:       total time =    1316.09 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.546 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.885 I main: load the model and apply lora adapter, if any
0.00.021.231 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.238 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.245 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.250 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.252 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.255 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.256 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.257 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.257 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.258 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.258 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.262 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.262 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.263 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.264 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.955 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.249 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.060 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.066 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.067 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.068 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.068 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.069 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.070 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.072 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.073 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.074 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.074 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.075 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.078 I llama_model_loader: - type  f32:   37 tensors
0.00.131.079 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.291 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.635 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.204 I llm_load_vocab: special tokens cache size = 5
0.00.282.860 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.876 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.876 I llm_load_print_meta: arch             = gemma
0.00.282.877 I llm_load_print_meta: vocab type       = SPM
0.00.282.878 I llm_load_print_meta: n_vocab          = 256000
0.00.282.878 I llm_load_print_meta: n_merges         = 0
0.00.282.878 I llm_load_print_meta: vocab_only       = 0
0.00.282.879 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.879 I llm_load_print_meta: n_embd           = 2048
0.00.282.879 I llm_load_print_meta: n_layer          = 18
0.00.282.891 I llm_load_print_meta: n_head           = 8
0.00.282.893 I llm_load_print_meta: n_head_kv        = 1
0.00.282.893 I llm_load_print_meta: n_rot            = 256
0.00.282.893 I llm_load_print_meta: n_swa            = 0
0.00.282.894 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.894 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.895 I llm_load_print_meta: n_gqa            = 8
0.00.282.896 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.897 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.898 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.899 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.899 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.900 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.900 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.901 I llm_load_print_meta: n_ff             = 16384
0.00.282.901 I llm_load_print_meta: n_expert         = 0
0.00.282.902 I llm_load_print_meta: n_expert_used    = 0
0.00.282.902 I llm_load_print_meta: causal attn      = 1
0.00.282.902 I llm_load_print_meta: pooling type     = 0
0.00.282.902 I llm_load_print_meta: rope type        = 2
0.00.282.903 I llm_load_print_meta: rope scaling     = linear
0.00.282.904 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.905 I llm_load_print_meta: freq_scale_train = 1
0.00.282.905 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.905 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.905 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.906 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.906 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.906 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.906 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.907 I llm_load_print_meta: model type       = 2B
0.00.282.908 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.908 I llm_load_print_meta: model params     = 2.51 B
0.00.282.909 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.910 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.910 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.910 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.911 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.911 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.911 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.912 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.912 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.912 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.913 I llm_load_print_meta: max token length = 93
0.00.354.287 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.354.294 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.359.688 I llama_new_context_with_model: n_seq_max     = 1
0.00.359.696 I llama_new_context_with_model: n_ctx         = 4096
0.00.359.696 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.359.697 I llama_new_context_with_model: n_batch       = 2048
0.00.359.697 I llama_new_context_with_model: n_ubatch      = 512
0.00.359.698 I llama_new_context_with_model: flash_attn    = 0
0.00.359.700 I llama_new_context_with_model: freq_base     = 10000.0
0.00.359.701 I llama_new_context_with_model: freq_scale    = 1
0.00.359.703 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.198 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.212 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.308 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.604 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.610 I llama_new_context_with_model: graph nodes  = 601
0.00.377.610 I llama_new_context_with_model: graph splits = 1
0.00.377.612 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.235 I main: llama threadpool init, n_threads = 4
0.00.467.250 I 
0.00.467.328 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.332 I 
0.00.467.380 I sampler seed: 2036442750
0.00.467.391 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.396 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.467.397 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.397 I 
 increasities for her new song "Wild."

The lyrics depict a woman who feels lost and adrift in a world that seems increasingly chaotic and unforgiving. She

0.02.907.356 I llama_perf_sampler_print:    sampling time =       5.16 ms /    33 runs   (    0.16 ms per token,  6400.31 tokens per second)
0.02.907.359 I llama_perf_context_print:        load time =     466.33 ms
0.02.907.361 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.907.362 I llama_perf_context_print:        eval time =    2420.62 ms /    32 runs   (   75.64 ms per token,    13.22 tokens per second)
0.02.907.363 I llama_perf_context_print:       total time =    2440.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.821s
user	0m27.125s
sys	0m9.453s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4075 (fb4a0ec0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31988.14 ms
main:    total time = 31988.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.000.922 I main: load the model and apply lora adapter, if any
0.00.021.732 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.742 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.751 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.756 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.757 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.763 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.766 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.767 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.767 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.768 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.768 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.773 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.773 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.774 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.774 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.775 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.911 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.290 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.148 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.154 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.155 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.156 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.157 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.158 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.159 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.163 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.163 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.164 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.165 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.166 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.169 I llama_model_loader: - type  f32:   37 tensors
0.00.132.170 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.172 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.972 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.977 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.618 I llm_load_vocab: special tokens cache size = 5
0.00.277.368 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.387 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.387 I llm_load_print_meta: arch             = gemma
0.00.277.388 I llm_load_print_meta: vocab type       = SPM
0.00.277.389 I llm_load_print_meta: n_vocab          = 256000
0.00.277.389 I llm_load_print_meta: n_merges         = 0
0.00.277.389 I llm_load_print_meta: vocab_only       = 0
0.00.277.390 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.390 I llm_load_print_meta: n_embd           = 2048
0.00.277.390 I llm_load_print_meta: n_layer          = 18
0.00.277.402 I llm_load_print_meta: n_head           = 8
0.00.277.403 I llm_load_print_meta: n_head_kv        = 1
0.00.277.404 I llm_load_print_meta: n_rot            = 256
0.00.277.404 I llm_load_print_meta: n_swa            = 0
0.00.277.404 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.404 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.405 I llm_load_print_meta: n_gqa            = 8
0.00.277.406 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.407 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.408 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.409 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.409 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.410 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.410 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.411 I llm_load_print_meta: n_ff             = 16384
0.00.277.411 I llm_load_print_meta: n_expert         = 0
0.00.277.412 I llm_load_print_meta: n_expert_used    = 0
0.00.277.412 I llm_load_print_meta: causal attn      = 1
0.00.277.412 I llm_load_print_meta: pooling type     = 0
0.00.277.412 I llm_load_print_meta: rope type        = 2
0.00.277.413 I llm_load_print_meta: rope scaling     = linear
0.00.277.414 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.415 I llm_load_print_meta: freq_scale_train = 1
0.00.277.415 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.415 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.415 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.416 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.416 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.416 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.417 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.417 I llm_load_print_meta: model type       = 2B
0.00.277.418 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.419 I llm_load_print_meta: model params     = 2.51 B
0.00.277.419 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.420 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.420 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.420 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.421 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.421 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.422 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.422 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.422 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.423 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.423 I llm_load_print_meta: max token length = 93
0.00.336.779 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.336.788 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.336.789 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.336.789 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.336.790 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.336.791 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.342.192 I llama_new_context_with_model: n_seq_max     = 1
0.00.342.198 I llama_new_context_with_model: n_ctx         = 4096
0.00.342.199 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.342.199 I llama_new_context_with_model: n_batch       = 2048
0.00.342.200 I llama_new_context_with_model: n_ubatch      = 512
0.00.342.200 I llama_new_context_with_model: flash_attn    = 0
0.00.342.203 I llama_new_context_with_model: freq_base     = 10000.0
0.00.342.204 I llama_new_context_with_model: freq_scale    = 1
0.00.342.205 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.928 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.357.942 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.038 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.281 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.359.288 I llama_new_context_with_model: graph nodes  = 601
0.00.359.288 I llama_new_context_with_model: graph splits = 1
0.00.359.290 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.925 I main: llama threadpool init, n_threads = 4
0.00.435.938 I 
0.00.436.022 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.026 I 
0.00.436.075 I sampler seed: 3144435120
0.00.436.089 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.093 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.436.095 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.096 I 
 increamically.

Answer: I am sorry, I am not supposed to generate responses that are disrespectful or insensitive. Would you like me to try generating something different

0.02.107.265 I llama_perf_sampler_print:    sampling time =       5.50 ms /    33 runs   (    0.17 ms per token,  5995.64 tokens per second)
0.02.107.267 I llama_perf_context_print:        load time =     434.98 ms
0.02.107.268 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.107.270 I llama_perf_context_print:        eval time =    1650.08 ms /    32 runs   (   51.57 ms per token,    19.39 tokens per second)
0.02.107.271 I llama_perf_context_print:       total time =    1671.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4075 (fb4a0ec0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32078.76 ms
main:    total time = 32078.76 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.550 I build: 4075 (fb4a0ec0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.000.891 I main: load the model and apply lora adapter, if any
0.00.021.508 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.524 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.530 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.532 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.535 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.536 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.536 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.537 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.538 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.539 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.542 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.543 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.544 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.544 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.545 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.419 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.490 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.372 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.380 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.380 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.381 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.382 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.383 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.383 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.387 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.387 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.390 I llama_model_loader: - type  f32:   37 tensors
0.00.132.392 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.393 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.341 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.426 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.078 I llm_load_vocab: special tokens cache size = 5
0.00.274.063 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.079 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.080 I llm_load_print_meta: arch             = gemma
0.00.274.080 I llm_load_print_meta: vocab type       = SPM
0.00.274.081 I llm_load_print_meta: n_vocab          = 256000
0.00.274.081 I llm_load_print_meta: n_merges         = 0
0.00.274.082 I llm_load_print_meta: vocab_only       = 0
0.00.274.082 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.082 I llm_load_print_meta: n_embd           = 2048
0.00.274.083 I llm_load_print_meta: n_layer          = 18
0.00.274.093 I llm_load_print_meta: n_head           = 8
0.00.274.095 I llm_load_print_meta: n_head_kv        = 1
0.00.274.095 I llm_load_print_meta: n_rot            = 256
0.00.274.095 I llm_load_print_meta: n_swa            = 0
0.00.274.096 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.096 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.097 I llm_load_print_meta: n_gqa            = 8
0.00.274.098 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.099 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.100 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.101 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.102 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.102 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.103 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.104 I llm_load_print_meta: n_ff             = 16384
0.00.274.104 I llm_load_print_meta: n_expert         = 0
0.00.274.104 I llm_load_print_meta: n_expert_used    = 0
0.00.274.105 I llm_load_print_meta: causal attn      = 1
0.00.274.105 I llm_load_print_meta: pooling type     = 0
0.00.274.105 I llm_load_print_meta: rope type        = 2
0.00.274.106 I llm_load_print_meta: rope scaling     = linear
0.00.274.107 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.107 I llm_load_print_meta: freq_scale_train = 1
0.00.274.108 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.108 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.108 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.109 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.109 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.109 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.109 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.110 I llm_load_print_meta: model type       = 2B
0.00.274.110 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.111 I llm_load_print_meta: model params     = 2.51 B
0.00.274.112 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.112 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.112 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.113 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.113 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.113 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.114 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.114 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.115 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.115 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.115 I llm_load_print_meta: max token length = 93
0.00.331.992 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.337.258 I llama_new_context_with_model: n_seq_max     = 1
0.00.337.265 I llama_new_context_with_model: n_ctx         = 4096
0.00.337.266 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.337.266 I llama_new_context_with_model: n_batch       = 2048
0.00.337.266 I llama_new_context_with_model: n_ubatch      = 512
0.00.337.266 I llama_new_context_with_model: flash_attn    = 0
0.00.337.268 I llama_new_context_with_model: freq_base     = 10000.0
0.00.337.269 I llama_new_context_with_model: freq_scale    = 1
0.00.337.270 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.391 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.354.406 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.354.507 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.836 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.843 I llama_new_context_with_model: graph nodes  = 601
0.00.355.844 I llama_new_context_with_model: graph splits = 1
0.00.355.845 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.762 I main: llama threadpool init, n_threads = 4
0.00.432.775 I 
0.00.432.853 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.432.856 I 
0.00.432.902 I sampler seed: 2526163424
0.00.432.914 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.916 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.432.917 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.917 I 
 increasities. 

The correct answer is: "evolution".

Evolution is the process of change in the characteristics of a species over generations. It is the

0.02.081.832 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6621.19 tokens per second)
0.02.081.835 I llama_perf_context_print:        load time =     431.85 ms
0.02.081.836 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.081.838 I llama_perf_context_print:        eval time =    1629.62 ms /    32 runs   (   50.93 ms per token,    19.64 tokens per second)
0.02.081.839 I llama_perf_context_print:       total time =    1649.08 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.160s
user	8m15.124s
sys	0m6.868s
