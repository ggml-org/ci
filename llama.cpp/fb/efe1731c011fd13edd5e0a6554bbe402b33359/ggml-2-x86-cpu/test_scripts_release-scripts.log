+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.022.211 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.258 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.267 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.272 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.281 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.285 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.286 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.286 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.287 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.288 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.288 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.293 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.294 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.295 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.295 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.296 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.119 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.034 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.899 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.906 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.906 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.907 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.907 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.908 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.909 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.912 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.912 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.913 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.914 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.915 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.918 I llama_model_loader: - type  f32:   37 tensors
0.00.132.922 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.538 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.524 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.178 I llm_load_vocab: special tokens cache size = 5
0.00.223.205 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.218 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.219 I llm_load_print_meta: arch             = gemma
0.00.223.219 I llm_load_print_meta: vocab type       = SPM
0.00.223.220 I llm_load_print_meta: n_vocab          = 256000
0.00.223.220 I llm_load_print_meta: n_merges         = 0
0.00.223.221 I llm_load_print_meta: vocab_only       = 0
0.00.223.221 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.221 I llm_load_print_meta: n_embd           = 2048
0.00.223.222 I llm_load_print_meta: n_layer          = 18
0.00.223.234 I llm_load_print_meta: n_head           = 8
0.00.223.235 I llm_load_print_meta: n_head_kv        = 1
0.00.223.235 I llm_load_print_meta: n_rot            = 256
0.00.223.236 I llm_load_print_meta: n_swa            = 0
0.00.223.236 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.236 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.237 I llm_load_print_meta: n_gqa            = 8
0.00.223.238 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.239 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.240 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.241 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.241 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.242 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.242 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.243 I llm_load_print_meta: n_ff             = 16384
0.00.223.243 I llm_load_print_meta: n_expert         = 0
0.00.223.244 I llm_load_print_meta: n_expert_used    = 0
0.00.223.244 I llm_load_print_meta: causal attn      = 1
0.00.223.244 I llm_load_print_meta: pooling type     = 0
0.00.223.244 I llm_load_print_meta: rope type        = 2
0.00.223.245 I llm_load_print_meta: rope scaling     = linear
0.00.223.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.246 I llm_load_print_meta: freq_scale_train = 1
0.00.223.247 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.247 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.247 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.248 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.248 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.248 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.248 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.249 I llm_load_print_meta: model type       = 2B
0.00.223.250 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.250 I llm_load_print_meta: model params     = 2.51 B
0.00.223.251 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.252 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.252 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.252 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.252 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.253 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.253 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.254 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.254 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.254 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.255 I llm_load_print_meta: max token length = 93
0.00.223.273 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.956 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.964 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.965 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.966 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.966 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.966 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.330.089 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.094 I llama_new_context_with_model: n_batch    = 2048
0.00.330.094 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.095 I llama_new_context_with_model: flash_attn = 0
0.00.330.097 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.098 I llama_new_context_with_model: freq_scale = 1
0.00.358.609 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.623 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.713 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.594 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.602 I llama_new_context_with_model: graph nodes  = 601
0.00.359.603 I llama_new_context_with_model: graph splits = 1
0.00.359.604 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.545 I main: llama threadpool init, n_threads = 4
0.00.451.559 I 
0.00.451.636 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.640 I 
0.00.451.676 I sampler seed: 2283270332
0.00.451.685 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.688 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.689 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.689 I 
 increasities by linking the names of the individuals.

I cannot generate sexually suggestive or inappropriate content. [end of text]


0.01.945.516 I llama_perf_sampler_print:    sampling time =       3.32 ms /    22 runs   (    0.15 ms per token,  6624.51 tokens per second)
0.01.945.518 I llama_perf_context_print:        load time =     449.60 ms
0.01.945.520 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.945.521 I llama_perf_context_print:        eval time =    1481.66 ms /    21 runs   (   70.56 ms per token,    14.17 tokens per second)
0.01.945.522 I llama_perf_context_print:       total time =    1493.98 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.557 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.022.163 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.175 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.183 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.183 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.187 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.188 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.189 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.189 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.190 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.190 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.194 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.195 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.196 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.197 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.197 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.689 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.116 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.952 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.957 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.958 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.959 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.960 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.961 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.962 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.966 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.967 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.968 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.968 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.969 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.973 I llama_model_loader: - type  f32:   37 tensors
0.00.131.976 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.693 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.377 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.038 I llm_load_vocab: special tokens cache size = 5
0.00.223.002 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.016 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.017 I llm_load_print_meta: arch             = gemma
0.00.223.017 I llm_load_print_meta: vocab type       = SPM
0.00.223.018 I llm_load_print_meta: n_vocab          = 256000
0.00.223.019 I llm_load_print_meta: n_merges         = 0
0.00.223.019 I llm_load_print_meta: vocab_only       = 0
0.00.223.019 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.019 I llm_load_print_meta: n_embd           = 2048
0.00.223.020 I llm_load_print_meta: n_layer          = 18
0.00.223.031 I llm_load_print_meta: n_head           = 8
0.00.223.032 I llm_load_print_meta: n_head_kv        = 1
0.00.223.033 I llm_load_print_meta: n_rot            = 256
0.00.223.033 I llm_load_print_meta: n_swa            = 0
0.00.223.033 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.033 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.034 I llm_load_print_meta: n_gqa            = 8
0.00.223.035 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.036 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.037 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.039 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.039 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.040 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.040 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.041 I llm_load_print_meta: n_ff             = 16384
0.00.223.041 I llm_load_print_meta: n_expert         = 0
0.00.223.041 I llm_load_print_meta: n_expert_used    = 0
0.00.223.042 I llm_load_print_meta: causal attn      = 1
0.00.223.042 I llm_load_print_meta: pooling type     = 0
0.00.223.042 I llm_load_print_meta: rope type        = 2
0.00.223.043 I llm_load_print_meta: rope scaling     = linear
0.00.223.044 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.045 I llm_load_print_meta: freq_scale_train = 1
0.00.223.045 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.045 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.046 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.046 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.046 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.047 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.047 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.047 I llm_load_print_meta: model type       = 2B
0.00.223.048 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.048 I llm_load_print_meta: model params     = 2.51 B
0.00.223.049 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.050 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.050 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.050 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.051 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.051 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.052 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.052 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.052 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.053 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.053 I llm_load_print_meta: max token length = 93
0.00.223.077 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.123 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.246 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.252 I llama_new_context_with_model: n_batch    = 2048
0.00.323.252 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.253 I llama_new_context_with_model: flash_attn = 0
0.00.323.255 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.256 I llama_new_context_with_model: freq_scale = 1
0.00.353.774 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.790 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.751 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.760 I llama_new_context_with_model: graph nodes  = 601
0.00.354.760 I llama_new_context_with_model: graph splits = 1
0.00.354.762 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.552 I main: llama threadpool init, n_threads = 4
0.00.442.565 I 
0.00.442.639 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.643 I 
0.00.442.679 I sampler seed: 4089074879
0.00.442.688 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.691 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.442.691 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.691 I 
 increasities are not an appropriate way to resolve conflicts. [end of text]


0.01.264.859 I llama_perf_sampler_print:    sampling time =       1.81 ms /    13 runs   (    0.14 ms per token,  7162.53 tokens per second)
0.01.264.861 I llama_perf_context_print:        load time =     440.65 ms
0.01.264.862 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.264.863 I llama_perf_context_print:        eval time =     814.66 ms /    12 runs   (   67.89 ms per token,    14.73 tokens per second)
0.01.264.864 I llama_perf_context_print:       total time =     822.31 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.521 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.726 I main: llama backend init
0.00.001.850 I main: load the model and apply lora adapter, if any
0.00.021.963 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.032 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.044 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.050 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.051 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.055 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.057 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.059 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.060 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.061 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.062 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.067 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.068 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.069 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.070 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.071 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.631 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.752 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.597 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.603 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.604 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.605 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.605 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.607 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.607 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.611 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.611 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.612 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.613 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.615 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.619 I llama_model_loader: - type  f32:   37 tensors
0.00.131.622 I llama_model_loader: - type q8_0:  127 tensors
0.00.185.407 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.691 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.303 I llm_load_vocab: special tokens cache size = 5
0.00.220.163 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.176 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.176 I llm_load_print_meta: arch             = gemma
0.00.220.177 I llm_load_print_meta: vocab type       = SPM
0.00.220.177 I llm_load_print_meta: n_vocab          = 256000
0.00.220.178 I llm_load_print_meta: n_merges         = 0
0.00.220.178 I llm_load_print_meta: vocab_only       = 0
0.00.220.178 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.179 I llm_load_print_meta: n_embd           = 2048
0.00.220.179 I llm_load_print_meta: n_layer          = 18
0.00.220.191 I llm_load_print_meta: n_head           = 8
0.00.220.191 I llm_load_print_meta: n_head_kv        = 1
0.00.220.192 I llm_load_print_meta: n_rot            = 256
0.00.220.192 I llm_load_print_meta: n_swa            = 0
0.00.220.192 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.193 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.194 I llm_load_print_meta: n_gqa            = 8
0.00.220.195 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.195 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.196 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.197 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.198 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.198 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.199 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.200 I llm_load_print_meta: n_ff             = 16384
0.00.220.200 I llm_load_print_meta: n_expert         = 0
0.00.220.200 I llm_load_print_meta: n_expert_used    = 0
0.00.220.200 I llm_load_print_meta: causal attn      = 1
0.00.220.201 I llm_load_print_meta: pooling type     = 0
0.00.220.201 I llm_load_print_meta: rope type        = 2
0.00.220.201 I llm_load_print_meta: rope scaling     = linear
0.00.220.202 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.203 I llm_load_print_meta: freq_scale_train = 1
0.00.220.203 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.204 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.204 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.204 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.204 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.205 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.205 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.206 I llm_load_print_meta: model type       = 2B
0.00.220.207 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.207 I llm_load_print_meta: model params     = 2.51 B
0.00.220.208 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.208 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.209 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.209 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.209 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.210 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.210 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.211 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.211 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.211 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.212 I llm_load_print_meta: max token length = 93
0.00.220.230 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.297.579 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.297.586 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.297.587 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.297.588 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.297.588 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.297.589 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.302.583 I llama_new_context_with_model: n_ctx      = 8192
0.00.302.589 I llama_new_context_with_model: n_batch    = 2048
0.00.302.590 I llama_new_context_with_model: n_ubatch   = 512
0.00.302.590 I llama_new_context_with_model: flash_attn = 0
0.00.302.592 I llama_new_context_with_model: freq_base  = 10000.0
0.00.302.593 I llama_new_context_with_model: freq_scale = 1
0.00.333.508 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.526 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.333.629 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.522 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.531 I llama_new_context_with_model: graph nodes  = 601
0.00.334.531 I llama_new_context_with_model: graph splits = 1
0.00.334.533 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.426.550 I main: llama threadpool init, n_threads = 4
0.00.426.562 I 
0.00.426.652 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.426.661 I 
0.00.426.704 I sampler seed: 3212443828
0.00.426.715 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.426.723 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.426.724 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.426.724 I 
 increasities, and other forms of verbal harassment. [end of text]


0.01.209.308 I llama_perf_sampler_print:    sampling time =       1.72 ms /    12 runs   (    0.14 ms per token,  6972.69 tokens per second)
0.01.209.310 I llama_perf_context_print:        load time =     424.63 ms
0.01.209.311 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.209.313 I llama_perf_context_print:        eval time =     775.66 ms /    11 runs   (   70.51 ms per token,    14.18 tokens per second)
0.01.209.314 I llama_perf_context_print:       total time =     782.77 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.531 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.916 I main: load the model and apply lora adapter, if any
0.00.021.949 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.004 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.017 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.023 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.025 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.029 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.030 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.031 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.032 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.033 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.034 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.040 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.041 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.042 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.043 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.043 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.657 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.415 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.361 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.371 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.372 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.372 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.373 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.375 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.376 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.380 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.381 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.382 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.383 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.384 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.389 I llama_model_loader: - type  f32:   37 tensors
0.00.132.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.899 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.622 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.394 I llm_load_vocab: special tokens cache size = 5
0.00.228.361 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.376 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.377 I llm_load_print_meta: arch             = gemma
0.00.228.378 I llm_load_print_meta: vocab type       = SPM
0.00.228.379 I llm_load_print_meta: n_vocab          = 256000
0.00.228.379 I llm_load_print_meta: n_merges         = 0
0.00.228.380 I llm_load_print_meta: vocab_only       = 0
0.00.228.380 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.380 I llm_load_print_meta: n_embd           = 2048
0.00.228.380 I llm_load_print_meta: n_layer          = 18
0.00.228.393 I llm_load_print_meta: n_head           = 8
0.00.228.394 I llm_load_print_meta: n_head_kv        = 1
0.00.228.395 I llm_load_print_meta: n_rot            = 256
0.00.228.395 I llm_load_print_meta: n_swa            = 0
0.00.228.396 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.396 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.397 I llm_load_print_meta: n_gqa            = 8
0.00.228.399 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.400 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.402 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.403 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.404 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.405 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.406 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.407 I llm_load_print_meta: n_ff             = 16384
0.00.228.408 I llm_load_print_meta: n_expert         = 0
0.00.228.408 I llm_load_print_meta: n_expert_used    = 0
0.00.228.409 I llm_load_print_meta: causal attn      = 1
0.00.228.410 I llm_load_print_meta: pooling type     = 0
0.00.228.410 I llm_load_print_meta: rope type        = 2
0.00.228.411 I llm_load_print_meta: rope scaling     = linear
0.00.228.413 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.413 I llm_load_print_meta: freq_scale_train = 1
0.00.228.414 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.416 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.416 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.417 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.417 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.421 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.422 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.422 I llm_load_print_meta: model type       = 2B
0.00.228.423 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.424 I llm_load_print_meta: model params     = 2.51 B
0.00.228.426 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.427 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.427 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.428 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.428 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.429 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.429 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.430 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.431 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.431 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.432 I llm_load_print_meta: max token length = 93
0.00.228.462 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.380 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.299.387 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.304.476 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.484 I llama_new_context_with_model: n_batch    = 2048
0.00.304.484 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.485 I llama_new_context_with_model: flash_attn = 0
0.00.304.487 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.488 I llama_new_context_with_model: freq_scale = 1
0.00.333.820 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.834 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.333.930 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.809 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.817 I llama_new_context_with_model: graph nodes  = 601
0.00.334.817 I llama_new_context_with_model: graph splits = 1
0.00.334.819 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.042 I main: llama threadpool init, n_threads = 4
0.00.430.055 I 
0.00.430.132 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.430.136 I 
0.00.430.180 I sampler seed: 2470454388
0.00.430.199 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.202 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.430.205 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.205 I 
 increasities in the 19th century. 

**Answer:**

I am unable to provide information related to sexually explicit or inappropriate topics. My purpose

0.02.861.721 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6725.09 tokens per second)
0.02.861.723 I llama_perf_context_print:        load time =     428.05 ms
0.02.861.726 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.861.727 I llama_perf_context_print:        eval time =    2413.57 ms /    32 runs   (   75.42 ms per token,    13.26 tokens per second)
0.02.861.728 I llama_perf_context_print:       total time =    2431.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.974s
user	0m24.746s
sys	0m9.488s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3898 (fbefe173)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31973.56 ms
main:    total time = 31973.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.148 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.194 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.205 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.210 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.211 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.215 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.216 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.216 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.217 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.218 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.218 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.221 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.222 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.222 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.223 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.223 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.792 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.808 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.666 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.672 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.672 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.673 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.673 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.674 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.675 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.677 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.678 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.678 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.679 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.679 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.682 I llama_model_loader: - type  f32:   37 tensors
0.00.131.684 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.684 I llama_model_loader: - type q6_K:   19 tensors
0.00.185.955 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.097 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.861 I llm_load_vocab: special tokens cache size = 5
0.00.221.908 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.925 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.925 I llm_load_print_meta: arch             = gemma
0.00.221.926 I llm_load_print_meta: vocab type       = SPM
0.00.221.926 I llm_load_print_meta: n_vocab          = 256000
0.00.221.927 I llm_load_print_meta: n_merges         = 0
0.00.221.928 I llm_load_print_meta: vocab_only       = 0
0.00.221.929 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.929 I llm_load_print_meta: n_embd           = 2048
0.00.221.930 I llm_load_print_meta: n_layer          = 18
0.00.221.943 I llm_load_print_meta: n_head           = 8
0.00.221.944 I llm_load_print_meta: n_head_kv        = 1
0.00.221.944 I llm_load_print_meta: n_rot            = 256
0.00.221.944 I llm_load_print_meta: n_swa            = 0
0.00.221.945 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.945 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.946 I llm_load_print_meta: n_gqa            = 8
0.00.221.947 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.948 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.949 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.950 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.951 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.951 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.951 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.952 I llm_load_print_meta: n_ff             = 16384
0.00.221.953 I llm_load_print_meta: n_expert         = 0
0.00.221.953 I llm_load_print_meta: n_expert_used    = 0
0.00.221.953 I llm_load_print_meta: causal attn      = 1
0.00.221.954 I llm_load_print_meta: pooling type     = 0
0.00.221.954 I llm_load_print_meta: rope type        = 2
0.00.221.954 I llm_load_print_meta: rope scaling     = linear
0.00.221.956 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.956 I llm_load_print_meta: freq_scale_train = 1
0.00.221.956 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.957 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.957 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.958 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.958 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.959 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.959 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.960 I llm_load_print_meta: model type       = 2B
0.00.221.961 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.962 I llm_load_print_meta: model params     = 2.51 B
0.00.221.963 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.963 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.964 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.965 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.965 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.966 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.966 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.967 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.967 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.969 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.969 I llm_load_print_meta: max token length = 93
0.00.221.996 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.575 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.584 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.585 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.585 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.586 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.586 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.666 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.672 I llama_new_context_with_model: n_batch    = 2048
0.00.286.673 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.673 I llama_new_context_with_model: flash_attn = 0
0.00.286.675 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.676 I llama_new_context_with_model: freq_scale = 1
0.00.315.383 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.315.399 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.315.489 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.316.372 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.316.380 I llama_new_context_with_model: graph nodes  = 601
0.00.316.380 I llama_new_context_with_model: graph splits = 1
0.00.316.382 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.090 I main: llama threadpool init, n_threads = 4
0.00.399.101 I 
0.00.399.189 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.193 I 
0.00.399.236 I sampler seed: 2800964280
0.00.399.250 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.253 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.254 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.254 I 
 encompases and other characters from the Harry Potter series who have been depicted in an unflattering light in the media.

These depictions have often been inaccurate,

0.02.021.725 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7022.77 tokens per second)
0.02.021.728 I llama_perf_context_print:        load time =     397.17 ms
0.02.021.730 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.021.732 I llama_perf_context_print:        eval time =    1604.24 ms /    32 runs   (   50.13 ms per token,    19.95 tokens per second)
0.02.021.733 I llama_perf_context_print:       total time =    1622.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3898 (fbefe173)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32074.09 ms
main:    total time = 32074.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.593 I build: 3898 (fbefe173) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.810 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.021.669 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.684 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.691 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.692 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.695 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.695 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.697 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.698 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.699 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.699 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.703 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.704 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.704 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.705 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.706 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.119 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.335 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.224 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.229 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.230 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.231 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.231 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.232 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.233 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.235 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.236 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.238 I llama_model_loader: - type  f32:   37 tensors
0.00.131.240 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.241 I llama_model_loader: - type q6_K:   19 tensors
0.00.185.626 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.373 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.198.916 I llm_load_vocab: special tokens cache size = 5
0.00.219.668 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.219.681 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.219.682 I llm_load_print_meta: arch             = gemma
0.00.219.682 I llm_load_print_meta: vocab type       = SPM
0.00.219.683 I llm_load_print_meta: n_vocab          = 256000
0.00.219.683 I llm_load_print_meta: n_merges         = 0
0.00.219.684 I llm_load_print_meta: vocab_only       = 0
0.00.219.684 I llm_load_print_meta: n_ctx_train      = 8192
0.00.219.684 I llm_load_print_meta: n_embd           = 2048
0.00.219.685 I llm_load_print_meta: n_layer          = 18
0.00.219.697 I llm_load_print_meta: n_head           = 8
0.00.219.698 I llm_load_print_meta: n_head_kv        = 1
0.00.219.699 I llm_load_print_meta: n_rot            = 256
0.00.219.699 I llm_load_print_meta: n_swa            = 0
0.00.219.700 I llm_load_print_meta: n_embd_head_k    = 256
0.00.219.700 I llm_load_print_meta: n_embd_head_v    = 256
0.00.219.701 I llm_load_print_meta: n_gqa            = 8
0.00.219.702 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.219.703 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.219.703 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.219.705 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.219.706 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.219.707 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.219.707 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.219.708 I llm_load_print_meta: n_ff             = 16384
0.00.219.709 I llm_load_print_meta: n_expert         = 0
0.00.219.709 I llm_load_print_meta: n_expert_used    = 0
0.00.219.709 I llm_load_print_meta: causal attn      = 1
0.00.219.710 I llm_load_print_meta: pooling type     = 0
0.00.219.710 I llm_load_print_meta: rope type        = 2
0.00.219.710 I llm_load_print_meta: rope scaling     = linear
0.00.219.712 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.219.713 I llm_load_print_meta: freq_scale_train = 1
0.00.219.713 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.219.714 I llm_load_print_meta: rope_finetuned   = unknown
0.00.219.714 I llm_load_print_meta: ssm_d_conv       = 0
0.00.219.715 I llm_load_print_meta: ssm_d_inner      = 0
0.00.219.715 I llm_load_print_meta: ssm_d_state      = 0
0.00.219.715 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.219.716 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.219.716 I llm_load_print_meta: model type       = 2B
0.00.219.717 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.219.718 I llm_load_print_meta: model params     = 2.51 B
0.00.219.719 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.219.719 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.219.719 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.219.720 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.219.720 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.219.721 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.219.721 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.219.722 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.219.722 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.219.723 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.219.723 I llm_load_print_meta: max token length = 93
0.00.219.741 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.277.535 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.282.475 I llama_new_context_with_model: n_ctx      = 8192
0.00.282.481 I llama_new_context_with_model: n_batch    = 2048
0.00.282.482 I llama_new_context_with_model: n_ubatch   = 512
0.00.282.482 I llama_new_context_with_model: flash_attn = 0
0.00.282.484 I llama_new_context_with_model: freq_base  = 10000.0
0.00.282.485 I llama_new_context_with_model: freq_scale = 1
0.00.311.575 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.311.592 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.311.691 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.312.570 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.312.577 I llama_new_context_with_model: graph nodes  = 601
0.00.312.577 I llama_new_context_with_model: graph splits = 1
0.00.312.579 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.392.887 I main: llama threadpool init, n_threads = 4
0.00.392.899 I 
0.00.392.979 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.392.983 I 
0.00.393.034 I sampler seed: 3286631833
0.00.393.044 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.393.047 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.393.048 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.393.048 I 
 strick.

I am unable to access the requested webpage. The server is not responding.

I have checked the server status page, and it indicates that the

0.01.995.758 I llama_perf_sampler_print:    sampling time =       4.64 ms /    33 runs   (    0.14 ms per token,  7113.60 tokens per second)
0.01.995.761 I llama_perf_context_print:        load time =     390.90 ms
0.01.995.763 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.995.765 I llama_perf_context_print:        eval time =    1585.47 ms /    32 runs   (   49.55 ms per token,    20.18 tokens per second)
0.01.995.767 I llama_perf_context_print:       total time =    1602.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.201s
user	8m14.292s
sys	0m6.859s
