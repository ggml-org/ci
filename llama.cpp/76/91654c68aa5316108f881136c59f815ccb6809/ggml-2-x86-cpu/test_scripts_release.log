+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.474 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.669 I main: llama backend init
0.00.001.770 I main: load the model and apply lora adapter, if any
0.00.022.106 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.153 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.160 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.165 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.166 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.169 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.170 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.171 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.172 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.173 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.173 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.177 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.178 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.179 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.179 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.180 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.898 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.793 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.605 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.611 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.612 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.612 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.613 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.614 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.614 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.617 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.618 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.618 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.619 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.620 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.624 I llama_model_loader: - type  f32:   37 tensors
0.00.133.627 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.094 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.277 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.913 I llm_load_vocab: special tokens cache size = 5
0.00.229.773 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.788 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.788 I llm_load_print_meta: arch             = gemma
0.00.229.789 I llm_load_print_meta: vocab type       = SPM
0.00.229.790 I llm_load_print_meta: n_vocab          = 256000
0.00.229.791 I llm_load_print_meta: n_merges         = 0
0.00.229.791 I llm_load_print_meta: vocab_only       = 0
0.00.229.791 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.791 I llm_load_print_meta: n_embd           = 2048
0.00.229.792 I llm_load_print_meta: n_layer          = 18
0.00.229.804 I llm_load_print_meta: n_head           = 8
0.00.229.804 I llm_load_print_meta: n_head_kv        = 1
0.00.229.805 I llm_load_print_meta: n_rot            = 256
0.00.229.805 I llm_load_print_meta: n_swa            = 0
0.00.229.805 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.806 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.806 I llm_load_print_meta: n_gqa            = 8
0.00.229.807 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.808 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.809 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.811 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.811 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.811 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.812 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.813 I llm_load_print_meta: n_ff             = 16384
0.00.229.814 I llm_load_print_meta: n_expert         = 0
0.00.229.814 I llm_load_print_meta: n_expert_used    = 0
0.00.229.814 I llm_load_print_meta: causal attn      = 1
0.00.229.815 I llm_load_print_meta: pooling type     = 0
0.00.229.815 I llm_load_print_meta: rope type        = 2
0.00.229.815 I llm_load_print_meta: rope scaling     = linear
0.00.229.817 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.817 I llm_load_print_meta: freq_scale_train = 1
0.00.229.818 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.818 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.818 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.818 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.819 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.819 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.820 I llm_load_print_meta: model type       = 2B
0.00.229.821 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.821 I llm_load_print_meta: model params     = 2.51 B
0.00.229.822 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.823 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.823 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.824 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.824 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.824 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.825 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.825 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.825 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.825 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.826 I llm_load_print_meta: max token length = 93
0.00.229.849 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.086 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.327.093 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.327.094 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.327.094 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.327.095 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.327.095 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.332.120 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.126 I llama_new_context_with_model: n_batch    = 2048
0.00.332.126 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.127 I llama_new_context_with_model: flash_attn = 0
0.00.332.129 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.130 I llama_new_context_with_model: freq_scale = 1
0.00.361.738 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.751 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.846 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.711 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.718 I llama_new_context_with_model: graph nodes  = 601
0.00.362.719 I llama_new_context_with_model: graph splits = 1
0.00.362.721 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.744 I main: llama threadpool init, n_threads = 4
0.00.453.755 I 
0.00.453.827 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.830 I 
0.00.453.857 I sampler seed: 3927969602
0.00.453.868 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.872 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.453.872 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.872 I 
 increasities.

I am unable to generate a response that meets the safety and ethical guidelines as it involves sexually suggestive and potentially inappropriate content. [end of text]


0.02.499.261 I llama_perf_sampler_print:    sampling time =       4.63 ms /    30 runs   (    0.15 ms per token,  6473.89 tokens per second)
0.02.499.264 I llama_perf_context_print:        load time =     451.96 ms
0.02.499.265 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.499.267 I llama_perf_context_print:        eval time =    2028.06 ms /    29 runs   (   69.93 ms per token,    14.30 tokens per second)
0.02.499.268 I llama_perf_context_print:       total time =    2045.53 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.593 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.809 I main: llama backend init
0.00.001.912 I main: load the model and apply lora adapter, if any
0.00.023.279 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.291 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.298 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.303 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.304 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.305 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.305 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.306 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.306 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.310 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.312 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.312 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.313 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.313 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.052.272 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.476 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.349 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.355 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.355 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.356 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.357 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.357 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.358 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.361 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.361 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.362 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.362 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.135.364 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.368 I llama_model_loader: - type  f32:   37 tensors
0.00.135.371 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.513 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.971 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.224.738 I llm_load_vocab: special tokens cache size = 5
0.00.243.011 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.243.026 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.243.026 I llm_load_print_meta: arch             = gemma
0.00.243.027 I llm_load_print_meta: vocab type       = SPM
0.00.243.028 I llm_load_print_meta: n_vocab          = 256000
0.00.243.028 I llm_load_print_meta: n_merges         = 0
0.00.243.029 I llm_load_print_meta: vocab_only       = 0
0.00.243.029 I llm_load_print_meta: n_ctx_train      = 8192
0.00.243.029 I llm_load_print_meta: n_embd           = 2048
0.00.243.030 I llm_load_print_meta: n_layer          = 18
0.00.243.042 I llm_load_print_meta: n_head           = 8
0.00.243.043 I llm_load_print_meta: n_head_kv        = 1
0.00.243.044 I llm_load_print_meta: n_rot            = 256
0.00.243.044 I llm_load_print_meta: n_swa            = 0
0.00.243.044 I llm_load_print_meta: n_embd_head_k    = 256
0.00.243.045 I llm_load_print_meta: n_embd_head_v    = 256
0.00.243.046 I llm_load_print_meta: n_gqa            = 8
0.00.243.047 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.243.048 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.243.049 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.243.050 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.243.050 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.243.050 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.243.051 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.243.052 I llm_load_print_meta: n_ff             = 16384
0.00.243.052 I llm_load_print_meta: n_expert         = 0
0.00.243.053 I llm_load_print_meta: n_expert_used    = 0
0.00.243.053 I llm_load_print_meta: causal attn      = 1
0.00.243.053 I llm_load_print_meta: pooling type     = 0
0.00.243.054 I llm_load_print_meta: rope type        = 2
0.00.243.054 I llm_load_print_meta: rope scaling     = linear
0.00.243.055 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.243.056 I llm_load_print_meta: freq_scale_train = 1
0.00.243.056 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.243.057 I llm_load_print_meta: rope_finetuned   = unknown
0.00.243.057 I llm_load_print_meta: ssm_d_conv       = 0
0.00.243.057 I llm_load_print_meta: ssm_d_inner      = 0
0.00.243.057 I llm_load_print_meta: ssm_d_state      = 0
0.00.243.058 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.243.058 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.243.059 I llm_load_print_meta: model type       = 2B
0.00.243.059 I llm_load_print_meta: model ftype      = Q8_0
0.00.243.060 I llm_load_print_meta: model params     = 2.51 B
0.00.243.061 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.243.061 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.243.062 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.243.062 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.243.062 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.243.062 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.243.063 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.243.063 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.243.063 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.243.064 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.243.064 I llm_load_print_meta: max token length = 93
0.00.243.091 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.186 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.340.211 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.217 I llama_new_context_with_model: n_batch    = 2048
0.00.340.218 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.218 I llama_new_context_with_model: flash_attn = 0
0.00.340.220 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.221 I llama_new_context_with_model: freq_scale = 1
0.00.370.123 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.139 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.231 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.155 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.161 I llama_new_context_with_model: graph nodes  = 601
0.00.371.161 I llama_new_context_with_model: graph splits = 1
0.00.371.163 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.243 I main: llama threadpool init, n_threads = 4
0.00.477.262 I 
0.00.477.358 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.363 I 
0.00.477.393 I sampler seed: 3144437929
0.00.477.400 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.404 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.477.405 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.406 I 
 increasities, and other forms of inappropriate behavior.

Our institution is committed to creating a safe and supportive environment for all members of the community. This commitment extends

0.02.654.196 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6685.58 tokens per second)
0.02.654.199 I llama_perf_context_print:        load time =     475.31 ms
0.02.654.200 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.654.201 I llama_perf_context_print:        eval time =    2159.02 ms /    32 runs   (   67.47 ms per token,    14.82 tokens per second)
0.02.654.202 I llama_perf_context_print:       total time =    2176.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.590 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.937 I main: load the model and apply lora adapter, if any
0.00.022.070 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.127 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.141 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.153 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.158 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.163 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.164 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.165 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.166 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.167 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.169 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.174 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.174 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.175 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.176 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.177 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.052.598 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.017 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.863 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.869 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.870 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.870 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.871 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.872 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.873 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.876 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.877 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.878 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.879 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.137.880 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.883 I llama_model_loader: - type  f32:   37 tensors
0.00.137.885 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.876 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.222.237 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.001 I llm_load_vocab: special tokens cache size = 5
0.00.241.221 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.234 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.235 I llm_load_print_meta: arch             = gemma
0.00.241.235 I llm_load_print_meta: vocab type       = SPM
0.00.241.236 I llm_load_print_meta: n_vocab          = 256000
0.00.241.236 I llm_load_print_meta: n_merges         = 0
0.00.241.237 I llm_load_print_meta: vocab_only       = 0
0.00.241.237 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.237 I llm_load_print_meta: n_embd           = 2048
0.00.241.238 I llm_load_print_meta: n_layer          = 18
0.00.241.251 I llm_load_print_meta: n_head           = 8
0.00.241.252 I llm_load_print_meta: n_head_kv        = 1
0.00.241.252 I llm_load_print_meta: n_rot            = 256
0.00.241.253 I llm_load_print_meta: n_swa            = 0
0.00.241.253 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.253 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.254 I llm_load_print_meta: n_gqa            = 8
0.00.241.255 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.256 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.256 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.258 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.258 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.259 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.259 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.260 I llm_load_print_meta: n_ff             = 16384
0.00.241.261 I llm_load_print_meta: n_expert         = 0
0.00.241.262 I llm_load_print_meta: n_expert_used    = 0
0.00.241.262 I llm_load_print_meta: causal attn      = 1
0.00.241.262 I llm_load_print_meta: pooling type     = 0
0.00.241.263 I llm_load_print_meta: rope type        = 2
0.00.241.263 I llm_load_print_meta: rope scaling     = linear
0.00.241.264 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.265 I llm_load_print_meta: freq_scale_train = 1
0.00.241.265 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.266 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.266 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.266 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.267 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.267 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.268 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.269 I llm_load_print_meta: model type       = 2B
0.00.241.269 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.270 I llm_load_print_meta: model params     = 2.51 B
0.00.241.271 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.271 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.272 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.272 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.273 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.273 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.273 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.274 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.274 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.275 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.275 I llm_load_print_meta: max token length = 93
0.00.241.296 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.281 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.320.288 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.320.288 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.320.289 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.320.290 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.320.290 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.325.457 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.464 I llama_new_context_with_model: n_batch    = 2048
0.00.325.464 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.465 I llama_new_context_with_model: flash_attn = 0
0.00.325.467 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.468 I llama_new_context_with_model: freq_scale = 1
0.00.355.705 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.722 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.821 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.731 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.739 I llama_new_context_with_model: graph nodes  = 601
0.00.356.739 I llama_new_context_with_model: graph splits = 1
0.00.356.742 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.855 I main: llama threadpool init, n_threads = 4
0.00.449.869 I 
0.00.449.953 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.957 I 
0.00.450.001 I sampler seed: 3319818340
0.00.450.013 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.018 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.450.019 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.020 I 
 increasements. [end of text]


0.00.740.825 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8012.82 tokens per second)
0.00.740.827 I llama_perf_context_print:        load time =     447.90 ms
0.00.740.828 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.740.829 I llama_perf_context_print:        eval time =     287.83 ms /     4 runs   (   71.96 ms per token,    13.90 tokens per second)
0.00.740.830 I llama_perf_context_print:       total time =     290.98 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.538 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.981 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.029 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.036 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.041 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.042 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.045 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.047 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.048 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.048 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.049 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.050 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.053 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.054 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.055 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.055 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.056 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.853 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.869 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.805 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.812 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.813 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.814 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.814 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.815 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.816 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.819 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.820 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.821 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.821 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.822 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.826 I llama_model_loader: - type  f32:   37 tensors
0.00.133.831 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.941 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.733 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.466 I llm_load_vocab: special tokens cache size = 5
0.00.232.946 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.963 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.963 I llm_load_print_meta: arch             = gemma
0.00.232.964 I llm_load_print_meta: vocab type       = SPM
0.00.232.965 I llm_load_print_meta: n_vocab          = 256000
0.00.232.965 I llm_load_print_meta: n_merges         = 0
0.00.232.966 I llm_load_print_meta: vocab_only       = 0
0.00.232.967 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.967 I llm_load_print_meta: n_embd           = 2048
0.00.232.968 I llm_load_print_meta: n_layer          = 18
0.00.232.981 I llm_load_print_meta: n_head           = 8
0.00.232.983 I llm_load_print_meta: n_head_kv        = 1
0.00.232.983 I llm_load_print_meta: n_rot            = 256
0.00.232.983 I llm_load_print_meta: n_swa            = 0
0.00.232.984 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.984 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.985 I llm_load_print_meta: n_gqa            = 8
0.00.232.986 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.987 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.988 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.989 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.989 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.989 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.990 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.991 I llm_load_print_meta: n_ff             = 16384
0.00.232.991 I llm_load_print_meta: n_expert         = 0
0.00.232.991 I llm_load_print_meta: n_expert_used    = 0
0.00.232.992 I llm_load_print_meta: causal attn      = 1
0.00.232.992 I llm_load_print_meta: pooling type     = 0
0.00.232.992 I llm_load_print_meta: rope type        = 2
0.00.232.993 I llm_load_print_meta: rope scaling     = linear
0.00.232.995 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.996 I llm_load_print_meta: freq_scale_train = 1
0.00.232.996 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.996 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.996 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.997 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.997 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.997 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.998 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.998 I llm_load_print_meta: model type       = 2B
0.00.232.999 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.999 I llm_load_print_meta: model params     = 2.51 B
0.00.233.000 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.000 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.001 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.001 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.002 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.002 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.002 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.003 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.003 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.004 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.004 I llm_load_print_meta: max token length = 93
0.00.233.030 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.303.143 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.303.151 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.308.159 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.165 I llama_new_context_with_model: n_batch    = 2048
0.00.308.166 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.166 I llama_new_context_with_model: flash_attn = 0
0.00.308.168 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.169 I llama_new_context_with_model: freq_scale = 1
0.00.337.748 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.337.762 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.337.853 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.338.723 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.338.731 I llama_new_context_with_model: graph nodes  = 601
0.00.338.732 I llama_new_context_with_model: graph splits = 1
0.00.338.734 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.877 I main: llama threadpool init, n_threads = 4
0.00.433.888 I 
0.00.433.960 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.963 I 
0.00.433.992 I sampler seed: 3079922326
0.00.434.001 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.004 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.434.005 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.005 I 
 increasements? [end of text]


0.00.737.248 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8250.83 tokens per second)
0.00.737.250 I llama_perf_context_print:        load time =     432.01 ms
0.00.737.252 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.737.253 I llama_perf_context_print:        eval time =     300.28 ms /     4 runs   (   75.07 ms per token,    13.32 tokens per second)
0.00.737.254 I llama_perf_context_print:       total time =     303.38 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.466s
user	0m22.132s
sys	0m9.395s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3827 (7691654c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32250.67 ms
main:    total time = 32250.67 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.553 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.861 I main: load the model and apply lora adapter, if any
0.00.022.028 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.075 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.084 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.090 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.091 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.095 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.095 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.097 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.097 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.098 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.101 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.102 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.102 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.103 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.103 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.597 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.223 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.018 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.024 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.024 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.025 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.026 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.026 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.027 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.029 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.030 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.031 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.031 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.032 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.036 I llama_model_loader: - type  f32:   37 tensors
0.00.133.038 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.039 I llama_model_loader: - type q6_K:   19 tensors
0.00.197.400 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.945 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.592 I llm_load_vocab: special tokens cache size = 5
0.00.229.695 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.708 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.709 I llm_load_print_meta: arch             = gemma
0.00.229.710 I llm_load_print_meta: vocab type       = SPM
0.00.229.711 I llm_load_print_meta: n_vocab          = 256000
0.00.229.711 I llm_load_print_meta: n_merges         = 0
0.00.229.712 I llm_load_print_meta: vocab_only       = 0
0.00.229.712 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.712 I llm_load_print_meta: n_embd           = 2048
0.00.229.713 I llm_load_print_meta: n_layer          = 18
0.00.229.724 I llm_load_print_meta: n_head           = 8
0.00.229.726 I llm_load_print_meta: n_head_kv        = 1
0.00.229.727 I llm_load_print_meta: n_rot            = 256
0.00.229.727 I llm_load_print_meta: n_swa            = 0
0.00.229.727 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.727 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.729 I llm_load_print_meta: n_gqa            = 8
0.00.229.730 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.731 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.732 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.733 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.734 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.737 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.737 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.739 I llm_load_print_meta: n_ff             = 16384
0.00.229.739 I llm_load_print_meta: n_expert         = 0
0.00.229.739 I llm_load_print_meta: n_expert_used    = 0
0.00.229.740 I llm_load_print_meta: causal attn      = 1
0.00.229.740 I llm_load_print_meta: pooling type     = 0
0.00.229.740 I llm_load_print_meta: rope type        = 2
0.00.229.741 I llm_load_print_meta: rope scaling     = linear
0.00.229.742 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.743 I llm_load_print_meta: freq_scale_train = 1
0.00.229.743 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.743 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.744 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.744 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.745 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.747 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.747 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.747 I llm_load_print_meta: model type       = 2B
0.00.229.748 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.749 I llm_load_print_meta: model params     = 2.51 B
0.00.229.749 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.750 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.750 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.750 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.751 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.751 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.751 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.751 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.752 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.753 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.754 I llm_load_print_meta: max token length = 93
0.00.229.777 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.897 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.904 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.905 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.905 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.906 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.906 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.292.868 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.874 I llama_new_context_with_model: n_batch    = 2048
0.00.292.875 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.875 I llama_new_context_with_model: flash_attn = 0
0.00.292.878 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.879 I llama_new_context_with_model: freq_scale = 1
0.00.322.422 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.437 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.526 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.374 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.381 I llama_new_context_with_model: graph nodes  = 601
0.00.323.381 I llama_new_context_with_model: graph splits = 1
0.00.323.383 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.247 I main: llama threadpool init, n_threads = 4
0.00.405.260 I 
0.00.405.332 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.335 I 
0.00.405.364 I sampler seed: 598353728
0.00.405.374 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.377 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.378 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.378 I 
 encompases the concept of a person's consciousness, identity, and relationships. It is a complex and multifaceted construct that encompasses various philosophical perspectives and disciplines.



0.01.998.932 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6877.87 tokens per second)
0.01.998.935 I llama_perf_context_print:        load time =     403.37 ms
0.01.998.936 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.998.937 I llama_perf_context_print:        eval time =    1575.95 ms /    32 runs   (   49.25 ms per token,    20.31 tokens per second)
0.01.998.938 I llama_perf_context_print:       total time =    1593.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3827 (7691654c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32045.78 ms
main:    total time = 32045.78 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.568 I build: 3827 (7691654c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.021.941 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.953 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.961 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.961 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.966 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.966 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.967 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.967 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.968 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.968 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.974 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.974 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.975 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.976 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.978 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.481 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.399 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.201 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.202 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.202 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.203 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.204 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.204 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.207 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.208 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.211 I llama_model_loader: - type  f32:   37 tensors
0.00.133.214 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.215 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.257 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.421 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.151 I llm_load_vocab: special tokens cache size = 5
0.00.231.396 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.411 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.411 I llm_load_print_meta: arch             = gemma
0.00.231.412 I llm_load_print_meta: vocab type       = SPM
0.00.231.412 I llm_load_print_meta: n_vocab          = 256000
0.00.231.413 I llm_load_print_meta: n_merges         = 0
0.00.231.413 I llm_load_print_meta: vocab_only       = 0
0.00.231.413 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.414 I llm_load_print_meta: n_embd           = 2048
0.00.231.414 I llm_load_print_meta: n_layer          = 18
0.00.231.426 I llm_load_print_meta: n_head           = 8
0.00.231.427 I llm_load_print_meta: n_head_kv        = 1
0.00.231.427 I llm_load_print_meta: n_rot            = 256
0.00.231.427 I llm_load_print_meta: n_swa            = 0
0.00.231.428 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.428 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.429 I llm_load_print_meta: n_gqa            = 8
0.00.231.430 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.432 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.433 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.434 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.434 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.434 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.435 I llm_load_print_meta: n_ff             = 16384
0.00.231.435 I llm_load_print_meta: n_expert         = 0
0.00.231.436 I llm_load_print_meta: n_expert_used    = 0
0.00.231.436 I llm_load_print_meta: causal attn      = 1
0.00.231.436 I llm_load_print_meta: pooling type     = 0
0.00.231.437 I llm_load_print_meta: rope type        = 2
0.00.231.437 I llm_load_print_meta: rope scaling     = linear
0.00.231.439 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.440 I llm_load_print_meta: freq_scale_train = 1
0.00.231.440 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.441 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.441 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.441 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.441 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.442 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.442 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.443 I llm_load_print_meta: model type       = 2B
0.00.231.443 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.231.444 I llm_load_print_meta: model params     = 2.51 B
0.00.231.445 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.231.445 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.446 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.446 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.446 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.446 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.447 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.447 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.447 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.448 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.448 I llm_load_print_meta: max token length = 93
0.00.231.470 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.304 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.294.378 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.384 I llama_new_context_with_model: n_batch    = 2048
0.00.294.384 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.385 I llama_new_context_with_model: flash_attn = 0
0.00.294.387 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.388 I llama_new_context_with_model: freq_scale = 1
0.00.324.542 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.558 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.324.647 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.485 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.492 I llama_new_context_with_model: graph nodes  = 601
0.00.325.492 I llama_new_context_with_model: graph splits = 1
0.00.325.494 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.693 I main: llama threadpool init, n_threads = 4
0.00.405.704 I 
0.00.405.775 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.778 I 
0.00.405.808 I sampler seed: 2497595723
0.00.405.818 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.820 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.821 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.821 I 
 seconded in the article. 

**Title: "Exploring the Intersection of Artificial Intelligence and Human Creativity"**

**Abstract:**

The rapid advancement of

0.02.002.233 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6966.43 tokens per second)
0.02.002.236 I llama_perf_context_print:        load time =     403.77 ms
0.02.002.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.002.240 I llama_perf_context_print:        eval time =    1579.25 ms /    32 runs   (   49.35 ms per token,    20.26 tokens per second)
0.02.002.240 I llama_perf_context_print:       total time =    1596.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.439s
user	8m14.441s
sys	0m6.912s
