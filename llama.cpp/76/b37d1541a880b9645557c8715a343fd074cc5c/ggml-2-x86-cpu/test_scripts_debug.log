+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.681 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.887 I main: llama backend init
0.00.002.826 I main: load the model and apply lora adapter, if any
0.00.025.214 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.403 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.493 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.504 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.505 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.510 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.514 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.515 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.516 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.517 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.517 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.524 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.526 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.527 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.527 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.528 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.475 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.526 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.525 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.534 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.535 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.536 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.537 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.538 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.538 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.542 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.543 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.544 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.544 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.194.545 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.553 I llama_model_loader: - type  f32:   37 tensors
0.00.194.557 I llama_model_loader: - type q8_0:  127 tensors
0.00.325.307 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.351.897 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.352.921 I llm_load_vocab: special tokens cache size = 5
0.00.410.641 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.410.698 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.410.699 I llm_load_print_meta: arch             = gemma
0.00.410.700 I llm_load_print_meta: vocab type       = SPM
0.00.410.701 I llm_load_print_meta: n_vocab          = 256000
0.00.410.704 I llm_load_print_meta: n_merges         = 0
0.00.410.705 I llm_load_print_meta: vocab_only       = 0
0.00.410.706 I llm_load_print_meta: n_ctx_train      = 8192
0.00.410.706 I llm_load_print_meta: n_embd           = 2048
0.00.410.706 I llm_load_print_meta: n_layer          = 18
0.00.410.769 I llm_load_print_meta: n_head           = 8
0.00.410.776 I llm_load_print_meta: n_head_kv        = 1
0.00.410.776 I llm_load_print_meta: n_rot            = 256
0.00.410.777 I llm_load_print_meta: n_swa            = 0
0.00.410.777 I llm_load_print_meta: n_embd_head_k    = 256
0.00.410.777 I llm_load_print_meta: n_embd_head_v    = 256
0.00.410.782 I llm_load_print_meta: n_gqa            = 8
0.00.410.786 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.410.806 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.410.809 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.410.810 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.410.811 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.410.811 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.410.812 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.410.818 I llm_load_print_meta: n_ff             = 16384
0.00.410.818 I llm_load_print_meta: n_expert         = 0
0.00.410.819 I llm_load_print_meta: n_expert_used    = 0
0.00.410.819 I llm_load_print_meta: causal attn      = 1
0.00.410.820 I llm_load_print_meta: pooling type     = 0
0.00.410.833 I llm_load_print_meta: rope type        = 2
0.00.410.834 I llm_load_print_meta: rope scaling     = linear
0.00.410.835 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.410.836 I llm_load_print_meta: freq_scale_train = 1
0.00.410.836 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.410.845 I llm_load_print_meta: rope_finetuned   = unknown
0.00.410.853 I llm_load_print_meta: ssm_d_conv       = 0
0.00.410.853 I llm_load_print_meta: ssm_d_inner      = 0
0.00.410.854 I llm_load_print_meta: ssm_d_state      = 0
0.00.410.855 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.410.855 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.410.856 I llm_load_print_meta: model type       = 2B
0.00.410.857 I llm_load_print_meta: model ftype      = Q8_0
0.00.410.858 I llm_load_print_meta: model params     = 2.51 B
0.00.410.859 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.410.859 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.410.861 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.410.861 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.410.861 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.410.862 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.410.863 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.410.864 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.410.870 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.410.872 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.410.872 I llm_load_print_meta: max token length = 93
0.00.411.046 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.510.137 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.510.149 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.510.150 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.510.151 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.510.151 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.510.152 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.515.871 I llama_new_context_with_model: n_ctx      = 8192
0.00.515.878 I llama_new_context_with_model: n_batch    = 2048
0.00.515.878 I llama_new_context_with_model: n_ubatch   = 512
0.00.515.879 I llama_new_context_with_model: flash_attn = 0
0.00.515.882 I llama_new_context_with_model: freq_base  = 10000.0
0.00.515.883 I llama_new_context_with_model: freq_scale = 1
0.00.545.497 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.545.541 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.545.650 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.547.039 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.547.045 I llama_new_context_with_model: graph nodes  = 601
0.00.547.046 I llama_new_context_with_model: graph splits = 1
0.00.547.062 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.160.372 I main: llama threadpool init, n_threads = 4
0.01.160.383 I 
0.01.160.476 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.160.480 I 
0.01.160.650 I sampler seed: 751407185
0.01.160.660 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.160.665 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.160.666 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.160.666 I 
 increasively.

I am unable to access the requested information. Please check your internet connection and try again later. [end of text]


0.11.119.071 I llama_perf_sampler_print:    sampling time =      36.87 ms /    25 runs   (    1.47 ms per token,   678.15 tokens per second)
0.11.119.075 I llama_perf_context_print:        load time =    1157.47 ms
0.11.119.076 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.119.078 I llama_perf_context_print:        eval time =    9897.10 ms /    24 runs   (  412.38 ms per token,     2.42 tokens per second)
0.11.119.091 I llama_perf_context_print:       total time =    9958.71 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.637 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.763 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.858 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.872 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.874 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.878 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.881 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.882 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.883 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.884 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.885 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.891 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.892 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.894 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.902 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.911 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.147 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.435 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.351 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.358 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.358 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.359 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.360 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.361 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.362 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.365 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.366 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.367 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.368 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.192.369 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.376 I llama_model_loader: - type  f32:   37 tensors
0.00.192.382 I llama_model_loader: - type q8_0:  127 tensors
0.00.330.211 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.353.445 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.354.442 I llm_load_vocab: special tokens cache size = 5
0.00.422.465 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.422.524 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.422.525 I llm_load_print_meta: arch             = gemma
0.00.422.526 I llm_load_print_meta: vocab type       = SPM
0.00.422.527 I llm_load_print_meta: n_vocab          = 256000
0.00.422.530 I llm_load_print_meta: n_merges         = 0
0.00.422.530 I llm_load_print_meta: vocab_only       = 0
0.00.422.530 I llm_load_print_meta: n_ctx_train      = 8192
0.00.422.531 I llm_load_print_meta: n_embd           = 2048
0.00.422.531 I llm_load_print_meta: n_layer          = 18
0.00.422.593 I llm_load_print_meta: n_head           = 8
0.00.422.600 I llm_load_print_meta: n_head_kv        = 1
0.00.422.601 I llm_load_print_meta: n_rot            = 256
0.00.422.601 I llm_load_print_meta: n_swa            = 0
0.00.422.601 I llm_load_print_meta: n_embd_head_k    = 256
0.00.422.602 I llm_load_print_meta: n_embd_head_v    = 256
0.00.422.606 I llm_load_print_meta: n_gqa            = 8
0.00.422.610 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.422.615 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.422.616 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.422.618 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.422.618 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.422.618 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.422.619 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.422.625 I llm_load_print_meta: n_ff             = 16384
0.00.422.626 I llm_load_print_meta: n_expert         = 0
0.00.422.626 I llm_load_print_meta: n_expert_used    = 0
0.00.422.627 I llm_load_print_meta: causal attn      = 1
0.00.422.627 I llm_load_print_meta: pooling type     = 0
0.00.422.627 I llm_load_print_meta: rope type        = 2
0.00.422.627 I llm_load_print_meta: rope scaling     = linear
0.00.422.629 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.422.630 I llm_load_print_meta: freq_scale_train = 1
0.00.422.630 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.422.630 I llm_load_print_meta: rope_finetuned   = unknown
0.00.422.631 I llm_load_print_meta: ssm_d_conv       = 0
0.00.422.631 I llm_load_print_meta: ssm_d_inner      = 0
0.00.422.631 I llm_load_print_meta: ssm_d_state      = 0
0.00.422.631 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.422.632 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.422.632 I llm_load_print_meta: model type       = 2B
0.00.422.633 I llm_load_print_meta: model ftype      = Q8_0
0.00.422.634 I llm_load_print_meta: model params     = 2.51 B
0.00.422.635 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.422.635 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.422.635 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.422.636 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.422.636 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.422.636 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.422.637 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.422.637 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.422.643 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.422.644 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.422.644 I llm_load_print_meta: max token length = 93
0.00.422.818 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.517.212 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.522.765 I llama_new_context_with_model: n_ctx      = 8192
0.00.522.772 I llama_new_context_with_model: n_batch    = 2048
0.00.522.773 I llama_new_context_with_model: n_ubatch   = 512
0.00.522.773 I llama_new_context_with_model: flash_attn = 0
0.00.522.776 I llama_new_context_with_model: freq_base  = 10000.0
0.00.522.777 I llama_new_context_with_model: freq_scale = 1
0.00.552.352 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.552.396 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.552.504 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.553.929 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.553.935 I llama_new_context_with_model: graph nodes  = 601
0.00.553.936 I llama_new_context_with_model: graph splits = 1
0.00.553.951 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.174.006 I main: llama threadpool init, n_threads = 4
0.01.174.017 I 
0.01.174.109 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.174.109 I 
0.01.174.280 I sampler seed: 2737645352
0.01.174.291 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.174.296 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.174.297 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.174.297 I 
 increasities. [end of text]


0.02.859.175 I llama_perf_sampler_print:    sampling time =       6.26 ms /     5 runs   (    1.25 ms per token,   798.34 tokens per second)
0.02.859.188 I llama_perf_context_print:        load time =    1171.13 ms
0.02.859.190 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.859.192 I llama_perf_context_print:        eval time =    1673.14 ms /     4 runs   (  418.29 ms per token,     2.39 tokens per second)
0.02.859.193 I llama_perf_context_print:       total time =    1685.18 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.627 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.793 I main: load the model and apply lora adapter, if any
0.00.030.223 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.030.435 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.030.532 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.546 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.547 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.552 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.556 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.557 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.559 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.560 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.565 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.574 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.576 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.577 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.581 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.030.582 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.098.868 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.192.932 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.212.021 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.212.030 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.212.031 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.212.032 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.212.033 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.212.034 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.212.035 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.212.038 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.212.039 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.212.040 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.212.041 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.212.042 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.212.051 I llama_model_loader: - type  f32:   37 tensors
0.00.212.054 I llama_model_loader: - type q8_0:  127 tensors
0.00.366.268 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.391.014 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.392.102 I llm_load_vocab: special tokens cache size = 5
0.00.456.743 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.456.805 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.456.810 I llm_load_print_meta: arch             = gemma
0.00.456.810 I llm_load_print_meta: vocab type       = SPM
0.00.456.811 I llm_load_print_meta: n_vocab          = 256000
0.00.456.814 I llm_load_print_meta: n_merges         = 0
0.00.456.814 I llm_load_print_meta: vocab_only       = 0
0.00.456.815 I llm_load_print_meta: n_ctx_train      = 8192
0.00.456.815 I llm_load_print_meta: n_embd           = 2048
0.00.456.816 I llm_load_print_meta: n_layer          = 18
0.00.456.886 I llm_load_print_meta: n_head           = 8
0.00.456.896 I llm_load_print_meta: n_head_kv        = 1
0.00.456.897 I llm_load_print_meta: n_rot            = 256
0.00.456.898 I llm_load_print_meta: n_swa            = 0
0.00.456.899 I llm_load_print_meta: n_embd_head_k    = 256
0.00.456.899 I llm_load_print_meta: n_embd_head_v    = 256
0.00.456.904 I llm_load_print_meta: n_gqa            = 8
0.00.456.909 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.456.915 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.456.917 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.456.918 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.456.919 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.456.920 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.456.921 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.456.928 I llm_load_print_meta: n_ff             = 16384
0.00.456.929 I llm_load_print_meta: n_expert         = 0
0.00.456.930 I llm_load_print_meta: n_expert_used    = 0
0.00.456.931 I llm_load_print_meta: causal attn      = 1
0.00.456.932 I llm_load_print_meta: pooling type     = 0
0.00.456.933 I llm_load_print_meta: rope type        = 2
0.00.456.934 I llm_load_print_meta: rope scaling     = linear
0.00.456.936 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.456.937 I llm_load_print_meta: freq_scale_train = 1
0.00.456.937 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.456.938 I llm_load_print_meta: rope_finetuned   = unknown
0.00.456.942 I llm_load_print_meta: ssm_d_conv       = 0
0.00.456.942 I llm_load_print_meta: ssm_d_inner      = 0
0.00.456.943 I llm_load_print_meta: ssm_d_state      = 0
0.00.456.943 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.456.944 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.456.944 I llm_load_print_meta: model type       = 2B
0.00.456.946 I llm_load_print_meta: model ftype      = Q8_0
0.00.456.947 I llm_load_print_meta: model params     = 2.51 B
0.00.456.948 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.456.948 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.456.949 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.456.950 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.456.950 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.456.951 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.456.953 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.456.953 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.456.962 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.456.966 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.456.967 I llm_load_print_meta: max token length = 93
0.00.457.144 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.539.662 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.539.670 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.539.671 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.539.672 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.539.673 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.539.673 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.546.540 I llama_new_context_with_model: n_ctx      = 8192
0.00.546.547 I llama_new_context_with_model: n_batch    = 2048
0.00.546.548 I llama_new_context_with_model: n_ubatch   = 512
0.00.546.548 I llama_new_context_with_model: flash_attn = 0
0.00.546.552 I llama_new_context_with_model: freq_base  = 10000.0
0.00.546.553 I llama_new_context_with_model: freq_scale = 1
0.00.577.142 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.577.183 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.577.292 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.578.702 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.578.709 I llama_new_context_with_model: graph nodes  = 601
0.00.578.709 I llama_new_context_with_model: graph splits = 1
0.00.578.725 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.200.353 I main: llama threadpool init, n_threads = 4
0.01.200.366 I 
0.01.200.458 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.200.461 I 
0.01.200.629 I sampler seed: 2418529102
0.01.200.640 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.200.644 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.200.645 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.200.645 I 
 secon.

I am unable to generate the requested text as it contains potentially harmful or sensitive information. [end of text]


0.10.063.335 I llama_perf_sampler_print:    sampling time =      32.52 ms /    22 runs   (    1.48 ms per token,   676.57 tokens per second)
0.10.063.349 I llama_perf_context_print:        load time =    1197.48 ms
0.10.063.352 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.063.354 I llama_perf_context_print:        eval time =    8807.80 ms /    21 runs   (  419.42 ms per token,     2.38 tokens per second)
0.10.063.355 I llama_perf_context_print:       total time =    8862.99 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.627 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.002.766 I main: load the model and apply lora adapter, if any
0.00.024.654 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.836 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.945 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.956 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.957 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.962 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.963 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.964 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.965 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.966 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.968 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.975 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.978 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.979 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.980 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.981 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.237 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.161 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.703 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.712 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.713 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.714 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.715 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.716 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.717 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.720 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.721 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.722 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.722 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.193.723 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.731 I llama_model_loader: - type  f32:   37 tensors
0.00.193.735 I llama_model_loader: - type q8_0:  127 tensors
0.00.340.785 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.368.589 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.369.598 I llm_load_vocab: special tokens cache size = 5
0.00.427.365 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.427.427 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.427.428 I llm_load_print_meta: arch             = gemma
0.00.427.429 I llm_load_print_meta: vocab type       = SPM
0.00.427.430 I llm_load_print_meta: n_vocab          = 256000
0.00.427.433 I llm_load_print_meta: n_merges         = 0
0.00.427.433 I llm_load_print_meta: vocab_only       = 0
0.00.427.434 I llm_load_print_meta: n_ctx_train      = 8192
0.00.427.434 I llm_load_print_meta: n_embd           = 2048
0.00.427.434 I llm_load_print_meta: n_layer          = 18
0.00.427.495 I llm_load_print_meta: n_head           = 8
0.00.427.502 I llm_load_print_meta: n_head_kv        = 1
0.00.427.502 I llm_load_print_meta: n_rot            = 256
0.00.427.503 I llm_load_print_meta: n_swa            = 0
0.00.427.503 I llm_load_print_meta: n_embd_head_k    = 256
0.00.427.503 I llm_load_print_meta: n_embd_head_v    = 256
0.00.427.508 I llm_load_print_meta: n_gqa            = 8
0.00.427.512 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.427.517 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.427.518 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.427.519 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.427.520 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.427.520 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.427.521 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.427.527 I llm_load_print_meta: n_ff             = 16384
0.00.427.527 I llm_load_print_meta: n_expert         = 0
0.00.427.528 I llm_load_print_meta: n_expert_used    = 0
0.00.427.528 I llm_load_print_meta: causal attn      = 1
0.00.427.528 I llm_load_print_meta: pooling type     = 0
0.00.427.528 I llm_load_print_meta: rope type        = 2
0.00.427.529 I llm_load_print_meta: rope scaling     = linear
0.00.427.531 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.427.532 I llm_load_print_meta: freq_scale_train = 1
0.00.427.532 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.427.532 I llm_load_print_meta: rope_finetuned   = unknown
0.00.427.533 I llm_load_print_meta: ssm_d_conv       = 0
0.00.427.533 I llm_load_print_meta: ssm_d_inner      = 0
0.00.427.533 I llm_load_print_meta: ssm_d_state      = 0
0.00.427.534 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.427.534 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.427.534 I llm_load_print_meta: model type       = 2B
0.00.427.535 I llm_load_print_meta: model ftype      = Q8_0
0.00.427.536 I llm_load_print_meta: model params     = 2.51 B
0.00.427.536 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.427.537 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.427.537 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.427.538 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.427.538 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.427.538 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.427.539 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.427.540 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.427.545 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.427.547 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.427.548 I llm_load_print_meta: max token length = 93
0.00.427.726 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.498.800 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.498.809 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.505.347 I llama_new_context_with_model: n_ctx      = 8192
0.00.505.354 I llama_new_context_with_model: n_batch    = 2048
0.00.505.355 I llama_new_context_with_model: n_ubatch   = 512
0.00.505.355 I llama_new_context_with_model: flash_attn = 0
0.00.505.358 I llama_new_context_with_model: freq_base  = 10000.0
0.00.505.359 I llama_new_context_with_model: freq_scale = 1
0.00.534.481 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.534.523 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.534.632 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.536.028 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.536.035 I llama_new_context_with_model: graph nodes  = 601
0.00.536.036 I llama_new_context_with_model: graph splits = 1
0.00.536.051 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.149.535 I main: llama threadpool init, n_threads = 4
0.01.149.546 I 
0.01.149.639 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.149.643 I 
0.01.149.814 I sampler seed: 4006941446
0.01.149.824 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.149.830 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.149.830 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.149.831 I 
 increadibly!

I'm so excited to finally start this project!

I've been working on this for months, and I'm finally ready

0.14.456.420 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.28 tokens per second)
0.14.456.424 I llama_perf_context_print:        load time =    1146.67 ms
0.14.456.425 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.456.426 I llama_perf_context_print:        eval time =   13225.18 ms /    32 runs   (  413.29 ms per token,     2.42 tokens per second)
0.14.456.441 I llama_perf_context_print:       total time =   13306.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m48.116s
user	2m27.285s
sys	0m9.468s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3864 (76b37d15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199441.80 ms
main:    total time = 199441.80 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.637 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.826 I main: llama backend init
0.00.002.770 I main: load the model and apply lora adapter, if any
0.00.024.679 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.854 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.938 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.948 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.949 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.953 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.954 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.955 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.957 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.958 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.961 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.966 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.967 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.968 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.969 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.970 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.361 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.058 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.196.076 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.196.085 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.196.086 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.196.086 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.196.087 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.196.089 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.196.089 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.196.092 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.196.093 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.196.094 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.196.095 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.196.096 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.196.104 I llama_model_loader: - type  f32:   37 tensors
0.00.196.109 I llama_model_loader: - type q4_K:  108 tensors
0.00.196.110 I llama_model_loader: - type q6_K:   19 tensors
0.00.353.590 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.379.936 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.380.936 I llm_load_vocab: special tokens cache size = 5
0.00.450.510 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.450.567 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.450.568 I llm_load_print_meta: arch             = gemma
0.00.450.569 I llm_load_print_meta: vocab type       = SPM
0.00.450.570 I llm_load_print_meta: n_vocab          = 256000
0.00.450.572 I llm_load_print_meta: n_merges         = 0
0.00.450.573 I llm_load_print_meta: vocab_only       = 0
0.00.450.573 I llm_load_print_meta: n_ctx_train      = 8192
0.00.450.573 I llm_load_print_meta: n_embd           = 2048
0.00.450.574 I llm_load_print_meta: n_layer          = 18
0.00.450.637 I llm_load_print_meta: n_head           = 8
0.00.450.644 I llm_load_print_meta: n_head_kv        = 1
0.00.450.645 I llm_load_print_meta: n_rot            = 256
0.00.450.646 I llm_load_print_meta: n_swa            = 0
0.00.450.646 I llm_load_print_meta: n_embd_head_k    = 256
0.00.450.647 I llm_load_print_meta: n_embd_head_v    = 256
0.00.450.651 I llm_load_print_meta: n_gqa            = 8
0.00.450.655 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.450.660 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.450.662 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.450.664 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.450.664 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.450.674 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.450.675 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.450.681 I llm_load_print_meta: n_ff             = 16384
0.00.450.681 I llm_load_print_meta: n_expert         = 0
0.00.450.682 I llm_load_print_meta: n_expert_used    = 0
0.00.450.683 I llm_load_print_meta: causal attn      = 1
0.00.450.683 I llm_load_print_meta: pooling type     = 0
0.00.450.683 I llm_load_print_meta: rope type        = 2
0.00.450.684 I llm_load_print_meta: rope scaling     = linear
0.00.450.686 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.450.686 I llm_load_print_meta: freq_scale_train = 1
0.00.450.687 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.450.688 I llm_load_print_meta: rope_finetuned   = unknown
0.00.450.688 I llm_load_print_meta: ssm_d_conv       = 0
0.00.450.688 I llm_load_print_meta: ssm_d_inner      = 0
0.00.450.689 I llm_load_print_meta: ssm_d_state      = 0
0.00.450.689 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.450.693 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.450.694 I llm_load_print_meta: model type       = 2B
0.00.450.696 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.450.696 I llm_load_print_meta: model params     = 2.51 B
0.00.450.697 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.450.697 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.450.698 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.450.699 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.450.703 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.450.703 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.450.704 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.450.704 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.450.710 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.450.711 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.450.711 I llm_load_print_meta: max token length = 93
0.00.450.886 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.510.386 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.510.396 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.510.397 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.510.397 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.510.398 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.510.398 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.516.059 I llama_new_context_with_model: n_ctx      = 8192
0.00.516.065 I llama_new_context_with_model: n_batch    = 2048
0.00.516.066 I llama_new_context_with_model: n_ubatch   = 512
0.00.516.067 I llama_new_context_with_model: flash_attn = 0
0.00.516.069 I llama_new_context_with_model: freq_base  = 10000.0
0.00.516.070 I llama_new_context_with_model: freq_scale = 1
0.00.544.935 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.544.977 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.545.087 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.546.478 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.546.485 I llama_new_context_with_model: graph nodes  = 601
0.00.546.485 I llama_new_context_with_model: graph splits = 1
0.00.546.500 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.125.258 I main: llama threadpool init, n_threads = 4
0.01.125.270 I 
0.01.125.361 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.125.365 I 
0.01.125.536 I sampler seed: 1384856064
0.01.125.546 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.125.553 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.125.554 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.125.554 I 
 seconally with the following sentence: "It is not possible to truly understand the complexities of human nature without acknowledging the role of culture and society in shaping our experiences

0.12.018.426 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.15 tokens per second)
0.12.018.429 I llama_perf_context_print:        load time =    1122.41 ms
0.12.018.430 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.018.432 I llama_perf_context_print:        eval time =   10811.46 ms /    32 runs   (  337.86 ms per token,     2.96 tokens per second)
0.12.018.433 I llama_perf_context_print:       total time =   10893.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3864 (76b37d15)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199191.17 ms
main:    total time = 199191.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.618 I build: 3864 (76b37d15) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.807 I main: llama backend init
0.00.002.758 I main: load the model and apply lora adapter, if any
0.00.024.559 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.653 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.667 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.668 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.672 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.674 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.675 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.677 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.678 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.679 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.685 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.685 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.686 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.687 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.688 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.096 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.115 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.122 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.123 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.124 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.125 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.126 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.127 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.130 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.131 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.139 I llama_model_loader: - type  f32:   37 tensors
0.00.195.143 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.144 I llama_model_loader: - type q6_K:   19 tensors
0.00.332.027 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.354.432 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.355.402 I llm_load_vocab: special tokens cache size = 5
0.00.412.779 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.412.838 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.412.842 I llm_load_print_meta: arch             = gemma
0.00.412.843 I llm_load_print_meta: vocab type       = SPM
0.00.412.844 I llm_load_print_meta: n_vocab          = 256000
0.00.412.847 I llm_load_print_meta: n_merges         = 0
0.00.412.847 I llm_load_print_meta: vocab_only       = 0
0.00.412.848 I llm_load_print_meta: n_ctx_train      = 8192
0.00.412.848 I llm_load_print_meta: n_embd           = 2048
0.00.412.848 I llm_load_print_meta: n_layer          = 18
0.00.412.911 I llm_load_print_meta: n_head           = 8
0.00.412.921 I llm_load_print_meta: n_head_kv        = 1
0.00.412.921 I llm_load_print_meta: n_rot            = 256
0.00.412.922 I llm_load_print_meta: n_swa            = 0
0.00.412.922 I llm_load_print_meta: n_embd_head_k    = 256
0.00.412.922 I llm_load_print_meta: n_embd_head_v    = 256
0.00.412.928 I llm_load_print_meta: n_gqa            = 8
0.00.412.932 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.412.937 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.412.939 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.412.940 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.412.940 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.412.941 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.412.942 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.412.948 I llm_load_print_meta: n_ff             = 16384
0.00.412.949 I llm_load_print_meta: n_expert         = 0
0.00.412.958 I llm_load_print_meta: n_expert_used    = 0
0.00.412.959 I llm_load_print_meta: causal attn      = 1
0.00.412.959 I llm_load_print_meta: pooling type     = 0
0.00.412.959 I llm_load_print_meta: rope type        = 2
0.00.412.960 I llm_load_print_meta: rope scaling     = linear
0.00.412.961 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.412.962 I llm_load_print_meta: freq_scale_train = 1
0.00.412.962 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.412.963 I llm_load_print_meta: rope_finetuned   = unknown
0.00.412.963 I llm_load_print_meta: ssm_d_conv       = 0
0.00.412.964 I llm_load_print_meta: ssm_d_inner      = 0
0.00.412.973 I llm_load_print_meta: ssm_d_state      = 0
0.00.412.973 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.412.974 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.412.984 I llm_load_print_meta: model type       = 2B
0.00.412.985 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.412.986 I llm_load_print_meta: model params     = 2.51 B
0.00.412.986 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.412.991 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.412.992 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.412.992 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.412.993 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.412.997 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.412.998 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.412.999 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.413.005 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.413.006 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.413.009 I llm_load_print_meta: max token length = 93
0.00.413.182 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.471.886 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.477.360 I llama_new_context_with_model: n_ctx      = 8192
0.00.477.368 I llama_new_context_with_model: n_batch    = 2048
0.00.477.368 I llama_new_context_with_model: n_ubatch   = 512
0.00.477.369 I llama_new_context_with_model: flash_attn = 0
0.00.477.371 I llama_new_context_with_model: freq_base  = 10000.0
0.00.477.371 I llama_new_context_with_model: freq_scale = 1
0.00.506.444 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.506.491 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.506.602 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.507.963 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.507.969 I llama_new_context_with_model: graph nodes  = 601
0.00.507.969 I llama_new_context_with_model: graph splits = 1
0.00.507.986 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.088.293 I main: llama threadpool init, n_threads = 4
0.01.088.305 I 
0.01.088.399 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.088.403 I 
0.01.088.576 I sampler seed: 13573422
0.01.088.588 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.088.594 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.088.595 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.088.595 I 
 increamically.

The prompt asks for a response that is humorous and engaging.

What do you call a group of people who love to complain?

A

0.12.104.564 I llama_perf_sampler_print:    sampling time =      49.26 ms /    33 runs   (    1.49 ms per token,   669.87 tokens per second)
0.12.104.577 I llama_perf_context_print:        load time =    1085.46 ms
0.12.104.579 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.104.581 I llama_perf_context_print:        eval time =   10934.50 ms /    32 runs   (  341.70 ms per token,     2.93 tokens per second)
0.12.104.582 I llama_perf_context_print:       total time =   11016.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.605s
user	50m11.118s
sys	0m6.457s
