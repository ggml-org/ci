+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.680 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.879 I main: llama backend init
0.00.001.160 I main: load the model and apply lora adapter, if any
0.00.024.128 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.142 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.240 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.252 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.254 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.259 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.261 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.262 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.263 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.264 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.265 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.274 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.277 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.279 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.280 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.282 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.220 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.771 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.273.005 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.273.017 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.273.018 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.273.019 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.273.020 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.273.022 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.273.023 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.273.027 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.273.030 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.273.031 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.273.032 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.273.034 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.273.042 I llama_model_loader: - type  f32:   37 tensors
0.00.273.044 I llama_model_loader: - type q8_0:  127 tensors
0.00.465.899 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.535.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.536.306 I llm_load_vocab: special tokens cache size = 5
0.00.631.608 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.682 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.683 I llm_load_print_meta: arch             = gemma
0.00.631.684 I llm_load_print_meta: vocab type       = SPM
0.00.631.685 I llm_load_print_meta: n_vocab          = 256000
0.00.631.687 I llm_load_print_meta: n_merges         = 0
0.00.631.688 I llm_load_print_meta: vocab_only       = 0
0.00.631.688 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.689 I llm_load_print_meta: n_embd           = 2048
0.00.631.689 I llm_load_print_meta: n_layer          = 18
0.00.631.756 I llm_load_print_meta: n_head           = 8
0.00.631.764 I llm_load_print_meta: n_head_kv        = 1
0.00.631.764 I llm_load_print_meta: n_rot            = 256
0.00.631.765 I llm_load_print_meta: n_swa            = 0
0.00.631.765 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.766 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.771 I llm_load_print_meta: n_gqa            = 8
0.00.631.776 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.781 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.783 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.784 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.785 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.786 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.787 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.794 I llm_load_print_meta: n_ff             = 16384
0.00.631.795 I llm_load_print_meta: n_expert         = 0
0.00.631.795 I llm_load_print_meta: n_expert_used    = 0
0.00.631.797 I llm_load_print_meta: causal attn      = 1
0.00.631.798 I llm_load_print_meta: pooling type     = 0
0.00.631.798 I llm_load_print_meta: rope type        = 2
0.00.631.799 I llm_load_print_meta: rope scaling     = linear
0.00.631.801 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.802 I llm_load_print_meta: freq_scale_train = 1
0.00.631.802 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.803 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.804 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.804 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.805 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.805 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.818 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.823 I llm_load_print_meta: model type       = 2B
0.00.631.825 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.826 I llm_load_print_meta: model params     = 2.51 B
0.00.631.840 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.841 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.842 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.842 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.843 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.846 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.846 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.847 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.855 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.857 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.858 I llm_load_print_meta: max token length = 93
0.00.731.987 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.731.999 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.732.000 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.732.001 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.732.002 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.732.002 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.738.278 I llama_new_context_with_model: n_seq_max     = 1
0.00.738.285 I llama_new_context_with_model: n_ctx         = 4096
0.00.738.285 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.738.286 I llama_new_context_with_model: n_batch       = 2048
0.00.738.286 I llama_new_context_with_model: n_ubatch      = 512
0.00.738.287 I llama_new_context_with_model: flash_attn    = 0
0.00.738.289 I llama_new_context_with_model: freq_base     = 10000.0
0.00.738.290 I llama_new_context_with_model: freq_scale    = 1
0.00.738.291 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.755.234 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.755.279 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.755.461 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.206 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.758.210 I llama_new_context_with_model: graph nodes  = 601
0.00.758.211 I llama_new_context_with_model: graph splits = 1
0.00.758.238 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.370.687 I main: llama threadpool init, n_threads = 4
0.01.370.700 I 
0.01.370.799 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.370.802 I 
0.01.371.034 I sampler seed: 2013317796
0.01.371.047 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.371.053 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.371.057 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.371.057 I 
 increasities in his wife's womb. [end of text]


0.05.560.861 I llama_perf_sampler_print:    sampling time =      14.98 ms /    11 runs   (    1.36 ms per token,   734.46 tokens per second)
0.05.560.864 I llama_perf_context_print:        load time =    1369.42 ms
0.05.560.865 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.560.866 I llama_perf_context_print:        eval time =    4159.93 ms /    10 runs   (  415.99 ms per token,     2.40 tokens per second)
0.05.560.867 I llama_perf_context_print:       total time =    4190.18 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.001.088 I main: load the model and apply lora adapter, if any
0.00.023.870 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.970 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.985 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.990 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.994 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.996 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.998 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.999 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.000 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.001 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.009 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.012 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.013 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.015 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.016 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.157 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.426 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.436 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.437 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.438 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.439 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.440 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.441 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.445 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.446 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.447 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.448 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.449 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.459 I llama_model_loader: - type  f32:   37 tensors
0.00.267.461 I llama_model_loader: - type q8_0:  127 tensors
0.00.468.607 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.539.645 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.540.745 I llm_load_vocab: special tokens cache size = 5
0.00.635.935 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.636.008 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.636.009 I llm_load_print_meta: arch             = gemma
0.00.636.009 I llm_load_print_meta: vocab type       = SPM
0.00.636.010 I llm_load_print_meta: n_vocab          = 256000
0.00.636.013 I llm_load_print_meta: n_merges         = 0
0.00.636.013 I llm_load_print_meta: vocab_only       = 0
0.00.636.014 I llm_load_print_meta: n_ctx_train      = 8192
0.00.636.014 I llm_load_print_meta: n_embd           = 2048
0.00.636.014 I llm_load_print_meta: n_layer          = 18
0.00.636.079 I llm_load_print_meta: n_head           = 8
0.00.636.086 I llm_load_print_meta: n_head_kv        = 1
0.00.636.086 I llm_load_print_meta: n_rot            = 256
0.00.636.087 I llm_load_print_meta: n_swa            = 0
0.00.636.087 I llm_load_print_meta: n_embd_head_k    = 256
0.00.636.087 I llm_load_print_meta: n_embd_head_v    = 256
0.00.636.092 I llm_load_print_meta: n_gqa            = 8
0.00.636.097 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.636.102 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.636.103 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.636.104 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.636.105 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.636.105 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.636.106 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.636.110 I llm_load_print_meta: n_ff             = 16384
0.00.636.111 I llm_load_print_meta: n_expert         = 0
0.00.636.111 I llm_load_print_meta: n_expert_used    = 0
0.00.636.111 I llm_load_print_meta: causal attn      = 1
0.00.636.112 I llm_load_print_meta: pooling type     = 0
0.00.636.112 I llm_load_print_meta: rope type        = 2
0.00.636.112 I llm_load_print_meta: rope scaling     = linear
0.00.636.114 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.636.114 I llm_load_print_meta: freq_scale_train = 1
0.00.636.115 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.636.115 I llm_load_print_meta: rope_finetuned   = unknown
0.00.636.115 I llm_load_print_meta: ssm_d_conv       = 0
0.00.636.116 I llm_load_print_meta: ssm_d_inner      = 0
0.00.636.116 I llm_load_print_meta: ssm_d_state      = 0
0.00.636.116 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.636.116 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.636.117 I llm_load_print_meta: model type       = 2B
0.00.636.118 I llm_load_print_meta: model ftype      = Q8_0
0.00.636.119 I llm_load_print_meta: model params     = 2.51 B
0.00.636.129 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.636.129 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.636.129 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.636.130 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.636.130 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.636.131 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.636.131 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.636.132 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.636.137 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.636.139 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.636.139 I llm_load_print_meta: max token length = 93
0.00.731.886 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.737.939 I llama_new_context_with_model: n_seq_max     = 1
0.00.737.948 I llama_new_context_with_model: n_ctx         = 4096
0.00.737.948 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.737.949 I llama_new_context_with_model: n_batch       = 2048
0.00.737.949 I llama_new_context_with_model: n_ubatch      = 512
0.00.737.949 I llama_new_context_with_model: flash_attn    = 0
0.00.737.953 I llama_new_context_with_model: freq_base     = 10000.0
0.00.737.954 I llama_new_context_with_model: freq_scale    = 1
0.00.737.955 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.755.541 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.755.586 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.755.732 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.236 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.758.240 I llama_new_context_with_model: graph nodes  = 601
0.00.758.241 I llama_new_context_with_model: graph splits = 1
0.00.758.266 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.364.702 I main: llama threadpool init, n_threads = 4
0.01.364.716 I 
0.01.364.825 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.364.829 I 
0.01.365.064 I sampler seed: 2066628037
0.01.365.077 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.365.083 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.365.086 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.365.087 I 
 increasities:

I am unable to generate a response because the provided context does not contain any information regarding the specific issues or requirements related to the "escalating

0.15.047.931 I llama_perf_sampler_print:    sampling time =      47.76 ms /    33 runs   (    1.45 ms per token,   690.97 tokens per second)
0.15.047.962 I llama_perf_context_print:        load time =    1363.52 ms
0.15.047.964 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.047.973 I llama_perf_context_print:        eval time =   13593.90 ms /    32 runs   (  424.81 ms per token,     2.35 tokens per second)
0.15.047.975 I llama_perf_context_print:       total time =   13683.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.942 I main: llama backend init
0.00.001.287 I main: load the model and apply lora adapter, if any
0.00.024.117 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.130 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.237 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.250 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.253 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.259 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.265 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.266 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.268 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.273 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.274 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.285 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.289 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.292 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.293 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.296 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.793 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.470 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.766 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.780 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.782 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.783 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.784 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.785 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.787 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.791 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.792 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.793 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.794 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.266.795 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.805 I llama_model_loader: - type  f32:   37 tensors
0.00.266.809 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.701 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.945 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.046 I llm_load_vocab: special tokens cache size = 5
0.00.621.929 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.005 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.007 I llm_load_print_meta: arch             = gemma
0.00.622.007 I llm_load_print_meta: vocab type       = SPM
0.00.622.008 I llm_load_print_meta: n_vocab          = 256000
0.00.622.011 I llm_load_print_meta: n_merges         = 0
0.00.622.011 I llm_load_print_meta: vocab_only       = 0
0.00.622.012 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.012 I llm_load_print_meta: n_embd           = 2048
0.00.622.013 I llm_load_print_meta: n_layer          = 18
0.00.622.079 I llm_load_print_meta: n_head           = 8
0.00.622.087 I llm_load_print_meta: n_head_kv        = 1
0.00.622.088 I llm_load_print_meta: n_rot            = 256
0.00.622.088 I llm_load_print_meta: n_swa            = 0
0.00.622.088 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.089 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.118 I llm_load_print_meta: n_gqa            = 8
0.00.622.125 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.133 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.135 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.136 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.137 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.138 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.140 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.146 I llm_load_print_meta: n_ff             = 16384
0.00.622.153 I llm_load_print_meta: n_expert         = 0
0.00.622.153 I llm_load_print_meta: n_expert_used    = 0
0.00.622.154 I llm_load_print_meta: causal attn      = 1
0.00.622.162 I llm_load_print_meta: pooling type     = 0
0.00.622.163 I llm_load_print_meta: rope type        = 2
0.00.622.163 I llm_load_print_meta: rope scaling     = linear
0.00.622.165 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.166 I llm_load_print_meta: freq_scale_train = 1
0.00.622.167 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.168 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.169 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.169 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.170 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.171 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.171 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.175 I llm_load_print_meta: model type       = 2B
0.00.622.177 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.177 I llm_load_print_meta: model params     = 2.51 B
0.00.622.188 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.188 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.190 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.190 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.191 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.194 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.195 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.196 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.203 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.209 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.210 I llm_load_print_meta: max token length = 93
0.00.706.037 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.706.048 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.706.049 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.706.050 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.706.051 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.706.052 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.712.384 I llama_new_context_with_model: n_seq_max     = 1
0.00.712.393 I llama_new_context_with_model: n_ctx         = 4096
0.00.712.393 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.712.394 I llama_new_context_with_model: n_batch       = 2048
0.00.712.394 I llama_new_context_with_model: n_ubatch      = 512
0.00.712.395 I llama_new_context_with_model: flash_attn    = 0
0.00.712.398 I llama_new_context_with_model: freq_base     = 10000.0
0.00.712.399 I llama_new_context_with_model: freq_scale    = 1
0.00.712.400 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.729.127 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.729.175 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.729.321 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.731.834 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.731.838 I llama_new_context_with_model: graph nodes  = 601
0.00.731.838 I llama_new_context_with_model: graph splits = 1
0.00.731.864 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.337.195 I main: llama threadpool init, n_threads = 4
0.01.337.220 I 
0.01.337.338 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.337.342 I 
0.01.337.581 I sampler seed: 886745805
0.01.337.593 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.337.601 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.337.606 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.337.606 I 
 increasities. [end of text]


0.03.016.651 I llama_perf_sampler_print:    sampling time =       6.00 ms /     5 runs   (    1.20 ms per token,   833.19 tokens per second)
0.03.016.654 I llama_perf_context_print:        load time =    1335.79 ms
0.03.016.655 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.016.656 I llama_perf_context_print:        eval time =    1666.88 ms /     4 runs   (  416.72 ms per token,     2.40 tokens per second)
0.03.016.657 I llama_perf_context_print:       total time =    1679.46 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.690 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.889 I main: llama backend init
0.00.001.152 I main: load the model and apply lora adapter, if any
0.00.024.192 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.204 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.304 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.318 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.322 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.327 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.329 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.330 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.332 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.333 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.334 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.344 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.349 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.350 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.351 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.352 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.158 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.713 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.829 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.839 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.840 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.842 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.843 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.844 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.845 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.849 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.850 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.851 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.852 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.272.853 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.862 I llama_model_loader: - type  f32:   37 tensors
0.00.272.864 I llama_model_loader: - type q8_0:  127 tensors
0.00.477.100 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.547.835 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.548.824 I llm_load_vocab: special tokens cache size = 5
0.00.644.015 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.644.091 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.644.092 I llm_load_print_meta: arch             = gemma
0.00.644.093 I llm_load_print_meta: vocab type       = SPM
0.00.644.094 I llm_load_print_meta: n_vocab          = 256000
0.00.644.097 I llm_load_print_meta: n_merges         = 0
0.00.644.097 I llm_load_print_meta: vocab_only       = 0
0.00.644.098 I llm_load_print_meta: n_ctx_train      = 8192
0.00.644.098 I llm_load_print_meta: n_embd           = 2048
0.00.644.098 I llm_load_print_meta: n_layer          = 18
0.00.644.179 I llm_load_print_meta: n_head           = 8
0.00.644.187 I llm_load_print_meta: n_head_kv        = 1
0.00.644.188 I llm_load_print_meta: n_rot            = 256
0.00.644.188 I llm_load_print_meta: n_swa            = 0
0.00.644.189 I llm_load_print_meta: n_embd_head_k    = 256
0.00.644.189 I llm_load_print_meta: n_embd_head_v    = 256
0.00.644.210 I llm_load_print_meta: n_gqa            = 8
0.00.644.216 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.644.220 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.644.230 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.644.240 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.644.242 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.644.242 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.644.243 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.644.249 I llm_load_print_meta: n_ff             = 16384
0.00.644.249 I llm_load_print_meta: n_expert         = 0
0.00.644.250 I llm_load_print_meta: n_expert_used    = 0
0.00.644.250 I llm_load_print_meta: causal attn      = 1
0.00.644.251 I llm_load_print_meta: pooling type     = 0
0.00.644.251 I llm_load_print_meta: rope type        = 2
0.00.644.252 I llm_load_print_meta: rope scaling     = linear
0.00.644.254 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.644.255 I llm_load_print_meta: freq_scale_train = 1
0.00.644.258 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.644.259 I llm_load_print_meta: rope_finetuned   = unknown
0.00.644.259 I llm_load_print_meta: ssm_d_conv       = 0
0.00.644.259 I llm_load_print_meta: ssm_d_inner      = 0
0.00.644.259 I llm_load_print_meta: ssm_d_state      = 0
0.00.644.260 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.644.260 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.644.261 I llm_load_print_meta: model type       = 2B
0.00.644.262 I llm_load_print_meta: model ftype      = Q8_0
0.00.644.262 I llm_load_print_meta: model params     = 2.51 B
0.00.644.272 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.644.273 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.644.273 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.644.283 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.644.284 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.644.286 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.644.287 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.644.288 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.644.294 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.644.296 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.644.296 I llm_load_print_meta: max token length = 93
0.00.717.616 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.717.628 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.723.626 I llama_new_context_with_model: n_seq_max     = 1
0.00.723.633 I llama_new_context_with_model: n_ctx         = 4096
0.00.723.633 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.723.634 I llama_new_context_with_model: n_batch       = 2048
0.00.723.634 I llama_new_context_with_model: n_ubatch      = 512
0.00.723.634 I llama_new_context_with_model: flash_attn    = 0
0.00.723.638 I llama_new_context_with_model: freq_base     = 10000.0
0.00.723.639 I llama_new_context_with_model: freq_scale    = 1
0.00.723.640 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.740.761 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.740.806 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.740.929 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.743.503 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.743.507 I llama_new_context_with_model: graph nodes  = 601
0.00.743.507 I llama_new_context_with_model: graph splits = 1
0.00.743.533 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.348.470 I main: llama threadpool init, n_threads = 4
0.01.348.484 I 
0.01.348.594 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.348.598 I 
0.01.348.839 I sampler seed: 3056907004
0.01.348.853 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.348.861 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.348.865 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.348.865 I 
 increasities is an ongoing issue that requires constant attention and action.

**Causes of the Issue**

* Inadequate infrastructure and funding
* Lack of coordination and

0.14.813.856 I llama_perf_sampler_print:    sampling time =      47.59 ms /    33 runs   (    1.44 ms per token,   693.50 tokens per second)
0.14.813.859 I llama_perf_context_print:        load time =    1347.21 ms
0.14.813.860 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.813.886 I llama_perf_context_print:        eval time =   13375.34 ms /    32 runs   (  417.98 ms per token,     2.39 tokens per second)
0.14.813.888 I llama_perf_context_print:       total time =   13465.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m48.496s
user	2m24.889s
sys	0m9.612s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4074 (5ea926da)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198676.52 ms
main:    total time = 198676.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.651 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.864 I main: llama backend init
0.00.001.124 I main: load the model and apply lora adapter, if any
0.00.023.960 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.975 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.075 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.088 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.090 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.095 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.096 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.098 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.100 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.110 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.113 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.121 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.123 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.124 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.125 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.126 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.916 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.457 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.841 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.855 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.857 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.858 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.859 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.860 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.861 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.865 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.866 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.867 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.868 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.870 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.879 I llama_model_loader: - type  f32:   37 tensors
0.00.272.882 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.883 I llama_model_loader: - type q6_K:   19 tensors
0.00.490.550 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.563.117 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.564.194 I llm_load_vocab: special tokens cache size = 5
0.00.659.054 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.659.129 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.659.130 I llm_load_print_meta: arch             = gemma
0.00.659.131 I llm_load_print_meta: vocab type       = SPM
0.00.659.132 I llm_load_print_meta: n_vocab          = 256000
0.00.659.134 I llm_load_print_meta: n_merges         = 0
0.00.659.135 I llm_load_print_meta: vocab_only       = 0
0.00.659.135 I llm_load_print_meta: n_ctx_train      = 8192
0.00.659.135 I llm_load_print_meta: n_embd           = 2048
0.00.659.136 I llm_load_print_meta: n_layer          = 18
0.00.659.202 I llm_load_print_meta: n_head           = 8
0.00.659.209 I llm_load_print_meta: n_head_kv        = 1
0.00.659.210 I llm_load_print_meta: n_rot            = 256
0.00.659.210 I llm_load_print_meta: n_swa            = 0
0.00.659.211 I llm_load_print_meta: n_embd_head_k    = 256
0.00.659.211 I llm_load_print_meta: n_embd_head_v    = 256
0.00.659.216 I llm_load_print_meta: n_gqa            = 8
0.00.659.220 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.659.225 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.659.226 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.659.227 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.659.227 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.659.228 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.659.228 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.659.233 I llm_load_print_meta: n_ff             = 16384
0.00.659.233 I llm_load_print_meta: n_expert         = 0
0.00.659.234 I llm_load_print_meta: n_expert_used    = 0
0.00.659.234 I llm_load_print_meta: causal attn      = 1
0.00.659.234 I llm_load_print_meta: pooling type     = 0
0.00.659.235 I llm_load_print_meta: rope type        = 2
0.00.659.235 I llm_load_print_meta: rope scaling     = linear
0.00.659.236 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.659.237 I llm_load_print_meta: freq_scale_train = 1
0.00.659.237 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.659.238 I llm_load_print_meta: rope_finetuned   = unknown
0.00.659.238 I llm_load_print_meta: ssm_d_conv       = 0
0.00.659.238 I llm_load_print_meta: ssm_d_inner      = 0
0.00.659.239 I llm_load_print_meta: ssm_d_state      = 0
0.00.659.239 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.659.239 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.659.240 I llm_load_print_meta: model type       = 2B
0.00.659.241 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.659.242 I llm_load_print_meta: model params     = 2.51 B
0.00.659.252 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.659.252 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.659.253 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.659.253 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.659.254 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.659.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.659.255 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.659.255 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.659.278 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.659.280 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.659.281 I llm_load_print_meta: max token length = 93
0.00.721.328 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.721.341 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.721.342 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.721.343 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.721.344 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.721.345 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.728.250 I llama_new_context_with_model: n_seq_max     = 1
0.00.728.259 I llama_new_context_with_model: n_ctx         = 4096
0.00.728.260 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.728.260 I llama_new_context_with_model: n_batch       = 2048
0.00.728.261 I llama_new_context_with_model: n_ubatch      = 512
0.00.728.261 I llama_new_context_with_model: flash_attn    = 0
0.00.728.265 I llama_new_context_with_model: freq_base     = 10000.0
0.00.728.265 I llama_new_context_with_model: freq_scale    = 1
0.00.728.266 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.745.448 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.745.489 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.745.617 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.748.201 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.748.205 I llama_new_context_with_model: graph nodes  = 601
0.00.748.206 I llama_new_context_with_model: graph splits = 1
0.00.748.231 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.317.905 I main: llama threadpool init, n_threads = 4
0.01.317.918 I 
0.01.318.030 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.318.034 I 
0.01.318.269 I sampler seed: 808882797
0.01.318.283 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.318.289 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.318.293 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.318.293 I 
 increasities.
I am unable to generate a response because the context provided contains sexually suggestive or inappropriate content. [end of text]


0.09.125.565 I llama_perf_sampler_print:    sampling time =      34.04 ms /    24 runs   (    1.42 ms per token,   705.14 tokens per second)
0.09.125.569 I llama_perf_context_print:        load time =    1316.69 ms
0.09.125.571 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.125.573 I llama_perf_context_print:        eval time =    7742.73 ms /    23 runs   (  336.64 ms per token,     2.97 tokens per second)
0.09.125.585 I llama_perf_context_print:       total time =    7807.67 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4074 (5ea926da)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199005.19 ms
main:    total time = 199005.19 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.664 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.001.129 I main: load the model and apply lora adapter, if any
0.00.023.359 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.461 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.477 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.482 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.486 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.488 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.489 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.490 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.491 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.492 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.498 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.499 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.500 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.501 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.502 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.420 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.730 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.946 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.958 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.959 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.960 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.961 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.963 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.964 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.968 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.969 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.994 I llama_model_loader: - type  f32:   37 tensors
0.00.264.997 I llama_model_loader: - type q4_K:  108 tensors
0.00.264.998 I llama_model_loader: - type q6_K:   19 tensors
0.00.458.474 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.527.648 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.528.677 I llm_load_vocab: special tokens cache size = 5
0.00.626.472 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.542 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.547 I llm_load_print_meta: arch             = gemma
0.00.626.548 I llm_load_print_meta: vocab type       = SPM
0.00.626.548 I llm_load_print_meta: n_vocab          = 256000
0.00.626.550 I llm_load_print_meta: n_merges         = 0
0.00.626.551 I llm_load_print_meta: vocab_only       = 0
0.00.626.552 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.552 I llm_load_print_meta: n_embd           = 2048
0.00.626.552 I llm_load_print_meta: n_layer          = 18
0.00.626.616 I llm_load_print_meta: n_head           = 8
0.00.626.626 I llm_load_print_meta: n_head_kv        = 1
0.00.626.627 I llm_load_print_meta: n_rot            = 256
0.00.626.628 I llm_load_print_meta: n_swa            = 0
0.00.626.629 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.631 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.646 I llm_load_print_meta: n_gqa            = 8
0.00.626.652 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.657 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.659 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.660 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.661 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.661 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.677 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.686 I llm_load_print_meta: n_ff             = 16384
0.00.626.686 I llm_load_print_meta: n_expert         = 0
0.00.626.686 I llm_load_print_meta: n_expert_used    = 0
0.00.626.687 I llm_load_print_meta: causal attn      = 1
0.00.626.687 I llm_load_print_meta: pooling type     = 0
0.00.626.696 I llm_load_print_meta: rope type        = 2
0.00.626.697 I llm_load_print_meta: rope scaling     = linear
0.00.626.698 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.699 I llm_load_print_meta: freq_scale_train = 1
0.00.626.700 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.700 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.709 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.710 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.710 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.711 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.711 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.711 I llm_load_print_meta: model type       = 2B
0.00.626.713 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.626.713 I llm_load_print_meta: model params     = 2.51 B
0.00.626.722 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.626.722 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.731 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.732 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.732 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.733 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.733 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.734 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.740 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.741 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.742 I llm_load_print_meta: max token length = 93
0.00.686.645 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.692.606 I llama_new_context_with_model: n_seq_max     = 1
0.00.692.614 I llama_new_context_with_model: n_ctx         = 4096
0.00.692.615 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.692.615 I llama_new_context_with_model: n_batch       = 2048
0.00.692.616 I llama_new_context_with_model: n_ubatch      = 512
0.00.692.616 I llama_new_context_with_model: flash_attn    = 0
0.00.692.620 I llama_new_context_with_model: freq_base     = 10000.0
0.00.692.620 I llama_new_context_with_model: freq_scale    = 1
0.00.692.621 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.709.811 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.709.854 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.709.985 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.712.604 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.712.608 I llama_new_context_with_model: graph nodes  = 601
0.00.712.609 I llama_new_context_with_model: graph splits = 1
0.00.712.634 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.284.832 I main: llama threadpool init, n_threads = 4
0.01.284.846 I 
0.01.284.956 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.284.960 I 
0.01.285.194 I sampler seed: 3050217592
0.01.285.206 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.285.215 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.285.218 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.285.218 I 
 increasities with the aim of fostering an understanding of the complex dynamics between race, identity, and belonging.

The goal is to create a space for dialogue and

0.12.220.284 I llama_perf_sampler_print:    sampling time =      47.09 ms /    33 runs   (    1.43 ms per token,   700.74 tokens per second)
0.12.220.296 I llama_perf_context_print:        load time =    1283.61 ms
0.12.220.298 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.220.300 I llama_perf_context_print:        eval time =   10845.37 ms /    32 runs   (  338.92 ms per token,     2.95 tokens per second)
0.12.220.301 I llama_perf_context_print:       total time =   10935.46 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.050s
user	49m58.352s
sys	0m6.509s
