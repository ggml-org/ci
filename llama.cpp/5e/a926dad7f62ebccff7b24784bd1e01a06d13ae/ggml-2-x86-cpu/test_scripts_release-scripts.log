+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.876 I main: load the model and apply lora adapter, if any
0.00.021.651 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.663 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.670 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.676 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.676 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.680 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.681 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.682 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.682 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.684 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.684 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.689 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.689 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.690 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.691 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.692 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.648 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.286 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.243 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.251 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.252 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.253 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.253 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.254 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.255 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.258 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.258 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.259 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.259 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.260 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.264 I llama_model_loader: - type  f32:   37 tensors
0.00.133.265 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.791 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.667 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.263.379 I llm_load_vocab: special tokens cache size = 5
0.00.284.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.177 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.177 I llm_load_print_meta: arch             = gemma
0.00.284.178 I llm_load_print_meta: vocab type       = SPM
0.00.284.178 I llm_load_print_meta: n_vocab          = 256000
0.00.284.179 I llm_load_print_meta: n_merges         = 0
0.00.284.179 I llm_load_print_meta: vocab_only       = 0
0.00.284.179 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.180 I llm_load_print_meta: n_embd           = 2048
0.00.284.180 I llm_load_print_meta: n_layer          = 18
0.00.284.191 I llm_load_print_meta: n_head           = 8
0.00.284.192 I llm_load_print_meta: n_head_kv        = 1
0.00.284.192 I llm_load_print_meta: n_rot            = 256
0.00.284.193 I llm_load_print_meta: n_swa            = 0
0.00.284.193 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.193 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.194 I llm_load_print_meta: n_gqa            = 8
0.00.284.195 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.196 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.197 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.198 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.199 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.199 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.199 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.200 I llm_load_print_meta: n_ff             = 16384
0.00.284.200 I llm_load_print_meta: n_expert         = 0
0.00.284.200 I llm_load_print_meta: n_expert_used    = 0
0.00.284.201 I llm_load_print_meta: causal attn      = 1
0.00.284.201 I llm_load_print_meta: pooling type     = 0
0.00.284.201 I llm_load_print_meta: rope type        = 2
0.00.284.202 I llm_load_print_meta: rope scaling     = linear
0.00.284.204 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.204 I llm_load_print_meta: freq_scale_train = 1
0.00.284.205 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.205 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.205 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.206 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.206 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.206 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.206 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.207 I llm_load_print_meta: model type       = 2B
0.00.284.207 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.208 I llm_load_print_meta: model params     = 2.51 B
0.00.284.209 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.209 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.210 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.210 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.211 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.211 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.211 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.211 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.212 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.212 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.213 I llm_load_print_meta: max token length = 93
0.00.382.385 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.382.392 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.382.392 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.382.393 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.382.393 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.382.394 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.387.680 I llama_new_context_with_model: n_seq_max     = 1
0.00.387.686 I llama_new_context_with_model: n_ctx         = 4096
0.00.387.686 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.387.687 I llama_new_context_with_model: n_batch       = 2048
0.00.387.687 I llama_new_context_with_model: n_ubatch      = 512
0.00.387.688 I llama_new_context_with_model: flash_attn    = 0
0.00.387.690 I llama_new_context_with_model: freq_base     = 10000.0
0.00.387.691 I llama_new_context_with_model: freq_scale    = 1
0.00.387.692 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.403.474 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.403.489 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.403.580 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.828 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.404.834 I llama_new_context_with_model: graph nodes  = 601
0.00.404.834 I llama_new_context_with_model: graph splits = 1
0.00.404.836 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.530 I main: llama threadpool init, n_threads = 4
0.00.492.544 I 
0.00.492.619 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.622 I 
0.00.492.663 I sampler seed: 1432812237
0.00.492.675 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.677 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.678 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.679 I 
 seconary.

**A man with a stammering voice and a face etched with worry sits by a window, staring out into the darkness. His thoughts race

0.02.788.633 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6792.92 tokens per second)
0.02.788.636 I llama_perf_context_print:        load time =     491.63 ms
0.02.788.637 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.788.638 I llama_perf_context_print:        eval time =    2276.89 ms /    32 runs   (   71.15 ms per token,    14.05 tokens per second)
0.02.788.639 I llama_perf_context_print:       total time =    2296.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.580 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.000.921 I main: load the model and apply lora adapter, if any
0.00.021.610 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.626 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.634 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.635 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.640 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.640 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.642 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.643 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.644 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.644 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.651 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.651 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.652 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.653 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.653 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.626 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.075 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.950 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.957 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.957 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.958 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.958 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.959 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.960 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.963 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.963 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.964 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.964 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.966 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.969 I llama_model_loader: - type  f32:   37 tensors
0.00.132.971 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.894 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.575 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.259 I llm_load_vocab: special tokens cache size = 5
0.00.287.769 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.788 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.789 I llm_load_print_meta: arch             = gemma
0.00.287.789 I llm_load_print_meta: vocab type       = SPM
0.00.287.790 I llm_load_print_meta: n_vocab          = 256000
0.00.287.791 I llm_load_print_meta: n_merges         = 0
0.00.287.791 I llm_load_print_meta: vocab_only       = 0
0.00.287.791 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.791 I llm_load_print_meta: n_embd           = 2048
0.00.287.792 I llm_load_print_meta: n_layer          = 18
0.00.287.804 I llm_load_print_meta: n_head           = 8
0.00.287.805 I llm_load_print_meta: n_head_kv        = 1
0.00.287.806 I llm_load_print_meta: n_rot            = 256
0.00.287.806 I llm_load_print_meta: n_swa            = 0
0.00.287.806 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.807 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.808 I llm_load_print_meta: n_gqa            = 8
0.00.287.810 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.811 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.813 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.814 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.815 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.815 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.815 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.816 I llm_load_print_meta: n_ff             = 16384
0.00.287.817 I llm_load_print_meta: n_expert         = 0
0.00.287.817 I llm_load_print_meta: n_expert_used    = 0
0.00.287.817 I llm_load_print_meta: causal attn      = 1
0.00.287.818 I llm_load_print_meta: pooling type     = 0
0.00.287.819 I llm_load_print_meta: rope type        = 2
0.00.287.819 I llm_load_print_meta: rope scaling     = linear
0.00.287.820 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.821 I llm_load_print_meta: freq_scale_train = 1
0.00.287.821 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.822 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.822 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.822 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.823 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.824 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.824 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.825 I llm_load_print_meta: model type       = 2B
0.00.287.825 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.826 I llm_load_print_meta: model params     = 2.51 B
0.00.287.827 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.827 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.828 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.828 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.828 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.829 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.830 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.830 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.831 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.831 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.832 I llm_load_print_meta: max token length = 93
0.00.382.346 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.387.646 I llama_new_context_with_model: n_seq_max     = 1
0.00.387.653 I llama_new_context_with_model: n_ctx         = 4096
0.00.387.653 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.387.653 I llama_new_context_with_model: n_batch       = 2048
0.00.387.654 I llama_new_context_with_model: n_ubatch      = 512
0.00.387.655 I llama_new_context_with_model: flash_attn    = 0
0.00.387.659 I llama_new_context_with_model: freq_base     = 10000.0
0.00.387.660 I llama_new_context_with_model: freq_scale    = 1
0.00.387.661 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.403.866 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.403.882 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.403.975 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.185 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.405.192 I llama_new_context_with_model: graph nodes  = 601
0.00.405.193 I llama_new_context_with_model: graph splits = 1
0.00.405.194 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.792 I main: llama threadpool init, n_threads = 4
0.00.487.806 I 
0.00.487.882 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.487.886 I 
0.00.487.933 I sampler seed: 652810460
0.00.487.943 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.946 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.487.947 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.948 I 
 increasities in the anime adaptation, and explore the reasons behind their inclusion.

**Background**

In the anime adaptation of the manga series "Decaimon

0.02.715.901 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6979.70 tokens per second)
0.02.715.904 I llama_perf_context_print:        load time =     486.85 ms
0.02.715.905 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.715.907 I llama_perf_context_print:        eval time =    2208.96 ms /    32 runs   (   69.03 ms per token,    14.49 tokens per second)
0.02.715.907 I llama_perf_context_print:       total time =    2228.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.530 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.000.862 I main: load the model and apply lora adapter, if any
0.00.021.529 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.540 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.548 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.553 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.554 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.558 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.559 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.560 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.560 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.561 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.561 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.566 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.567 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.567 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.568 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.568 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.866 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.080 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.929 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.936 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.936 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.937 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.937 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.938 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.939 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.941 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.942 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.942 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.943 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.944 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.948 I llama_model_loader: - type  f32:   37 tensors
0.00.131.949 I llama_model_loader: - type q8_0:  127 tensors
0.00.226.589 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.875 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.276.510 I llm_load_vocab: special tokens cache size = 5
0.00.297.331 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.351 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.352 I llm_load_print_meta: arch             = gemma
0.00.297.352 I llm_load_print_meta: vocab type       = SPM
0.00.297.353 I llm_load_print_meta: n_vocab          = 256000
0.00.297.353 I llm_load_print_meta: n_merges         = 0
0.00.297.354 I llm_load_print_meta: vocab_only       = 0
0.00.297.354 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.354 I llm_load_print_meta: n_embd           = 2048
0.00.297.355 I llm_load_print_meta: n_layer          = 18
0.00.297.367 I llm_load_print_meta: n_head           = 8
0.00.297.368 I llm_load_print_meta: n_head_kv        = 1
0.00.297.369 I llm_load_print_meta: n_rot            = 256
0.00.297.369 I llm_load_print_meta: n_swa            = 0
0.00.297.369 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.370 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.370 I llm_load_print_meta: n_gqa            = 8
0.00.297.371 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.372 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.373 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.374 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.375 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.375 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.375 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.376 I llm_load_print_meta: n_ff             = 16384
0.00.297.376 I llm_load_print_meta: n_expert         = 0
0.00.297.377 I llm_load_print_meta: n_expert_used    = 0
0.00.297.377 I llm_load_print_meta: causal attn      = 1
0.00.297.377 I llm_load_print_meta: pooling type     = 0
0.00.297.378 I llm_load_print_meta: rope type        = 2
0.00.297.378 I llm_load_print_meta: rope scaling     = linear
0.00.297.379 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.380 I llm_load_print_meta: freq_scale_train = 1
0.00.297.380 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.381 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.381 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.381 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.381 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.382 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.382 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.382 I llm_load_print_meta: model type       = 2B
0.00.297.383 I llm_load_print_meta: model ftype      = Q8_0
0.00.297.384 I llm_load_print_meta: model params     = 2.51 B
0.00.297.384 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.297.385 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.385 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.386 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.386 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.386 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.387 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.387 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.387 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.388 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.388 I llm_load_print_meta: max token length = 93
0.00.378.373 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.378.380 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.378.381 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.378.382 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.378.382 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.378.383 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.383.555 I llama_new_context_with_model: n_seq_max     = 1
0.00.383.560 I llama_new_context_with_model: n_ctx         = 4096
0.00.383.560 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.383.561 I llama_new_context_with_model: n_batch       = 2048
0.00.383.561 I llama_new_context_with_model: n_ubatch      = 512
0.00.383.562 I llama_new_context_with_model: flash_attn    = 0
0.00.383.565 I llama_new_context_with_model: freq_base     = 10000.0
0.00.383.566 I llama_new_context_with_model: freq_scale    = 1
0.00.383.567 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.399.340 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.399.355 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.399.447 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.664 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.400.671 I llama_new_context_with_model: graph nodes  = 601
0.00.400.671 I llama_new_context_with_model: graph splits = 1
0.00.400.673 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.094 I main: llama threadpool init, n_threads = 4
0.00.487.106 I 
0.00.487.197 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.487.200 I 
0.00.487.257 I sampler seed: 200439119
0.00.487.268 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.272 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.487.274 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.274 I 
 increasities and alliterations.

**The Cat in the Hat**

The cat in the hat was a silly fellow,
With fur as white as snow

0.02.741.252 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6665.32 tokens per second)
0.02.741.255 I llama_perf_context_print:        load time =     486.21 ms
0.02.741.256 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.741.258 I llama_perf_context_print:        eval time =    2234.41 ms /    32 runs   (   69.83 ms per token,    14.32 tokens per second)
0.02.741.258 I llama_perf_context_print:       total time =    2254.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.542 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.873 I main: load the model and apply lora adapter, if any
0.00.021.052 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.062 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.070 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.079 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.083 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.086 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.087 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.088 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.088 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.089 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.089 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.093 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.094 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.094 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.095 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.095 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.375 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.624 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.498 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.505 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.506 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.506 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.507 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.508 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.509 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.511 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.511 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.512 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.513 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.514 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.518 I llama_model_loader: - type  f32:   37 tensors
0.00.131.519 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.265 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.079 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.650 I llm_load_vocab: special tokens cache size = 5
0.00.277.538 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.555 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.555 I llm_load_print_meta: arch             = gemma
0.00.277.556 I llm_load_print_meta: vocab type       = SPM
0.00.277.557 I llm_load_print_meta: n_vocab          = 256000
0.00.277.557 I llm_load_print_meta: n_merges         = 0
0.00.277.558 I llm_load_print_meta: vocab_only       = 0
0.00.277.558 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.558 I llm_load_print_meta: n_embd           = 2048
0.00.277.559 I llm_load_print_meta: n_layer          = 18
0.00.277.572 I llm_load_print_meta: n_head           = 8
0.00.277.573 I llm_load_print_meta: n_head_kv        = 1
0.00.277.573 I llm_load_print_meta: n_rot            = 256
0.00.277.573 I llm_load_print_meta: n_swa            = 0
0.00.277.574 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.574 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.576 I llm_load_print_meta: n_gqa            = 8
0.00.277.577 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.578 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.579 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.580 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.580 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.581 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.581 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.582 I llm_load_print_meta: n_ff             = 16384
0.00.277.582 I llm_load_print_meta: n_expert         = 0
0.00.277.583 I llm_load_print_meta: n_expert_used    = 0
0.00.277.583 I llm_load_print_meta: causal attn      = 1
0.00.277.584 I llm_load_print_meta: pooling type     = 0
0.00.277.584 I llm_load_print_meta: rope type        = 2
0.00.277.585 I llm_load_print_meta: rope scaling     = linear
0.00.277.586 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.587 I llm_load_print_meta: freq_scale_train = 1
0.00.277.587 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.588 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.588 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.589 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.589 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.589 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.589 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.591 I llm_load_print_meta: model type       = 2B
0.00.277.592 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.593 I llm_load_print_meta: model params     = 2.51 B
0.00.277.594 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.594 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.594 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.595 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.595 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.596 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.596 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.596 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.597 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.598 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.598 I llm_load_print_meta: max token length = 93
0.00.348.998 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.349.005 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.354.152 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.159 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.159 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.160 I llama_new_context_with_model: n_batch       = 2048
0.00.354.160 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.161 I llama_new_context_with_model: flash_attn    = 0
0.00.354.164 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.165 I llama_new_context_with_model: freq_scale    = 1
0.00.354.166 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.698 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.370.715 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.806 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.069 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.074 I llama_new_context_with_model: graph nodes  = 601
0.00.372.075 I llama_new_context_with_model: graph splits = 1
0.00.372.076 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.569 I main: llama threadpool init, n_threads = 4
0.00.463.583 I 
0.00.463.662 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.665 I 
0.00.463.706 I sampler seed: 3428987609
0.00.463.717 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.720 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.721 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.721 I 
 increasities

I am unable to access the requested information as I am a language model and do not have direct access to personal or private data. [end of text]


0.02.775.940 I llama_perf_sampler_print:    sampling time =       4.81 ms /    31 runs   (    0.16 ms per token,  6442.23 tokens per second)
0.02.775.942 I llama_perf_context_print:        load time =     462.67 ms
0.02.775.956 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.775.958 I llama_perf_context_print:        eval time =    2293.93 ms /    30 runs   (   76.46 ms per token,    13.08 tokens per second)
0.02.775.959 I llama_perf_context_print:       total time =    2312.38 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.860s
user	0m39.348s
sys	0m9.591s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4074 (5ea926da)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32154.47 ms
main:    total time = 32154.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.000.877 I main: load the model and apply lora adapter, if any
0.00.021.251 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.263 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.271 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.276 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.277 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.281 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.282 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.283 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.283 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.284 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.285 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.289 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.289 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.290 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.291 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.291 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.186 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.246 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.131 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.137 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.137 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.138 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.139 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.139 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.140 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.143 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.143 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.144 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.145 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.146 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.150 I llama_model_loader: - type  f32:   37 tensors
0.00.132.151 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.152 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.225 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.610 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.234 I llm_load_vocab: special tokens cache size = 5
0.00.279.112 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.135 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.136 I llm_load_print_meta: arch             = gemma
0.00.279.136 I llm_load_print_meta: vocab type       = SPM
0.00.279.137 I llm_load_print_meta: n_vocab          = 256000
0.00.279.137 I llm_load_print_meta: n_merges         = 0
0.00.279.138 I llm_load_print_meta: vocab_only       = 0
0.00.279.138 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.138 I llm_load_print_meta: n_embd           = 2048
0.00.279.138 I llm_load_print_meta: n_layer          = 18
0.00.279.151 I llm_load_print_meta: n_head           = 8
0.00.279.152 I llm_load_print_meta: n_head_kv        = 1
0.00.279.153 I llm_load_print_meta: n_rot            = 256
0.00.279.153 I llm_load_print_meta: n_swa            = 0
0.00.279.153 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.153 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.154 I llm_load_print_meta: n_gqa            = 8
0.00.279.155 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.156 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.157 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.158 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.159 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.159 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.159 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.160 I llm_load_print_meta: n_ff             = 16384
0.00.279.161 I llm_load_print_meta: n_expert         = 0
0.00.279.161 I llm_load_print_meta: n_expert_used    = 0
0.00.279.162 I llm_load_print_meta: causal attn      = 1
0.00.279.162 I llm_load_print_meta: pooling type     = 0
0.00.279.162 I llm_load_print_meta: rope type        = 2
0.00.279.163 I llm_load_print_meta: rope scaling     = linear
0.00.279.164 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.165 I llm_load_print_meta: freq_scale_train = 1
0.00.279.165 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.165 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.166 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.166 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.166 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.166 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.167 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.167 I llm_load_print_meta: model type       = 2B
0.00.279.167 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.168 I llm_load_print_meta: model params     = 2.51 B
0.00.279.169 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.170 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.170 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.171 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.171 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.171 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.172 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.172 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.173 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.173 I llm_load_print_meta: max token length = 93
0.00.340.346 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.340.355 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.340.356 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.340.356 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.340.357 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.340.357 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.345.704 I llama_new_context_with_model: n_seq_max     = 1
0.00.345.713 I llama_new_context_with_model: n_ctx         = 4096
0.00.345.713 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.345.713 I llama_new_context_with_model: n_batch       = 2048
0.00.345.714 I llama_new_context_with_model: n_ubatch      = 512
0.00.345.714 I llama_new_context_with_model: flash_attn    = 0
0.00.345.717 I llama_new_context_with_model: freq_base     = 10000.0
0.00.345.718 I llama_new_context_with_model: freq_scale    = 1
0.00.345.719 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.520 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.534 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.629 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.880 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.887 I llama_new_context_with_model: graph nodes  = 601
0.00.363.888 I llama_new_context_with_model: graph splits = 1
0.00.363.889 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.999 I main: llama threadpool init, n_threads = 4
0.00.441.014 I 
0.00.441.091 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.094 I 
0.00.441.138 I sampler seed: 3583051527
0.00.441.149 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.152 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.441.153 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.154 I 
 increamically. I can't wait to see you. [end of text]


0.01.139.072 I llama_perf_sampler_print:    sampling time =       1.89 ms /    14 runs   (    0.14 ms per token,  7395.67 tokens per second)
0.01.139.075 I llama_perf_context_print:        load time =     440.10 ms
0.01.139.077 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.139.079 I llama_perf_context_print:        eval time =     689.33 ms /    13 runs   (   53.03 ms per token,    18.86 tokens per second)
0.01.139.080 I llama_perf_context_print:       total time =     698.08 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4074 (5ea926da)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32226.97 ms
main:    total time = 32226.97 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.581 I build: 4074 (5ea926da) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.795 I main: llama backend init
0.00.000.934 I main: load the model and apply lora adapter, if any
0.00.021.672 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.689 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.696 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.697 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.701 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.702 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.704 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.705 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.705 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.706 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.711 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.712 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.713 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.713 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.714 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.020 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.457 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.354 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.362 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.363 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.363 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.364 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.365 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.366 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.368 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.369 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.372 I llama_model_loader: - type  f32:   37 tensors
0.00.132.373 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.374 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.869 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.119 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.777 I llm_load_vocab: special tokens cache size = 5
0.00.283.603 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.624 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.625 I llm_load_print_meta: arch             = gemma
0.00.283.626 I llm_load_print_meta: vocab type       = SPM
0.00.283.627 I llm_load_print_meta: n_vocab          = 256000
0.00.283.627 I llm_load_print_meta: n_merges         = 0
0.00.283.628 I llm_load_print_meta: vocab_only       = 0
0.00.283.628 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.628 I llm_load_print_meta: n_embd           = 2048
0.00.283.629 I llm_load_print_meta: n_layer          = 18
0.00.283.643 I llm_load_print_meta: n_head           = 8
0.00.283.644 I llm_load_print_meta: n_head_kv        = 1
0.00.283.645 I llm_load_print_meta: n_rot            = 256
0.00.283.645 I llm_load_print_meta: n_swa            = 0
0.00.283.645 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.646 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.647 I llm_load_print_meta: n_gqa            = 8
0.00.283.648 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.649 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.650 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.651 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.651 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.652 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.653 I llm_load_print_meta: n_ff             = 16384
0.00.283.653 I llm_load_print_meta: n_expert         = 0
0.00.283.654 I llm_load_print_meta: n_expert_used    = 0
0.00.283.654 I llm_load_print_meta: causal attn      = 1
0.00.283.654 I llm_load_print_meta: pooling type     = 0
0.00.283.654 I llm_load_print_meta: rope type        = 2
0.00.283.655 I llm_load_print_meta: rope scaling     = linear
0.00.283.657 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.657 I llm_load_print_meta: freq_scale_train = 1
0.00.283.657 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.658 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.658 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.658 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.659 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.659 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.659 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.660 I llm_load_print_meta: model type       = 2B
0.00.283.660 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.661 I llm_load_print_meta: model params     = 2.51 B
0.00.283.662 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.662 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.663 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.663 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.664 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.664 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.664 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.665 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.665 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.666 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.666 I llm_load_print_meta: max token length = 93
0.00.341.540 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.346.922 I llama_new_context_with_model: n_seq_max     = 1
0.00.346.929 I llama_new_context_with_model: n_ctx         = 4096
0.00.346.929 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.346.930 I llama_new_context_with_model: n_batch       = 2048
0.00.346.930 I llama_new_context_with_model: n_ubatch      = 512
0.00.346.931 I llama_new_context_with_model: flash_attn    = 0
0.00.346.933 I llama_new_context_with_model: freq_base     = 10000.0
0.00.346.934 I llama_new_context_with_model: freq_scale    = 1
0.00.346.935 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.958 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.974 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.067 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.331 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.338 I llama_new_context_with_model: graph nodes  = 601
0.00.364.338 I llama_new_context_with_model: graph splits = 1
0.00.364.340 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.958 I main: llama threadpool init, n_threads = 4
0.00.440.976 I 
0.00.441.056 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.059 I 
0.00.441.101 I sampler seed: 2773059164
0.00.441.111 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.114 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.441.115 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.116 I 
 seconded,
I'm not sure if I should buy a used car or a new one.

**Factors to Consider:**

* Budget
*

0.02.094.613 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6723.72 tokens per second)
0.02.094.615 I llama_perf_context_print:        load time =     440.00 ms
0.02.094.616 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.094.618 I llama_perf_context_print:        eval time =    1633.97 ms /    32 runs   (   51.06 ms per token,    19.58 tokens per second)
0.02.094.618 I llama_perf_context_print:       total time =    1653.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.081s
user	8m11.217s
sys	0m7.136s
