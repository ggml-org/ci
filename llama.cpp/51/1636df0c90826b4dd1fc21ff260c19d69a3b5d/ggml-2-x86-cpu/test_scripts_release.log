+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.613 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.840 I main: llama backend init
0.00.001.975 I main: load the model and apply lora adapter, if any
0.00.022.533 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.583 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.591 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.597 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.598 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.601 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.602 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.604 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.604 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.605 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.606 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.612 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.612 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.614 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.614 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.615 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.689 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.658 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.633 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.641 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.642 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.642 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.643 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.644 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.645 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.647 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.648 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.649 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.650 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.651 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.654 I llama_model_loader: - type  f32:   37 tensors
0.00.134.657 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.581 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.259 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.130 I llm_load_vocab: special tokens cache size = 5
0.00.242.302 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.319 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.320 I llm_load_print_meta: arch             = gemma
0.00.242.320 I llm_load_print_meta: vocab type       = SPM
0.00.242.321 I llm_load_print_meta: n_vocab          = 256000
0.00.242.321 I llm_load_print_meta: n_merges         = 0
0.00.242.322 I llm_load_print_meta: vocab_only       = 0
0.00.242.322 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.322 I llm_load_print_meta: n_embd           = 2048
0.00.242.322 I llm_load_print_meta: n_layer          = 18
0.00.242.335 I llm_load_print_meta: n_head           = 8
0.00.242.336 I llm_load_print_meta: n_head_kv        = 1
0.00.242.336 I llm_load_print_meta: n_rot            = 256
0.00.242.336 I llm_load_print_meta: n_swa            = 0
0.00.242.337 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.337 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.338 I llm_load_print_meta: n_gqa            = 8
0.00.242.339 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.340 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.341 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.342 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.343 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.343 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.344 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.344 I llm_load_print_meta: n_ff             = 16384
0.00.242.345 I llm_load_print_meta: n_expert         = 0
0.00.242.345 I llm_load_print_meta: n_expert_used    = 0
0.00.242.345 I llm_load_print_meta: causal attn      = 1
0.00.242.345 I llm_load_print_meta: pooling type     = 0
0.00.242.345 I llm_load_print_meta: rope type        = 2
0.00.242.346 I llm_load_print_meta: rope scaling     = linear
0.00.242.347 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.348 I llm_load_print_meta: freq_scale_train = 1
0.00.242.348 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.348 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.349 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.349 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.349 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.350 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.350 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.351 I llm_load_print_meta: model type       = 2B
0.00.242.351 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.352 I llm_load_print_meta: model params     = 2.51 B
0.00.242.353 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.353 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.354 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.354 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.355 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.355 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.355 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.356 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.356 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.357 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.357 I llm_load_print_meta: max token length = 93
0.00.242.375 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.992 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.341.001 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.341.002 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.341.003 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.341.003 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.341.004 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.346.215 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.221 I llama_new_context_with_model: n_batch    = 2048
0.00.346.221 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.222 I llama_new_context_with_model: flash_attn = 0
0.00.346.224 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.226 I llama_new_context_with_model: freq_scale = 1
0.00.377.329 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.377.345 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.377.438 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.316 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.378.324 I llama_new_context_with_model: graph nodes  = 601
0.00.378.325 I llama_new_context_with_model: graph splits = 1
0.00.378.327 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.769 I main: llama threadpool init, n_threads = 4
0.00.473.784 I 
0.00.473.862 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.865 I 
0.00.473.902 I sampler seed: 3493293773
0.00.473.913 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.917 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.918 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.919 I 
 increasements and regressions to test the model's fit.

**Residual Analysis:**

- Examine the residual plots for normality, homoscedasticity, and

0.02.767.861 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6432.75 tokens per second)
0.02.767.864 I llama_perf_context_print:        load time =     471.77 ms
0.02.767.866 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.767.868 I llama_perf_context_print:        eval time =    2274.97 ms /    32 runs   (   71.09 ms per token,    14.07 tokens per second)
0.02.767.869 I llama_perf_context_print:       total time =    2294.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.607 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.830 I main: llama backend init
0.00.002.054 I main: load the model and apply lora adapter, if any
0.00.023.074 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.089 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.098 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.099 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.105 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.106 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.107 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.108 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.109 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.109 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.116 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.117 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.118 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.119 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.120 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.283 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.509 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.587 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.595 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.596 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.597 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.598 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.599 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.600 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.603 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.604 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.605 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.606 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.135.607 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.612 I llama_model_loader: - type  f32:   37 tensors
0.00.135.615 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.929 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.280 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.126 I llm_load_vocab: special tokens cache size = 5
0.00.241.420 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.438 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.438 I llm_load_print_meta: arch             = gemma
0.00.241.439 I llm_load_print_meta: vocab type       = SPM
0.00.241.440 I llm_load_print_meta: n_vocab          = 256000
0.00.241.441 I llm_load_print_meta: n_merges         = 0
0.00.241.441 I llm_load_print_meta: vocab_only       = 0
0.00.241.442 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.442 I llm_load_print_meta: n_embd           = 2048
0.00.241.443 I llm_load_print_meta: n_layer          = 18
0.00.241.458 I llm_load_print_meta: n_head           = 8
0.00.241.459 I llm_load_print_meta: n_head_kv        = 1
0.00.241.460 I llm_load_print_meta: n_rot            = 256
0.00.241.460 I llm_load_print_meta: n_swa            = 0
0.00.241.460 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.461 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.462 I llm_load_print_meta: n_gqa            = 8
0.00.241.464 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.465 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.467 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.468 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.469 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.470 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.470 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.472 I llm_load_print_meta: n_ff             = 16384
0.00.241.473 I llm_load_print_meta: n_expert         = 0
0.00.241.473 I llm_load_print_meta: n_expert_used    = 0
0.00.241.474 I llm_load_print_meta: causal attn      = 1
0.00.241.475 I llm_load_print_meta: pooling type     = 0
0.00.241.475 I llm_load_print_meta: rope type        = 2
0.00.241.476 I llm_load_print_meta: rope scaling     = linear
0.00.241.478 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.479 I llm_load_print_meta: freq_scale_train = 1
0.00.241.479 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.480 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.483 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.484 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.484 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.485 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.485 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.486 I llm_load_print_meta: model type       = 2B
0.00.241.487 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.488 I llm_load_print_meta: model params     = 2.51 B
0.00.241.490 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.490 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.491 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.491 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.492 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.492 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.493 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.494 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.495 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.495 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.496 I llm_load_print_meta: max token length = 93
0.00.241.523 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.452 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.339.723 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.730 I llama_new_context_with_model: n_batch    = 2048
0.00.339.730 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.731 I llama_new_context_with_model: flash_attn = 0
0.00.339.735 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.736 I llama_new_context_with_model: freq_scale = 1
0.00.370.855 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.873 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.970 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.846 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.854 I llama_new_context_with_model: graph nodes  = 601
0.00.371.854 I llama_new_context_with_model: graph splits = 1
0.00.371.857 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.256 I main: llama threadpool init, n_threads = 4
0.00.460.270 I 
0.00.460.360 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.363 I 
0.00.460.412 I sampler seed: 4278372420
0.00.460.424 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.428 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.428 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.429 I 
 maneuvled.
I cannot answer this question as it is based on a false premise. There is no evidence to suggest that a cosmic event of this nature

0.02.706.583 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.706.585 I llama_perf_context_print:        load time =     458.18 ms
0.02.706.586 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.706.587 I llama_perf_context_print:        eval time =    2226.95 ms /    32 runs   (   69.59 ms per token,    14.37 tokens per second)
0.02.706.588 I llama_perf_context_print:       total time =    2246.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.582 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.001.953 I main: load the model and apply lora adapter, if any
0.00.022.449 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.498 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.505 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.511 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.512 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.517 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.518 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.519 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.520 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.521 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.522 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.527 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.527 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.528 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.529 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.529 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.759 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.790 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.733 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.741 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.742 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.742 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.743 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.744 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.745 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.747 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.749 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.750 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.751 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.752 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.755 I llama_model_loader: - type  f32:   37 tensors
0.00.134.757 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.094 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.226.209 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.226.983 I llm_load_vocab: special tokens cache size = 5
0.00.248.332 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.248.348 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.248.349 I llm_load_print_meta: arch             = gemma
0.00.248.350 I llm_load_print_meta: vocab type       = SPM
0.00.248.351 I llm_load_print_meta: n_vocab          = 256000
0.00.248.351 I llm_load_print_meta: n_merges         = 0
0.00.248.351 I llm_load_print_meta: vocab_only       = 0
0.00.248.352 I llm_load_print_meta: n_ctx_train      = 8192
0.00.248.352 I llm_load_print_meta: n_embd           = 2048
0.00.248.353 I llm_load_print_meta: n_layer          = 18
0.00.248.365 I llm_load_print_meta: n_head           = 8
0.00.248.366 I llm_load_print_meta: n_head_kv        = 1
0.00.248.366 I llm_load_print_meta: n_rot            = 256
0.00.248.367 I llm_load_print_meta: n_swa            = 0
0.00.248.367 I llm_load_print_meta: n_embd_head_k    = 256
0.00.248.367 I llm_load_print_meta: n_embd_head_v    = 256
0.00.248.369 I llm_load_print_meta: n_gqa            = 8
0.00.248.370 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.248.370 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.248.371 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.248.373 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.248.374 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.248.374 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.248.375 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.248.376 I llm_load_print_meta: n_ff             = 16384
0.00.248.376 I llm_load_print_meta: n_expert         = 0
0.00.248.377 I llm_load_print_meta: n_expert_used    = 0
0.00.248.377 I llm_load_print_meta: causal attn      = 1
0.00.248.377 I llm_load_print_meta: pooling type     = 0
0.00.248.378 I llm_load_print_meta: rope type        = 2
0.00.248.378 I llm_load_print_meta: rope scaling     = linear
0.00.248.379 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.248.380 I llm_load_print_meta: freq_scale_train = 1
0.00.248.381 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.248.383 I llm_load_print_meta: rope_finetuned   = unknown
0.00.248.383 I llm_load_print_meta: ssm_d_conv       = 0
0.00.248.384 I llm_load_print_meta: ssm_d_inner      = 0
0.00.248.384 I llm_load_print_meta: ssm_d_state      = 0
0.00.248.384 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.248.384 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.248.385 I llm_load_print_meta: model type       = 2B
0.00.248.385 I llm_load_print_meta: model ftype      = Q8_0
0.00.248.386 I llm_load_print_meta: model params     = 2.51 B
0.00.248.387 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.248.387 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.248.388 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.248.388 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.248.388 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.248.389 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.248.390 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.248.391 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.248.392 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.248.392 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.248.392 I llm_load_print_meta: max token length = 93
0.00.248.411 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.402 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.323.410 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.323.410 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.323.411 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.323.411 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.323.412 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.328.830 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.836 I llama_new_context_with_model: n_batch    = 2048
0.00.328.836 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.837 I llama_new_context_with_model: flash_attn = 0
0.00.328.840 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.841 I llama_new_context_with_model: freq_scale = 1
0.00.359.050 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.066 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.159 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.012 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.020 I llama_new_context_with_model: graph nodes  = 601
0.00.360.020 I llama_new_context_with_model: graph splits = 1
0.00.360.023 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.772 I main: llama threadpool init, n_threads = 4
0.00.452.785 I 
0.00.452.858 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.862 I 
0.00.452.898 I sampler seed: 4127088570
0.00.452.908 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.911 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.911 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.911 I 
 increasels. 

I am unable to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.897.444 I llama_perf_sampler_print:    sampling time =       3.18 ms /    21 runs   (    0.15 ms per token,  6612.09 tokens per second)
0.01.897.448 I llama_perf_context_print:        load time =     450.80 ms
0.01.897.450 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.897.451 I llama_perf_context_print:        eval time =    1432.57 ms /    20 runs   (   71.63 ms per token,    13.96 tokens per second)
0.01.897.452 I llama_perf_context_print:       total time =    1444.68 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.576 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.877 I main: load the model and apply lora adapter, if any
0.00.023.784 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.833 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.841 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.847 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.851 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.856 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.858 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.868 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.871 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.872 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.872 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.878 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.878 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.879 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.880 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.880 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.067 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.734 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.702 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.709 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.710 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.711 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.711 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.712 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.713 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.716 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.717 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.717 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.718 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.139.719 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.723 I llama_model_loader: - type  f32:   37 tensors
0.00.139.726 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.248 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.224.670 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.225.564 I llm_load_vocab: special tokens cache size = 5
0.00.247.139 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.247.155 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.247.156 I llm_load_print_meta: arch             = gemma
0.00.247.156 I llm_load_print_meta: vocab type       = SPM
0.00.247.158 I llm_load_print_meta: n_vocab          = 256000
0.00.247.159 I llm_load_print_meta: n_merges         = 0
0.00.247.160 I llm_load_print_meta: vocab_only       = 0
0.00.247.160 I llm_load_print_meta: n_ctx_train      = 8192
0.00.247.162 I llm_load_print_meta: n_embd           = 2048
0.00.247.162 I llm_load_print_meta: n_layer          = 18
0.00.247.184 I llm_load_print_meta: n_head           = 8
0.00.247.186 I llm_load_print_meta: n_head_kv        = 1
0.00.247.186 I llm_load_print_meta: n_rot            = 256
0.00.247.187 I llm_load_print_meta: n_swa            = 0
0.00.247.188 I llm_load_print_meta: n_embd_head_k    = 256
0.00.247.188 I llm_load_print_meta: n_embd_head_v    = 256
0.00.247.190 I llm_load_print_meta: n_gqa            = 8
0.00.247.192 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.247.193 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.247.194 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.247.199 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.247.200 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.247.201 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.247.202 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.247.203 I llm_load_print_meta: n_ff             = 16384
0.00.247.204 I llm_load_print_meta: n_expert         = 0
0.00.247.204 I llm_load_print_meta: n_expert_used    = 0
0.00.247.204 I llm_load_print_meta: causal attn      = 1
0.00.247.205 I llm_load_print_meta: pooling type     = 0
0.00.247.206 I llm_load_print_meta: rope type        = 2
0.00.247.206 I llm_load_print_meta: rope scaling     = linear
0.00.247.208 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.247.209 I llm_load_print_meta: freq_scale_train = 1
0.00.247.210 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.247.210 I llm_load_print_meta: rope_finetuned   = unknown
0.00.247.211 I llm_load_print_meta: ssm_d_conv       = 0
0.00.247.212 I llm_load_print_meta: ssm_d_inner      = 0
0.00.247.212 I llm_load_print_meta: ssm_d_state      = 0
0.00.247.213 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.247.214 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.247.215 I llm_load_print_meta: model type       = 2B
0.00.247.216 I llm_load_print_meta: model ftype      = Q8_0
0.00.247.217 I llm_load_print_meta: model params     = 2.51 B
0.00.247.218 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.247.218 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.247.219 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.247.220 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.247.221 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.247.221 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.247.222 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.247.223 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.247.223 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.247.225 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.247.226 I llm_load_print_meta: max token length = 93
0.00.247.253 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.319.690 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.319.699 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.324.878 I llama_new_context_with_model: n_ctx      = 8192
0.00.324.885 I llama_new_context_with_model: n_batch    = 2048
0.00.324.886 I llama_new_context_with_model: n_ubatch   = 512
0.00.324.886 I llama_new_context_with_model: flash_attn = 0
0.00.324.890 I llama_new_context_with_model: freq_base  = 10000.0
0.00.324.891 I llama_new_context_with_model: freq_scale = 1
0.00.355.481 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.498 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.600 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.642 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.649 I llama_new_context_with_model: graph nodes  = 601
0.00.356.649 I llama_new_context_with_model: graph splits = 1
0.00.356.651 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.122 I main: llama threadpool init, n_threads = 4
0.00.466.138 I 
0.00.466.225 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.235 I 
0.00.466.278 I sampler seed: 2667509888
0.00.466.288 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.291 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.466.291 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.291 I 
 increasities?

I am unable to answer this question as it contains sexually suggestive content. I am programmed to provide safe and appropriate responses. [end of text]


0.02.710.078 I llama_perf_sampler_print:    sampling time =       4.74 ms /    30 runs   (    0.16 ms per token,  6335.80 tokens per second)
0.02.710.081 I llama_perf_context_print:        load time =     464.22 ms
0.02.710.082 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.710.084 I llama_perf_context_print:        eval time =    2226.67 ms /    29 runs   (   76.78 ms per token,    13.02 tokens per second)
0.02.710.084 I llama_perf_context_print:       total time =    2243.96 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.875s
user	0m35.832s
sys	0m9.635s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3852 (511636df)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32030.35 ms
main:    total time = 32030.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.619 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.812 I main: llama backend init
0.00.001.926 I main: load the model and apply lora adapter, if any
0.00.022.592 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.641 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.654 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.663 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.666 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.671 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.672 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.673 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.674 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.675 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.675 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.680 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.680 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.681 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.682 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.682 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.844 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.661 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.531 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.538 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.539 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.540 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.540 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.541 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.542 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.544 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.545 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.546 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.547 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.548 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.553 I llama_model_loader: - type  f32:   37 tensors
0.00.134.555 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.556 I llama_model_loader: - type q6_K:   19 tensors
0.00.193.298 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.689 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.473 I llm_load_vocab: special tokens cache size = 5
0.00.230.858 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.872 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.873 I llm_load_print_meta: arch             = gemma
0.00.230.873 I llm_load_print_meta: vocab type       = SPM
0.00.230.874 I llm_load_print_meta: n_vocab          = 256000
0.00.230.874 I llm_load_print_meta: n_merges         = 0
0.00.230.875 I llm_load_print_meta: vocab_only       = 0
0.00.230.875 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.875 I llm_load_print_meta: n_embd           = 2048
0.00.230.876 I llm_load_print_meta: n_layer          = 18
0.00.230.888 I llm_load_print_meta: n_head           = 8
0.00.230.889 I llm_load_print_meta: n_head_kv        = 1
0.00.230.890 I llm_load_print_meta: n_rot            = 256
0.00.230.890 I llm_load_print_meta: n_swa            = 0
0.00.230.890 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.890 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.891 I llm_load_print_meta: n_gqa            = 8
0.00.230.892 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.893 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.894 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.896 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.896 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.896 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.897 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.897 I llm_load_print_meta: n_ff             = 16384
0.00.230.898 I llm_load_print_meta: n_expert         = 0
0.00.230.898 I llm_load_print_meta: n_expert_used    = 0
0.00.230.898 I llm_load_print_meta: causal attn      = 1
0.00.230.898 I llm_load_print_meta: pooling type     = 0
0.00.230.898 I llm_load_print_meta: rope type        = 2
0.00.230.899 I llm_load_print_meta: rope scaling     = linear
0.00.230.900 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.901 I llm_load_print_meta: freq_scale_train = 1
0.00.230.902 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.902 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.902 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.903 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.903 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.903 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.903 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.904 I llm_load_print_meta: model type       = 2B
0.00.230.904 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.905 I llm_load_print_meta: model params     = 2.51 B
0.00.230.906 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.906 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.906 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.907 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.907 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.907 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.908 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.908 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.908 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.909 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.909 I llm_load_print_meta: max token length = 93
0.00.230.934 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.617 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.623 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.624 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.625 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.625 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.626 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.292.849 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.856 I llama_new_context_with_model: n_batch    = 2048
0.00.292.856 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.857 I llama_new_context_with_model: flash_attn = 0
0.00.292.860 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.860 I llama_new_context_with_model: freq_scale = 1
0.00.323.473 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.489 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.580 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.324.423 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.324.432 I llama_new_context_with_model: graph nodes  = 601
0.00.324.432 I llama_new_context_with_model: graph splits = 1
0.00.324.434 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.413.265 I main: llama threadpool init, n_threads = 4
0.00.413.279 I 
0.00.413.362 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.413.367 I 
0.00.413.412 I sampler seed: 2181996434
0.00.413.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.413.430 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.413.430 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.413.430 I 
 squaRED:

**What is the role of the cerebellum in movement?**

The cerebellum is crucial for coordinating and regulating motor functions, including smooth and precise

0.02.089.311 I llama_perf_sampler_print:    sampling time =       5.83 ms /    33 runs   (    0.18 ms per token,  5660.38 tokens per second)
0.02.089.313 I llama_perf_context_print:        load time =     411.32 ms
0.02.089.314 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.089.316 I llama_perf_context_print:        eval time =    1655.86 ms /    32 runs   (   51.75 ms per token,    19.33 tokens per second)
0.02.089.316 I llama_perf_context_print:       total time =    1676.05 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3852 (511636df)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32114.54 ms
main:    total time = 32114.54 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.553 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.022.380 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.393 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.401 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.402 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.406 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.407 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.408 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.408 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.409 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.410 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.414 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.415 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.416 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.416 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.417 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.524 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.453 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.389 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.396 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.397 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.398 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.399 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.400 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.401 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.405 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.405 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.409 I llama_model_loader: - type  f32:   37 tensors
0.00.134.412 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.413 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.161 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.090 I llm_load_vocab: special tokens cache size = 5
0.00.229.337 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.353 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.354 I llm_load_print_meta: arch             = gemma
0.00.229.354 I llm_load_print_meta: vocab type       = SPM
0.00.229.355 I llm_load_print_meta: n_vocab          = 256000
0.00.229.355 I llm_load_print_meta: n_merges         = 0
0.00.229.356 I llm_load_print_meta: vocab_only       = 0
0.00.229.356 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.356 I llm_load_print_meta: n_embd           = 2048
0.00.229.356 I llm_load_print_meta: n_layer          = 18
0.00.229.369 I llm_load_print_meta: n_head           = 8
0.00.229.370 I llm_load_print_meta: n_head_kv        = 1
0.00.229.370 I llm_load_print_meta: n_rot            = 256
0.00.229.370 I llm_load_print_meta: n_swa            = 0
0.00.229.371 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.371 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.372 I llm_load_print_meta: n_gqa            = 8
0.00.229.373 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.374 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.375 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.376 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.377 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.377 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.378 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.378 I llm_load_print_meta: n_ff             = 16384
0.00.229.379 I llm_load_print_meta: n_expert         = 0
0.00.229.379 I llm_load_print_meta: n_expert_used    = 0
0.00.229.379 I llm_load_print_meta: causal attn      = 1
0.00.229.379 I llm_load_print_meta: pooling type     = 0
0.00.229.380 I llm_load_print_meta: rope type        = 2
0.00.229.380 I llm_load_print_meta: rope scaling     = linear
0.00.229.381 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.382 I llm_load_print_meta: freq_scale_train = 1
0.00.229.382 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.383 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.383 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.383 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.384 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.384 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.384 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.385 I llm_load_print_meta: model type       = 2B
0.00.229.385 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.386 I llm_load_print_meta: model params     = 2.51 B
0.00.229.387 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.387 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.387 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.388 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.388 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.388 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.389 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.389 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.389 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.390 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.390 I llm_load_print_meta: max token length = 93
0.00.229.411 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.707.896 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.712.878 I llama_new_context_with_model: n_ctx      = 8192
0.00.712.884 I llama_new_context_with_model: n_batch    = 2048
0.00.712.885 I llama_new_context_with_model: n_ubatch   = 512
0.00.712.885 I llama_new_context_with_model: flash_attn = 0
0.00.712.888 I llama_new_context_with_model: freq_base  = 10000.0
0.00.712.888 I llama_new_context_with_model: freq_scale = 1
0.00.743.003 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.743.019 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.743.110 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.743.986 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.743.993 I llama_new_context_with_model: graph nodes  = 601
0.00.743.993 I llama_new_context_with_model: graph splits = 1
0.00.743.995 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.827.130 I main: llama threadpool init, n_threads = 4
0.00.827.144 I 
0.00.827.221 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.827.225 I 
0.00.827.261 I sampler seed: 310620532
0.00.827.271 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.827.274 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.827.274 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.827.274 I 
 maneuvorous spiders of the genus Atrax.

**Atrax** is a genus of spiders known for their complex social organization and predatory behavior. These spiders capture

0.02.505.220 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6979.70 tokens per second)
0.02.505.223 I llama_perf_context_print:        load time =     825.28 ms
0.02.505.224 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.505.226 I llama_perf_context_print:        eval time =    1659.86 ms /    32 runs   (   51.87 ms per token,    19.28 tokens per second)
0.02.505.227 I llama_perf_context_print:       total time =    1678.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.622s
user	8m15.298s
sys	0m7.254s
