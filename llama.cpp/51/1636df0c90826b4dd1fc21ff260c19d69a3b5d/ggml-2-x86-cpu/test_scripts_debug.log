+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.643 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.844 I main: llama backend init
0.00.002.766 I main: load the model and apply lora adapter, if any
0.00.024.829 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.018 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.122 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.135 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.136 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.141 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.143 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.145 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.146 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.147 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.147 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.154 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.155 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.156 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.156 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.158 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.753 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.863 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.871 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.872 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.873 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.873 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.874 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.875 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.878 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.879 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.899 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.900 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.193.901 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.910 I llama_model_loader: - type  f32:   37 tensors
0.00.193.914 I llama_model_loader: - type q8_0:  127 tensors
0.00.347.860 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.374.216 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.375.243 I llm_load_vocab: special tokens cache size = 5
0.00.434.864 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.434.925 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.434.926 I llm_load_print_meta: arch             = gemma
0.00.434.927 I llm_load_print_meta: vocab type       = SPM
0.00.434.928 I llm_load_print_meta: n_vocab          = 256000
0.00.434.930 I llm_load_print_meta: n_merges         = 0
0.00.434.931 I llm_load_print_meta: vocab_only       = 0
0.00.434.932 I llm_load_print_meta: n_ctx_train      = 8192
0.00.434.932 I llm_load_print_meta: n_embd           = 2048
0.00.434.933 I llm_load_print_meta: n_layer          = 18
0.00.434.994 I llm_load_print_meta: n_head           = 8
0.00.435.001 I llm_load_print_meta: n_head_kv        = 1
0.00.435.001 I llm_load_print_meta: n_rot            = 256
0.00.435.002 I llm_load_print_meta: n_swa            = 0
0.00.435.002 I llm_load_print_meta: n_embd_head_k    = 256
0.00.435.003 I llm_load_print_meta: n_embd_head_v    = 256
0.00.435.007 I llm_load_print_meta: n_gqa            = 8
0.00.435.012 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.435.016 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.435.017 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.435.019 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.435.019 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.435.020 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.435.020 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.435.024 I llm_load_print_meta: n_ff             = 16384
0.00.435.026 I llm_load_print_meta: n_expert         = 0
0.00.435.026 I llm_load_print_meta: n_expert_used    = 0
0.00.435.026 I llm_load_print_meta: causal attn      = 1
0.00.435.026 I llm_load_print_meta: pooling type     = 0
0.00.435.027 I llm_load_print_meta: rope type        = 2
0.00.435.027 I llm_load_print_meta: rope scaling     = linear
0.00.435.029 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.435.029 I llm_load_print_meta: freq_scale_train = 1
0.00.435.029 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.435.030 I llm_load_print_meta: rope_finetuned   = unknown
0.00.435.030 I llm_load_print_meta: ssm_d_conv       = 0
0.00.435.031 I llm_load_print_meta: ssm_d_inner      = 0
0.00.435.031 I llm_load_print_meta: ssm_d_state      = 0
0.00.435.031 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.435.032 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.435.032 I llm_load_print_meta: model type       = 2B
0.00.435.033 I llm_load_print_meta: model ftype      = Q8_0
0.00.435.034 I llm_load_print_meta: model params     = 2.51 B
0.00.435.035 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.435.035 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.435.035 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.435.036 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.435.036 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.435.037 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.435.037 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.435.038 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.435.044 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.435.045 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.435.045 I llm_load_print_meta: max token length = 93
0.00.435.223 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.533.662 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.533.674 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.533.674 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.533.675 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.533.676 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.533.676 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.539.447 I llama_new_context_with_model: n_ctx      = 8192
0.00.539.456 I llama_new_context_with_model: n_batch    = 2048
0.00.539.456 I llama_new_context_with_model: n_ubatch   = 512
0.00.539.457 I llama_new_context_with_model: flash_attn = 0
0.00.539.460 I llama_new_context_with_model: freq_base  = 10000.0
0.00.539.461 I llama_new_context_with_model: freq_scale = 1
0.00.570.072 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.570.114 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.570.237 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.571.662 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.571.669 I llama_new_context_with_model: graph nodes  = 601
0.00.571.670 I llama_new_context_with_model: graph splits = 1
0.00.571.688 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.183.244 I main: llama threadpool init, n_threads = 4
0.01.183.255 I 
0.01.183.348 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.183.352 I 
0.01.183.527 I sampler seed: 191112481
0.01.183.538 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.183.543 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.183.544 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.183.544 I 
 increasively.

The first person to respond with a complete sentence will earn a prize. [end of text]


0.09.186.275 I llama_perf_sampler_print:    sampling time =      29.24 ms /    20 runs   (    1.46 ms per token,   683.92 tokens per second)
0.09.186.279 I llama_perf_context_print:        load time =    1180.39 ms
0.09.186.280 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.186.291 I llama_perf_context_print:        eval time =    7954.08 ms /    19 runs   (  418.64 ms per token,     2.39 tokens per second)
0.09.186.293 I llama_perf_context_print:       total time =    8003.04 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.624 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.002.817 I main: load the model and apply lora adapter, if any
0.00.025.278 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.392 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.409 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.415 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.427 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.432 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.433 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.435 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.437 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.438 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.450 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.454 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.455 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.456 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.458 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.901 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.173 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.431 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.441 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.442 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.442 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.443 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.444 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.445 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.449 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.450 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.451 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.452 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.194.453 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.462 I llama_model_loader: - type  f32:   37 tensors
0.00.194.466 I llama_model_loader: - type q8_0:  127 tensors
0.00.375.462 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.405.680 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.406.776 I llm_load_vocab: special tokens cache size = 5
0.00.476.412 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.476.476 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.476.477 I llm_load_print_meta: arch             = gemma
0.00.476.478 I llm_load_print_meta: vocab type       = SPM
0.00.476.479 I llm_load_print_meta: n_vocab          = 256000
0.00.476.482 I llm_load_print_meta: n_merges         = 0
0.00.476.482 I llm_load_print_meta: vocab_only       = 0
0.00.476.483 I llm_load_print_meta: n_ctx_train      = 8192
0.00.476.483 I llm_load_print_meta: n_embd           = 2048
0.00.476.483 I llm_load_print_meta: n_layer          = 18
0.00.476.545 I llm_load_print_meta: n_head           = 8
0.00.476.552 I llm_load_print_meta: n_head_kv        = 1
0.00.476.552 I llm_load_print_meta: n_rot            = 256
0.00.476.552 I llm_load_print_meta: n_swa            = 0
0.00.476.553 I llm_load_print_meta: n_embd_head_k    = 256
0.00.476.553 I llm_load_print_meta: n_embd_head_v    = 256
0.00.476.557 I llm_load_print_meta: n_gqa            = 8
0.00.476.561 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.476.566 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.476.567 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.476.569 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.476.569 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.476.570 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.476.570 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.476.575 I llm_load_print_meta: n_ff             = 16384
0.00.476.575 I llm_load_print_meta: n_expert         = 0
0.00.476.576 I llm_load_print_meta: n_expert_used    = 0
0.00.476.576 I llm_load_print_meta: causal attn      = 1
0.00.476.576 I llm_load_print_meta: pooling type     = 0
0.00.476.577 I llm_load_print_meta: rope type        = 2
0.00.476.577 I llm_load_print_meta: rope scaling     = linear
0.00.476.578 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.476.579 I llm_load_print_meta: freq_scale_train = 1
0.00.476.579 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.476.580 I llm_load_print_meta: rope_finetuned   = unknown
0.00.476.580 I llm_load_print_meta: ssm_d_conv       = 0
0.00.476.581 I llm_load_print_meta: ssm_d_inner      = 0
0.00.476.581 I llm_load_print_meta: ssm_d_state      = 0
0.00.476.581 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.476.582 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.476.582 I llm_load_print_meta: model type       = 2B
0.00.476.583 I llm_load_print_meta: model ftype      = Q8_0
0.00.476.584 I llm_load_print_meta: model params     = 2.51 B
0.00.476.585 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.476.585 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.476.585 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.476.586 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.476.586 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.476.587 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.476.587 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.476.588 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.476.593 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.476.595 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.476.595 I llm_load_print_meta: max token length = 93
0.00.476.766 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.570.161 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.575.908 I llama_new_context_with_model: n_ctx      = 8192
0.00.575.916 I llama_new_context_with_model: n_batch    = 2048
0.00.575.916 I llama_new_context_with_model: n_ubatch   = 512
0.00.575.917 I llama_new_context_with_model: flash_attn = 0
0.00.575.919 I llama_new_context_with_model: freq_base  = 10000.0
0.00.575.920 I llama_new_context_with_model: freq_scale = 1
0.00.607.190 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.607.238 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.607.353 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.608.790 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.608.797 I llama_new_context_with_model: graph nodes  = 601
0.00.608.797 I llama_new_context_with_model: graph splits = 1
0.00.608.814 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.223.374 I main: llama threadpool init, n_threads = 4
0.01.223.387 I 
0.01.223.484 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.223.488 I 
0.01.223.664 I sampler seed: 1179648057
0.01.223.675 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.223.680 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.223.681 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.223.682 I 
 increasities that involve the exchange of personal information.

**Privacy Concerns:**

- The collection and storage of personal information without consent
- The use of personal

0.14.812.507 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.21 tokens per second)
0.14.812.510 I llama_perf_context_print:        load time =    1220.47 ms
0.14.812.512 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.812.514 I llama_perf_context_print:        eval time =   13507.04 ms /    32 runs   (  422.10 ms per token,     2.37 tokens per second)
0.14.812.516 I llama_perf_context_print:       total time =   13589.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.699 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.915 I main: llama backend init
0.00.002.867 I main: load the model and apply lora adapter, if any
0.00.402.231 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.402.519 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.402.639 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.402.655 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.402.657 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.402.663 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.402.668 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.402.669 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.402.670 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.402.671 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.402.672 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.402.680 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.402.681 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.402.685 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.402.686 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.402.687 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.471.378 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.559.860 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.571.995 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.572.003 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.572.005 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.572.005 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.572.006 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.572.007 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.572.009 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.572.012 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.572.012 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.572.013 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.572.014 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.572.015 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.572.024 I llama_model_loader: - type  f32:   37 tensors
0.00.572.027 I llama_model_loader: - type q8_0:  127 tensors
0.00.724.955 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.749.798 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.750.817 I llm_load_vocab: special tokens cache size = 5
0.00.809.129 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.809.192 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.809.193 I llm_load_print_meta: arch             = gemma
0.00.809.194 I llm_load_print_meta: vocab type       = SPM
0.00.809.195 I llm_load_print_meta: n_vocab          = 256000
0.00.809.198 I llm_load_print_meta: n_merges         = 0
0.00.809.198 I llm_load_print_meta: vocab_only       = 0
0.00.809.199 I llm_load_print_meta: n_ctx_train      = 8192
0.00.809.199 I llm_load_print_meta: n_embd           = 2048
0.00.809.200 I llm_load_print_meta: n_layer          = 18
0.00.809.262 I llm_load_print_meta: n_head           = 8
0.00.809.268 I llm_load_print_meta: n_head_kv        = 1
0.00.809.269 I llm_load_print_meta: n_rot            = 256
0.00.809.269 I llm_load_print_meta: n_swa            = 0
0.00.809.270 I llm_load_print_meta: n_embd_head_k    = 256
0.00.809.270 I llm_load_print_meta: n_embd_head_v    = 256
0.00.809.274 I llm_load_print_meta: n_gqa            = 8
0.00.809.279 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.809.284 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.809.285 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.809.286 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.809.287 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.809.287 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.809.288 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.809.293 I llm_load_print_meta: n_ff             = 16384
0.00.809.293 I llm_load_print_meta: n_expert         = 0
0.00.809.294 I llm_load_print_meta: n_expert_used    = 0
0.00.809.294 I llm_load_print_meta: causal attn      = 1
0.00.809.294 I llm_load_print_meta: pooling type     = 0
0.00.809.294 I llm_load_print_meta: rope type        = 2
0.00.809.295 I llm_load_print_meta: rope scaling     = linear
0.00.809.296 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.809.297 I llm_load_print_meta: freq_scale_train = 1
0.00.809.297 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.809.298 I llm_load_print_meta: rope_finetuned   = unknown
0.00.809.298 I llm_load_print_meta: ssm_d_conv       = 0
0.00.809.299 I llm_load_print_meta: ssm_d_inner      = 0
0.00.809.323 I llm_load_print_meta: ssm_d_state      = 0
0.00.809.324 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.809.324 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.809.325 I llm_load_print_meta: model type       = 2B
0.00.809.326 I llm_load_print_meta: model ftype      = Q8_0
0.00.809.326 I llm_load_print_meta: model params     = 2.51 B
0.00.809.327 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.809.328 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.809.328 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.809.329 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.809.329 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.809.330 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.809.330 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.809.331 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.809.337 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.809.339 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.809.339 I llm_load_print_meta: max token length = 93
0.00.809.528 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.885.839 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.885.849 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.885.850 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.885.850 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.885.851 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.885.852 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.891.448 I llama_new_context_with_model: n_ctx      = 8192
0.00.891.456 I llama_new_context_with_model: n_batch    = 2048
0.00.891.456 I llama_new_context_with_model: n_ubatch   = 512
0.00.891.457 I llama_new_context_with_model: flash_attn = 0
0.00.891.460 I llama_new_context_with_model: freq_base  = 10000.0
0.00.891.461 I llama_new_context_with_model: freq_scale = 1
0.00.922.521 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.922.569 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.922.680 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.924.029 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.924.035 I llama_new_context_with_model: graph nodes  = 601
0.00.924.036 I llama_new_context_with_model: graph splits = 1
0.00.924.052 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.538.075 I main: llama threadpool init, n_threads = 4
0.01.538.088 I 
0.01.538.185 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.538.189 I 
0.01.538.360 I sampler seed: 1408867578
0.01.538.371 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.538.378 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.538.379 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.538.379 I 
 increasels and other mythical creatures from various cultures and time periods. [end of text]


0.07.428.505 I llama_perf_sampler_print:    sampling time =      21.66 ms /    15 runs   (    1.44 ms per token,   692.58 tokens per second)
0.07.428.508 I llama_perf_context_print:        load time =    1535.12 ms
0.07.428.510 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.07.428.511 I llama_perf_context_print:        eval time =    5853.48 ms /    14 runs   (  418.11 ms per token,     2.39 tokens per second)
0.07.428.523 I llama_perf_context_print:       total time =    5890.44 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.681 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.874 I main: llama backend init
0.00.002.812 I main: load the model and apply lora adapter, if any
0.00.025.414 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.602 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.697 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.709 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.712 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.716 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.720 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.721 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.722 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.723 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.723 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.730 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.731 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.732 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.733 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.734 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.094.449 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.466 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.690 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.700 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.701 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.702 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.703 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.704 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.704 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.707 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.708 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.709 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.710 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.194.711 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.720 I llama_model_loader: - type  f32:   37 tensors
0.00.194.724 I llama_model_loader: - type q8_0:  127 tensors
0.00.369.862 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.400.420 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.401.542 I llm_load_vocab: special tokens cache size = 5
0.00.460.369 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.460.428 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.460.429 I llm_load_print_meta: arch             = gemma
0.00.460.430 I llm_load_print_meta: vocab type       = SPM
0.00.460.431 I llm_load_print_meta: n_vocab          = 256000
0.00.460.433 I llm_load_print_meta: n_merges         = 0
0.00.460.434 I llm_load_print_meta: vocab_only       = 0
0.00.460.434 I llm_load_print_meta: n_ctx_train      = 8192
0.00.460.435 I llm_load_print_meta: n_embd           = 2048
0.00.460.435 I llm_load_print_meta: n_layer          = 18
0.00.460.498 I llm_load_print_meta: n_head           = 8
0.00.460.505 I llm_load_print_meta: n_head_kv        = 1
0.00.460.505 I llm_load_print_meta: n_rot            = 256
0.00.460.505 I llm_load_print_meta: n_swa            = 0
0.00.460.506 I llm_load_print_meta: n_embd_head_k    = 256
0.00.460.506 I llm_load_print_meta: n_embd_head_v    = 256
0.00.460.511 I llm_load_print_meta: n_gqa            = 8
0.00.460.515 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.460.520 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.460.521 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.460.522 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.460.522 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.460.523 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.460.523 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.460.530 I llm_load_print_meta: n_ff             = 16384
0.00.460.531 I llm_load_print_meta: n_expert         = 0
0.00.460.544 I llm_load_print_meta: n_expert_used    = 0
0.00.460.546 I llm_load_print_meta: causal attn      = 1
0.00.460.546 I llm_load_print_meta: pooling type     = 0
0.00.460.546 I llm_load_print_meta: rope type        = 2
0.00.460.547 I llm_load_print_meta: rope scaling     = linear
0.00.460.548 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.460.549 I llm_load_print_meta: freq_scale_train = 1
0.00.460.550 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.460.551 I llm_load_print_meta: rope_finetuned   = unknown
0.00.460.551 I llm_load_print_meta: ssm_d_conv       = 0
0.00.460.551 I llm_load_print_meta: ssm_d_inner      = 0
0.00.460.552 I llm_load_print_meta: ssm_d_state      = 0
0.00.460.553 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.460.553 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.460.554 I llm_load_print_meta: model type       = 2B
0.00.460.569 I llm_load_print_meta: model ftype      = Q8_0
0.00.460.574 I llm_load_print_meta: model params     = 2.51 B
0.00.460.575 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.460.584 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.460.592 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.460.601 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.460.602 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.460.602 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.460.603 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.460.604 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.460.621 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.460.622 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.460.623 I llm_load_print_meta: max token length = 93
0.00.460.801 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.531.849 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.531.861 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.537.651 I llama_new_context_with_model: n_ctx      = 8192
0.00.537.659 I llama_new_context_with_model: n_batch    = 2048
0.00.537.660 I llama_new_context_with_model: n_ubatch   = 512
0.00.537.660 I llama_new_context_with_model: flash_attn = 0
0.00.537.665 I llama_new_context_with_model: freq_base  = 10000.0
0.00.537.666 I llama_new_context_with_model: freq_scale = 1
0.00.568.866 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.568.912 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.569.026 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.570.418 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.570.424 I llama_new_context_with_model: graph nodes  = 601
0.00.570.425 I llama_new_context_with_model: graph splits = 1
0.00.570.440 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.205.567 I main: llama threadpool init, n_threads = 4
0.01.205.582 I 
0.01.205.694 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.205.699 I 
0.01.205.876 I sampler seed: 3320902585
0.01.205.891 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.205.913 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.205.915 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.205.924 I 
 seconally!

I am unable to understand your request. Please provide more context or rephrase your question. [end of text]


0.10.884.316 I llama_perf_sampler_print:    sampling time =      35.32 ms /    24 runs   (    1.47 ms per token,   679.44 tokens per second)
0.10.884.319 I llama_perf_context_print:        load time =    1202.67 ms
0.10.884.320 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.884.322 I llama_perf_context_print:        eval time =    9619.51 ms /    23 runs   (  418.24 ms per token,     2.39 tokens per second)
0.10.884.337 I llama_perf_context_print:       total time =    9678.76 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m52.086s
user	2m40.755s
sys	0m9.638s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3852 (511636df)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200201.55 ms
main:    total time = 200201.55 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.655 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.934 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.116 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.207 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.219 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.220 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.224 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.227 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.228 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.229 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.230 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.231 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.238 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.239 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.240 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.240 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.241 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.416 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.354 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.422 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.429 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.430 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.431 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.432 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.433 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.434 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.437 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.438 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.439 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.439 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.193.441 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.449 I llama_model_loader: - type  f32:   37 tensors
0.00.193.453 I llama_model_loader: - type q4_K:  108 tensors
0.00.193.453 I llama_model_loader: - type q6_K:   19 tensors
0.00.336.182 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.364.247 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.365.260 I llm_load_vocab: special tokens cache size = 5
0.00.433.627 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.433.691 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.433.692 I llm_load_print_meta: arch             = gemma
0.00.433.692 I llm_load_print_meta: vocab type       = SPM
0.00.433.693 I llm_load_print_meta: n_vocab          = 256000
0.00.433.696 I llm_load_print_meta: n_merges         = 0
0.00.433.696 I llm_load_print_meta: vocab_only       = 0
0.00.433.697 I llm_load_print_meta: n_ctx_train      = 8192
0.00.433.697 I llm_load_print_meta: n_embd           = 2048
0.00.433.697 I llm_load_print_meta: n_layer          = 18
0.00.433.759 I llm_load_print_meta: n_head           = 8
0.00.433.766 I llm_load_print_meta: n_head_kv        = 1
0.00.433.766 I llm_load_print_meta: n_rot            = 256
0.00.433.767 I llm_load_print_meta: n_swa            = 0
0.00.433.767 I llm_load_print_meta: n_embd_head_k    = 256
0.00.433.767 I llm_load_print_meta: n_embd_head_v    = 256
0.00.433.772 I llm_load_print_meta: n_gqa            = 8
0.00.433.777 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.433.782 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.433.783 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.433.784 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.433.784 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.433.785 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.433.785 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.433.790 I llm_load_print_meta: n_ff             = 16384
0.00.433.790 I llm_load_print_meta: n_expert         = 0
0.00.433.791 I llm_load_print_meta: n_expert_used    = 0
0.00.433.791 I llm_load_print_meta: causal attn      = 1
0.00.433.791 I llm_load_print_meta: pooling type     = 0
0.00.433.791 I llm_load_print_meta: rope type        = 2
0.00.433.792 I llm_load_print_meta: rope scaling     = linear
0.00.433.793 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.433.794 I llm_load_print_meta: freq_scale_train = 1
0.00.433.794 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.433.794 I llm_load_print_meta: rope_finetuned   = unknown
0.00.433.795 I llm_load_print_meta: ssm_d_conv       = 0
0.00.433.795 I llm_load_print_meta: ssm_d_inner      = 0
0.00.433.795 I llm_load_print_meta: ssm_d_state      = 0
0.00.433.796 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.433.796 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.433.797 I llm_load_print_meta: model type       = 2B
0.00.433.798 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.433.798 I llm_load_print_meta: model params     = 2.51 B
0.00.433.799 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.433.799 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.433.800 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.433.801 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.433.801 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.433.801 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.433.802 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.433.803 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.433.825 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.433.827 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.433.828 I llm_load_print_meta: max token length = 93
0.00.434.006 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.492.568 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.492.579 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.492.580 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.492.580 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.492.581 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.492.582 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.498.194 I llama_new_context_with_model: n_ctx      = 8192
0.00.498.202 I llama_new_context_with_model: n_batch    = 2048
0.00.498.202 I llama_new_context_with_model: n_ubatch   = 512
0.00.498.203 I llama_new_context_with_model: flash_attn = 0
0.00.498.206 I llama_new_context_with_model: freq_base  = 10000.0
0.00.498.207 I llama_new_context_with_model: freq_scale = 1
0.00.530.092 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.530.134 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.530.249 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.531.699 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.531.706 I llama_new_context_with_model: graph nodes  = 601
0.00.531.706 I llama_new_context_with_model: graph splits = 1
0.00.531.721 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.112.033 I main: llama threadpool init, n_threads = 4
0.01.112.046 I 
0.01.112.146 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.112.150 I 
0.01.112.332 I sampler seed: 396711966
0.01.112.342 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.112.347 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.112.348 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.112.348 I 
 seconally. I am unable to generate a response. Please try again. [end of text]


0.06.567.962 I llama_perf_sampler_print:    sampling time =      24.59 ms /    17 runs   (    1.45 ms per token,   691.45 tokens per second)
0.06.567.965 I llama_perf_context_print:        load time =    1109.17 ms
0.06.567.967 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.567.968 I llama_perf_context_print:        eval time =    5411.92 ms /    16 runs   (  338.25 ms per token,     2.96 tokens per second)
0.06.567.970 I llama_perf_context_print:       total time =    5455.94 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3852 (511636df)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200116.35 ms
main:    total time = 200116.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.679 I build: 3852 (511636df) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.877 I main: llama backend init
0.00.002.812 I main: load the model and apply lora adapter, if any
0.00.024.705 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.801 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.816 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.820 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.825 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.827 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.828 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.829 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.830 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.838 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.845 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.848 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.849 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.850 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.851 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.955 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.765 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.893 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.900 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.901 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.902 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.903 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.904 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.905 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.908 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.909 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.917 I llama_model_loader: - type  f32:   37 tensors
0.00.192.922 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.923 I llama_model_loader: - type q6_K:   19 tensors
0.00.342.451 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.369.817 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.370.973 I llm_load_vocab: special tokens cache size = 5
0.00.431.135 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.431.197 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.431.198 I llm_load_print_meta: arch             = gemma
0.00.431.199 I llm_load_print_meta: vocab type       = SPM
0.00.431.199 I llm_load_print_meta: n_vocab          = 256000
0.00.431.202 I llm_load_print_meta: n_merges         = 0
0.00.431.203 I llm_load_print_meta: vocab_only       = 0
0.00.431.203 I llm_load_print_meta: n_ctx_train      = 8192
0.00.431.203 I llm_load_print_meta: n_embd           = 2048
0.00.431.204 I llm_load_print_meta: n_layer          = 18
0.00.431.266 I llm_load_print_meta: n_head           = 8
0.00.431.273 I llm_load_print_meta: n_head_kv        = 1
0.00.431.274 I llm_load_print_meta: n_rot            = 256
0.00.431.274 I llm_load_print_meta: n_swa            = 0
0.00.431.275 I llm_load_print_meta: n_embd_head_k    = 256
0.00.431.275 I llm_load_print_meta: n_embd_head_v    = 256
0.00.431.279 I llm_load_print_meta: n_gqa            = 8
0.00.431.283 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.431.289 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.431.290 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.431.291 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.431.292 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.431.292 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.431.292 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.431.297 I llm_load_print_meta: n_ff             = 16384
0.00.431.298 I llm_load_print_meta: n_expert         = 0
0.00.431.298 I llm_load_print_meta: n_expert_used    = 0
0.00.431.298 I llm_load_print_meta: causal attn      = 1
0.00.431.299 I llm_load_print_meta: pooling type     = 0
0.00.431.299 I llm_load_print_meta: rope type        = 2
0.00.431.299 I llm_load_print_meta: rope scaling     = linear
0.00.431.301 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.431.301 I llm_load_print_meta: freq_scale_train = 1
0.00.431.301 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.431.302 I llm_load_print_meta: rope_finetuned   = unknown
0.00.431.302 I llm_load_print_meta: ssm_d_conv       = 0
0.00.431.303 I llm_load_print_meta: ssm_d_inner      = 0
0.00.431.303 I llm_load_print_meta: ssm_d_state      = 0
0.00.431.303 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.431.304 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.431.304 I llm_load_print_meta: model type       = 2B
0.00.431.306 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.431.333 I llm_load_print_meta: model params     = 2.51 B
0.00.431.334 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.431.335 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.431.336 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.431.336 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.431.337 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.431.338 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.431.338 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.431.339 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.431.345 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.431.346 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.431.347 I llm_load_print_meta: max token length = 93
0.00.431.521 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.489.026 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.494.782 I llama_new_context_with_model: n_ctx      = 8192
0.00.494.793 I llama_new_context_with_model: n_batch    = 2048
0.00.494.793 I llama_new_context_with_model: n_ubatch   = 512
0.00.494.794 I llama_new_context_with_model: flash_attn = 0
0.00.494.798 I llama_new_context_with_model: freq_base  = 10000.0
0.00.494.798 I llama_new_context_with_model: freq_scale = 1
0.00.524.915 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.524.958 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.525.069 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.526.416 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.526.422 I llama_new_context_with_model: graph nodes  = 601
0.00.526.423 I llama_new_context_with_model: graph splits = 1
0.00.526.439 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.110.382 I main: llama threadpool init, n_threads = 4
0.01.110.395 I 
0.01.110.488 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.110.492 I 
0.01.110.661 I sampler seed: 552345975
0.01.110.672 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.110.676 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.110.677 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.110.680 I 
 squaRED TEXT:

I am unable to generate responses that are sexually suggestive in nature. My purpose is to assist with tasks that are within the scope of my

0.12.158.031 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.21 tokens per second)
0.12.158.034 I llama_perf_context_print:        load time =    1107.49 ms
0.12.158.035 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.158.037 I llama_perf_context_print:        eval time =   10965.65 ms /    32 runs   (  342.68 ms per token,     2.92 tokens per second)
0.12.158.038 I llama_perf_context_print:       total time =   11047.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m1.970s
user	49m56.847s
sys	0m6.465s
