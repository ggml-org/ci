+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.639 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.858 I main: llama backend init
0.00.001.978 I main: load the model and apply lora adapter, if any
0.00.022.142 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.187 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.194 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.199 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.202 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.206 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.207 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.207 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.208 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.209 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.210 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.214 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.215 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.216 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.216 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.217 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.647 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.410 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.177 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.183 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.184 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.184 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.185 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.186 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.186 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.189 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.190 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.191 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.192 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.193 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.196 I llama_model_loader: - type  f32:   37 tensors
0.00.131.200 I llama_model_loader: - type q8_0:  127 tensors
0.00.185.407 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.486 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.161 I llm_load_vocab: special tokens cache size = 5
0.00.221.832 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.848 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.848 I llm_load_print_meta: arch             = gemma
0.00.221.848 I llm_load_print_meta: vocab type       = SPM
0.00.221.849 I llm_load_print_meta: n_vocab          = 256000
0.00.221.849 I llm_load_print_meta: n_merges         = 0
0.00.221.850 I llm_load_print_meta: vocab_only       = 0
0.00.221.850 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.850 I llm_load_print_meta: n_embd           = 2048
0.00.221.851 I llm_load_print_meta: n_layer          = 18
0.00.221.864 I llm_load_print_meta: n_head           = 8
0.00.221.865 I llm_load_print_meta: n_head_kv        = 1
0.00.221.865 I llm_load_print_meta: n_rot            = 256
0.00.221.865 I llm_load_print_meta: n_swa            = 0
0.00.221.865 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.866 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.866 I llm_load_print_meta: n_gqa            = 8
0.00.221.867 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.868 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.869 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.870 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.870 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.871 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.871 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.872 I llm_load_print_meta: n_ff             = 16384
0.00.221.872 I llm_load_print_meta: n_expert         = 0
0.00.221.873 I llm_load_print_meta: n_expert_used    = 0
0.00.221.873 I llm_load_print_meta: causal attn      = 1
0.00.221.873 I llm_load_print_meta: pooling type     = 0
0.00.221.873 I llm_load_print_meta: rope type        = 2
0.00.221.874 I llm_load_print_meta: rope scaling     = linear
0.00.221.875 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.876 I llm_load_print_meta: freq_scale_train = 1
0.00.221.876 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.877 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.877 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.877 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.878 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.878 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.879 I llm_load_print_meta: model type       = 2B
0.00.221.879 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.880 I llm_load_print_meta: model params     = 2.51 B
0.00.221.881 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.882 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.882 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.883 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.884 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.884 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.885 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.885 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.886 I llm_load_print_meta: max token length = 93
0.00.221.914 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.373 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.320.382 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.320.383 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.320.384 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.320.384 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.320.385 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.325.601 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.608 I llama_new_context_with_model: n_batch    = 2048
0.00.325.608 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.609 I llama_new_context_with_model: flash_attn = 0
0.00.325.612 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.612 I llama_new_context_with_model: freq_scale = 1
0.00.354.860 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.876 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.966 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.836 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.845 I llama_new_context_with_model: graph nodes  = 601
0.00.355.845 I llama_new_context_with_model: graph splits = 1
0.00.355.847 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.995 I main: llama threadpool init, n_threads = 4
0.00.447.008 I 
0.00.447.097 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.103 I 
0.00.447.149 I sampler seed: 1340083505
0.00.447.158 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.161 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.447.162 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.162 I 
 increadibly in complexity and difficulty.

I'm not sure how to proceed.

**Response:**

I understand that you're feeling overwhelmed by the

0.02.701.665 I llama_perf_sampler_print:    sampling time =       4.87 ms /    33 runs   (    0.15 ms per token,  6778.96 tokens per second)
0.02.701.668 I llama_perf_context_print:        load time =     444.99 ms
0.02.701.669 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.701.671 I llama_perf_context_print:        eval time =    2235.76 ms /    32 runs   (   69.87 ms per token,    14.31 tokens per second)
0.02.701.671 I llama_perf_context_print:       total time =    2254.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.533 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.001.788 I main: load the model and apply lora adapter, if any
0.00.021.789 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.801 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.808 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.809 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.813 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.813 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.814 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.815 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.816 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.818 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.823 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.823 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.824 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.825 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.826 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.962 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.922 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.759 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.765 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.766 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.767 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.767 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.768 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.769 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.772 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.772 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.773 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.774 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.774 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.778 I llama_model_loader: - type  f32:   37 tensors
0.00.130.780 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.702 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.938 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.705 I llm_load_vocab: special tokens cache size = 5
0.00.224.696 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.708 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.709 I llm_load_print_meta: arch             = gemma
0.00.224.710 I llm_load_print_meta: vocab type       = SPM
0.00.224.711 I llm_load_print_meta: n_vocab          = 256000
0.00.224.711 I llm_load_print_meta: n_merges         = 0
0.00.224.712 I llm_load_print_meta: vocab_only       = 0
0.00.224.712 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.712 I llm_load_print_meta: n_embd           = 2048
0.00.224.713 I llm_load_print_meta: n_layer          = 18
0.00.224.725 I llm_load_print_meta: n_head           = 8
0.00.224.726 I llm_load_print_meta: n_head_kv        = 1
0.00.224.726 I llm_load_print_meta: n_rot            = 256
0.00.224.726 I llm_load_print_meta: n_swa            = 0
0.00.224.727 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.727 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.728 I llm_load_print_meta: n_gqa            = 8
0.00.224.729 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.730 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.730 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.731 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.732 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.732 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.733 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.734 I llm_load_print_meta: n_ff             = 16384
0.00.224.734 I llm_load_print_meta: n_expert         = 0
0.00.224.734 I llm_load_print_meta: n_expert_used    = 0
0.00.224.734 I llm_load_print_meta: causal attn      = 1
0.00.224.735 I llm_load_print_meta: pooling type     = 0
0.00.224.735 I llm_load_print_meta: rope type        = 2
0.00.224.735 I llm_load_print_meta: rope scaling     = linear
0.00.224.737 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.737 I llm_load_print_meta: freq_scale_train = 1
0.00.224.737 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.738 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.738 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.740 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.740 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.740 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.741 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.742 I llm_load_print_meta: model type       = 2B
0.00.224.743 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.755 I llm_load_print_meta: model params     = 2.51 B
0.00.224.757 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.757 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.758 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.759 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.759 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.759 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.760 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.760 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.761 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.762 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.766 I llm_load_print_meta: max token length = 93
0.00.224.785 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.789 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.082 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.088 I llama_new_context_with_model: n_batch    = 2048
0.00.323.088 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.089 I llama_new_context_with_model: flash_attn = 0
0.00.323.091 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.092 I llama_new_context_with_model: freq_scale = 1
0.00.352.297 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.312 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.407 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.268 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.275 I llama_new_context_with_model: graph nodes  = 601
0.00.353.276 I llama_new_context_with_model: graph splits = 1
0.00.353.277 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.059 I main: llama threadpool init, n_threads = 4
0.00.440.071 I 
0.00.440.148 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.152 I 
0.00.440.189 I sampler seed: 1335503138
0.00.440.198 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.200 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.201 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.201 I 
 increasities can occur in a variety of situations. Here are some examples:

- **When a person is exposed to a strong odor:** This can trigger an

0.02.603.091 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6987.08 tokens per second)
0.02.603.094 I llama_perf_context_print:        load time =     438.25 ms
0.02.603.095 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.603.097 I llama_perf_context_print:        eval time =    2144.30 ms /    32 runs   (   67.01 ms per token,    14.92 tokens per second)
0.02.603.098 I llama_perf_context_print:       total time =    2163.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.560 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.171 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.220 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.231 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.237 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.238 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.243 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.247 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.248 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.248 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.249 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.249 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.254 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.255 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.255 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.256 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.674 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.174 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.040 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.048 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.048 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.049 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.049 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.051 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.052 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.055 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.055 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.057 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.057 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.058 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.063 I llama_model_loader: - type  f32:   37 tensors
0.00.132.065 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.956 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.670 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.443 I llm_load_vocab: special tokens cache size = 5
0.00.223.390 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.404 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.405 I llm_load_print_meta: arch             = gemma
0.00.223.406 I llm_load_print_meta: vocab type       = SPM
0.00.223.407 I llm_load_print_meta: n_vocab          = 256000
0.00.223.407 I llm_load_print_meta: n_merges         = 0
0.00.223.408 I llm_load_print_meta: vocab_only       = 0
0.00.223.408 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.408 I llm_load_print_meta: n_embd           = 2048
0.00.223.408 I llm_load_print_meta: n_layer          = 18
0.00.223.421 I llm_load_print_meta: n_head           = 8
0.00.223.422 I llm_load_print_meta: n_head_kv        = 1
0.00.223.422 I llm_load_print_meta: n_rot            = 256
0.00.223.423 I llm_load_print_meta: n_swa            = 0
0.00.223.423 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.423 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.424 I llm_load_print_meta: n_gqa            = 8
0.00.223.425 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.426 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.426 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.427 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.428 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.428 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.429 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.430 I llm_load_print_meta: n_ff             = 16384
0.00.223.430 I llm_load_print_meta: n_expert         = 0
0.00.223.430 I llm_load_print_meta: n_expert_used    = 0
0.00.223.431 I llm_load_print_meta: causal attn      = 1
0.00.223.431 I llm_load_print_meta: pooling type     = 0
0.00.223.431 I llm_load_print_meta: rope type        = 2
0.00.223.431 I llm_load_print_meta: rope scaling     = linear
0.00.223.433 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.433 I llm_load_print_meta: freq_scale_train = 1
0.00.223.433 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.434 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.434 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.435 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.435 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.435 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.436 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.436 I llm_load_print_meta: model type       = 2B
0.00.223.437 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.437 I llm_load_print_meta: model params     = 2.51 B
0.00.223.438 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.439 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.439 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.439 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.440 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.440 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.440 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.441 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.441 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.442 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.442 I llm_load_print_meta: max token length = 93
0.00.223.470 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.298.284 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.298.290 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.291 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.298.292 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.298.292 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.293 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.303.384 I llama_new_context_with_model: n_ctx      = 8192
0.00.303.392 I llama_new_context_with_model: n_batch    = 2048
0.00.303.392 I llama_new_context_with_model: n_ubatch   = 512
0.00.303.393 I llama_new_context_with_model: flash_attn = 0
0.00.303.396 I llama_new_context_with_model: freq_base  = 10000.0
0.00.303.397 I llama_new_context_with_model: freq_scale = 1
0.00.333.459 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.475 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.333.568 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.428 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.436 I llama_new_context_with_model: graph nodes  = 601
0.00.334.436 I llama_new_context_with_model: graph splits = 1
0.00.334.438 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.448 I main: llama threadpool init, n_threads = 4
0.00.427.461 I 
0.00.427.537 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.541 I 
0.00.427.581 I sampler seed: 1909678380
0.00.427.591 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.600 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.427.601 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.602 I 
 increably, her crimson eyes gleaming with mischief.

This is not a safe passage for minors. [end of text]


0.01.939.327 I llama_perf_sampler_print:    sampling time =       3.34 ms /    22 runs   (    0.15 ms per token,  6586.83 tokens per second)
0.01.939.330 I llama_perf_context_print:        load time =     425.54 ms
0.01.939.331 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.939.333 I llama_perf_context_print:        eval time =    1499.11 ms /    21 runs   (   71.39 ms per token,    14.01 tokens per second)
0.01.939.333 I llama_perf_context_print:       total time =    1511.89 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.575 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.001.908 I main: load the model and apply lora adapter, if any
0.00.021.830 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.877 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.885 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.891 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.891 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.897 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.897 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.898 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.899 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.899 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.900 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.905 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.906 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.907 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.908 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.908 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.474 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.850 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.168 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.175 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.176 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.176 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.177 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.178 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.179 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.181 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.182 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.183 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.184 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.184 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.188 I llama_model_loader: - type  f32:   37 tensors
0.00.132.191 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.917 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.716 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.640 I llm_load_vocab: special tokens cache size = 5
0.00.225.851 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.864 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.864 I llm_load_print_meta: arch             = gemma
0.00.225.865 I llm_load_print_meta: vocab type       = SPM
0.00.225.866 I llm_load_print_meta: n_vocab          = 256000
0.00.225.866 I llm_load_print_meta: n_merges         = 0
0.00.225.866 I llm_load_print_meta: vocab_only       = 0
0.00.225.867 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.867 I llm_load_print_meta: n_embd           = 2048
0.00.225.867 I llm_load_print_meta: n_layer          = 18
0.00.225.880 I llm_load_print_meta: n_head           = 8
0.00.225.881 I llm_load_print_meta: n_head_kv        = 1
0.00.225.881 I llm_load_print_meta: n_rot            = 256
0.00.225.881 I llm_load_print_meta: n_swa            = 0
0.00.225.882 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.882 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.883 I llm_load_print_meta: n_gqa            = 8
0.00.225.884 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.885 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.886 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.887 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.888 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.888 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.888 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.889 I llm_load_print_meta: n_ff             = 16384
0.00.225.890 I llm_load_print_meta: n_expert         = 0
0.00.225.890 I llm_load_print_meta: n_expert_used    = 0
0.00.225.891 I llm_load_print_meta: causal attn      = 1
0.00.225.891 I llm_load_print_meta: pooling type     = 0
0.00.225.891 I llm_load_print_meta: rope type        = 2
0.00.225.892 I llm_load_print_meta: rope scaling     = linear
0.00.225.893 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.893 I llm_load_print_meta: freq_scale_train = 1
0.00.225.894 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.894 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.894 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.895 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.895 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.895 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.896 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.896 I llm_load_print_meta: model type       = 2B
0.00.225.897 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.898 I llm_load_print_meta: model params     = 2.51 B
0.00.225.898 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.899 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.900 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.900 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.900 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.900 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.901 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.901 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.902 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.902 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.903 I llm_load_print_meta: max token length = 93
0.00.225.923 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.296.820 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.296.827 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.301.732 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.738 I llama_new_context_with_model: n_batch    = 2048
0.00.301.738 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.739 I llama_new_context_with_model: flash_attn = 0
0.00.301.741 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.742 I llama_new_context_with_model: freq_scale = 1
0.00.331.153 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.170 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.331.264 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.127 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.135 I llama_new_context_with_model: graph nodes  = 601
0.00.332.136 I llama_new_context_with_model: graph splits = 1
0.00.332.138 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.428.022 I main: llama threadpool init, n_threads = 4
0.00.428.033 I 
0.00.428.107 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.428.111 I 
0.00.428.149 I sampler seed: 12666611
0.00.428.158 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.160 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.428.161 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.161 I 
 increably.

I am unable to provide an answer to this question as it contains offensive and derogatory language. [end of text]


0.02.185.424 I llama_perf_sampler_print:    sampling time =       3.50 ms /    24 runs   (    0.15 ms per token,  6851.27 tokens per second)
0.02.185.426 I llama_perf_context_print:        load time =     426.09 ms
0.02.185.427 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.185.429 I llama_perf_context_print:        eval time =    1743.55 ms /    23 runs   (   75.81 ms per token,    13.19 tokens per second)
0.02.185.430 I llama_perf_context_print:       total time =    1757.41 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.172s
user	0m33.453s
sys	0m9.361s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3870 (841713e1)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32051.69 ms
main:    total time = 32051.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.523 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.716 I main: llama backend init
0.00.001.840 I main: load the model and apply lora adapter, if any
0.00.021.573 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.618 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.629 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.634 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.635 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.640 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.643 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.644 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.645 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.645 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.646 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.649 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.650 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.650 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.651 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.651 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.919 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.280 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.120 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.127 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.127 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.128 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.129 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.130 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.130 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.133 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.134 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.135 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.135 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.136 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.139 I llama_model_loader: - type  f32:   37 tensors
0.00.131.141 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.142 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.995 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.876 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.606 I llm_load_vocab: special tokens cache size = 5
0.00.224.492 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.505 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.506 I llm_load_print_meta: arch             = gemma
0.00.224.507 I llm_load_print_meta: vocab type       = SPM
0.00.224.507 I llm_load_print_meta: n_vocab          = 256000
0.00.224.508 I llm_load_print_meta: n_merges         = 0
0.00.224.508 I llm_load_print_meta: vocab_only       = 0
0.00.224.509 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.509 I llm_load_print_meta: n_embd           = 2048
0.00.224.509 I llm_load_print_meta: n_layer          = 18
0.00.224.522 I llm_load_print_meta: n_head           = 8
0.00.224.523 I llm_load_print_meta: n_head_kv        = 1
0.00.224.523 I llm_load_print_meta: n_rot            = 256
0.00.224.524 I llm_load_print_meta: n_swa            = 0
0.00.224.524 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.524 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.525 I llm_load_print_meta: n_gqa            = 8
0.00.224.526 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.527 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.528 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.529 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.530 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.531 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.531 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.532 I llm_load_print_meta: n_ff             = 16384
0.00.224.532 I llm_load_print_meta: n_expert         = 0
0.00.224.532 I llm_load_print_meta: n_expert_used    = 0
0.00.224.533 I llm_load_print_meta: causal attn      = 1
0.00.224.533 I llm_load_print_meta: pooling type     = 0
0.00.224.533 I llm_load_print_meta: rope type        = 2
0.00.224.533 I llm_load_print_meta: rope scaling     = linear
0.00.224.535 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.535 I llm_load_print_meta: freq_scale_train = 1
0.00.224.536 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.536 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.536 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.537 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.537 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.537 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.538 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.538 I llm_load_print_meta: model type       = 2B
0.00.224.539 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.540 I llm_load_print_meta: model params     = 2.51 B
0.00.224.540 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.540 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.541 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.541 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.541 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.542 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.542 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.543 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.543 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.543 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.544 I llm_load_print_meta: max token length = 93
0.00.224.567 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.291.281 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.291.289 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.291.289 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.291.290 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.291.290 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.291.291 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.296.416 I llama_new_context_with_model: n_ctx      = 8192
0.00.296.422 I llama_new_context_with_model: n_batch    = 2048
0.00.296.422 I llama_new_context_with_model: n_ubatch   = 512
0.00.296.423 I llama_new_context_with_model: flash_attn = 0
0.00.296.425 I llama_new_context_with_model: freq_base  = 10000.0
0.00.296.426 I llama_new_context_with_model: freq_scale = 1
0.00.324.995 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.325.013 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.325.112 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.326.007 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.326.015 I llama_new_context_with_model: graph nodes  = 601
0.00.326.015 I llama_new_context_with_model: graph splits = 1
0.00.326.017 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.408.407 I main: llama threadpool init, n_threads = 4
0.00.408.419 I 
0.00.408.493 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.408.499 I 
0.00.408.535 I sampler seed: 4050864280
0.00.408.545 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.408.547 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.408.549 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.408.549 I 
 seconally in a complex, interwoven manner.

**Answer:** A fractal. [end of text]


0.01.245.793 I llama_perf_sampler_print:    sampling time =       2.52 ms /    18 runs   (    0.14 ms per token,  7128.71 tokens per second)
0.01.245.795 I llama_perf_context_print:        load time =     406.54 ms
0.01.245.796 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.245.798 I llama_perf_context_print:        eval time =     827.76 ms /    17 runs   (   48.69 ms per token,    20.54 tokens per second)
0.01.245.798 I llama_perf_context_print:       total time =     837.39 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3870 (841713e1)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32020.23 ms
main:    total time = 32020.23 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.534 I build: 3870 (841713e1) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.726 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.021.745 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.756 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.763 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.764 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.769 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.770 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.770 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.771 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.772 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.772 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.775 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.776 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.777 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.777 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.778 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.768 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.536 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.318 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.325 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.325 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.326 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.327 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.328 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.329 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.331 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.331 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.335 I llama_model_loader: - type  f32:   37 tensors
0.00.130.337 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.337 I llama_model_loader: - type q6_K:   19 tensors
0.00.185.284 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.373 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.201 I llm_load_vocab: special tokens cache size = 5
0.00.222.376 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.389 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.389 I llm_load_print_meta: arch             = gemma
0.00.222.389 I llm_load_print_meta: vocab type       = SPM
0.00.222.390 I llm_load_print_meta: n_vocab          = 256000
0.00.222.390 I llm_load_print_meta: n_merges         = 0
0.00.222.391 I llm_load_print_meta: vocab_only       = 0
0.00.222.391 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.391 I llm_load_print_meta: n_embd           = 2048
0.00.222.391 I llm_load_print_meta: n_layer          = 18
0.00.222.404 I llm_load_print_meta: n_head           = 8
0.00.222.405 I llm_load_print_meta: n_head_kv        = 1
0.00.222.405 I llm_load_print_meta: n_rot            = 256
0.00.222.405 I llm_load_print_meta: n_swa            = 0
0.00.222.406 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.406 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.407 I llm_load_print_meta: n_gqa            = 8
0.00.222.408 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.408 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.409 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.410 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.411 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.411 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.412 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.412 I llm_load_print_meta: n_ff             = 16384
0.00.222.413 I llm_load_print_meta: n_expert         = 0
0.00.222.413 I llm_load_print_meta: n_expert_used    = 0
0.00.222.413 I llm_load_print_meta: causal attn      = 1
0.00.222.414 I llm_load_print_meta: pooling type     = 0
0.00.222.414 I llm_load_print_meta: rope type        = 2
0.00.222.414 I llm_load_print_meta: rope scaling     = linear
0.00.222.415 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.416 I llm_load_print_meta: freq_scale_train = 1
0.00.222.416 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.416 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.417 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.417 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.417 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.417 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.418 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.418 I llm_load_print_meta: model type       = 2B
0.00.222.419 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.419 I llm_load_print_meta: model params     = 2.51 B
0.00.222.420 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.421 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.421 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.421 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.421 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.422 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.422 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.422 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.423 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.423 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.423 I llm_load_print_meta: max token length = 93
0.00.222.444 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.278.431 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.283.425 I llama_new_context_with_model: n_ctx      = 8192
0.00.283.431 I llama_new_context_with_model: n_batch    = 2048
0.00.283.431 I llama_new_context_with_model: n_ubatch   = 512
0.00.283.432 I llama_new_context_with_model: flash_attn = 0
0.00.283.434 I llama_new_context_with_model: freq_base  = 10000.0
0.00.283.435 I llama_new_context_with_model: freq_scale = 1
0.00.313.280 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.295 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.395 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.243 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.251 I llama_new_context_with_model: graph nodes  = 601
0.00.314.251 I llama_new_context_with_model: graph splits = 1
0.00.314.253 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.395.274 I main: llama threadpool init, n_threads = 4
0.00.395.285 I 
0.00.395.360 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.395.363 I 
0.00.395.399 I sampler seed: 3762394341
0.00.395.408 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.395.411 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.395.412 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.395.412 I 
 afforches, the best way to determine if the model is overfitting or underfitting?

* Visual inspection of the model's performance
* Statistical measures

0.01.971.276 I llama_perf_sampler_print:    sampling time =       4.63 ms /    33 runs   (    0.14 ms per token,  7130.51 tokens per second)
0.01.971.278 I llama_perf_context_print:        load time =     393.40 ms
0.01.971.280 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.971.281 I llama_perf_context_print:        eval time =    1558.25 ms /    32 runs   (   48.70 ms per token,    20.54 tokens per second)
0.01.971.284 I llama_perf_context_print:       total time =    1576.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.076s
user	8m10.972s
sys	0m6.794s
