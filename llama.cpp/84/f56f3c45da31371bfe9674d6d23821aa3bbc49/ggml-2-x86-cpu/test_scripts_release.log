+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.592 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.022.184 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.236 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.246 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.252 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.255 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.260 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.261 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.261 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.262 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.262 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.263 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.268 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.269 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.269 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.270 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.271 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.295 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.338 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.233 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.241 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.241 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.242 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.242 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.243 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.244 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.246 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.247 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.248 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.248 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.249 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.253 I llama_model_loader: - type  f32:   37 tensors
0.00.133.256 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.525 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.906 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.735 I llm_load_vocab: special tokens cache size = 5
0.00.239.635 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.650 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.650 I llm_load_print_meta: arch             = gemma
0.00.239.651 I llm_load_print_meta: vocab type       = SPM
0.00.239.651 I llm_load_print_meta: n_vocab          = 256000
0.00.239.652 I llm_load_print_meta: n_merges         = 0
0.00.239.652 I llm_load_print_meta: vocab_only       = 0
0.00.239.652 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.653 I llm_load_print_meta: n_embd           = 2048
0.00.239.653 I llm_load_print_meta: n_layer          = 18
0.00.239.667 I llm_load_print_meta: n_head           = 8
0.00.239.668 I llm_load_print_meta: n_head_kv        = 1
0.00.239.668 I llm_load_print_meta: n_rot            = 256
0.00.239.669 I llm_load_print_meta: n_swa            = 0
0.00.239.669 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.669 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.670 I llm_load_print_meta: n_gqa            = 8
0.00.239.671 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.672 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.673 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.674 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.675 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.675 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.676 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.676 I llm_load_print_meta: n_ff             = 16384
0.00.239.677 I llm_load_print_meta: n_expert         = 0
0.00.239.677 I llm_load_print_meta: n_expert_used    = 0
0.00.239.677 I llm_load_print_meta: causal attn      = 1
0.00.239.678 I llm_load_print_meta: pooling type     = 0
0.00.239.678 I llm_load_print_meta: rope type        = 2
0.00.239.678 I llm_load_print_meta: rope scaling     = linear
0.00.239.680 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.680 I llm_load_print_meta: freq_scale_train = 1
0.00.239.680 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.681 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.681 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.681 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.681 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.682 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.682 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.683 I llm_load_print_meta: model type       = 2B
0.00.239.683 I llm_load_print_meta: model ftype      = Q8_0
0.00.239.684 I llm_load_print_meta: model params     = 2.51 B
0.00.239.685 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.239.686 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.686 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.687 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.687 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.688 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.689 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.689 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.689 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.690 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.691 I llm_load_print_meta: max token length = 93
0.00.239.709 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.072 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.081 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.082 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.082 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.083 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.084 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.343.208 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.215 I llama_new_context_with_model: n_batch    = 2048
0.00.343.216 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.217 I llama_new_context_with_model: flash_attn = 0
0.00.343.219 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.220 I llama_new_context_with_model: freq_scale = 1
0.00.373.108 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.373.123 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.214 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.068 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.076 I llama_new_context_with_model: graph nodes  = 601
0.00.374.076 I llama_new_context_with_model: graph splits = 1
0.00.374.078 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.110 I main: llama threadpool init, n_threads = 4
0.00.468.122 I 
0.00.468.197 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.200 I 
0.00.468.237 I sampler seed: 961697282
0.00.468.245 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.253 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.468.253 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.253 I 
 increably.

I am unable to locate the requested file. Perhaps it has been moved or deleted.

**Possible causes:**

* The file may have

0.02.777.961 I llama_perf_sampler_print:    sampling time =       5.44 ms /    33 runs   (    0.16 ms per token,  6070.64 tokens per second)
0.02.777.963 I llama_perf_context_print:        load time =     466.19 ms
0.02.777.964 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.777.966 I llama_perf_context_print:        eval time =    2290.97 ms /    32 runs   (   71.59 ms per token,    13.97 tokens per second)
0.02.777.967 I llama_perf_context_print:       total time =    2309.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.551 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.925 I main: load the model and apply lora adapter, if any
0.00.021.924 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.938 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.945 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.946 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.951 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.952 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.952 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.953 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.954 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.955 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.960 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.961 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.963 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.964 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.965 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.433 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.167 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.050 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.057 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.058 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.058 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.059 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.060 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.061 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.063 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.064 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.065 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.065 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.066 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.070 I llama_model_loader: - type  f32:   37 tensors
0.00.132.074 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.252 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.563 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.378 I llm_load_vocab: special tokens cache size = 5
0.00.225.260 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.273 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.274 I llm_load_print_meta: arch             = gemma
0.00.225.274 I llm_load_print_meta: vocab type       = SPM
0.00.225.275 I llm_load_print_meta: n_vocab          = 256000
0.00.225.276 I llm_load_print_meta: n_merges         = 0
0.00.225.276 I llm_load_print_meta: vocab_only       = 0
0.00.225.276 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.276 I llm_load_print_meta: n_embd           = 2048
0.00.225.277 I llm_load_print_meta: n_layer          = 18
0.00.225.289 I llm_load_print_meta: n_head           = 8
0.00.225.290 I llm_load_print_meta: n_head_kv        = 1
0.00.225.290 I llm_load_print_meta: n_rot            = 256
0.00.225.290 I llm_load_print_meta: n_swa            = 0
0.00.225.290 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.291 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.292 I llm_load_print_meta: n_gqa            = 8
0.00.225.293 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.294 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.295 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.296 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.297 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.297 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.297 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.298 I llm_load_print_meta: n_ff             = 16384
0.00.225.299 I llm_load_print_meta: n_expert         = 0
0.00.225.299 I llm_load_print_meta: n_expert_used    = 0
0.00.225.300 I llm_load_print_meta: causal attn      = 1
0.00.225.300 I llm_load_print_meta: pooling type     = 0
0.00.225.300 I llm_load_print_meta: rope type        = 2
0.00.225.301 I llm_load_print_meta: rope scaling     = linear
0.00.225.303 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.304 I llm_load_print_meta: freq_scale_train = 1
0.00.225.305 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.305 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.306 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.306 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.307 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.308 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.308 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.309 I llm_load_print_meta: model type       = 2B
0.00.225.310 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.311 I llm_load_print_meta: model params     = 2.51 B
0.00.225.312 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.312 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.313 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.314 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.315 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.315 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.316 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.318 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.318 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.319 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.319 I llm_load_print_meta: max token length = 93
0.00.225.344 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.714 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.765 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.773 I llama_new_context_with_model: n_batch    = 2048
0.00.323.773 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.774 I llama_new_context_with_model: flash_attn = 0
0.00.323.776 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.776 I llama_new_context_with_model: freq_scale = 1
0.00.354.764 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.779 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.882 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.779 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.787 I llama_new_context_with_model: graph nodes  = 601
0.00.355.787 I llama_new_context_with_model: graph splits = 1
0.00.355.789 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.820 I main: llama threadpool init, n_threads = 4
0.00.444.833 I 
0.00.444.921 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.925 I 
0.00.444.990 I sampler seed: 80977783
0.00.445.000 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.005 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.006 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.006 I 
 increasities:

I am unable to provide sexually explicit or suggestive content. [end of text]


0.01.564.774 I llama_perf_sampler_print:    sampling time =       2.83 ms /    17 runs   (    0.17 ms per token,  6000.71 tokens per second)
0.01.564.777 I llama_perf_context_print:        load time =     442.88 ms
0.01.564.778 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.564.779 I llama_perf_context_print:        eval time =    1109.32 ms /    16 runs   (   69.33 ms per token,    14.42 tokens per second)
0.01.564.780 I llama_perf_context_print:       total time =    1119.96 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.621 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.844 I main: llama backend init
0.00.001.998 I main: load the model and apply lora adapter, if any
0.00.022.421 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.473 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.485 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.493 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.494 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.500 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.503 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.504 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.504 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.505 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.505 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.510 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.512 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.512 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.513 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.514 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.232 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.828 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.737 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.744 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.745 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.746 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.746 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.747 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.748 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.750 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.751 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.752 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.754 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.755 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.759 I llama_model_loader: - type  f32:   37 tensors
0.00.133.762 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.109 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.624 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.375 I llm_load_vocab: special tokens cache size = 5
0.00.225.051 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.067 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.067 I llm_load_print_meta: arch             = gemma
0.00.225.068 I llm_load_print_meta: vocab type       = SPM
0.00.225.068 I llm_load_print_meta: n_vocab          = 256000
0.00.225.069 I llm_load_print_meta: n_merges         = 0
0.00.225.069 I llm_load_print_meta: vocab_only       = 0
0.00.225.069 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.070 I llm_load_print_meta: n_embd           = 2048
0.00.225.070 I llm_load_print_meta: n_layer          = 18
0.00.225.084 I llm_load_print_meta: n_head           = 8
0.00.225.085 I llm_load_print_meta: n_head_kv        = 1
0.00.225.085 I llm_load_print_meta: n_rot            = 256
0.00.225.085 I llm_load_print_meta: n_swa            = 0
0.00.225.086 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.086 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.087 I llm_load_print_meta: n_gqa            = 8
0.00.225.088 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.089 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.090 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.091 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.091 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.092 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.092 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.093 I llm_load_print_meta: n_ff             = 16384
0.00.225.093 I llm_load_print_meta: n_expert         = 0
0.00.225.093 I llm_load_print_meta: n_expert_used    = 0
0.00.225.094 I llm_load_print_meta: causal attn      = 1
0.00.225.094 I llm_load_print_meta: pooling type     = 0
0.00.225.095 I llm_load_print_meta: rope type        = 2
0.00.225.095 I llm_load_print_meta: rope scaling     = linear
0.00.225.096 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.097 I llm_load_print_meta: freq_scale_train = 1
0.00.225.097 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.097 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.098 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.098 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.098 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.098 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.099 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.099 I llm_load_print_meta: model type       = 2B
0.00.225.100 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.100 I llm_load_print_meta: model params     = 2.51 B
0.00.225.101 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.102 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.102 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.102 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.103 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.103 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.103 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.103 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.104 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.104 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.105 I llm_load_print_meta: max token length = 93
0.00.225.124 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.913 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.300.921 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.922 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.300.922 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.300.923 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.923 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.305.957 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.962 I llama_new_context_with_model: n_batch    = 2048
0.00.305.962 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.963 I llama_new_context_with_model: flash_attn = 0
0.00.305.965 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.966 I llama_new_context_with_model: freq_scale = 1
0.00.335.620 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.635 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.729 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.604 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.612 I llama_new_context_with_model: graph nodes  = 601
0.00.336.612 I llama_new_context_with_model: graph splits = 1
0.00.336.614 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.396 I main: llama threadpool init, n_threads = 4
0.00.430.409 I 
0.00.430.487 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.430.491 I 
0.00.430.548 I sampler seed: 2196933910
0.00.430.559 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.568 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.430.568 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.569 I 
 increasively from 10 to 50.

What is the formula for this sequence?

The formula for the sequence is:

$$a_{

0.02.749.253 I llama_perf_sampler_print:    sampling time =       5.49 ms /    33 runs   (    0.17 ms per token,  6010.93 tokens per second)
0.02.749.256 I llama_perf_context_print:        load time =     428.38 ms
0.02.749.257 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.749.258 I llama_perf_context_print:        eval time =    2299.10 ms /    32 runs   (   71.85 ms per token,    13.92 tokens per second)
0.02.749.259 I llama_perf_context_print:       total time =    2318.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.882 I main: load the model and apply lora adapter, if any
0.00.022.347 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.395 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.402 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.408 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.409 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.413 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.414 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.415 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.416 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.417 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.417 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.422 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.423 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.424 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.425 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.425 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.287 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.260 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.154 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.161 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.162 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.163 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.163 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.164 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.165 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.168 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.169 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.170 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.171 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.172 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.175 I llama_model_loader: - type  f32:   37 tensors
0.00.133.178 I llama_model_loader: - type q8_0:  127 tensors
0.00.194.529 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.443 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.212 I llm_load_vocab: special tokens cache size = 5
0.00.232.826 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.841 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.842 I llm_load_print_meta: arch             = gemma
0.00.232.842 I llm_load_print_meta: vocab type       = SPM
0.00.232.843 I llm_load_print_meta: n_vocab          = 256000
0.00.232.844 I llm_load_print_meta: n_merges         = 0
0.00.232.844 I llm_load_print_meta: vocab_only       = 0
0.00.232.844 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.845 I llm_load_print_meta: n_embd           = 2048
0.00.232.845 I llm_load_print_meta: n_layer          = 18
0.00.232.858 I llm_load_print_meta: n_head           = 8
0.00.232.859 I llm_load_print_meta: n_head_kv        = 1
0.00.232.859 I llm_load_print_meta: n_rot            = 256
0.00.232.859 I llm_load_print_meta: n_swa            = 0
0.00.232.860 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.860 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.861 I llm_load_print_meta: n_gqa            = 8
0.00.232.862 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.863 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.864 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.865 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.866 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.866 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.867 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.868 I llm_load_print_meta: n_ff             = 16384
0.00.232.868 I llm_load_print_meta: n_expert         = 0
0.00.232.868 I llm_load_print_meta: n_expert_used    = 0
0.00.232.869 I llm_load_print_meta: causal attn      = 1
0.00.232.869 I llm_load_print_meta: pooling type     = 0
0.00.232.869 I llm_load_print_meta: rope type        = 2
0.00.232.870 I llm_load_print_meta: rope scaling     = linear
0.00.232.871 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.872 I llm_load_print_meta: freq_scale_train = 1
0.00.232.872 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.872 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.872 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.873 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.873 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.873 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.873 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.874 I llm_load_print_meta: model type       = 2B
0.00.232.874 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.876 I llm_load_print_meta: model params     = 2.51 B
0.00.232.876 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.877 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.877 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.877 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.878 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.878 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.878 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.879 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.879 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.879 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.880 I llm_load_print_meta: max token length = 93
0.00.232.902 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.302.792 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.302.800 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.307.934 I llama_new_context_with_model: n_ctx      = 8192
0.00.307.941 I llama_new_context_with_model: n_batch    = 2048
0.00.307.941 I llama_new_context_with_model: n_ubatch   = 512
0.00.307.942 I llama_new_context_with_model: flash_attn = 0
0.00.307.945 I llama_new_context_with_model: freq_base  = 10000.0
0.00.307.946 I llama_new_context_with_model: freq_scale = 1
0.00.338.360 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.377 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.467 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.331 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.340 I llama_new_context_with_model: graph nodes  = 601
0.00.339.340 I llama_new_context_with_model: graph splits = 1
0.00.339.343 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.356 I main: llama threadpool init, n_threads = 4
0.00.435.369 I 
0.00.435.445 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.448 I 
0.00.435.486 I sampler seed: 499332184
0.00.435.495 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.502 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.505 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.505 I 
 increasities into a narrative of love, loss, and redemption.

Eleanor and Silas were once a radiant couple, their souls entwined like ivy in the sun

0.02.929.520 I llama_perf_sampler_print:    sampling time =       5.81 ms /    33 runs   (    0.18 ms per token,  5681.82 tokens per second)
0.02.929.522 I llama_perf_context_print:        load time =     433.45 ms
0.02.929.523 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.929.524 I llama_perf_context_print:        eval time =    2474.52 ms /    32 runs   (   77.33 ms per token,    12.93 tokens per second)
0.02.929.525 I llama_perf_context_print:       total time =    2494.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.221s
user	0m35.761s
sys	0m9.608s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3838 (84f56f3c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32057.11 ms
main:    total time = 32057.11 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.561 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.021.581 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.629 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.637 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.642 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.643 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.648 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.649 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.649 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.650 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.650 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.651 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.655 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.656 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.657 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.657 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.658 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.235 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.054 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.918 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.924 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.925 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.926 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.927 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.928 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.929 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.932 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.933 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.934 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.935 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.936 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.940 I llama_model_loader: - type  f32:   37 tensors
0.00.131.942 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.943 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.308 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.381 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.171 I llm_load_vocab: special tokens cache size = 5
0.00.226.856 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.869 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.869 I llm_load_print_meta: arch             = gemma
0.00.226.870 I llm_load_print_meta: vocab type       = SPM
0.00.226.870 I llm_load_print_meta: n_vocab          = 256000
0.00.226.871 I llm_load_print_meta: n_merges         = 0
0.00.226.871 I llm_load_print_meta: vocab_only       = 0
0.00.226.871 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.872 I llm_load_print_meta: n_embd           = 2048
0.00.226.872 I llm_load_print_meta: n_layer          = 18
0.00.226.885 I llm_load_print_meta: n_head           = 8
0.00.226.886 I llm_load_print_meta: n_head_kv        = 1
0.00.226.886 I llm_load_print_meta: n_rot            = 256
0.00.226.886 I llm_load_print_meta: n_swa            = 0
0.00.226.887 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.887 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.888 I llm_load_print_meta: n_gqa            = 8
0.00.226.889 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.890 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.891 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.893 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.893 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.894 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.894 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.895 I llm_load_print_meta: n_ff             = 16384
0.00.226.895 I llm_load_print_meta: n_expert         = 0
0.00.226.895 I llm_load_print_meta: n_expert_used    = 0
0.00.226.896 I llm_load_print_meta: causal attn      = 1
0.00.226.896 I llm_load_print_meta: pooling type     = 0
0.00.226.896 I llm_load_print_meta: rope type        = 2
0.00.226.896 I llm_load_print_meta: rope scaling     = linear
0.00.226.898 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.898 I llm_load_print_meta: freq_scale_train = 1
0.00.226.898 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.899 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.899 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.899 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.899 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.900 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.900 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.900 I llm_load_print_meta: model type       = 2B
0.00.226.901 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.226.902 I llm_load_print_meta: model params     = 2.51 B
0.00.226.903 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.226.903 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.904 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.904 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.904 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.904 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.905 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.905 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.905 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.906 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.906 I llm_load_print_meta: max token length = 93
0.00.226.931 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.226 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.285.233 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.285.234 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.285.235 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.285.235 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.285.236 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.291.019 I llama_new_context_with_model: n_ctx      = 8192
0.00.291.025 I llama_new_context_with_model: n_batch    = 2048
0.00.291.026 I llama_new_context_with_model: n_ubatch   = 512
0.00.291.026 I llama_new_context_with_model: flash_attn = 0
0.00.291.028 I llama_new_context_with_model: freq_base  = 10000.0
0.00.291.029 I llama_new_context_with_model: freq_scale = 1
0.00.321.127 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.142 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.234 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.078 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.086 I llama_new_context_with_model: graph nodes  = 601
0.00.322.087 I llama_new_context_with_model: graph splits = 1
0.00.322.088 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.627 I main: llama threadpool init, n_threads = 4
0.00.404.638 I 
0.00.404.714 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.717 I 
0.00.404.755 I sampler seed: 2347924058
0.00.404.764 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.767 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.768 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.768 I 
 seconally to the following question:

A firm is considering investing in a new technology that promises to increase efficiency by 20%. However, there are also

0.02.064.826 I llama_perf_sampler_print:    sampling time =       5.43 ms /    33 runs   (    0.16 ms per token,  6079.59 tokens per second)
0.02.064.829 I llama_perf_context_print:        load time =     402.73 ms
0.02.064.830 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.064.832 I llama_perf_context_print:        eval time =    1640.93 ms /    32 runs   (   51.28 ms per token,    19.50 tokens per second)
0.02.064.832 I llama_perf_context_print:       total time =    1660.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3838 (84f56f3c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32255.17 ms
main:    total time = 32255.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.566 I build: 3838 (84f56f3c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.884 I main: load the model and apply lora adapter, if any
0.00.022.088 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.100 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.108 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.109 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.113 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.114 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.115 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.115 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.116 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.121 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.122 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.123 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.123 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.124 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.646 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.500 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.347 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.353 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.354 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.355 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.355 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.356 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.357 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.360 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.361 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.365 I llama_model_loader: - type  f32:   37 tensors
0.00.132.368 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.369 I llama_model_loader: - type q6_K:   19 tensors
0.00.191.538 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.123 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.882 I llm_load_vocab: special tokens cache size = 5
0.00.226.328 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.342 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.343 I llm_load_print_meta: arch             = gemma
0.00.226.343 I llm_load_print_meta: vocab type       = SPM
0.00.226.344 I llm_load_print_meta: n_vocab          = 256000
0.00.226.346 I llm_load_print_meta: n_merges         = 0
0.00.226.347 I llm_load_print_meta: vocab_only       = 0
0.00.226.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.347 I llm_load_print_meta: n_embd           = 2048
0.00.226.348 I llm_load_print_meta: n_layer          = 18
0.00.226.359 I llm_load_print_meta: n_head           = 8
0.00.226.360 I llm_load_print_meta: n_head_kv        = 1
0.00.226.361 I llm_load_print_meta: n_rot            = 256
0.00.226.361 I llm_load_print_meta: n_swa            = 0
0.00.226.361 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.362 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.363 I llm_load_print_meta: n_gqa            = 8
0.00.226.364 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.365 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.367 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.369 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.369 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.370 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.370 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.371 I llm_load_print_meta: n_ff             = 16384
0.00.226.372 I llm_load_print_meta: n_expert         = 0
0.00.226.372 I llm_load_print_meta: n_expert_used    = 0
0.00.226.372 I llm_load_print_meta: causal attn      = 1
0.00.226.373 I llm_load_print_meta: pooling type     = 0
0.00.226.373 I llm_load_print_meta: rope type        = 2
0.00.226.374 I llm_load_print_meta: rope scaling     = linear
0.00.226.375 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.376 I llm_load_print_meta: freq_scale_train = 1
0.00.226.377 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.377 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.378 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.378 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.379 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.379 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.379 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.380 I llm_load_print_meta: model type       = 2B
0.00.226.381 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.226.382 I llm_load_print_meta: model params     = 2.51 B
0.00.226.383 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.226.383 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.384 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.385 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.385 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.385 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.386 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.386 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.386 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.387 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.387 I llm_load_print_meta: max token length = 93
0.00.226.407 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.284.657 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.289.682 I llama_new_context_with_model: n_ctx      = 8192
0.00.289.690 I llama_new_context_with_model: n_batch    = 2048
0.00.289.690 I llama_new_context_with_model: n_ubatch   = 512
0.00.289.691 I llama_new_context_with_model: flash_attn = 0
0.00.289.695 I llama_new_context_with_model: freq_base  = 10000.0
0.00.289.696 I llama_new_context_with_model: freq_scale = 1
0.00.319.984 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.320.005 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.320.104 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.321.099 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.321.107 I llama_new_context_with_model: graph nodes  = 601
0.00.321.107 I llama_new_context_with_model: graph splits = 1
0.00.321.109 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.411.311 I main: llama threadpool init, n_threads = 4
0.00.411.324 I 
0.00.411.405 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.411.409 I 
0.00.411.447 I sampler seed: 2766746727
0.00.411.457 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.411.461 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.411.462 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.411.462 I 
 seconded. The sentence is grammatically correct, but it sounds clunky and could be improved.

Here are some suggestions:

* Replace "seconded"

0.02.103.799 I llama_perf_sampler_print:    sampling time =       5.43 ms /    33 runs   (    0.16 ms per token,  6080.71 tokens per second)
0.02.103.802 I llama_perf_context_print:        load time =     409.41 ms
0.02.103.803 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.103.804 I llama_perf_context_print:        eval time =    1673.02 ms /    32 runs   (   52.28 ms per token,    19.13 tokens per second)
0.02.103.805 I llama_perf_context_print:       total time =    1692.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.333s
user	8m15.823s
sys	0m7.073s
