+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.469[0m [32mI [0mmain: llama backend init
[34m00000.00.001.619[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.022.282[0m [32mI [0mllama_model_loader: additional 5 GGUFs metadata loaded.
[34m00000.00.022.333[0m [32mI [0mllama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
[34m00000.00.022.340[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.022.347[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.022.348[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.022.352[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.022.353[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.022.353[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.022.354[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.022.354[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.022.355[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.022.359[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.022.360[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.022.361[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.022.361[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 7
[34m00000.00.022.362[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.050.064[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.126.266[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.133.179[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.133.186[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.133.187[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.133.187[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.133.188[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.133.189[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.133.190[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.133.192[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.133.192[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.133.193[0m [32mI [0mllama_model_loader: - kv  24:                                   split.no u16              = 0
[34m00000.00.133.194[0m [32mI [0mllama_model_loader: - kv  25:                                split.count u16              = 6
[34m00000.00.133.195[0m [32mI [0mllama_model_loader: - kv  26:                        split.tensors.count i32              = 164
[34m00000.00.133.199[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.133.201[0m [32mI [0mllama_model_loader: - type q8_0:  127 tensors
[34m00000.00.207.076[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.207.867[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.226.266[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.226.280[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.226.281[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.226.281[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.226.282[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.226.283[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.226.283[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.226.283[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.226.284[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.226.284[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.226.295[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.226.296[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.226.297[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.226.297[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.226.297[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.226.298[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.226.299[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.226.300[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.226.300[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.226.301[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.226.302[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.226.303[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.226.304[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.226.304[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.226.305[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.226.305[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.226.306[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.226.306[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.226.306[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.226.307[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.226.307[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.226.308[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.226.309[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.226.309[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.226.309[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.226.310[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.226.310[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.226.310[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.226.310[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.226.311[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.226.311[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.226.312[0m [32mI [0mllm_load_print_meta: model ftype      = Q8_0
[34m00000.00.226.313[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.226.314[0m [32mI [0mllm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
[34m00000.00.226.314[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.226.315[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.226.316[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.226.316[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.226.317[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.226.318[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.226.321[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.226.321[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.226.339[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.323.568[0m [32mI [0mllm_load_tensors:        CPU buffer size =   865.98 MiB
[34m00000.00.323.577[0m [32mI [0mllm_load_tensors:        CPU buffer size =   334.74 MiB
[34m00000.00.323.578[0m [32mI [0mllm_load_tensors:        CPU buffer size =   402.73 MiB
[34m00000.00.323.579[0m [32mI [0mllm_load_tensors:        CPU buffer size =   335.27 MiB
[34m00000.00.323.579[0m [32mI [0mllm_load_tensors:        CPU buffer size =   338.98 MiB
[34m00000.00.323.579[0m [32mI [0mllm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
[34m00000.00.328.689[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.328.696[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.328.696[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.328.696[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.328.698[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.328.699[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.358.035[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.358.049[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.358.141[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.358.997[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.359.005[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.359.005[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.359.007[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.450.754[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.450.767[0m [32mI [0m
[34m00000.00.450.842[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.450.846[0m [32mI [0m
[34m00000.00.450.882[0m [32mI [0msampler seed: 1480338480
[34m00000.00.450.891[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.450.894[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.450.894[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 seconary elements are those that are not directly related to the primary objective of the text.

True or False? [end of text]


[34m00000.02.150.125[0m [32mI [0mllama_perf_print:    sampling time =       3.83 ms /    25 runs   (    0.15 ms per token,  6520.61 tokens per second)
[34m00000.02.150.130[0m [32mI [0mllama_perf_print:        load time =     224.42 ms
[34m00000.02.150.132[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.02.150.134[0m [32mI [0mllama_perf_print:        eval time =    1684.99 ms /    24 runs   (   70.21 ms per token,    14.24 tokens per second)
[34m00000.02.150.135[0m [32mI [0mllama_perf_print:       total time =    1698.95 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.413[0m [32mI [0mmain: llama backend init
[34m00000.00.001.501[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.021.947[0m [32mI [0mllama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
[34m00000.00.021.958[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.021.969[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.021.971[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.021.975[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.021.976[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.021.977[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.021.977[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.021.978[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.021.978[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.021.983[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.021.984[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.021.985[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.021.985[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 7
[34m00000.00.021.986[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.049.683[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.125.435[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.132.293[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.132.299[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.132.300[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.132.301[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.132.301[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.132.303[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.132.303[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.132.307[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.132.307[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.132.309[0m [32mI [0mllama_model_loader: - kv  24:                                   split.no u16              = 0
[34m00000.00.132.310[0m [32mI [0mllama_model_loader: - kv  25:                                split.count u16              = 0
[34m00000.00.132.311[0m [32mI [0mllama_model_loader: - kv  26:                        split.tensors.count i32              = 164
[34m00000.00.132.315[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.132.317[0m [32mI [0mllama_model_loader: - type q8_0:  127 tensors
[34m00000.00.204.571[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.205.343[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.223.426[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.223.441[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.223.442[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.223.442[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.223.444[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.223.445[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.223.445[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.223.445[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.223.446[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.223.446[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.223.457[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.223.458[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.223.458[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.223.458[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.223.459[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.223.460[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.223.461[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.223.462[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.223.463[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.223.464[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.223.465[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.223.466[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.223.466[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.223.467[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.223.468[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.223.468[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.223.469[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.223.469[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.223.470[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.223.470[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.223.471[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.223.473[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.223.473[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.223.474[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.223.474[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.223.475[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.223.475[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.223.476[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.223.476[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.223.477[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.223.478[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.223.478[0m [32mI [0mllm_load_print_meta: model ftype      = Q8_0
[34m00000.00.223.479[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.223.480[0m [32mI [0mllm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
[34m00000.00.223.481[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.223.481[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.223.482[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.223.483[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.223.483[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.223.484[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.223.485[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.223.486[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.223.508[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.318.055[0m [32mI [0mllm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
[34m00000.00.323.160[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.323.167[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.323.168[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.323.168[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.323.171[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.323.172[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.352.190[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.352.207[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.352.302[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.353.147[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.353.155[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.353.155[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.353.157[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.440.605[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.440.617[0m [32mI [0m
[34m00000.00.440.694[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.440.698[0m [32mI [0m
[34m00000.00.440.726[0m [32mI [0msampler seed: 1165422064
[34m00000.00.440.735[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.440.740[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.440.741[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increamental is the process of accumulating information over time to learn, grow, and adapt. 

**True or False?**

a) True
b

[34m00000.02.644.117[0m [32mI [0mllama_perf_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6976.74 tokens per second)
[34m00000.02.644.121[0m [32mI [0mllama_perf_print:        load time =     217.11 ms
[34m00000.02.644.123[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.02.644.124[0m [32mI [0mllama_perf_print:        eval time =    2185.44 ms /    32 runs   (   68.29 ms per token,    14.64 tokens per second)
[34m00000.02.644.125[0m [32mI [0mllama_perf_print:       total time =    2203.30 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.415[0m [32mI [0mmain: llama backend init
[34m00000.00.001.601[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.021.996[0m [32mI [0mllama_model_loader: additional 6 GGUFs metadata loaded.
[34m00000.00.022.044[0m [32mI [0mllama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
[34m00000.00.022.051[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.022.059[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.022.063[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.022.066[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.022.067[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.022.067[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.022.069[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.022.069[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.022.070[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.022.074[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.022.075[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.022.076[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.022.076[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 7
[34m00000.00.022.077[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.049.208[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.124.943[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.131.856[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.131.862[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.131.863[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.131.863[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.131.864[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.131.865[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.131.865[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.131.868[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.131.869[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.131.870[0m [32mI [0mllama_model_loader: - kv  24:                                   split.no u16              = 0
[34m00000.00.131.871[0m [32mI [0mllama_model_loader: - kv  25:                                split.count u16              = 7
[34m00000.00.131.872[0m [32mI [0mllama_model_loader: - kv  26:                        split.tensors.count i32              = 164
[34m00000.00.131.876[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.131.878[0m [32mI [0mllama_model_loader: - type q8_0:  127 tensors
[34m00000.00.200.544[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.201.276[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.219.339[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.219.353[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.219.354[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.219.354[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.219.355[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.219.355[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.219.356[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.219.356[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.219.356[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.219.356[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.219.369[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.219.370[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.219.370[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.219.370[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.219.371[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.219.371[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.219.372[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.219.373[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.219.374[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.219.374[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.219.376[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.219.376[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.219.377[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.219.377[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.219.378[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.219.378[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.219.379[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.219.379[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.219.380[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.219.380[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.219.380[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.219.382[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.219.382[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.219.382[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.219.383[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.219.383[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.219.383[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.219.383[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.219.384[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.219.384[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.219.385[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.219.385[0m [32mI [0mllm_load_print_meta: model ftype      = Q8_0
[34m00000.00.219.386[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.219.387[0m [32mI [0mllm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
[34m00000.00.219.387[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.219.388[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.219.388[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.219.388[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.219.389[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.219.389[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.219.389[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.219.390[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.219.413[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.294.918[0m [32mI [0mllm_load_tensors:        CPU buffer size =   967.99 MiB
[34m00000.00.294.925[0m [32mI [0mllm_load_tensors:        CPU buffer size =   344.30 MiB
[34m00000.00.294.926[0m [32mI [0mllm_load_tensors:        CPU buffer size =   411.77 MiB
[34m00000.00.294.926[0m [32mI [0mllm_load_tensors:        CPU buffer size =   437.27 MiB
[34m00000.00.294.927[0m [32mI [0mllm_load_tensors:        CPU buffer size =   344.30 MiB
[34m00000.00.294.927[0m [32mI [0mllm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
[34m00000.00.299.993[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.300.001[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.300.002[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.300.002[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.300.005[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.300.006[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.329.805[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.329.822[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.329.917[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.330.771[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.330.779[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.330.780[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.330.782[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.421.057[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.421.071[0m [32mI [0m
[34m00000.00.421.150[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.421.155[0m [32mI [0m
[34m00000.00.421.198[0m [32mI [0msampler seed: 1746958393
[34m00000.00.421.212[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.421.215[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.421.216[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities, 
and a penchant for drama. 

Is this a biography or a poem?

This is a poem.

It is a poem

[34m00000.02.687.541[0m [32mI [0mllama_perf_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6446.57 tokens per second)
[34m00000.02.687.545[0m [32mI [0mllama_perf_print:        load time =     201.66 ms
[34m00000.02.687.546[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.02.687.547[0m [32mI [0mllama_perf_print:        eval time =    2248.12 ms /    32 runs   (   70.25 ms per token,    14.23 tokens per second)
[34m00000.02.687.548[0m [32mI [0mllama_perf_print:       total time =    2265.53 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.406[0m [32mI [0mmain: llama backend init
[34m00000.00.001.566[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.021.545[0m [32mI [0mllama_model_loader: additional 1 GGUFs metadata loaded.
[34m00000.00.021.606[0m [32mI [0mllama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
[34m00000.00.021.615[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.021.627[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.021.631[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.021.636[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.021.637[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.021.638[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.021.639[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.021.640[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.021.642[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.021.649[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.021.651[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.021.653[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.021.654[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 7
[34m00000.00.021.655[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.049.176[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.125.107[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.132.112[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.132.121[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.132.122[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.132.123[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.132.124[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.132.125[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.132.126[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.132.130[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.132.130[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.132.131[0m [32mI [0mllama_model_loader: - kv  24:                                   split.no u16              = 0
[34m00000.00.132.132[0m [32mI [0mllama_model_loader: - kv  25:                                split.count u16              = 2
[34m00000.00.132.134[0m [32mI [0mllama_model_loader: - kv  26:                        split.tensors.count i32              = 164
[34m00000.00.132.140[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.132.144[0m [32mI [0mllama_model_loader: - type q8_0:  127 tensors
[34m00000.00.200.337[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.201.026[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.219.005[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.219.021[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.219.022[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.219.022[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.219.024[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.219.025[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.219.025[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.219.026[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.219.027[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.219.027[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.219.044[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.219.046[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.219.047[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.219.048[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.219.048[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.219.049[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.219.051[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.219.053[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.219.054[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.219.055[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.219.057[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.219.058[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.219.059[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.219.059[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.219.061[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.219.062[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.219.062[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.219.063[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.219.063[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.219.064[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.219.064[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.219.066[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.219.067[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.219.068[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.219.069[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.219.069[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.219.070[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.219.070[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.219.071[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.219.071[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.219.072[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.219.073[0m [32mI [0mllm_load_print_meta: model ftype      = Q8_0
[34m00000.00.219.075[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.219.076[0m [32mI [0mllm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
[34m00000.00.219.076[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.219.077[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.219.078[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.219.078[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.219.079[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.219.080[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.219.080[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.219.081[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.219.112[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.289.360[0m [32mI [0mllm_load_tensors:        CPU buffer size =  1904.18 MiB
[34m00000.00.289.368[0m [32mI [0mllm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
[34m00000.00.294.500[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.294.506[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.294.506[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.294.507[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.294.512[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.294.513[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.323.162[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.323.179[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.323.289[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.324.183[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.324.190[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.324.191[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.324.193[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.428.993[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.429.010[0m [32mI [0m
[34m00000.00.429.109[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.429.114[0m [32mI [0m
[34m00000.00.429.151[0m [32mI [0msampler seed: 1856115173
[34m00000.00.429.163[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.429.167[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.429.169[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities, and other forms of sexual harassment are unacceptable and should not be tolerated. [end of text]


[34m00000.01.800.718[0m [32mI [0mllama_perf_print:    sampling time =       2.66 ms /    19 runs   (    0.14 ms per token,  7140.17 tokens per second)
[34m00000.01.800.723[0m [32mI [0mllama_perf_print:        load time =     209.90 ms
[34m00000.01.800.724[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.01.800.726[0m [32mI [0mllama_perf_print:        eval time =    1360.94 ms /    18 runs   (   75.61 ms per token,    13.23 tokens per second)
[34m00000.01.800.727[0m [32mI [0mllama_perf_print:       total time =    1371.17 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.868s
user	0m32.874s
sys	0m9.532s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32039.81 ms
main:    total time = 32039.81 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.527[0m [32mI [0mmain: llama backend init
[34m00000.00.001.679[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.022.050[0m [32mI [0mllama_model_loader: additional 5 GGUFs metadata loaded.
[34m00000.00.022.100[0m [32mI [0mllama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
[34m00000.00.022.109[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.022.120[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.022.123[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.022.128[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.022.128[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.022.131[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.022.132[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.022.133[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.022.133[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.022.137[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.022.138[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.022.139[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.022.140[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 15
[34m00000.00.022.140[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.050.567[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.126.826[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.133.916[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.133.924[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.133.924[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.133.925[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.133.926[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.133.926[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.133.927[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.133.930[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.133.930[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.133.931[0m [32mI [0mllama_model_loader: - kv  24:                                   split.no u16              = 0
[34m00000.00.133.932[0m [32mI [0mllama_model_loader: - kv  25:                                split.count u16              = 6
[34m00000.00.133.932[0m [32mI [0mllama_model_loader: - kv  26:                        split.tensors.count i32              = 164
[34m00000.00.133.936[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.133.939[0m [32mI [0mllama_model_loader: - type q4_K:  108 tensors
[34m00000.00.133.940[0m [32mI [0mllama_model_loader: - type q6_K:   19 tensors
[34m00000.00.224.574[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.225.382[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.243.796[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.243.811[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.243.811[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.243.812[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.243.812[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.243.813[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.243.813[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.243.814[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.243.814[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.243.814[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.243.826[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.243.827[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.243.827[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.243.828[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.243.828[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.243.828[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.243.829[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.243.830[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.243.831[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.243.832[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.243.833[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.243.834[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.243.834[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.243.835[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.243.835[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.243.836[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.243.836[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.243.836[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.243.837[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.243.837[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.243.837[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.243.838[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.243.839[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.243.839[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.243.840[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.243.840[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.243.840[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.243.841[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.243.841[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.243.841[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.243.842[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.243.842[0m [32mI [0mllm_load_print_meta: model ftype      = Q4_K - Medium
[34m00000.00.243.843[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.243.844[0m [32mI [0mllm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
[34m00000.00.243.844[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.243.845[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.243.845[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.243.845[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.243.846[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.243.846[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.243.847[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.243.847[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.243.874[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.301.870[0m [32mI [0mllm_load_tensors:        CPU buffer size =   604.15 MiB
[34m00000.00.301.879[0m [32mI [0mllm_load_tensors:        CPU buffer size =   185.62 MiB
[34m00000.00.301.880[0m [32mI [0mllm_load_tensors:        CPU buffer size =   221.61 MiB
[34m00000.00.301.881[0m [32mI [0mllm_load_tensors:        CPU buffer size =   185.89 MiB
[34m00000.00.301.881[0m [32mI [0mllm_load_tensors:        CPU buffer size =   187.86 MiB
[34m00000.00.301.882[0m [32mI [0mllm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
[34m00000.00.307.118[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.307.127[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.307.127[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.307.128[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.307.131[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.307.132[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.337.166[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.337.181[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.337.273[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.338.157[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.338.164[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.338.165[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.338.166[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.422.996[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.423.008[0m [32mI [0m
[34m00000.00.423.083[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.423.087[0m [32mI [0m
[34m00000.00.423.115[0m [32mI [0msampler seed: 116144840
[34m00000.00.423.125[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.423.128[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.423.129[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 maneupher.

I apologize for any inconvenience, but I am unable to access or provide personally identifiable information (PII) of users. This information is confidential and

[34m00000.02.087.004[0m [32mI [0mllama_perf_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6918.24 tokens per second)
[34m00000.02.087.009[0m [32mI [0mllama_perf_print:        load time =     179.14 ms
[34m00000.02.087.010[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.02.087.011[0m [32mI [0mllama_perf_print:        eval time =    1645.08 ms /    32 runs   (   51.41 ms per token,    19.45 tokens per second)
[34m00000.02.087.012[0m [32mI [0mllama_perf_print:       total time =    1663.48 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32105.18 ms
main:    total time = 32105.18 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
main: build = 3738 (5a0d1642)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
[34m00000.00.000.434[0m [32mI [0mmain: llama backend init
[34m00000.00.001.609[0m [32mI [0mmain: load the model and apply lora adapter, if any
[34m00000.00.021.954[0m [32mI [0mllama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
[34m00000.00.021.973[0m [32mI [0mllama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
[34m00000.00.021.981[0m [32mI [0mllama_model_loader: - kv   0:                       general.architecture str              = gemma
[34m00000.00.021.982[0m [32mI [0mllama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
[34m00000.00.021.986[0m [32mI [0mllama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
[34m00000.00.021.987[0m [32mI [0mllama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
[34m00000.00.021.987[0m [32mI [0mllama_model_loader: - kv   4:                          gemma.block_count u32              = 18
[34m00000.00.021.988[0m [32mI [0mllama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
[34m00000.00.021.988[0m [32mI [0mllama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
[34m00000.00.021.989[0m [32mI [0mllama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
[34m00000.00.021.994[0m [32mI [0mllama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
[34m00000.00.021.994[0m [32mI [0mllama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
[34m00000.00.021.995[0m [32mI [0mllama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
[34m00000.00.021.996[0m [32mI [0mllama_model_loader: - kv  11:                          general.file_type u32              = 15
[34m00000.00.021.997[0m [32mI [0mllama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
[34m00000.00.050.785[0m [32mI [0mllama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
[34m00000.00.127.154[0m [32mI [0mllama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
[34m00000.00.134.193[0m [32mI [0mllama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
[34m00000.00.134.200[0m [32mI [0mllama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
[34m00000.00.134.201[0m [32mI [0mllama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
[34m00000.00.134.201[0m [32mI [0mllama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
[34m00000.00.134.202[0m [32mI [0mllama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
[34m00000.00.134.203[0m [32mI [0mllama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
[34m00000.00.134.203[0m [32mI [0mllama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
[34m00000.00.134.206[0m [32mI [0mllama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
[34m00000.00.134.207[0m [32mI [0mllama_model_loader: - kv  23:               general.quantization_version u32              = 2
[34m00000.00.134.211[0m [32mI [0mllama_model_loader: - type  f32:   37 tensors
[34m00000.00.134.221[0m [32mI [0mllama_model_loader: - type q4_K:  108 tensors
[34m00000.00.134.222[0m [32mI [0mllama_model_loader: - type q6_K:   19 tensors
[34m00000.00.216.121[0m [35mW llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
[0m[34m00000.00.216.929[0m [32mI [0mllm_load_vocab: special tokens cache size = 5
[34m00000.00.235.090[0m [32mI [0mllm_load_vocab: token to piece cache size = 1.6014 MB
[34m00000.00.235.105[0m [32mI [0mllm_load_print_meta: format           = GGUF V3 (latest)
[34m00000.00.235.106[0m [32mI [0mllm_load_print_meta: arch             = gemma
[34m00000.00.235.107[0m [32mI [0mllm_load_print_meta: vocab type       = SPM
[34m00000.00.235.107[0m [32mI [0mllm_load_print_meta: n_vocab          = 256000
[34m00000.00.235.108[0m [32mI [0mllm_load_print_meta: n_merges         = 0
[34m00000.00.235.108[0m [32mI [0mllm_load_print_meta: vocab_only       = 0
[34m00000.00.235.108[0m [32mI [0mllm_load_print_meta: n_ctx_train      = 8192
[34m00000.00.235.109[0m [32mI [0mllm_load_print_meta: n_embd           = 2048
[34m00000.00.235.109[0m [32mI [0mllm_load_print_meta: n_layer          = 18
[34m00000.00.235.122[0m [32mI [0mllm_load_print_meta: n_head           = 8
[34m00000.00.235.123[0m [32mI [0mllm_load_print_meta: n_head_kv        = 1
[34m00000.00.235.123[0m [32mI [0mllm_load_print_meta: n_rot            = 256
[34m00000.00.235.123[0m [32mI [0mllm_load_print_meta: n_swa            = 0
[34m00000.00.235.124[0m [32mI [0mllm_load_print_meta: n_embd_head_k    = 256
[34m00000.00.235.124[0m [32mI [0mllm_load_print_meta: n_embd_head_v    = 256
[34m00000.00.235.125[0m [32mI [0mllm_load_print_meta: n_gqa            = 8
[34m00000.00.235.126[0m [32mI [0mllm_load_print_meta: n_embd_k_gqa     = 256
[34m00000.00.235.127[0m [32mI [0mllm_load_print_meta: n_embd_v_gqa     = 256
[34m00000.00.235.128[0m [32mI [0mllm_load_print_meta: f_norm_eps       = 0.0e+00
[34m00000.00.235.130[0m [32mI [0mllm_load_print_meta: f_norm_rms_eps   = 1.0e-06
[34m00000.00.235.130[0m [32mI [0mllm_load_print_meta: f_clamp_kqv      = 0.0e+00
[34m00000.00.235.131[0m [32mI [0mllm_load_print_meta: f_max_alibi_bias = 0.0e+00
[34m00000.00.235.131[0m [32mI [0mllm_load_print_meta: f_logit_scale    = 0.0e+00
[34m00000.00.235.132[0m [32mI [0mllm_load_print_meta: n_ff             = 16384
[34m00000.00.235.133[0m [32mI [0mllm_load_print_meta: n_expert         = 0
[34m00000.00.235.133[0m [32mI [0mllm_load_print_meta: n_expert_used    = 0
[34m00000.00.235.133[0m [32mI [0mllm_load_print_meta: causal attn      = 1
[34m00000.00.235.134[0m [32mI [0mllm_load_print_meta: pooling type     = 0
[34m00000.00.235.134[0m [32mI [0mllm_load_print_meta: rope type        = 2
[34m00000.00.235.134[0m [32mI [0mllm_load_print_meta: rope scaling     = linear
[34m00000.00.235.136[0m [32mI [0mllm_load_print_meta: freq_base_train  = 10000.0
[34m00000.00.235.136[0m [32mI [0mllm_load_print_meta: freq_scale_train = 1
[34m00000.00.235.137[0m [32mI [0mllm_load_print_meta: n_ctx_orig_yarn  = 8192
[34m00000.00.235.137[0m [32mI [0mllm_load_print_meta: rope_finetuned   = unknown
[34m00000.00.235.137[0m [32mI [0mllm_load_print_meta: ssm_d_conv       = 0
[34m00000.00.235.137[0m [32mI [0mllm_load_print_meta: ssm_d_inner      = 0
[34m00000.00.235.138[0m [32mI [0mllm_load_print_meta: ssm_d_state      = 0
[34m00000.00.235.138[0m [32mI [0mllm_load_print_meta: ssm_dt_rank      = 0
[34m00000.00.235.138[0m [32mI [0mllm_load_print_meta: ssm_dt_b_c_rms   = 0
[34m00000.00.235.139[0m [32mI [0mllm_load_print_meta: model type       = 2B
[34m00000.00.235.139[0m [32mI [0mllm_load_print_meta: model ftype      = Q4_K - Medium
[34m00000.00.235.140[0m [32mI [0mllm_load_print_meta: model params     = 2.51 B
[34m00000.00.235.141[0m [32mI [0mllm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
[34m00000.00.235.141[0m [32mI [0mllm_load_print_meta: general.name     = gemma-1.1-2b-it
[34m00000.00.235.142[0m [32mI [0mllm_load_print_meta: BOS token        = 2 '<bos>'
[34m00000.00.235.142[0m [32mI [0mllm_load_print_meta: EOS token        = 1 '<eos>'
[34m00000.00.235.142[0m [32mI [0mllm_load_print_meta: UNK token        = 3 '<unk>'
[34m00000.00.235.143[0m [32mI [0mllm_load_print_meta: PAD token        = 0 '<pad>'
[34m00000.00.235.143[0m [32mI [0mllm_load_print_meta: LF token         = 227 '<0x0A>'
[34m00000.00.235.144[0m [32mI [0mllm_load_print_meta: EOT token        = 107 '<end_of_turn>'
[34m00000.00.235.144[0m [32mI [0mllm_load_print_meta: max token length = 93
[34m00000.00.235.170[0m [32mI [0mllm_load_tensors: ggml ctx size =    0.08 MiB
[34m00000.00.556.443[0m [32mI [0mllm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
[34m00000.00.561.381[0m [32mI [0mllama_new_context_with_model: n_ctx      = 8192
[34m00000.00.561.387[0m [32mI [0mllama_new_context_with_model: n_batch    = 2048
[34m00000.00.561.387[0m [32mI [0mllama_new_context_with_model: n_ubatch   = 512
[34m00000.00.561.388[0m [32mI [0mllama_new_context_with_model: flash_attn = 0
[34m00000.00.561.391[0m [32mI [0mllama_new_context_with_model: freq_base  = 10000.0
[34m00000.00.561.392[0m [32mI [0mllama_new_context_with_model: freq_scale = 1
[34m00000.00.591.614[0m [32mI [0mllama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
[34m00000.00.591.631[0m [32mI [0mllama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
[34m00000.00.591.725[0m [32mI [0mllama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
[34m00000.00.592.570[0m [32mI [0mllama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
[34m00000.00.592.577[0m [32mI [0mllama_new_context_with_model: graph nodes  = 601
[34m00000.00.592.578[0m [32mI [0mllama_new_context_with_model: graph splits = 1
[34m00000.00.592.580[0m [35mW llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
[0m[34m00000.00.674.633[0m [32mI [0mmain: llama threadpool init, n_threads = 4
[34m00000.00.674.646[0m [32mI [0m
[34m00000.00.674.724[0m [32mI [0msystem_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
[34m00000.00.674.728[0m [32mI [0m
[34m00000.00.674.766[0m [32mI [0msampler seed: 2574907192
[34m00000.00.674.775[0m [32mI [0msampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
[34m00000.00.674.778[0m [32mI [0msampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
[34m00000.00.674.778[0m [32mI [0mgenerate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 squaRED BULLS! 😡🤬😡

This message appears to be related to a conspiracy theory about the COVID-19 pandemic. The message contains offensive

[34m00000.02.318.116[0m [32mI [0mllama_perf_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6960.56 tokens per second)
[34m00000.02.318.121[0m [32mI [0mllama_perf_print:        load time =     439.48 ms
[34m00000.02.318.122[0m [32mI [0mllama_perf_print: prompt eval time =       0.00 ms /     0 tokens (    -nan ms per token,     -nan tokens per second)
[34m00000.02.318.124[0m [32mI [0mllama_perf_print:        eval time =    1625.13 ms /    32 runs   (   50.79 ms per token,    19.69 tokens per second)
[34m00000.02.318.124[0m [32mI [0mllama_perf_print:       total time =    1642.59 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.484s
user	8m15.278s
sys	0m7.136s
