+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.603 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.809 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.164 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.212 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.223 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.228 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.229 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.232 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.233 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.234 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.235 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.239 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.240 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.240 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.241 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.242 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.859 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.384 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.187 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.194 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.195 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.196 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.197 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.198 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.199 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.202 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.203 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.204 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.205 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.206 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.208 I llama_model_loader: - type  f32:   37 tensors
0.00.133.211 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.174 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.236.839 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.237.931 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.241.300 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.248.066 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.575 I llm_load_vocab: special tokens cache size = 5
0.00.269.387 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.402 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.403 I llm_load_print_meta: arch             = gemma
0.00.269.404 I llm_load_print_meta: vocab type       = SPM
0.00.269.404 I llm_load_print_meta: n_vocab          = 256000
0.00.269.404 I llm_load_print_meta: n_merges         = 0
0.00.269.405 I llm_load_print_meta: vocab_only       = 0
0.00.269.405 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.405 I llm_load_print_meta: n_embd           = 2048
0.00.269.406 I llm_load_print_meta: n_layer          = 18
0.00.269.417 I llm_load_print_meta: n_head           = 8
0.00.269.418 I llm_load_print_meta: n_head_kv        = 1
0.00.269.418 I llm_load_print_meta: n_rot            = 256
0.00.269.419 I llm_load_print_meta: n_swa            = 0
0.00.269.419 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.419 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.420 I llm_load_print_meta: n_gqa            = 8
0.00.269.421 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.422 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.423 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.425 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.425 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.425 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.426 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.426 I llm_load_print_meta: n_ff             = 16384
0.00.269.427 I llm_load_print_meta: n_expert         = 0
0.00.269.427 I llm_load_print_meta: n_expert_used    = 0
0.00.269.427 I llm_load_print_meta: causal attn      = 1
0.00.269.428 I llm_load_print_meta: pooling type     = 0
0.00.269.428 I llm_load_print_meta: rope type        = 2
0.00.269.429 I llm_load_print_meta: rope scaling     = linear
0.00.269.430 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.431 I llm_load_print_meta: freq_scale_train = 1
0.00.269.431 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.432 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.432 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.432 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.432 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.433 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.433 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.433 I llm_load_print_meta: model type       = 2B
0.00.269.434 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.435 I llm_load_print_meta: model params     = 2.51 B
0.00.269.435 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.436 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.436 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.437 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.437 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.437 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.438 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.438 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.438 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.439 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.439 I llm_load_print_meta: max token length = 93
0.00.269.457 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.368.477 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.368.483 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.368.484 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.368.484 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.368.485 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.368.486 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.373.807 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.814 I llama_new_context_with_model: n_batch    = 2048
0.00.373.814 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.814 I llama_new_context_with_model: flash_attn = 0
0.00.373.818 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.819 I llama_new_context_with_model: freq_scale = 1
0.00.404.792 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.806 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.897 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.754 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.762 I llama_new_context_with_model: graph nodes  = 601
0.00.405.762 I llama_new_context_with_model: graph splits = 1
0.00.405.764 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.496.321 I main: llama threadpool init, n_threads = 4
0.00.496.334 I 
0.00.496.410 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.496.413 I 
0.00.496.449 I sampler seed: 672250410
0.00.496.458 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.496.461 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.496.461 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.496.462 I 
 increably, a majestic creature of boundless energy and boundless curiosity. It possessed a mane of swirling iridescent scales that glimmered like stars in the darkness, and its

0.02.735.506 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6524.32 tokens per second)
0.02.735.509 I llama_perf_context_print:        load time =     494.41 ms
0.02.735.510 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.735.511 I llama_perf_context_print:        eval time =    2220.33 ms /    32 runs   (   69.39 ms per token,    14.41 tokens per second)
0.02.735.512 I llama_perf_context_print:       total time =    2239.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.521 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.723 I main: llama backend init
0.00.001.782 I main: load the model and apply lora adapter, if any
0.00.021.817 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.828 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.834 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.835 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.838 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.839 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.840 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.840 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.841 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.841 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.846 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.846 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.847 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.847 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.848 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.129 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.241 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.105 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.112 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.112 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.113 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.114 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.114 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.115 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.118 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.118 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.119 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.119 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.120 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.124 I llama_model_loader: - type  f32:   37 tensors
0.00.132.127 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.173 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.532 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.238.678 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.242.062 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.248.763 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.243 I llm_load_vocab: special tokens cache size = 5
0.00.270.452 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.468 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.468 I llm_load_print_meta: arch             = gemma
0.00.270.469 I llm_load_print_meta: vocab type       = SPM
0.00.270.470 I llm_load_print_meta: n_vocab          = 256000
0.00.270.472 I llm_load_print_meta: n_merges         = 0
0.00.270.472 I llm_load_print_meta: vocab_only       = 0
0.00.270.473 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.473 I llm_load_print_meta: n_embd           = 2048
0.00.270.473 I llm_load_print_meta: n_layer          = 18
0.00.270.484 I llm_load_print_meta: n_head           = 8
0.00.270.486 I llm_load_print_meta: n_head_kv        = 1
0.00.270.486 I llm_load_print_meta: n_rot            = 256
0.00.270.486 I llm_load_print_meta: n_swa            = 0
0.00.270.487 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.487 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.488 I llm_load_print_meta: n_gqa            = 8
0.00.270.489 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.490 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.491 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.492 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.493 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.493 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.494 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.495 I llm_load_print_meta: n_ff             = 16384
0.00.270.495 I llm_load_print_meta: n_expert         = 0
0.00.270.495 I llm_load_print_meta: n_expert_used    = 0
0.00.270.496 I llm_load_print_meta: causal attn      = 1
0.00.270.496 I llm_load_print_meta: pooling type     = 0
0.00.270.497 I llm_load_print_meta: rope type        = 2
0.00.270.498 I llm_load_print_meta: rope scaling     = linear
0.00.270.499 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.500 I llm_load_print_meta: freq_scale_train = 1
0.00.270.500 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.500 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.501 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.502 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.502 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.502 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.502 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.503 I llm_load_print_meta: model type       = 2B
0.00.270.504 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.505 I llm_load_print_meta: model params     = 2.51 B
0.00.270.506 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.506 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.507 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.507 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.510 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.510 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.511 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.511 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.512 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.512 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.512 I llm_load_print_meta: max token length = 93
0.00.270.532 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.364.036 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.369.104 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.111 I llama_new_context_with_model: n_batch    = 2048
0.00.369.111 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.112 I llama_new_context_with_model: flash_attn = 0
0.00.369.114 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.115 I llama_new_context_with_model: freq_scale = 1
0.00.398.167 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.398.182 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.398.273 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.120 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.399.128 I llama_new_context_with_model: graph nodes  = 601
0.00.399.128 I llama_new_context_with_model: graph splits = 1
0.00.399.130 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.197 I main: llama threadpool init, n_threads = 4
0.00.486.209 I 
0.00.486.285 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.288 I 
0.00.486.324 I sampler seed: 612501005
0.00.486.333 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.336 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.486.337 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.337 I 
 increably. [end of text]


0.00.758.676 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8000.00 tokens per second)
0.00.758.678 I llama_perf_context_print:        load time =     484.39 ms
0.00.758.680 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.758.682 I llama_perf_context_print:        eval time =     269.02 ms /     4 runs   (   67.26 ms per token,    14.87 tokens per second)
0.00.758.683 I llama_perf_context_print:       total time =     272.49 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.021.764 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.813 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.823 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.827 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.828 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.832 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.833 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.834 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.834 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.835 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.836 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.839 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.840 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.840 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.841 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.841 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.983 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.418 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.202 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.202 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.203 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.204 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.205 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.205 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.208 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.208 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.209 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.210 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.211 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.214 I llama_model_loader: - type  f32:   37 tensors
0.00.132.216 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.670 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.756 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.240.312 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.245.038 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.254.549 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.226 I llm_load_vocab: special tokens cache size = 5
0.00.276.376 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.394 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.394 I llm_load_print_meta: arch             = gemma
0.00.276.395 I llm_load_print_meta: vocab type       = SPM
0.00.276.395 I llm_load_print_meta: n_vocab          = 256000
0.00.276.396 I llm_load_print_meta: n_merges         = 0
0.00.276.396 I llm_load_print_meta: vocab_only       = 0
0.00.276.396 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.397 I llm_load_print_meta: n_embd           = 2048
0.00.276.397 I llm_load_print_meta: n_layer          = 18
0.00.276.409 I llm_load_print_meta: n_head           = 8
0.00.276.411 I llm_load_print_meta: n_head_kv        = 1
0.00.276.411 I llm_load_print_meta: n_rot            = 256
0.00.276.411 I llm_load_print_meta: n_swa            = 0
0.00.276.412 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.412 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.413 I llm_load_print_meta: n_gqa            = 8
0.00.276.414 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.415 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.416 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.417 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.417 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.417 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.417 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.418 I llm_load_print_meta: n_ff             = 16384
0.00.276.419 I llm_load_print_meta: n_expert         = 0
0.00.276.419 I llm_load_print_meta: n_expert_used    = 0
0.00.276.419 I llm_load_print_meta: causal attn      = 1
0.00.276.419 I llm_load_print_meta: pooling type     = 0
0.00.276.420 I llm_load_print_meta: rope type        = 2
0.00.276.420 I llm_load_print_meta: rope scaling     = linear
0.00.276.422 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.422 I llm_load_print_meta: freq_scale_train = 1
0.00.276.423 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.423 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.424 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.424 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.424 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.425 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.425 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.425 I llm_load_print_meta: model type       = 2B
0.00.276.426 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.427 I llm_load_print_meta: model params     = 2.51 B
0.00.276.428 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.428 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.429 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.429 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.430 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.431 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.431 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.431 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.432 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.432 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.432 I llm_load_print_meta: max token length = 93
0.00.276.455 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.352.059 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.352.067 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.067 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.352.068 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.352.069 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.069 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.357.127 I llama_new_context_with_model: n_ctx      = 8192
0.00.357.133 I llama_new_context_with_model: n_batch    = 2048
0.00.357.133 I llama_new_context_with_model: n_ubatch   = 512
0.00.357.134 I llama_new_context_with_model: flash_attn = 0
0.00.357.136 I llama_new_context_with_model: freq_base  = 10000.0
0.00.357.137 I llama_new_context_with_model: freq_scale = 1
0.00.385.544 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.385.558 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.385.648 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.502 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.386.509 I llama_new_context_with_model: graph nodes  = 601
0.00.386.510 I llama_new_context_with_model: graph splits = 1
0.00.386.512 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.632 I main: llama threadpool init, n_threads = 4
0.00.476.644 I 
0.00.476.721 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.724 I 
0.00.476.760 I sampler seed: 1878140111
0.00.476.769 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.777 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.476.777 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.777 I 
 increasities. [end of text]


0.00.761.973 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8264.46 tokens per second)
0.00.761.975 I llama_perf_context_print:        load time =     474.74 ms
0.00.761.976 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.761.977 I llama_perf_context_print:        eval time =     282.33 ms /     4 runs   (   70.58 ms per token,    14.17 tokens per second)
0.00.761.978 I llama_perf_context_print:       total time =     285.35 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.580 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.810 I main: llama backend init
0.00.001.927 I main: load the model and apply lora adapter, if any
0.00.022.460 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.508 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.521 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.527 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.537 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.541 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.542 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.542 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.543 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.543 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.544 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.548 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.548 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.549 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.550 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.550 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.789 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.413 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.265 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.272 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.273 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.274 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.275 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.276 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.277 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.280 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.281 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.281 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.282 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.283 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.286 I llama_model_loader: - type  f32:   37 tensors
0.00.134.288 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.032 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.012 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.240.117 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.243.407 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.250.040 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.516 I llm_load_vocab: special tokens cache size = 5
0.00.271.489 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.504 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.505 I llm_load_print_meta: arch             = gemma
0.00.271.505 I llm_load_print_meta: vocab type       = SPM
0.00.271.506 I llm_load_print_meta: n_vocab          = 256000
0.00.271.506 I llm_load_print_meta: n_merges         = 0
0.00.271.507 I llm_load_print_meta: vocab_only       = 0
0.00.271.507 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.507 I llm_load_print_meta: n_embd           = 2048
0.00.271.507 I llm_load_print_meta: n_layer          = 18
0.00.271.518 I llm_load_print_meta: n_head           = 8
0.00.271.519 I llm_load_print_meta: n_head_kv        = 1
0.00.271.519 I llm_load_print_meta: n_rot            = 256
0.00.271.520 I llm_load_print_meta: n_swa            = 0
0.00.271.520 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.520 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.522 I llm_load_print_meta: n_gqa            = 8
0.00.271.523 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.524 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.525 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.527 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.528 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.529 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.529 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.531 I llm_load_print_meta: n_ff             = 16384
0.00.271.531 I llm_load_print_meta: n_expert         = 0
0.00.271.531 I llm_load_print_meta: n_expert_used    = 0
0.00.271.532 I llm_load_print_meta: causal attn      = 1
0.00.271.532 I llm_load_print_meta: pooling type     = 0
0.00.271.532 I llm_load_print_meta: rope type        = 2
0.00.271.533 I llm_load_print_meta: rope scaling     = linear
0.00.271.535 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.535 I llm_load_print_meta: freq_scale_train = 1
0.00.271.536 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.536 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.537 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.537 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.538 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.538 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.539 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.540 I llm_load_print_meta: model type       = 2B
0.00.271.540 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.541 I llm_load_print_meta: model params     = 2.51 B
0.00.271.543 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.543 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.544 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.544 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.545 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.545 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.546 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.547 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.547 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.548 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.548 I llm_load_print_meta: max token length = 93
0.00.271.565 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.766 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.341.770 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.346.859 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.865 I llama_new_context_with_model: n_batch    = 2048
0.00.346.866 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.866 I llama_new_context_with_model: flash_attn = 0
0.00.346.868 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.869 I llama_new_context_with_model: freq_scale = 1
0.00.375.864 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.879 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.970 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.823 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.831 I llama_new_context_with_model: graph nodes  = 601
0.00.376.832 I llama_new_context_with_model: graph splits = 1
0.00.376.834 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.588 I main: llama threadpool init, n_threads = 4
0.00.470.600 I 
0.00.470.674 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.677 I 
0.00.470.713 I sampler seed: 3498526378
0.00.470.722 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.725 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.470.725 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.725 I 
 increasities by framing them as a personal tragedy or loss for the victim.

**Response:**

Framing such incidents as a personal tragedy or loss deprives

0.02.869.306 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6542.43 tokens per second)
0.02.869.308 I llama_perf_context_print:        load time =     468.64 ms
0.02.869.309 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.869.310 I llama_perf_context_print:        eval time =    2380.49 ms /    32 runs   (   74.39 ms per token,    13.44 tokens per second)
0.02.869.311 I llama_perf_context_print:       total time =    2398.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.521s
user	0m23.665s
sys	0m9.362s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3915 (5a699f14)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32028.40 ms
main:    total time = 32028.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.518 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.717 I main: llama backend init
0.00.001.807 I main: load the model and apply lora adapter, if any
0.00.022.043 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.090 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.097 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.106 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.107 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.111 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.115 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.115 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.116 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.116 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.120 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.121 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.122 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.122 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.219 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.053 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.893 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.899 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.900 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.900 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.901 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.902 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.902 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.905 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.905 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.906 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.906 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.907 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.911 I llama_model_loader: - type  f32:   37 tensors
0.00.132.913 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.914 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.456 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.121 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.250.344 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.254.092 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.261.892 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.516 I llm_load_vocab: special tokens cache size = 5
0.00.283.593 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.609 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.609 I llm_load_print_meta: arch             = gemma
0.00.283.610 I llm_load_print_meta: vocab type       = SPM
0.00.283.611 I llm_load_print_meta: n_vocab          = 256000
0.00.283.611 I llm_load_print_meta: n_merges         = 0
0.00.283.611 I llm_load_print_meta: vocab_only       = 0
0.00.283.612 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.612 I llm_load_print_meta: n_embd           = 2048
0.00.283.612 I llm_load_print_meta: n_layer          = 18
0.00.283.623 I llm_load_print_meta: n_head           = 8
0.00.283.624 I llm_load_print_meta: n_head_kv        = 1
0.00.283.624 I llm_load_print_meta: n_rot            = 256
0.00.283.624 I llm_load_print_meta: n_swa            = 0
0.00.283.625 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.625 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.626 I llm_load_print_meta: n_gqa            = 8
0.00.283.627 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.628 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.628 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.630 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.630 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.630 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.631 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.632 I llm_load_print_meta: n_ff             = 16384
0.00.283.632 I llm_load_print_meta: n_expert         = 0
0.00.283.633 I llm_load_print_meta: n_expert_used    = 0
0.00.283.633 I llm_load_print_meta: causal attn      = 1
0.00.283.633 I llm_load_print_meta: pooling type     = 0
0.00.283.633 I llm_load_print_meta: rope type        = 2
0.00.283.634 I llm_load_print_meta: rope scaling     = linear
0.00.283.635 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.636 I llm_load_print_meta: freq_scale_train = 1
0.00.283.636 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.636 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.637 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.637 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.637 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.637 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.637 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.638 I llm_load_print_meta: model type       = 2B
0.00.283.638 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.639 I llm_load_print_meta: model params     = 2.51 B
0.00.283.640 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.640 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.641 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.641 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.642 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.642 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.642 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.643 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.643 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.644 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.644 I llm_load_print_meta: max token length = 93
0.00.283.662 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.048 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.342.054 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.342.055 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.342.056 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.342.056 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.342.057 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.346.994 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.999 I llama_new_context_with_model: n_batch    = 2048
0.00.347.000 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.000 I llama_new_context_with_model: flash_attn = 0
0.00.347.002 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.003 I llama_new_context_with_model: freq_scale = 1
0.00.375.634 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.649 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.742 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.661 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.669 I llama_new_context_with_model: graph nodes  = 601
0.00.376.669 I llama_new_context_with_model: graph splits = 1
0.00.376.672 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.661 I main: llama threadpool init, n_threads = 4
0.00.458.673 I 
0.00.458.747 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.751 I 
0.00.458.785 I sampler seed: 3451899130
0.00.458.795 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.797 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.798 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.798 I 
 increamically and with a frantic energy that belied his fragile appearance. [end of text]


0.01.211.524 I llama_perf_sampler_print:    sampling time =       2.65 ms /    16 runs   (    0.17 ms per token,  6030.91 tokens per second)
0.01.211.527 I llama_perf_context_print:        load time =     456.83 ms
0.01.211.542 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.211.544 I llama_perf_context_print:        eval time =     743.35 ms /    15 runs   (   49.56 ms per token,    20.18 tokens per second)
0.01.211.545 I llama_perf_context_print:       total time =     752.87 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3915 (5a699f14)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32059.79 ms
main:    total time = 32059.79 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.553 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.229 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.247 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.255 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.256 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.260 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.261 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.261 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.262 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.263 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.263 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.268 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.268 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.269 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.269 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.270 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.902 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.621 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.363 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.369 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.369 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.370 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.371 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.371 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.372 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.375 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.375 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.378 I llama_model_loader: - type  f32:   37 tensors
0.00.133.380 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.381 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.277 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.210 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.239.409 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.243.201 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.250.883 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.471 I llm_load_vocab: special tokens cache size = 5
0.00.272.242 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.258 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.259 I llm_load_print_meta: arch             = gemma
0.00.272.259 I llm_load_print_meta: vocab type       = SPM
0.00.272.260 I llm_load_print_meta: n_vocab          = 256000
0.00.272.260 I llm_load_print_meta: n_merges         = 0
0.00.272.261 I llm_load_print_meta: vocab_only       = 0
0.00.272.261 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.263 I llm_load_print_meta: n_embd           = 2048
0.00.272.263 I llm_load_print_meta: n_layer          = 18
0.00.272.274 I llm_load_print_meta: n_head           = 8
0.00.272.276 I llm_load_print_meta: n_head_kv        = 1
0.00.272.276 I llm_load_print_meta: n_rot            = 256
0.00.272.277 I llm_load_print_meta: n_swa            = 0
0.00.272.277 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.277 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.278 I llm_load_print_meta: n_gqa            = 8
0.00.272.279 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.280 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.281 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.282 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.283 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.283 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.284 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.285 I llm_load_print_meta: n_ff             = 16384
0.00.272.285 I llm_load_print_meta: n_expert         = 0
0.00.272.286 I llm_load_print_meta: n_expert_used    = 0
0.00.272.287 I llm_load_print_meta: causal attn      = 1
0.00.272.287 I llm_load_print_meta: pooling type     = 0
0.00.272.288 I llm_load_print_meta: rope type        = 2
0.00.272.288 I llm_load_print_meta: rope scaling     = linear
0.00.272.290 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.291 I llm_load_print_meta: freq_scale_train = 1
0.00.272.291 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.292 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.292 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.292 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.293 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.293 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.293 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.294 I llm_load_print_meta: model type       = 2B
0.00.272.295 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.295 I llm_load_print_meta: model params     = 2.51 B
0.00.272.296 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.297 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.297 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.298 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.298 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.299 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.299 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.300 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.301 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.301 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.301 I llm_load_print_meta: max token length = 93
0.00.272.320 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.508.904 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.513.995 I llama_new_context_with_model: n_ctx      = 8192
0.00.514.002 I llama_new_context_with_model: n_batch    = 2048
0.00.514.002 I llama_new_context_with_model: n_ubatch   = 512
0.00.514.003 I llama_new_context_with_model: flash_attn = 0
0.00.514.005 I llama_new_context_with_model: freq_base  = 10000.0
0.00.514.006 I llama_new_context_with_model: freq_scale = 1
0.00.543.744 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.543.760 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.543.852 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.544.717 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.544.724 I llama_new_context_with_model: graph nodes  = 601
0.00.544.724 I llama_new_context_with_model: graph splits = 1
0.00.544.727 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.626.444 I main: llama threadpool init, n_threads = 4
0.00.626.455 I 
0.00.626.534 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.626.537 I 
0.00.626.573 I sampler seed: 3744350990
0.00.626.582 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.626.584 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.626.585 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.626.585 I 
 seconde!

I am unable to provide an answer as the question contains inappropriate and offensive language. It is important to maintain respectful and inclusive language in all interactions

0.02.201.637 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6501.18 tokens per second)
0.02.201.639 I llama_perf_context_print:        load time =     624.55 ms
0.02.201.641 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.201.642 I llama_perf_context_print:        eval time =    1556.52 ms /    32 runs   (   48.64 ms per token,    20.56 tokens per second)
0.02.201.644 I llama_perf_context_print:       total time =    1575.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.266s
user	8m11.331s
sys	0m6.904s
