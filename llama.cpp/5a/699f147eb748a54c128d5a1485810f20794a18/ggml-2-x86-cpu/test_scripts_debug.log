+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.634 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.471 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.675 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.757 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.767 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.769 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.773 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.774 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.776 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.778 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.779 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.780 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.786 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.787 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.795 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.796 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.798 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.563 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.945 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.656 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.663 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.664 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.665 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.666 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.668 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.670 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.673 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.674 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.675 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.676 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.677 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.685 I llama_model_loader: - type  f32:   37 tensors
0.00.268.689 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.238 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.487.006 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.665 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.493.702 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.504.831 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.800 I llm_load_vocab: special tokens cache size = 5
0.00.601.060 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.132 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.133 I llm_load_print_meta: arch             = gemma
0.00.601.133 I llm_load_print_meta: vocab type       = SPM
0.00.601.134 I llm_load_print_meta: n_vocab          = 256000
0.00.601.136 I llm_load_print_meta: n_merges         = 0
0.00.601.137 I llm_load_print_meta: vocab_only       = 0
0.00.601.137 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.137 I llm_load_print_meta: n_embd           = 2048
0.00.601.138 I llm_load_print_meta: n_layer          = 18
0.00.601.202 I llm_load_print_meta: n_head           = 8
0.00.601.209 I llm_load_print_meta: n_head_kv        = 1
0.00.601.209 I llm_load_print_meta: n_rot            = 256
0.00.601.210 I llm_load_print_meta: n_swa            = 0
0.00.601.210 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.210 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.234 I llm_load_print_meta: n_gqa            = 8
0.00.601.240 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.253 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.255 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.257 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.257 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.258 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.258 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.264 I llm_load_print_meta: n_ff             = 16384
0.00.601.265 I llm_load_print_meta: n_expert         = 0
0.00.601.266 I llm_load_print_meta: n_expert_used    = 0
0.00.601.266 I llm_load_print_meta: causal attn      = 1
0.00.601.266 I llm_load_print_meta: pooling type     = 0
0.00.601.267 I llm_load_print_meta: rope type        = 2
0.00.601.268 I llm_load_print_meta: rope scaling     = linear
0.00.601.269 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.270 I llm_load_print_meta: freq_scale_train = 1
0.00.601.270 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.271 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.272 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.272 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.272 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.272 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.273 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.274 I llm_load_print_meta: model type       = 2B
0.00.601.275 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.276 I llm_load_print_meta: model params     = 2.51 B
0.00.601.277 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.278 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.278 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.279 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.279 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.280 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.280 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.281 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.287 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.288 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.289 I llm_load_print_meta: max token length = 93
0.00.601.458 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.207 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.702.217 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.702.218 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.702.219 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.702.219 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.702.220 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.707.830 I llama_new_context_with_model: n_ctx      = 8192
0.00.707.837 I llama_new_context_with_model: n_batch    = 2048
0.00.707.838 I llama_new_context_with_model: n_ubatch   = 512
0.00.707.838 I llama_new_context_with_model: flash_attn = 0
0.00.707.841 I llama_new_context_with_model: freq_base  = 10000.0
0.00.707.841 I llama_new_context_with_model: freq_scale = 1
0.00.736.593 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.736.636 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.736.748 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.119 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.738.124 I llama_new_context_with_model: graph nodes  = 601
0.00.738.124 I llama_new_context_with_model: graph splits = 1
0.00.738.139 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.351.547 I main: llama threadpool init, n_threads = 4
0.01.351.559 I 
0.01.351.663 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.351.667 I 
0.01.351.831 I sampler seed: 3155847706
0.01.351.841 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.351.849 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.351.851 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.351.852 I 
 increably. 

I am unable to locate the requested information in the provided context, therefore I am unable to answer this question. [end of text]


0.13.197.052 I llama_perf_sampler_print:    sampling time =      43.02 ms /    29 runs   (    1.48 ms per token,   674.04 tokens per second)
0.13.197.067 I llama_perf_context_print:        load time =    1348.66 ms
0.13.197.069 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.197.071 I llama_perf_context_print:        eval time =   11773.51 ms /    28 runs   (  420.48 ms per token,     2.38 tokens per second)
0.13.197.072 I llama_perf_context_print:       total time =   11845.51 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.620 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.824 I main: llama backend init
0.00.002.754 I main: load the model and apply lora adapter, if any
0.00.024.906 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.994 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.007 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.008 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.012 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.014 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.015 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.016 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.017 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.018 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.023 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.024 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.025 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.026 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.027 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.635 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.261 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.080 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.088 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.089 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.091 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.091 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.093 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.094 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.097 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.098 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.099 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.100 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.102 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.110 I llama_model_loader: - type  f32:   37 tensors
0.00.267.113 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.516 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.660 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.495.424 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.685 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.511.662 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.622 I llm_load_vocab: special tokens cache size = 5
0.00.615.392 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.615.459 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.615.460 I llm_load_print_meta: arch             = gemma
0.00.615.461 I llm_load_print_meta: vocab type       = SPM
0.00.615.461 I llm_load_print_meta: n_vocab          = 256000
0.00.615.464 I llm_load_print_meta: n_merges         = 0
0.00.615.464 I llm_load_print_meta: vocab_only       = 0
0.00.615.465 I llm_load_print_meta: n_ctx_train      = 8192
0.00.615.465 I llm_load_print_meta: n_embd           = 2048
0.00.615.465 I llm_load_print_meta: n_layer          = 18
0.00.615.531 I llm_load_print_meta: n_head           = 8
0.00.615.537 I llm_load_print_meta: n_head_kv        = 1
0.00.615.538 I llm_load_print_meta: n_rot            = 256
0.00.615.540 I llm_load_print_meta: n_swa            = 0
0.00.615.540 I llm_load_print_meta: n_embd_head_k    = 256
0.00.615.541 I llm_load_print_meta: n_embd_head_v    = 256
0.00.615.546 I llm_load_print_meta: n_gqa            = 8
0.00.615.551 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.615.560 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.615.562 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.615.563 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.615.564 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.615.564 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.615.564 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.615.569 I llm_load_print_meta: n_ff             = 16384
0.00.615.570 I llm_load_print_meta: n_expert         = 0
0.00.615.571 I llm_load_print_meta: n_expert_used    = 0
0.00.615.571 I llm_load_print_meta: causal attn      = 1
0.00.615.571 I llm_load_print_meta: pooling type     = 0
0.00.615.572 I llm_load_print_meta: rope type        = 2
0.00.615.573 I llm_load_print_meta: rope scaling     = linear
0.00.615.574 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.615.575 I llm_load_print_meta: freq_scale_train = 1
0.00.615.575 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.615.576 I llm_load_print_meta: rope_finetuned   = unknown
0.00.615.576 I llm_load_print_meta: ssm_d_conv       = 0
0.00.615.577 I llm_load_print_meta: ssm_d_inner      = 0
0.00.615.577 I llm_load_print_meta: ssm_d_state      = 0
0.00.615.578 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.615.578 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.615.579 I llm_load_print_meta: model type       = 2B
0.00.615.579 I llm_load_print_meta: model ftype      = Q8_0
0.00.615.580 I llm_load_print_meta: model params     = 2.51 B
0.00.615.581 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.615.581 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.615.582 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.615.583 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.615.584 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.615.584 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.615.594 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.615.595 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.615.600 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.615.601 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.615.602 I llm_load_print_meta: max token length = 93
0.00.615.768 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.709.967 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.715.672 I llama_new_context_with_model: n_ctx      = 8192
0.00.715.679 I llama_new_context_with_model: n_batch    = 2048
0.00.715.680 I llama_new_context_with_model: n_ubatch   = 512
0.00.715.680 I llama_new_context_with_model: flash_attn = 0
0.00.715.683 I llama_new_context_with_model: freq_base  = 10000.0
0.00.715.684 I llama_new_context_with_model: freq_scale = 1
0.00.744.572 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.744.619 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.731 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.746.083 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.746.088 I llama_new_context_with_model: graph nodes  = 601
0.00.746.088 I llama_new_context_with_model: graph splits = 1
0.00.746.105 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.357.955 I main: llama threadpool init, n_threads = 4
0.01.357.968 I 
0.01.358.074 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.358.078 I 
0.01.358.247 I sampler seed: 1498385183
0.01.358.257 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.358.264 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.358.265 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.358.274 I 
 increasively to the point of absurdity, eventually engulfing the world in nonsensical chaos.

This is the essence of the story.

**Questions:**



0.14.912.185 I llama_perf_sampler_print:    sampling time =      49.44 ms /    33 runs   (    1.50 ms per token,   667.46 tokens per second)
0.14.912.188 I llama_perf_context_print:        load time =    1355.11 ms
0.14.912.189 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.912.205 I llama_perf_context_print:        eval time =   13471.82 ms /    32 runs   (  420.99 ms per token,     2.38 tokens per second)
0.14.912.206 I llama_perf_context_print:       total time =   13554.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.826 I main: llama backend init
0.00.002.795 I main: load the model and apply lora adapter, if any
0.00.024.509 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.711 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.793 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.803 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.805 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.809 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.810 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.811 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.812 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.813 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.814 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.819 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.821 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.822 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.823 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.824 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.813 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.702 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.553 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.562 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.563 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.564 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.565 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.566 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.567 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.571 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.572 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.573 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.574 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.267.576 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.584 I llama_model_loader: - type  f32:   37 tensors
0.00.267.589 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.452 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.488.699 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.490.511 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.495.835 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.507.171 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.508.137 I llm_load_vocab: special tokens cache size = 5
0.00.601.661 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.730 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.731 I llm_load_print_meta: arch             = gemma
0.00.601.732 I llm_load_print_meta: vocab type       = SPM
0.00.601.732 I llm_load_print_meta: n_vocab          = 256000
0.00.601.735 I llm_load_print_meta: n_merges         = 0
0.00.601.735 I llm_load_print_meta: vocab_only       = 0
0.00.601.735 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.736 I llm_load_print_meta: n_embd           = 2048
0.00.601.736 I llm_load_print_meta: n_layer          = 18
0.00.601.799 I llm_load_print_meta: n_head           = 8
0.00.601.807 I llm_load_print_meta: n_head_kv        = 1
0.00.601.807 I llm_load_print_meta: n_rot            = 256
0.00.601.807 I llm_load_print_meta: n_swa            = 0
0.00.601.808 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.808 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.813 I llm_load_print_meta: n_gqa            = 8
0.00.601.817 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.823 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.824 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.826 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.827 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.827 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.827 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.832 I llm_load_print_meta: n_ff             = 16384
0.00.601.833 I llm_load_print_meta: n_expert         = 0
0.00.601.833 I llm_load_print_meta: n_expert_used    = 0
0.00.601.833 I llm_load_print_meta: causal attn      = 1
0.00.601.834 I llm_load_print_meta: pooling type     = 0
0.00.601.834 I llm_load_print_meta: rope type        = 2
0.00.601.835 I llm_load_print_meta: rope scaling     = linear
0.00.601.836 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.837 I llm_load_print_meta: freq_scale_train = 1
0.00.601.837 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.837 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.838 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.838 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.838 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.839 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.839 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.840 I llm_load_print_meta: model type       = 2B
0.00.601.841 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.842 I llm_load_print_meta: model params     = 2.51 B
0.00.601.843 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.843 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.844 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.844 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.845 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.845 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.845 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.846 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.852 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.853 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.853 I llm_load_print_meta: max token length = 93
0.00.602.019 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.679.631 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.679.642 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.679.643 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.679.643 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.679.644 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.679.645 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.685.296 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.304 I llama_new_context_with_model: n_batch    = 2048
0.00.685.304 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.305 I llama_new_context_with_model: flash_attn = 0
0.00.685.308 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.309 I llama_new_context_with_model: freq_scale = 1
0.00.714.501 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.546 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.667 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.080 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.085 I llama_new_context_with_model: graph nodes  = 601
0.00.716.086 I llama_new_context_with_model: graph splits = 1
0.00.716.101 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.330.046 I main: llama threadpool init, n_threads = 4
0.01.330.059 I 
0.01.330.173 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.177 I 
0.01.330.347 I sampler seed: 1948888687
0.01.330.358 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.366 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.330.366 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.367 I 
 increasities. [end of text]


0.03.042.598 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   800.77 tokens per second)
0.03.042.601 I llama_perf_context_print:        load time =    1327.16 ms
0.03.042.602 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.042.617 I llama_perf_context_print:        eval time =    1700.48 ms /     4 runs   (  425.12 ms per token,     2.35 tokens per second)
0.03.042.618 I llama_perf_context_print:       total time =    1712.56 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.002.819 I main: load the model and apply lora adapter, if any
0.00.024.568 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.779 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.875 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.886 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.889 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.894 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.899 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.901 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.903 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.904 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.906 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.917 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.919 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.920 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.923 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.925 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.394 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.314 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.250 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.258 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.259 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.260 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.261 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.262 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.263 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.267 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.268 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.269 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.269 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.272 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.281 I llama_model_loader: - type  f32:   37 tensors
0.00.268.285 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.866 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.528 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.491.308 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.496.792 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.508.883 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.869 I llm_load_vocab: special tokens cache size = 5
0.00.603.547 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.622 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.627 I llm_load_print_meta: arch             = gemma
0.00.603.628 I llm_load_print_meta: vocab type       = SPM
0.00.603.629 I llm_load_print_meta: n_vocab          = 256000
0.00.603.632 I llm_load_print_meta: n_merges         = 0
0.00.603.632 I llm_load_print_meta: vocab_only       = 0
0.00.603.633 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.633 I llm_load_print_meta: n_embd           = 2048
0.00.603.634 I llm_load_print_meta: n_layer          = 18
0.00.603.704 I llm_load_print_meta: n_head           = 8
0.00.603.715 I llm_load_print_meta: n_head_kv        = 1
0.00.603.716 I llm_load_print_meta: n_rot            = 256
0.00.603.716 I llm_load_print_meta: n_swa            = 0
0.00.603.716 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.717 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.724 I llm_load_print_meta: n_gqa            = 8
0.00.603.732 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.740 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.750 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.754 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.754 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.763 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.764 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.771 I llm_load_print_meta: n_ff             = 16384
0.00.603.772 I llm_load_print_meta: n_expert         = 0
0.00.603.776 I llm_load_print_meta: n_expert_used    = 0
0.00.603.785 I llm_load_print_meta: causal attn      = 1
0.00.603.792 I llm_load_print_meta: pooling type     = 0
0.00.603.792 I llm_load_print_meta: rope type        = 2
0.00.603.793 I llm_load_print_meta: rope scaling     = linear
0.00.603.795 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.796 I llm_load_print_meta: freq_scale_train = 1
0.00.603.797 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.797 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.798 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.798 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.799 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.799 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.800 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.801 I llm_load_print_meta: model type       = 2B
0.00.603.803 I llm_load_print_meta: model ftype      = Q8_0
0.00.603.804 I llm_load_print_meta: model params     = 2.51 B
0.00.603.805 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.603.806 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.808 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.808 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.809 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.810 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.811 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.811 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.819 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.821 I llm_load_print_meta: max token length = 93
0.00.604.005 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.676.034 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.676.043 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.681.825 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.831 I llama_new_context_with_model: n_batch    = 2048
0.00.681.831 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.832 I llama_new_context_with_model: flash_attn = 0
0.00.681.834 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.835 I llama_new_context_with_model: freq_scale = 1
0.00.711.358 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.711.404 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.711.527 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.712.904 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.908 I llama_new_context_with_model: graph nodes  = 601
0.00.712.909 I llama_new_context_with_model: graph splits = 1
0.00.712.926 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.327.381 I main: llama threadpool init, n_threads = 4
0.01.327.392 I 
0.01.327.511 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.327.514 I 
0.01.327.690 I sampler seed: 226455024
0.01.327.700 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.327.708 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.327.709 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.327.711 I 
 increasities in the context of a large language model (LLM).

**Introduction**

Large language models (LLMs) are powerful language processing models capable

0.15.057.019 I llama_perf_sampler_print:    sampling time =      49.97 ms /    33 runs   (    1.51 ms per token,   660.44 tokens per second)
0.15.057.023 I llama_perf_context_print:        load time =    1324.47 ms
0.15.057.024 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.057.025 I llama_perf_context_print:        eval time =   13645.81 ms /    32 runs   (  426.43 ms per token,     2.35 tokens per second)
0.15.057.041 I llama_perf_context_print:       total time =   13729.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m55.676s
user	2m56.056s
sys	0m9.285s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3915 (5a699f14)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199164.31 ms
main:    total time = 199164.31 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.624 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.002.796 I main: load the model and apply lora adapter, if any
0.00.024.574 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.780 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.862 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.873 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.875 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.878 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.880 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.882 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.883 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.884 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.885 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.891 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.893 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.894 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.896 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.896 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.669 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.147 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.986 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.993 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.994 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.996 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.996 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.998 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.999 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.022 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.025 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.026 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.036 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.037 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.045 I llama_model_loader: - type  f32:   37 tensors
0.00.267.061 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.065 I llama_model_loader: - type q6_K:   19 tensors
0.00.436.205 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.478.645 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.480.305 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.485.294 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.495.951 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.496.860 I llm_load_vocab: special tokens cache size = 5
0.00.593.234 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.593.300 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.593.302 I llm_load_print_meta: arch             = gemma
0.00.593.302 I llm_load_print_meta: vocab type       = SPM
0.00.593.303 I llm_load_print_meta: n_vocab          = 256000
0.00.593.305 I llm_load_print_meta: n_merges         = 0
0.00.593.306 I llm_load_print_meta: vocab_only       = 0
0.00.593.306 I llm_load_print_meta: n_ctx_train      = 8192
0.00.593.307 I llm_load_print_meta: n_embd           = 2048
0.00.593.307 I llm_load_print_meta: n_layer          = 18
0.00.593.376 I llm_load_print_meta: n_head           = 8
0.00.593.383 I llm_load_print_meta: n_head_kv        = 1
0.00.593.385 I llm_load_print_meta: n_rot            = 256
0.00.593.385 I llm_load_print_meta: n_swa            = 0
0.00.593.386 I llm_load_print_meta: n_embd_head_k    = 256
0.00.593.386 I llm_load_print_meta: n_embd_head_v    = 256
0.00.593.392 I llm_load_print_meta: n_gqa            = 8
0.00.593.396 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.593.401 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.593.403 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.593.404 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.593.405 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.593.405 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.593.405 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.593.410 I llm_load_print_meta: n_ff             = 16384
0.00.593.410 I llm_load_print_meta: n_expert         = 0
0.00.593.411 I llm_load_print_meta: n_expert_used    = 0
0.00.593.412 I llm_load_print_meta: causal attn      = 1
0.00.593.412 I llm_load_print_meta: pooling type     = 0
0.00.593.412 I llm_load_print_meta: rope type        = 2
0.00.593.413 I llm_load_print_meta: rope scaling     = linear
0.00.593.414 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.593.420 I llm_load_print_meta: freq_scale_train = 1
0.00.593.420 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.593.420 I llm_load_print_meta: rope_finetuned   = unknown
0.00.593.421 I llm_load_print_meta: ssm_d_conv       = 0
0.00.593.422 I llm_load_print_meta: ssm_d_inner      = 0
0.00.593.422 I llm_load_print_meta: ssm_d_state      = 0
0.00.593.423 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.593.423 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.593.433 I llm_load_print_meta: model type       = 2B
0.00.593.435 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.593.436 I llm_load_print_meta: model params     = 2.51 B
0.00.593.437 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.593.437 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.593.450 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.593.450 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.593.459 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.593.460 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.593.461 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.593.461 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.593.467 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.593.469 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.593.469 I llm_load_print_meta: max token length = 93
0.00.593.637 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.653.106 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.653.116 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.653.117 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.653.117 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.653.118 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.653.119 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.658.667 I llama_new_context_with_model: n_ctx      = 8192
0.00.658.674 I llama_new_context_with_model: n_batch    = 2048
0.00.658.674 I llama_new_context_with_model: n_ubatch   = 512
0.00.658.675 I llama_new_context_with_model: flash_attn = 0
0.00.658.677 I llama_new_context_with_model: freq_base  = 10000.0
0.00.658.678 I llama_new_context_with_model: freq_scale = 1
0.00.687.202 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.687.240 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.687.357 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.688.733 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.688.738 I llama_new_context_with_model: graph nodes  = 601
0.00.688.738 I llama_new_context_with_model: graph splits = 1
0.00.688.754 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.268.861 I main: llama threadpool init, n_threads = 4
0.01.268.873 I 
0.01.268.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.268.987 I 
0.01.269.159 I sampler seed: 1774461679
0.01.269.169 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.269.176 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.269.176 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.269.177 I 
 increasities! [end of text]


0.02.630.082 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   800.64 tokens per second)
0.02.630.085 I llama_perf_context_print:        load time =    1265.98 ms
0.02.630.090 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.630.092 I llama_perf_context_print:        eval time =    1349.48 ms /     4 runs   (  337.37 ms per token,     2.96 tokens per second)
0.02.630.093 I llama_perf_context_print:       total time =    1361.23 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3915 (5a699f14)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199088.82 ms
main:    total time = 199088.82 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3915 (5a699f14) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.824 I main: llama backend init
0.00.002.759 I main: load the model and apply lora adapter, if any
0.00.024.718 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.805 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.819 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.821 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.825 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.827 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.828 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.829 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.831 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.831 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.837 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.839 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.840 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.841 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.842 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.543 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.750 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.263 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.273 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.274 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.275 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.276 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.277 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.278 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.282 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.283 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.292 I llama_model_loader: - type  f32:   37 tensors
0.00.269.296 I llama_model_loader: - type q4_K:  108 tensors
0.00.269.296 I llama_model_loader: - type q6_K:   19 tensors
0.00.451.567 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.360 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.194 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.504.653 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.516.110 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.517.033 I llm_load_vocab: special tokens cache size = 5
0.00.610.840 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.913 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.914 I llm_load_print_meta: arch             = gemma
0.00.610.914 I llm_load_print_meta: vocab type       = SPM
0.00.610.915 I llm_load_print_meta: n_vocab          = 256000
0.00.610.918 I llm_load_print_meta: n_merges         = 0
0.00.610.918 I llm_load_print_meta: vocab_only       = 0
0.00.610.919 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.919 I llm_load_print_meta: n_embd           = 2048
0.00.610.919 I llm_load_print_meta: n_layer          = 18
0.00.610.983 I llm_load_print_meta: n_head           = 8
0.00.610.990 I llm_load_print_meta: n_head_kv        = 1
0.00.610.991 I llm_load_print_meta: n_rot            = 256
0.00.610.991 I llm_load_print_meta: n_swa            = 0
0.00.610.991 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.992 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.996 I llm_load_print_meta: n_gqa            = 8
0.00.611.001 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.611.006 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.611.007 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.611.008 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.611.009 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.611.009 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.611.009 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.611.014 I llm_load_print_meta: n_ff             = 16384
0.00.611.015 I llm_load_print_meta: n_expert         = 0
0.00.611.015 I llm_load_print_meta: n_expert_used    = 0
0.00.611.016 I llm_load_print_meta: causal attn      = 1
0.00.611.016 I llm_load_print_meta: pooling type     = 0
0.00.611.016 I llm_load_print_meta: rope type        = 2
0.00.611.017 I llm_load_print_meta: rope scaling     = linear
0.00.611.019 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.611.019 I llm_load_print_meta: freq_scale_train = 1
0.00.611.020 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.611.020 I llm_load_print_meta: rope_finetuned   = unknown
0.00.611.021 I llm_load_print_meta: ssm_d_conv       = 0
0.00.611.021 I llm_load_print_meta: ssm_d_inner      = 0
0.00.611.021 I llm_load_print_meta: ssm_d_state      = 0
0.00.611.022 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.611.022 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.611.023 I llm_load_print_meta: model type       = 2B
0.00.611.024 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.611.024 I llm_load_print_meta: model params     = 2.51 B
0.00.611.025 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.611.026 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.611.027 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.611.027 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.611.028 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.611.029 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.611.029 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.611.030 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.611.036 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.611.037 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.611.038 I llm_load_print_meta: max token length = 93
0.00.611.203 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.671.112 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.677.680 I llama_new_context_with_model: n_ctx      = 8192
0.00.677.686 I llama_new_context_with_model: n_batch    = 2048
0.00.677.686 I llama_new_context_with_model: n_ubatch   = 512
0.00.677.687 I llama_new_context_with_model: flash_attn = 0
0.00.677.690 I llama_new_context_with_model: freq_base  = 10000.0
0.00.677.691 I llama_new_context_with_model: freq_scale = 1
0.00.707.045 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.707.087 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.707.199 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.708.554 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.708.559 I llama_new_context_with_model: graph nodes  = 601
0.00.708.559 I llama_new_context_with_model: graph splits = 1
0.00.708.575 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.288.550 I main: llama threadpool init, n_threads = 4
0.01.288.560 I 
0.01.288.666 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.288.670 I 
0.01.288.838 I sampler seed: 3244072883
0.01.288.849 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.288.855 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.288.855 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.288.856 I 
 increasively, obscuring the original meaning of the phrase.

The question is how to rewrite the phrase " daardoor" to convey the same meaning while maintaining clarity

0.12.319.183 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.61 tokens per second)
0.12.319.186 I llama_perf_context_print:        load time =    1285.71 ms
0.12.319.188 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.319.189 I llama_perf_context_print:        eval time =   10948.98 ms /    32 runs   (  342.16 ms per token,     2.92 tokens per second)
0.12.319.190 I llama_perf_context_print:       total time =   11030.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m56.123s
user	49m29.054s
sys	0m6.376s
