+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.022.219 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.265 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.276 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.281 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.285 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.289 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.289 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.290 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.291 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.291 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.292 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.297 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.297 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.298 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.299 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.299 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.352 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.845 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.092 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.098 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.099 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.099 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.100 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.101 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.101 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.104 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.105 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.105 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.106 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.107 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.110 I llama_model_loader: - type  f32:   37 tensors
0.00.134.114 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.082 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.730 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.513 I llm_load_vocab: special tokens cache size = 5
0.00.226.769 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.781 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.782 I llm_load_print_meta: arch             = gemma
0.00.226.782 I llm_load_print_meta: vocab type       = SPM
0.00.226.783 I llm_load_print_meta: n_vocab          = 256000
0.00.226.783 I llm_load_print_meta: n_merges         = 0
0.00.226.784 I llm_load_print_meta: vocab_only       = 0
0.00.226.784 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.784 I llm_load_print_meta: n_embd           = 2048
0.00.226.785 I llm_load_print_meta: n_layer          = 18
0.00.226.798 I llm_load_print_meta: n_head           = 8
0.00.226.799 I llm_load_print_meta: n_head_kv        = 1
0.00.226.799 I llm_load_print_meta: n_rot            = 256
0.00.226.799 I llm_load_print_meta: n_swa            = 0
0.00.226.799 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.800 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.801 I llm_load_print_meta: n_gqa            = 8
0.00.226.802 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.803 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.804 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.805 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.805 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.806 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.806 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.807 I llm_load_print_meta: n_ff             = 16384
0.00.226.807 I llm_load_print_meta: n_expert         = 0
0.00.226.808 I llm_load_print_meta: n_expert_used    = 0
0.00.226.808 I llm_load_print_meta: causal attn      = 1
0.00.226.808 I llm_load_print_meta: pooling type     = 0
0.00.226.808 I llm_load_print_meta: rope type        = 2
0.00.226.809 I llm_load_print_meta: rope scaling     = linear
0.00.226.810 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.810 I llm_load_print_meta: freq_scale_train = 1
0.00.226.811 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.811 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.811 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.811 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.812 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.812 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.813 I llm_load_print_meta: model type       = 2B
0.00.226.813 I llm_load_print_meta: model ftype      = Q8_0
0.00.226.814 I llm_load_print_meta: model params     = 2.51 B
0.00.226.815 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.226.815 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.816 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.816 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.816 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.816 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.817 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.817 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.818 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.818 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.819 I llm_load_print_meta: max token length = 93
0.00.226.846 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.530 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.326.535 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.326.536 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.326.536 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.326.537 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.326.537 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.331.680 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.686 I llama_new_context_with_model: n_batch    = 2048
0.00.331.687 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.687 I llama_new_context_with_model: flash_attn = 0
0.00.331.689 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.690 I llama_new_context_with_model: freq_scale = 1
0.00.361.214 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.228 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.321 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.269 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.275 I llama_new_context_with_model: graph nodes  = 601
0.00.362.275 I llama_new_context_with_model: graph splits = 1
0.00.362.277 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.845 I main: llama threadpool init, n_threads = 4
0.00.452.856 I 
0.00.452.933 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.936 I 
0.00.452.971 I sampler seed: 2445188699
0.00.452.980 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.988 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.989 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.990 I 
 increamically!

I am unable to generate a response that contains inappropriate or sexually suggestive content. [end of text]


0.01.854.676 I llama_perf_sampler_print:    sampling time =       3.58 ms /    21 runs   (    0.17 ms per token,  5859.37 tokens per second)
0.01.854.679 I llama_perf_context_print:        load time =     450.94 ms
0.01.854.680 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.854.682 I llama_perf_context_print:        eval time =    1389.23 ms /    20 runs   (   69.46 ms per token,    14.40 tokens per second)
0.01.854.684 I llama_perf_context_print:       total time =    1401.84 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.550 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.021.879 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.890 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.897 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.898 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.902 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.903 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.904 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.904 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.905 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.906 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.910 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.911 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.911 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.912 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.912 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.374 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.630 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.411 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.417 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.417 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.418 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.419 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.420 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.420 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.423 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.425 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.426 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.426 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.427 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.431 I llama_model_loader: - type  f32:   37 tensors
0.00.132.434 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.097 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.504 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.250 I llm_load_vocab: special tokens cache size = 5
0.00.224.329 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.343 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.344 I llm_load_print_meta: arch             = gemma
0.00.224.345 I llm_load_print_meta: vocab type       = SPM
0.00.224.346 I llm_load_print_meta: n_vocab          = 256000
0.00.224.346 I llm_load_print_meta: n_merges         = 0
0.00.224.347 I llm_load_print_meta: vocab_only       = 0
0.00.224.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.348 I llm_load_print_meta: n_embd           = 2048
0.00.224.348 I llm_load_print_meta: n_layer          = 18
0.00.224.361 I llm_load_print_meta: n_head           = 8
0.00.224.361 I llm_load_print_meta: n_head_kv        = 1
0.00.224.362 I llm_load_print_meta: n_rot            = 256
0.00.224.362 I llm_load_print_meta: n_swa            = 0
0.00.224.362 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.362 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.363 I llm_load_print_meta: n_gqa            = 8
0.00.224.364 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.365 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.366 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.368 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.368 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.368 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.369 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.370 I llm_load_print_meta: n_ff             = 16384
0.00.224.370 I llm_load_print_meta: n_expert         = 0
0.00.224.370 I llm_load_print_meta: n_expert_used    = 0
0.00.224.371 I llm_load_print_meta: causal attn      = 1
0.00.224.371 I llm_load_print_meta: pooling type     = 0
0.00.224.371 I llm_load_print_meta: rope type        = 2
0.00.224.371 I llm_load_print_meta: rope scaling     = linear
0.00.224.373 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.373 I llm_load_print_meta: freq_scale_train = 1
0.00.224.373 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.374 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.374 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.374 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.375 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.375 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.375 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.376 I llm_load_print_meta: model type       = 2B
0.00.224.376 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.377 I llm_load_print_meta: model params     = 2.51 B
0.00.224.378 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.378 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.379 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.379 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.380 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.380 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.380 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.381 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.381 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.381 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.382 I llm_load_print_meta: max token length = 93
0.00.224.403 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.916 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.919 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.924 I llama_new_context_with_model: n_batch    = 2048
0.00.322.925 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.925 I llama_new_context_with_model: flash_attn = 0
0.00.322.927 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.928 I llama_new_context_with_model: freq_scale = 1
0.00.351.477 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.351.492 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.351.584 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.439 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.447 I llama_new_context_with_model: graph nodes  = 601
0.00.352.448 I llama_new_context_with_model: graph splits = 1
0.00.352.449 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.618 I main: llama threadpool init, n_threads = 4
0.00.438.630 I 
0.00.438.730 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.734 I 
0.00.438.783 I sampler seed: 1847986837
0.00.438.794 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.797 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.438.797 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.797 I 
 increasities in the media, and their potential consequences.

**Discussion Points:**

* The nature and extent of the issue
* The impact on individuals and

0.02.610.123 I llama_perf_sampler_print:    sampling time =       5.59 ms /    33 runs   (    0.17 ms per token,  5898.12 tokens per second)
0.02.610.125 I llama_perf_context_print:        load time =     436.71 ms
0.02.610.126 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.610.127 I llama_perf_context_print:        eval time =    2151.82 ms /    32 runs   (   67.24 ms per token,    14.87 tokens per second)
0.02.610.128 I llama_perf_context_print:       total time =    2171.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.572 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.791 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.279 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.328 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.335 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.341 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.342 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.346 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.347 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.347 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.348 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.349 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.349 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.353 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.354 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.356 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.356 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.493 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.870 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.829 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.837 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.838 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.839 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.839 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.840 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.841 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.844 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.845 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.847 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.847 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.848 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.852 I llama_model_loader: - type  f32:   37 tensors
0.00.133.856 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.978 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.804 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.561 I llm_load_vocab: special tokens cache size = 5
0.00.228.553 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.567 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.567 I llm_load_print_meta: arch             = gemma
0.00.228.567 I llm_load_print_meta: vocab type       = SPM
0.00.228.568 I llm_load_print_meta: n_vocab          = 256000
0.00.228.569 I llm_load_print_meta: n_merges         = 0
0.00.228.569 I llm_load_print_meta: vocab_only       = 0
0.00.228.569 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.570 I llm_load_print_meta: n_embd           = 2048
0.00.228.570 I llm_load_print_meta: n_layer          = 18
0.00.228.583 I llm_load_print_meta: n_head           = 8
0.00.228.584 I llm_load_print_meta: n_head_kv        = 1
0.00.228.584 I llm_load_print_meta: n_rot            = 256
0.00.228.584 I llm_load_print_meta: n_swa            = 0
0.00.228.585 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.585 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.586 I llm_load_print_meta: n_gqa            = 8
0.00.228.587 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.588 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.588 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.590 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.590 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.590 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.591 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.592 I llm_load_print_meta: n_ff             = 16384
0.00.228.592 I llm_load_print_meta: n_expert         = 0
0.00.228.592 I llm_load_print_meta: n_expert_used    = 0
0.00.228.593 I llm_load_print_meta: causal attn      = 1
0.00.228.593 I llm_load_print_meta: pooling type     = 0
0.00.228.593 I llm_load_print_meta: rope type        = 2
0.00.228.593 I llm_load_print_meta: rope scaling     = linear
0.00.228.595 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.595 I llm_load_print_meta: freq_scale_train = 1
0.00.228.595 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.596 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.596 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.596 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.597 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.597 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.597 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.598 I llm_load_print_meta: model type       = 2B
0.00.228.599 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.600 I llm_load_print_meta: model params     = 2.51 B
0.00.228.601 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.601 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.601 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.601 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.609 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.609 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.610 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.610 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.610 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.611 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.611 I llm_load_print_meta: max token length = 93
0.00.228.638 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.346 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.304.355 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.356 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.304.357 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.304.357 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.358 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.309.509 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.518 I llama_new_context_with_model: n_batch    = 2048
0.00.309.519 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.519 I llama_new_context_with_model: flash_attn = 0
0.00.309.522 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.523 I llama_new_context_with_model: freq_scale = 1
0.00.338.256 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.272 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.362 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.205 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.213 I llama_new_context_with_model: graph nodes  = 601
0.00.339.214 I llama_new_context_with_model: graph splits = 1
0.00.339.216 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.169 I main: llama threadpool init, n_threads = 4
0.00.431.181 I 
0.00.431.256 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.260 I 
0.00.431.296 I sampler seed: 1064434124
0.00.431.306 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.308 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.309 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.309 I 
 increasities in the 18th century, a period of significant change and development in European history.

**Causes of the Decline:**

- Decline of

0.02.714.614 I llama_perf_sampler_print:    sampling time =       5.41 ms /    33 runs   (    0.16 ms per token,  6096.43 tokens per second)
0.02.714.616 I llama_perf_context_print:        load time =     429.23 ms
0.02.714.617 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.714.619 I llama_perf_context_print:        eval time =    2264.78 ms /    32 runs   (   70.77 ms per token,    14.13 tokens per second)
0.02.714.619 I llama_perf_context_print:       total time =    2283.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.710 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.950 I main: llama backend init
0.00.002.128 I main: load the model and apply lora adapter, if any
0.00.021.971 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.030 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.039 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.044 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.045 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.050 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.054 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.055 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.056 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.057 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.058 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.066 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.067 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.068 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.069 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.070 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.999 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.303 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.130 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.137 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.137 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.138 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.138 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.139 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.140 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.142 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.143 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.144 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.145 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.146 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.150 I llama_model_loader: - type  f32:   37 tensors
0.00.132.154 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.115 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.364 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.056 I llm_load_vocab: special tokens cache size = 5
0.00.222.126 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.139 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.140 I llm_load_print_meta: arch             = gemma
0.00.222.140 I llm_load_print_meta: vocab type       = SPM
0.00.222.141 I llm_load_print_meta: n_vocab          = 256000
0.00.222.141 I llm_load_print_meta: n_merges         = 0
0.00.222.142 I llm_load_print_meta: vocab_only       = 0
0.00.222.142 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.142 I llm_load_print_meta: n_embd           = 2048
0.00.222.143 I llm_load_print_meta: n_layer          = 18
0.00.222.155 I llm_load_print_meta: n_head           = 8
0.00.222.156 I llm_load_print_meta: n_head_kv        = 1
0.00.222.157 I llm_load_print_meta: n_rot            = 256
0.00.222.157 I llm_load_print_meta: n_swa            = 0
0.00.222.157 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.157 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.158 I llm_load_print_meta: n_gqa            = 8
0.00.222.159 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.160 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.161 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.162 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.162 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.163 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.163 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.164 I llm_load_print_meta: n_ff             = 16384
0.00.222.164 I llm_load_print_meta: n_expert         = 0
0.00.222.165 I llm_load_print_meta: n_expert_used    = 0
0.00.222.165 I llm_load_print_meta: causal attn      = 1
0.00.222.165 I llm_load_print_meta: pooling type     = 0
0.00.222.166 I llm_load_print_meta: rope type        = 2
0.00.222.166 I llm_load_print_meta: rope scaling     = linear
0.00.222.167 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.168 I llm_load_print_meta: freq_scale_train = 1
0.00.222.168 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.168 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.169 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.169 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.169 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.169 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.170 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.170 I llm_load_print_meta: model type       = 2B
0.00.222.171 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.172 I llm_load_print_meta: model params     = 2.51 B
0.00.222.173 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.173 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.173 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.173 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.174 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.174 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.175 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.175 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.175 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.176 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.176 I llm_load_print_meta: max token length = 93
0.00.222.194 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.953 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.292.960 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.297.824 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.831 I llama_new_context_with_model: n_batch    = 2048
0.00.297.832 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.832 I llama_new_context_with_model: flash_attn = 0
0.00.297.834 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.835 I llama_new_context_with_model: freq_scale = 1
0.00.327.822 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.839 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.932 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.845 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.853 I llama_new_context_with_model: graph nodes  = 601
0.00.328.854 I llama_new_context_with_model: graph splits = 1
0.00.328.856 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.369 I main: llama threadpool init, n_threads = 4
0.00.425.381 I 
0.00.425.469 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.473 I 
0.00.425.520 I sampler seed: 2810729651
0.00.425.529 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.532 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.425.533 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.533 I 
 increasities:

1. The Earth is flat.
2. Gravity is caused by the Earth's rotation.
3. The universe is finite.

0.02.859.586 I llama_perf_sampler_print:    sampling time =       5.65 ms /    33 runs   (    0.17 ms per token,  5843.81 tokens per second)
0.02.859.589 I llama_perf_context_print:        load time =     423.17 ms
0.02.859.591 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.859.593 I llama_perf_context_print:        eval time =    2414.65 ms /    32 runs   (   75.46 ms per token,    13.25 tokens per second)
0.02.859.594 I llama_perf_context_print:       total time =    2434.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.605s
user	0m35.837s
sys	0m9.500s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3882 (6ada2e7c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31968.42 ms
main:    total time = 31968.42 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.556 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.873 I main: load the model and apply lora adapter, if any
0.00.022.104 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.163 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.169 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.169 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.173 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.174 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.175 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.175 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.176 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.176 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.180 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.181 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.181 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.182 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.884 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.215 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.014 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.022 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.022 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.023 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.024 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.026 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.027 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.027 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.028 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.029 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.033 I llama_model_loader: - type  f32:   37 tensors
0.00.133.036 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.036 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.819 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.262 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.928 I llm_load_vocab: special tokens cache size = 5
0.00.223.961 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.972 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.973 I llm_load_print_meta: arch             = gemma
0.00.223.973 I llm_load_print_meta: vocab type       = SPM
0.00.223.974 I llm_load_print_meta: n_vocab          = 256000
0.00.223.974 I llm_load_print_meta: n_merges         = 0
0.00.223.975 I llm_load_print_meta: vocab_only       = 0
0.00.223.975 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.975 I llm_load_print_meta: n_embd           = 2048
0.00.223.976 I llm_load_print_meta: n_layer          = 18
0.00.223.988 I llm_load_print_meta: n_head           = 8
0.00.223.989 I llm_load_print_meta: n_head_kv        = 1
0.00.223.989 I llm_load_print_meta: n_rot            = 256
0.00.223.989 I llm_load_print_meta: n_swa            = 0
0.00.223.989 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.990 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.991 I llm_load_print_meta: n_gqa            = 8
0.00.223.992 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.993 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.994 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.995 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.996 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.996 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.996 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.997 I llm_load_print_meta: n_ff             = 16384
0.00.223.998 I llm_load_print_meta: n_expert         = 0
0.00.223.998 I llm_load_print_meta: n_expert_used    = 0
0.00.223.998 I llm_load_print_meta: causal attn      = 1
0.00.223.998 I llm_load_print_meta: pooling type     = 0
0.00.223.998 I llm_load_print_meta: rope type        = 2
0.00.223.999 I llm_load_print_meta: rope scaling     = linear
0.00.224.001 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.001 I llm_load_print_meta: freq_scale_train = 1
0.00.224.001 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.002 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.002 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.002 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.003 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.003 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.003 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.004 I llm_load_print_meta: model type       = 2B
0.00.224.004 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.005 I llm_load_print_meta: model params     = 2.51 B
0.00.224.006 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.006 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.006 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.007 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.007 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.007 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.008 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.008 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.008 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.009 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.009 I llm_load_print_meta: max token length = 93
0.00.224.036 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.180 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.188 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.189 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.189 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.190 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.190 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.180 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.186 I llama_new_context_with_model: n_batch    = 2048
0.00.286.187 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.187 I llama_new_context_with_model: flash_attn = 0
0.00.286.189 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.190 I llama_new_context_with_model: freq_scale = 1
0.00.315.143 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.315.160 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.315.251 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.316.136 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.316.144 I llama_new_context_with_model: graph nodes  = 601
0.00.316.144 I llama_new_context_with_model: graph splits = 1
0.00.316.146 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.167 I main: llama threadpool init, n_threads = 4
0.00.397.179 I 
0.00.397.256 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.259 I 
0.00.397.295 I sampler seed: 590360061
0.00.397.305 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.307 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.307 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.308 I 
 maneuvously. 

I am unable to answer this question as it contains sexually suggestive language and imagery. [end of text]


0.01.567.382 I llama_perf_sampler_print:    sampling time =       4.12 ms /    24 runs   (    0.17 ms per token,  5832.32 tokens per second)
0.01.567.385 I llama_perf_context_print:        load time =     395.23 ms
0.01.567.386 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.567.387 I llama_perf_context_print:        eval time =    1156.30 ms /    23 runs   (   50.27 ms per token,    19.89 tokens per second)
0.01.567.388 I llama_perf_context_print:       total time =    1170.22 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3882 (6ada2e7c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32058.15 ms
main:    total time = 32058.15 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.548 I build: 3882 (6ada2e7c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.022.211 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.221 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.229 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.229 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.233 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.234 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.234 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.235 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.240 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.240 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.241 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.242 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.242 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.989 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.364 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.130 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.136 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.136 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.137 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.137 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.138 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.139 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.142 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.142 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.146 I llama_model_loader: - type  f32:   37 tensors
0.00.132.148 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.149 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.019 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.573 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.152 I llm_load_vocab: special tokens cache size = 5
0.00.220.949 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.962 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.963 I llm_load_print_meta: arch             = gemma
0.00.220.963 I llm_load_print_meta: vocab type       = SPM
0.00.220.964 I llm_load_print_meta: n_vocab          = 256000
0.00.220.965 I llm_load_print_meta: n_merges         = 0
0.00.220.965 I llm_load_print_meta: vocab_only       = 0
0.00.220.965 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.965 I llm_load_print_meta: n_embd           = 2048
0.00.220.966 I llm_load_print_meta: n_layer          = 18
0.00.220.978 I llm_load_print_meta: n_head           = 8
0.00.220.979 I llm_load_print_meta: n_head_kv        = 1
0.00.220.979 I llm_load_print_meta: n_rot            = 256
0.00.220.980 I llm_load_print_meta: n_swa            = 0
0.00.220.980 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.981 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.982 I llm_load_print_meta: n_gqa            = 8
0.00.220.983 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.984 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.985 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.987 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.987 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.988 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.989 I llm_load_print_meta: n_ff             = 16384
0.00.220.990 I llm_load_print_meta: n_expert         = 0
0.00.220.990 I llm_load_print_meta: n_expert_used    = 0
0.00.220.990 I llm_load_print_meta: causal attn      = 1
0.00.220.992 I llm_load_print_meta: pooling type     = 0
0.00.220.992 I llm_load_print_meta: rope type        = 2
0.00.220.993 I llm_load_print_meta: rope scaling     = linear
0.00.220.994 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.995 I llm_load_print_meta: freq_scale_train = 1
0.00.220.995 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.995 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.995 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.996 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.996 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.997 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.999 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.000 I llm_load_print_meta: model type       = 2B
0.00.221.000 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.001 I llm_load_print_meta: model params     = 2.51 B
0.00.221.002 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.002 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.003 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.003 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.004 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.005 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.005 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.005 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.006 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.007 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.007 I llm_load_print_meta: max token length = 93
0.00.221.030 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.277.995 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.282.930 I llama_new_context_with_model: n_ctx      = 8192
0.00.282.936 I llama_new_context_with_model: n_batch    = 2048
0.00.282.936 I llama_new_context_with_model: n_ubatch   = 512
0.00.282.937 I llama_new_context_with_model: flash_attn = 0
0.00.282.939 I llama_new_context_with_model: freq_base  = 10000.0
0.00.282.940 I llama_new_context_with_model: freq_scale = 1
0.00.311.658 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.311.673 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.311.763 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.312.596 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.312.603 I llama_new_context_with_model: graph nodes  = 601
0.00.312.604 I llama_new_context_with_model: graph splits = 1
0.00.312.605 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.393.027 I main: llama threadpool init, n_threads = 4
0.00.393.039 I 
0.00.393.115 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.393.118 I 
0.00.393.154 I sampler seed: 1973581535
0.00.393.163 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.393.166 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.393.167 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.393.167 I 
 maneuorn, but I'm not sure what the meaning is.

The context does not provide any additional information. [end of text]


0.01.651.082 I llama_perf_sampler_print:    sampling time =       5.00 ms /    26 runs   (    0.19 ms per token,  5197.92 tokens per second)
0.01.651.085 I llama_perf_context_print:        load time =     391.11 ms
0.01.651.086 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.651.087 I llama_perf_context_print:        eval time =    1242.19 ms /    25 runs   (   49.69 ms per token,    20.13 tokens per second)
0.01.651.088 I llama_perf_context_print:       total time =    1258.06 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.407s
user	8m10.757s
sys	0m6.929s
