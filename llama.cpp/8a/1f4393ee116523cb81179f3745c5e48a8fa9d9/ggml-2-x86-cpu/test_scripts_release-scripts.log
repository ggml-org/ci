+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.828 I main: load the model and apply lora adapter, if any
0.00.022.033 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.082 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.089 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.095 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.099 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.101 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.102 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.110 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.121 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.121 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.128 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.128 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.129 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.130 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.132 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.188 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.928 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.790 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.796 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.796 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.797 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.798 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.799 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.799 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.802 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.802 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.804 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.804 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.805 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.810 I llama_model_loader: - type  f32:   37 tensors
0.00.132.812 I llama_model_loader: - type q8_0:  127 tensors
0.00.214.360 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.942 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.724 I llm_load_vocab: special tokens cache size = 5
0.00.275.707 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.724 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.725 I llm_load_print_meta: arch             = gemma
0.00.275.725 I llm_load_print_meta: vocab type       = SPM
0.00.275.726 I llm_load_print_meta: n_vocab          = 256000
0.00.275.726 I llm_load_print_meta: n_merges         = 0
0.00.275.727 I llm_load_print_meta: vocab_only       = 0
0.00.275.727 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.728 I llm_load_print_meta: n_embd           = 2048
0.00.275.728 I llm_load_print_meta: n_layer          = 18
0.00.275.740 I llm_load_print_meta: n_head           = 8
0.00.275.741 I llm_load_print_meta: n_head_kv        = 1
0.00.275.741 I llm_load_print_meta: n_rot            = 256
0.00.275.741 I llm_load_print_meta: n_swa            = 0
0.00.275.741 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.742 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.743 I llm_load_print_meta: n_gqa            = 8
0.00.275.743 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.744 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.745 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.746 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.747 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.747 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.747 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.748 I llm_load_print_meta: n_ff             = 16384
0.00.275.749 I llm_load_print_meta: n_expert         = 0
0.00.275.749 I llm_load_print_meta: n_expert_used    = 0
0.00.275.749 I llm_load_print_meta: causal attn      = 1
0.00.275.749 I llm_load_print_meta: pooling type     = 0
0.00.275.750 I llm_load_print_meta: rope type        = 2
0.00.275.750 I llm_load_print_meta: rope scaling     = linear
0.00.275.751 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.752 I llm_load_print_meta: freq_scale_train = 1
0.00.275.752 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.753 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.753 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.753 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.754 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.754 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.754 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.754 I llm_load_print_meta: model type       = 2B
0.00.275.755 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.756 I llm_load_print_meta: model params     = 2.51 B
0.00.275.756 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.757 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.757 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.758 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.758 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.759 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.759 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.759 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.760 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.760 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.760 I llm_load_print_meta: max token length = 93
0.00.275.788 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.375.238 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.375.247 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.375.248 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.375.249 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.375.249 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.375.250 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.380.366 I llama_new_context_with_model: n_ctx      = 8192
0.00.380.371 I llama_new_context_with_model: n_batch    = 2048
0.00.380.372 I llama_new_context_with_model: n_ubatch   = 512
0.00.380.372 I llama_new_context_with_model: flash_attn = 0
0.00.380.374 I llama_new_context_with_model: freq_base  = 10000.0
0.00.380.375 I llama_new_context_with_model: freq_scale = 1
0.00.409.408 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.409.423 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.409.516 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.410.399 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.410.408 I llama_new_context_with_model: graph nodes  = 601
0.00.410.409 I llama_new_context_with_model: graph splits = 1
0.00.410.410 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.501.745 I main: llama threadpool init, n_threads = 4
0.00.501.755 I 
0.00.501.835 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.501.839 I 
0.00.501.882 I sampler seed: 906091372
0.00.501.893 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.501.897 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.501.897 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.501.898 I 
 increasities, a man, and his wife, stand on a stage.

What is the significance of their position?

The significance of their position is that

0.02.751.448 I llama_perf_sampler_print:    sampling time =       4.62 ms /    33 runs   (    0.14 ms per token,  7136.68 tokens per second)
0.02.751.451 I llama_perf_context_print:        load time =     499.90 ms
0.02.751.453 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.751.455 I llama_perf_context_print:        eval time =    2232.19 ms /    32 runs   (   69.76 ms per token,    14.34 tokens per second)
0.02.751.456 I llama_perf_context_print:       total time =    2249.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.536 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.784 I main: llama backend init
0.00.001.956 I main: load the model and apply lora adapter, if any
0.00.022.338 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.353 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.362 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.363 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.368 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.369 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.370 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.372 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.373 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.374 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.381 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.381 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.382 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.383 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.384 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.287 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.420 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.417 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.426 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.427 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.428 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.429 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.431 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.432 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.436 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.436 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.437 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.438 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.439 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.443 I llama_model_loader: - type  f32:   37 tensors
0.00.133.446 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.761 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.555 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.338 I llm_load_vocab: special tokens cache size = 5
0.00.290.320 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.342 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.342 I llm_load_print_meta: arch             = gemma
0.00.290.343 I llm_load_print_meta: vocab type       = SPM
0.00.290.344 I llm_load_print_meta: n_vocab          = 256000
0.00.290.344 I llm_load_print_meta: n_merges         = 0
0.00.290.345 I llm_load_print_meta: vocab_only       = 0
0.00.290.345 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.345 I llm_load_print_meta: n_embd           = 2048
0.00.290.345 I llm_load_print_meta: n_layer          = 18
0.00.290.358 I llm_load_print_meta: n_head           = 8
0.00.290.359 I llm_load_print_meta: n_head_kv        = 1
0.00.290.359 I llm_load_print_meta: n_rot            = 256
0.00.290.359 I llm_load_print_meta: n_swa            = 0
0.00.290.360 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.360 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.361 I llm_load_print_meta: n_gqa            = 8
0.00.290.362 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.363 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.364 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.365 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.365 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.366 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.366 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.367 I llm_load_print_meta: n_ff             = 16384
0.00.290.367 I llm_load_print_meta: n_expert         = 0
0.00.290.367 I llm_load_print_meta: n_expert_used    = 0
0.00.290.368 I llm_load_print_meta: causal attn      = 1
0.00.290.368 I llm_load_print_meta: pooling type     = 0
0.00.290.368 I llm_load_print_meta: rope type        = 2
0.00.290.369 I llm_load_print_meta: rope scaling     = linear
0.00.290.370 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.371 I llm_load_print_meta: freq_scale_train = 1
0.00.290.371 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.372 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.372 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.372 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.372 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.373 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.373 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.373 I llm_load_print_meta: model type       = 2B
0.00.290.374 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.375 I llm_load_print_meta: model params     = 2.51 B
0.00.290.375 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.376 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.377 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.377 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.378 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.378 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.378 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.379 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.379 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.379 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.380 I llm_load_print_meta: max token length = 93
0.00.290.402 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.381.846 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.386.988 I llama_new_context_with_model: n_ctx      = 8192
0.00.386.995 I llama_new_context_with_model: n_batch    = 2048
0.00.386.995 I llama_new_context_with_model: n_ubatch   = 512
0.00.386.996 I llama_new_context_with_model: flash_attn = 0
0.00.386.999 I llama_new_context_with_model: freq_base  = 10000.0
0.00.386.999 I llama_new_context_with_model: freq_scale = 1
0.00.416.561 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.580 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.672 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.542 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.550 I llama_new_context_with_model: graph nodes  = 601
0.00.417.551 I llama_new_context_with_model: graph splits = 1
0.00.417.552 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.508.678 I main: llama threadpool init, n_threads = 4
0.00.508.690 I 
0.00.508.785 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.508.789 I 
0.00.508.835 I sampler seed: 2898444774
0.00.508.845 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.852 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.508.853 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.853 I 
 increasities, and other forms of courtship display can be ecologically significant, facilitating the evolution of novel traits and the diversification of species. [end of text]


0.02.335.678 I llama_perf_sampler_print:    sampling time =       4.20 ms /    28 runs   (    0.15 ms per token,  6663.49 tokens per second)
0.02.335.680 I llama_perf_context_print:        load time =     506.70 ms
0.02.335.681 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.335.683 I llama_perf_context_print:        eval time =    1811.76 ms /    27 runs   (   67.10 ms per token,    14.90 tokens per second)
0.02.335.684 I llama_perf_context_print:       total time =    1827.01 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.563 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.865 I main: load the model and apply lora adapter, if any
0.00.021.577 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.626 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.633 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.639 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.639 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.644 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.647 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.648 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.648 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.649 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.649 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.653 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.654 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.654 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.655 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.655 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.946 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.317 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.206 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.213 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.213 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.214 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.214 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.215 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.216 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.218 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.218 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.219 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.220 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.220 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.224 I llama_model_loader: - type  f32:   37 tensors
0.00.133.226 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.097 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.541 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.244 I llm_load_vocab: special tokens cache size = 5
0.00.268.027 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.042 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.042 I llm_load_print_meta: arch             = gemma
0.00.268.043 I llm_load_print_meta: vocab type       = SPM
0.00.268.044 I llm_load_print_meta: n_vocab          = 256000
0.00.268.044 I llm_load_print_meta: n_merges         = 0
0.00.268.045 I llm_load_print_meta: vocab_only       = 0
0.00.268.045 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.045 I llm_load_print_meta: n_embd           = 2048
0.00.268.045 I llm_load_print_meta: n_layer          = 18
0.00.268.057 I llm_load_print_meta: n_head           = 8
0.00.268.058 I llm_load_print_meta: n_head_kv        = 1
0.00.268.058 I llm_load_print_meta: n_rot            = 256
0.00.268.058 I llm_load_print_meta: n_swa            = 0
0.00.268.059 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.059 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.060 I llm_load_print_meta: n_gqa            = 8
0.00.268.061 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.062 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.062 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.064 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.064 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.065 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.065 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.066 I llm_load_print_meta: n_ff             = 16384
0.00.268.066 I llm_load_print_meta: n_expert         = 0
0.00.268.066 I llm_load_print_meta: n_expert_used    = 0
0.00.268.066 I llm_load_print_meta: causal attn      = 1
0.00.268.067 I llm_load_print_meta: pooling type     = 0
0.00.268.067 I llm_load_print_meta: rope type        = 2
0.00.268.067 I llm_load_print_meta: rope scaling     = linear
0.00.268.069 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.069 I llm_load_print_meta: freq_scale_train = 1
0.00.268.069 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.070 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.070 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.071 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.071 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.071 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.071 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.072 I llm_load_print_meta: model type       = 2B
0.00.268.072 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.073 I llm_load_print_meta: model params     = 2.51 B
0.00.268.074 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.074 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.075 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.075 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.076 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.076 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.076 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.077 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.077 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.078 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.078 I llm_load_print_meta: max token length = 93
0.00.268.096 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.344.681 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.344.688 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.344.689 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.344.689 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.344.690 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.344.690 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.349.655 I llama_new_context_with_model: n_ctx      = 8192
0.00.349.660 I llama_new_context_with_model: n_batch    = 2048
0.00.349.661 I llama_new_context_with_model: n_ubatch   = 512
0.00.349.661 I llama_new_context_with_model: flash_attn = 0
0.00.349.663 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.664 I llama_new_context_with_model: freq_scale = 1
0.00.377.973 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.377.988 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.081 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.949 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.378.957 I llama_new_context_with_model: graph nodes  = 601
0.00.378.957 I llama_new_context_with_model: graph splits = 1
0.00.378.958 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.861 I main: llama threadpool init, n_threads = 4
0.00.472.874 I 
0.00.472.951 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.954 I 
0.00.472.990 I sampler seed: 2802467470
0.00.472.999 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.002 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.002 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.003 I 
 increasities. 

I'm not sure what you're trying to say. Can you please rephrase your question? [end of text]


0.02.369.445 I llama_perf_sampler_print:    sampling time =       3.98 ms /    28 runs   (    0.14 ms per token,  7042.25 tokens per second)
0.02.369.448 I llama_perf_context_print:        load time =     470.97 ms
0.02.369.450 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.369.451 I llama_perf_context_print:        eval time =    1881.58 ms /    27 runs   (   69.69 ms per token,    14.35 tokens per second)
0.02.369.452 I llama_perf_context_print:       total time =    1896.59 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.533 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.727 I main: llama backend init
0.00.001.798 I main: load the model and apply lora adapter, if any
0.00.021.720 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.764 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.772 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.776 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.777 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.781 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.782 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.783 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.783 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.784 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.785 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.788 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.789 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.790 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.790 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.791 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.192 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.626 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.390 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.397 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.398 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.398 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.399 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.400 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.400 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.403 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.403 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.404 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.404 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.406 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.408 I llama_model_loader: - type  f32:   37 tensors
0.00.130.411 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.204 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.245 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.095 I llm_load_vocab: special tokens cache size = 5
0.00.265.164 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.181 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.182 I llm_load_print_meta: arch             = gemma
0.00.265.182 I llm_load_print_meta: vocab type       = SPM
0.00.265.184 I llm_load_print_meta: n_vocab          = 256000
0.00.265.185 I llm_load_print_meta: n_merges         = 0
0.00.265.186 I llm_load_print_meta: vocab_only       = 0
0.00.265.186 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.186 I llm_load_print_meta: n_embd           = 2048
0.00.265.187 I llm_load_print_meta: n_layer          = 18
0.00.265.198 I llm_load_print_meta: n_head           = 8
0.00.265.199 I llm_load_print_meta: n_head_kv        = 1
0.00.265.200 I llm_load_print_meta: n_rot            = 256
0.00.265.200 I llm_load_print_meta: n_swa            = 0
0.00.265.200 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.201 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.202 I llm_load_print_meta: n_gqa            = 8
0.00.265.203 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.204 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.204 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.206 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.206 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.207 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.207 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.208 I llm_load_print_meta: n_ff             = 16384
0.00.265.208 I llm_load_print_meta: n_expert         = 0
0.00.265.209 I llm_load_print_meta: n_expert_used    = 0
0.00.265.209 I llm_load_print_meta: causal attn      = 1
0.00.265.209 I llm_load_print_meta: pooling type     = 0
0.00.265.210 I llm_load_print_meta: rope type        = 2
0.00.265.210 I llm_load_print_meta: rope scaling     = linear
0.00.265.212 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.213 I llm_load_print_meta: freq_scale_train = 1
0.00.265.214 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.214 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.215 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.215 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.216 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.216 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.218 I llm_load_print_meta: model type       = 2B
0.00.265.218 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.219 I llm_load_print_meta: model params     = 2.51 B
0.00.265.220 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.221 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.221 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.222 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.223 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.223 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.223 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.224 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.224 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.225 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.225 I llm_load_print_meta: max token length = 93
0.00.265.250 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.621 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.335.627 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.340.621 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.626 I llama_new_context_with_model: n_batch    = 2048
0.00.340.627 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.628 I llama_new_context_with_model: flash_attn = 0
0.00.340.630 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.631 I llama_new_context_with_model: freq_scale = 1
0.00.369.757 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.769 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.863 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.725 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.733 I llama_new_context_with_model: graph nodes  = 601
0.00.370.733 I llama_new_context_with_model: graph splits = 1
0.00.370.735 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.411 I main: llama threadpool init, n_threads = 4
0.00.463.423 I 
0.00.463.497 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.500 I 
0.00.463.539 I sampler seed: 3776042524
0.00.463.548 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.550 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.463.551 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.551 I 
 increamically, ignoring punctuation and capitalization.

I can't believe my eyes! They're seeing stars!

How is this even possible? Stars are

0.02.890.385 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6720.98 tokens per second)
0.02.890.387 I llama_perf_context_print:        load time =     461.59 ms
0.02.890.388 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.890.389 I llama_perf_context_print:        eval time =    2407.88 ms /    32 runs   (   75.25 ms per token,    13.29 tokens per second)
0.02.890.390 I llama_perf_context_print:       total time =    2426.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.795s
user	0m36.541s
sys	0m9.346s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3911 (8a1f4393)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31995.08 ms
main:    total time = 31995.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.533 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.904 I main: load the model and apply lora adapter, if any
0.00.022.271 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.318 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.330 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.334 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.338 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.342 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.342 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.343 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.344 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.344 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.345 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.348 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.348 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.349 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.349 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.350 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.028 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.310 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.546 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.552 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.553 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.554 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.555 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.556 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.557 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.561 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.562 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.562 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.563 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.565 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.569 I llama_model_loader: - type  f32:   37 tensors
0.00.133.571 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.572 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.197 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.592 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.217 I llm_load_vocab: special tokens cache size = 5
0.00.264.934 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.948 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.948 I llm_load_print_meta: arch             = gemma
0.00.264.949 I llm_load_print_meta: vocab type       = SPM
0.00.264.950 I llm_load_print_meta: n_vocab          = 256000
0.00.264.950 I llm_load_print_meta: n_merges         = 0
0.00.264.950 I llm_load_print_meta: vocab_only       = 0
0.00.264.951 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.951 I llm_load_print_meta: n_embd           = 2048
0.00.264.952 I llm_load_print_meta: n_layer          = 18
0.00.264.962 I llm_load_print_meta: n_head           = 8
0.00.264.963 I llm_load_print_meta: n_head_kv        = 1
0.00.264.964 I llm_load_print_meta: n_rot            = 256
0.00.264.964 I llm_load_print_meta: n_swa            = 0
0.00.264.964 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.965 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.965 I llm_load_print_meta: n_gqa            = 8
0.00.264.967 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.968 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.968 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.970 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.970 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.970 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.971 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.971 I llm_load_print_meta: n_ff             = 16384
0.00.264.972 I llm_load_print_meta: n_expert         = 0
0.00.264.972 I llm_load_print_meta: n_expert_used    = 0
0.00.264.972 I llm_load_print_meta: causal attn      = 1
0.00.264.972 I llm_load_print_meta: pooling type     = 0
0.00.264.973 I llm_load_print_meta: rope type        = 2
0.00.264.974 I llm_load_print_meta: rope scaling     = linear
0.00.264.975 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.976 I llm_load_print_meta: freq_scale_train = 1
0.00.264.976 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.976 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.977 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.977 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.977 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.977 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.977 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.978 I llm_load_print_meta: model type       = 2B
0.00.264.978 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.979 I llm_load_print_meta: model params     = 2.51 B
0.00.264.980 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.980 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.981 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.981 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.981 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.982 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.982 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.982 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.983 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.983 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.983 I llm_load_print_meta: max token length = 93
0.00.265.000 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.751 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.323.758 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.323.759 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.323.759 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.323.760 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.323.760 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.328.945 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.949 I llama_new_context_with_model: n_batch    = 2048
0.00.328.950 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.950 I llama_new_context_with_model: flash_attn = 0
0.00.328.953 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.953 I llama_new_context_with_model: freq_scale = 1
0.00.358.118 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.358.133 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.358.221 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.088 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.096 I llama_new_context_with_model: graph nodes  = 601
0.00.359.096 I llama_new_context_with_model: graph splits = 1
0.00.359.098 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.301 I main: llama threadpool init, n_threads = 4
0.00.440.314 I 
0.00.440.393 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.396 I 
0.00.440.433 I sampler seed: 3145147015
0.00.440.442 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.445 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.446 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.446 I 
 seconded.
I think I need a new name for my business. I'm stuck between "The Creative Collective" and "Brand Synergy."

**

0.02.038.782 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6416.49 tokens per second)
0.02.038.784 I llama_perf_context_print:        load time =     438.37 ms
0.02.038.785 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.038.787 I llama_perf_context_print:        eval time =    1580.31 ms /    32 runs   (   49.38 ms per token,    20.25 tokens per second)
0.02.038.787 I llama_perf_context_print:       total time =    1598.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3911 (8a1f4393)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32067.17 ms
main:    total time = 32067.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.530 I build: 3911 (8a1f4393) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.022.053 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.064 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.070 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.071 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.076 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.077 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.078 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.078 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.079 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.079 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.083 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.083 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.084 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.084 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.085 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.688 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.078 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.945 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.952 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.953 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.953 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.954 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.955 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.955 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.958 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.958 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.961 I llama_model_loader: - type  f32:   37 tensors
0.00.131.963 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.964 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.042 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.438 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.078 I llm_load_vocab: special tokens cache size = 5
0.00.262.936 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.952 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.953 I llm_load_print_meta: arch             = gemma
0.00.262.954 I llm_load_print_meta: vocab type       = SPM
0.00.262.954 I llm_load_print_meta: n_vocab          = 256000
0.00.262.955 I llm_load_print_meta: n_merges         = 0
0.00.262.955 I llm_load_print_meta: vocab_only       = 0
0.00.262.955 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.956 I llm_load_print_meta: n_embd           = 2048
0.00.262.956 I llm_load_print_meta: n_layer          = 18
0.00.262.967 I llm_load_print_meta: n_head           = 8
0.00.262.968 I llm_load_print_meta: n_head_kv        = 1
0.00.262.969 I llm_load_print_meta: n_rot            = 256
0.00.262.969 I llm_load_print_meta: n_swa            = 0
0.00.262.969 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.970 I llm_load_print_meta: n_gqa            = 8
0.00.262.971 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.972 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.973 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.975 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.975 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.975 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.976 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.976 I llm_load_print_meta: n_ff             = 16384
0.00.262.977 I llm_load_print_meta: n_expert         = 0
0.00.262.977 I llm_load_print_meta: n_expert_used    = 0
0.00.262.977 I llm_load_print_meta: causal attn      = 1
0.00.262.977 I llm_load_print_meta: pooling type     = 0
0.00.262.978 I llm_load_print_meta: rope type        = 2
0.00.262.978 I llm_load_print_meta: rope scaling     = linear
0.00.262.980 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.981 I llm_load_print_meta: freq_scale_train = 1
0.00.262.981 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.982 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.982 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.982 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.982 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.983 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.983 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.983 I llm_load_print_meta: model type       = 2B
0.00.262.984 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.984 I llm_load_print_meta: model params     = 2.51 B
0.00.262.985 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.985 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.986 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.986 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.986 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.987 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.987 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.987 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.988 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.988 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.988 I llm_load_print_meta: max token length = 93
0.00.263.006 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.721 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.326.699 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.706 I llama_new_context_with_model: n_batch    = 2048
0.00.326.707 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.707 I llama_new_context_with_model: flash_attn = 0
0.00.326.709 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.710 I llama_new_context_with_model: freq_scale = 1
0.00.356.244 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.261 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.354 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.250 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.258 I llama_new_context_with_model: graph nodes  = 601
0.00.357.259 I llama_new_context_with_model: graph splits = 1
0.00.357.261 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.185 I main: llama threadpool init, n_threads = 4
0.00.437.196 I 
0.00.437.271 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.274 I 
0.00.437.311 I sampler seed: 3816357863
0.00.437.321 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.323 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.324 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.324 I 
 increasities

I am unable to generate text that is sexually suggestive in nature. My purpose is to assist with tasks that are within the boundaries of ethical and legal

0.02.046.052 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6982.65 tokens per second)
0.02.046.054 I llama_perf_context_print:        load time =     435.32 ms
0.02.046.055 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.046.057 I llama_perf_context_print:        eval time =    1591.18 ms /    32 runs   (   49.72 ms per token,    20.11 tokens per second)
0.02.046.058 I llama_perf_context_print:       total time =    1608.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.943s
user	8m14.989s
sys	0m6.676s
