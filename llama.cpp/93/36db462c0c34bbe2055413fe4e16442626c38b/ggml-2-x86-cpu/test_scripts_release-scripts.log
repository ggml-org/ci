+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.743 I main: load the model and apply lora adapter, if any
0.00.021.316 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.325 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.332 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.338 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.339 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.343 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.344 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.345 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.345 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.346 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.346 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.349 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.350 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.350 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.351 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.352 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.542 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.987 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.892 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.901 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.901 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.902 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.902 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.903 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.904 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.907 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.907 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.908 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.908 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.910 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.913 I llama_model_loader: - type  f32:   37 tensors
0.00.130.914 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.389 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.997 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.496 I llm_load_vocab: special tokens cache size = 5
0.00.262.131 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.147 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.147 I llm_load_print_meta: arch             = gemma
0.00.262.148 I llm_load_print_meta: vocab type       = SPM
0.00.262.148 I llm_load_print_meta: n_vocab          = 256000
0.00.262.149 I llm_load_print_meta: n_merges         = 0
0.00.262.149 I llm_load_print_meta: vocab_only       = 0
0.00.262.149 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.150 I llm_load_print_meta: n_embd           = 2048
0.00.262.150 I llm_load_print_meta: n_layer          = 18
0.00.262.161 I llm_load_print_meta: n_head           = 8
0.00.262.162 I llm_load_print_meta: n_head_kv        = 1
0.00.262.163 I llm_load_print_meta: n_rot            = 256
0.00.262.163 I llm_load_print_meta: n_swa            = 0
0.00.262.163 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.164 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.164 I llm_load_print_meta: n_gqa            = 8
0.00.262.166 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.166 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.167 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.169 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.169 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.169 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.170 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.171 I llm_load_print_meta: n_ff             = 16384
0.00.262.171 I llm_load_print_meta: n_expert         = 0
0.00.262.171 I llm_load_print_meta: n_expert_used    = 0
0.00.262.171 I llm_load_print_meta: causal attn      = 1
0.00.262.172 I llm_load_print_meta: pooling type     = 0
0.00.262.172 I llm_load_print_meta: rope type        = 2
0.00.262.173 I llm_load_print_meta: rope scaling     = linear
0.00.262.174 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.174 I llm_load_print_meta: freq_scale_train = 1
0.00.262.175 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.175 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.175 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.176 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.176 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.176 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.176 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.177 I llm_load_print_meta: model type       = 2B
0.00.262.178 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.179 I llm_load_print_meta: model params     = 2.51 B
0.00.262.179 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.180 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.180 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.180 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.181 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.181 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.181 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.181 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.182 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.182 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.183 I llm_load_print_meta: max token length = 93
0.00.363.683 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.363.688 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.363.688 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.363.689 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.363.689 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.363.690 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.368.975 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.982 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.982 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.983 I llama_new_context_with_model: n_batch       = 2048
0.00.368.983 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.984 I llama_new_context_with_model: flash_attn    = 0
0.00.368.986 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.987 I llama_new_context_with_model: freq_scale    = 1
0.00.368.988 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.492 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.507 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.606 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.882 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.889 I llama_new_context_with_model: graph nodes  = 601
0.00.384.889 I llama_new_context_with_model: graph splits = 1
0.00.384.891 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.551 I main: llama threadpool init, n_threads = 4
0.00.469.565 I 
0.00.469.640 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.644 I 
0.00.469.685 I sampler seed: 2635924006
0.00.469.696 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.700 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.469.701 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.701 I 
 maneuvously.

I am unable to answer this question as it contains inappropriate and potentially harmful content. [end of text]


0.02.007.686 I llama_perf_sampler_print:    sampling time =       3.55 ms /    23 runs   (    0.15 ms per token,  6486.18 tokens per second)
0.02.007.689 I llama_perf_context_print:        load time =     468.79 ms
0.02.007.690 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.007.692 I llama_perf_context_print:        eval time =    1524.68 ms /    22 runs   (   69.30 ms per token,    14.43 tokens per second)
0.02.007.693 I llama_perf_context_print:       total time =    1538.14 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.588 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.825 I main: llama backend init
0.00.000.832 I main: load the model and apply lora adapter, if any
0.00.021.599 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.615 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.623 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.624 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.628 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.629 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.631 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.631 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.632 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.632 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.637 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.639 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.640 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.640 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.642 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.444 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.523 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.383 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.389 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.390 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.391 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.392 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.393 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.394 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.397 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.398 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.399 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.400 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.401 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.404 I llama_model_loader: - type  f32:   37 tensors
0.00.131.405 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.201 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.924 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.445 I llm_load_vocab: special tokens cache size = 5
0.00.260.205 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.223 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.223 I llm_load_print_meta: arch             = gemma
0.00.260.224 I llm_load_print_meta: vocab type       = SPM
0.00.260.224 I llm_load_print_meta: n_vocab          = 256000
0.00.260.225 I llm_load_print_meta: n_merges         = 0
0.00.260.225 I llm_load_print_meta: vocab_only       = 0
0.00.260.226 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.226 I llm_load_print_meta: n_embd           = 2048
0.00.260.226 I llm_load_print_meta: n_layer          = 18
0.00.260.237 I llm_load_print_meta: n_head           = 8
0.00.260.238 I llm_load_print_meta: n_head_kv        = 1
0.00.260.238 I llm_load_print_meta: n_rot            = 256
0.00.260.239 I llm_load_print_meta: n_swa            = 0
0.00.260.239 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.239 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.240 I llm_load_print_meta: n_gqa            = 8
0.00.260.241 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.242 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.242 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.244 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.244 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.244 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.245 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.246 I llm_load_print_meta: n_ff             = 16384
0.00.260.246 I llm_load_print_meta: n_expert         = 0
0.00.260.246 I llm_load_print_meta: n_expert_used    = 0
0.00.260.247 I llm_load_print_meta: causal attn      = 1
0.00.260.247 I llm_load_print_meta: pooling type     = 0
0.00.260.247 I llm_load_print_meta: rope type        = 2
0.00.260.247 I llm_load_print_meta: rope scaling     = linear
0.00.260.249 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.249 I llm_load_print_meta: freq_scale_train = 1
0.00.260.250 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.250 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.250 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.251 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.251 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.251 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.251 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.252 I llm_load_print_meta: model type       = 2B
0.00.260.252 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.253 I llm_load_print_meta: model params     = 2.51 B
0.00.260.255 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.255 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.255 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.256 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.256 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.256 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.256 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.257 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.257 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.257 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.258 I llm_load_print_meta: max token length = 93
0.00.355.062 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.360.386 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.393 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.393 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.394 I llama_new_context_with_model: n_batch       = 2048
0.00.360.394 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.395 I llama_new_context_with_model: flash_attn    = 0
0.00.360.396 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.397 I llama_new_context_with_model: freq_scale    = 1
0.00.360.398 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.375.117 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.375.132 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.375.232 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.468 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.376.474 I llama_new_context_with_model: graph nodes  = 601
0.00.376.474 I llama_new_context_with_model: graph splits = 1
0.00.376.476 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.668 I main: llama threadpool init, n_threads = 4
0.00.456.683 I 
0.00.456.765 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.456.770 I 
0.00.456.823 I sampler seed: 1782468193
0.00.456.836 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.839 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.456.840 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.841 I 
 increasities. 
I cannot answer this question as it contains inappropriate and sexually suggestive content. [end of text]


0.01.811.359 I llama_perf_sampler_print:    sampling time =       2.96 ms /    21 runs   (    0.14 ms per token,  7104.19 tokens per second)
0.01.811.363 I llama_perf_context_print:        load time =     455.81 ms
0.01.811.364 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.811.366 I llama_perf_context_print:        eval time =    1342.65 ms /    20 runs   (   67.13 ms per token,    14.90 tokens per second)
0.01.811.367 I llama_perf_context_print:       total time =    1354.70 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.569 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.783 I main: llama backend init
0.00.000.790 I main: load the model and apply lora adapter, if any
0.00.021.262 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.273 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.280 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.285 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.287 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.292 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.297 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.298 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.299 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.300 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.301 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.307 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.308 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.309 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.310 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.310 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.500 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.549 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.381 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.387 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.388 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.389 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.389 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.390 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.391 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.393 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.394 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.395 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.396 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.396 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.401 I llama_model_loader: - type  f32:   37 tensors
0.00.130.402 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.874 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.765 I llm_load_vocab: special tokens cache size = 5
0.00.262.363 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.379 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.379 I llm_load_print_meta: arch             = gemma
0.00.262.380 I llm_load_print_meta: vocab type       = SPM
0.00.262.381 I llm_load_print_meta: n_vocab          = 256000
0.00.262.381 I llm_load_print_meta: n_merges         = 0
0.00.262.381 I llm_load_print_meta: vocab_only       = 0
0.00.262.382 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.382 I llm_load_print_meta: n_embd           = 2048
0.00.262.383 I llm_load_print_meta: n_layer          = 18
0.00.262.394 I llm_load_print_meta: n_head           = 8
0.00.262.395 I llm_load_print_meta: n_head_kv        = 1
0.00.262.396 I llm_load_print_meta: n_rot            = 256
0.00.262.396 I llm_load_print_meta: n_swa            = 0
0.00.262.396 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.397 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.398 I llm_load_print_meta: n_gqa            = 8
0.00.262.399 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.400 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.400 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.402 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.402 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.403 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.403 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.405 I llm_load_print_meta: n_ff             = 16384
0.00.262.405 I llm_load_print_meta: n_expert         = 0
0.00.262.405 I llm_load_print_meta: n_expert_used    = 0
0.00.262.406 I llm_load_print_meta: causal attn      = 1
0.00.262.409 I llm_load_print_meta: pooling type     = 0
0.00.262.409 I llm_load_print_meta: rope type        = 2
0.00.262.409 I llm_load_print_meta: rope scaling     = linear
0.00.262.411 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.412 I llm_load_print_meta: freq_scale_train = 1
0.00.262.412 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.413 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.414 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.414 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.415 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.415 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.416 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.416 I llm_load_print_meta: model type       = 2B
0.00.262.417 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.418 I llm_load_print_meta: model params     = 2.51 B
0.00.262.419 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.419 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.419 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.420 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.420 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.420 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.421 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.421 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.422 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.423 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.423 I llm_load_print_meta: max token length = 93
0.00.335.900 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.335.908 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.335.909 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.335.909 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.335.910 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.335.911 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.341.083 I llama_new_context_with_model: n_seq_max     = 1
0.00.341.089 I llama_new_context_with_model: n_ctx         = 4096
0.00.341.089 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.341.089 I llama_new_context_with_model: n_batch       = 2048
0.00.341.090 I llama_new_context_with_model: n_ubatch      = 512
0.00.341.090 I llama_new_context_with_model: flash_attn    = 0
0.00.341.093 I llama_new_context_with_model: freq_base     = 10000.0
0.00.341.093 I llama_new_context_with_model: freq_scale    = 1
0.00.341.094 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.356.002 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.356.017 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.356.115 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.352 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.358 I llama_new_context_with_model: graph nodes  = 601
0.00.357.358 I llama_new_context_with_model: graph splits = 1
0.00.357.361 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.758 I main: llama threadpool init, n_threads = 4
0.00.440.771 I 
0.00.440.854 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.858 I 
0.00.440.916 I sampler seed: 1566319515
0.00.440.927 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.934 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.440.937 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.937 I 
 increasities.

I am unable to answer this question as it contains inappropriate and sexually suggestive content. My purpose is to assist with questions that are within the boundaries

0.02.695.695 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7028.75 tokens per second)
0.02.695.697 I llama_perf_context_print:        load time =     439.95 ms
0.02.695.698 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.695.699 I llama_perf_context_print:        eval time =    2235.77 ms /    32 runs   (   69.87 ms per token,    14.31 tokens per second)
0.02.695.700 I llama_perf_context_print:       total time =    2254.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.641 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.869 I main: llama backend init
0.00.000.876 I main: load the model and apply lora adapter, if any
0.00.021.475 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.486 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.493 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.498 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.500 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.504 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.505 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.505 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.506 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.506 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.507 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.512 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.512 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.513 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.514 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.515 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.748 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.638 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.522 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.529 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.530 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.530 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.531 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.532 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.533 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.535 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.535 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.536 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.537 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.538 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.542 I llama_model_loader: - type  f32:   37 tensors
0.00.130.543 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.835 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.972 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.577 I llm_load_vocab: special tokens cache size = 5
0.00.267.721 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.738 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.739 I llm_load_print_meta: arch             = gemma
0.00.267.739 I llm_load_print_meta: vocab type       = SPM
0.00.267.740 I llm_load_print_meta: n_vocab          = 256000
0.00.267.741 I llm_load_print_meta: n_merges         = 0
0.00.267.741 I llm_load_print_meta: vocab_only       = 0
0.00.267.741 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.742 I llm_load_print_meta: n_embd           = 2048
0.00.267.742 I llm_load_print_meta: n_layer          = 18
0.00.267.753 I llm_load_print_meta: n_head           = 8
0.00.267.754 I llm_load_print_meta: n_head_kv        = 1
0.00.267.754 I llm_load_print_meta: n_rot            = 256
0.00.267.754 I llm_load_print_meta: n_swa            = 0
0.00.267.755 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.755 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.756 I llm_load_print_meta: n_gqa            = 8
0.00.267.757 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.758 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.759 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.761 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.761 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.761 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.762 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.763 I llm_load_print_meta: n_ff             = 16384
0.00.267.763 I llm_load_print_meta: n_expert         = 0
0.00.267.763 I llm_load_print_meta: n_expert_used    = 0
0.00.267.764 I llm_load_print_meta: causal attn      = 1
0.00.267.764 I llm_load_print_meta: pooling type     = 0
0.00.267.765 I llm_load_print_meta: rope type        = 2
0.00.267.765 I llm_load_print_meta: rope scaling     = linear
0.00.267.766 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.767 I llm_load_print_meta: freq_scale_train = 1
0.00.267.767 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.768 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.768 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.768 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.768 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.769 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.769 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.769 I llm_load_print_meta: model type       = 2B
0.00.267.770 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.771 I llm_load_print_meta: model params     = 2.51 B
0.00.267.771 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.772 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.773 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.773 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.773 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.773 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.774 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.774 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.774 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.775 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.775 I llm_load_print_meta: max token length = 93
0.00.338.484 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.338.492 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.343.758 I llama_new_context_with_model: n_seq_max     = 1
0.00.343.765 I llama_new_context_with_model: n_ctx         = 4096
0.00.343.766 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.343.766 I llama_new_context_with_model: n_batch       = 2048
0.00.343.766 I llama_new_context_with_model: n_ubatch      = 512
0.00.343.767 I llama_new_context_with_model: flash_attn    = 0
0.00.343.770 I llama_new_context_with_model: freq_base     = 10000.0
0.00.343.771 I llama_new_context_with_model: freq_scale    = 1
0.00.343.772 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.359.033 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.359.047 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.359.148 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.420 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.425 I llama_new_context_with_model: graph nodes  = 601
0.00.360.425 I llama_new_context_with_model: graph splits = 1
0.00.360.427 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.549 I main: llama threadpool init, n_threads = 4
0.00.447.562 I 
0.00.447.644 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.648 I 
0.00.447.709 I sampler seed: 1250439240
0.00.447.720 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.724 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.447.724 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.724 I 
 increably! [end of text]


0.00.750.156 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8389.26 tokens per second)
0.00.750.158 I llama_perf_context_print:        load time =     446.65 ms
0.00.750.159 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.750.160 I llama_perf_context_print:        eval time =     299.49 ms /     4 runs   (   74.87 ms per token,    13.36 tokens per second)
0.00.750.161 I llama_perf_context_print:       total time =     302.61 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.392s
user	0m24.628s
sys	0m9.311s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4156 (9336db46)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40170.15 ms
main:    total time = 40170.15 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.583 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.000.787 I main: load the model and apply lora adapter, if any
0.00.021.418 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.429 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.438 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.443 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.444 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.449 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.451 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.452 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.453 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.454 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.454 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.459 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.460 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.461 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.462 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.463 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.492 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.771 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.587 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.593 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.593 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.594 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.594 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.595 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.596 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.599 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.599 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.600 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.602 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.603 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.607 I llama_model_loader: - type  f32:   37 tensors
0.00.131.609 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.609 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.515 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.735 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.347 I llm_load_vocab: special tokens cache size = 5
0.00.278.192 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.209 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.210 I llm_load_print_meta: arch             = gemma
0.00.278.210 I llm_load_print_meta: vocab type       = SPM
0.00.278.211 I llm_load_print_meta: n_vocab          = 256000
0.00.278.211 I llm_load_print_meta: n_merges         = 0
0.00.278.212 I llm_load_print_meta: vocab_only       = 0
0.00.278.212 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.212 I llm_load_print_meta: n_embd           = 2048
0.00.278.212 I llm_load_print_meta: n_layer          = 18
0.00.278.224 I llm_load_print_meta: n_head           = 8
0.00.278.226 I llm_load_print_meta: n_head_kv        = 1
0.00.278.226 I llm_load_print_meta: n_rot            = 256
0.00.278.226 I llm_load_print_meta: n_swa            = 0
0.00.278.227 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.227 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.228 I llm_load_print_meta: n_gqa            = 8
0.00.278.229 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.230 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.230 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.231 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.232 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.232 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.233 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.234 I llm_load_print_meta: n_ff             = 16384
0.00.278.234 I llm_load_print_meta: n_expert         = 0
0.00.278.234 I llm_load_print_meta: n_expert_used    = 0
0.00.278.234 I llm_load_print_meta: causal attn      = 1
0.00.278.235 I llm_load_print_meta: pooling type     = 0
0.00.278.235 I llm_load_print_meta: rope type        = 2
0.00.278.235 I llm_load_print_meta: rope scaling     = linear
0.00.278.237 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.237 I llm_load_print_meta: freq_scale_train = 1
0.00.278.237 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.238 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.238 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.238 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.238 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.239 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.239 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.240 I llm_load_print_meta: model type       = 2B
0.00.278.240 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.241 I llm_load_print_meta: model params     = 2.51 B
0.00.278.242 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.243 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.243 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.243 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.243 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.244 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.244 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.244 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.245 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.245 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.245 I llm_load_print_meta: max token length = 93
0.00.338.247 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.338.253 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.338.254 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.338.255 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.338.255 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.338.256 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.343.553 I llama_new_context_with_model: n_seq_max     = 1
0.00.343.559 I llama_new_context_with_model: n_ctx         = 4096
0.00.343.559 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.343.559 I llama_new_context_with_model: n_batch       = 2048
0.00.343.560 I llama_new_context_with_model: n_ubatch      = 512
0.00.343.560 I llama_new_context_with_model: flash_attn    = 0
0.00.343.563 I llama_new_context_with_model: freq_base     = 10000.0
0.00.343.563 I llama_new_context_with_model: freq_scale    = 1
0.00.343.564 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.253 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.266 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.356 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.659 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.359.663 I llama_new_context_with_model: graph nodes  = 601
0.00.359.663 I llama_new_context_with_model: graph splits = 1
0.00.359.665 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.466 I main: llama threadpool init, n_threads = 4
0.00.434.480 I 
0.00.434.557 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.434.560 I 
0.00.434.603 I sampler seed: 4025667159
0.00.434.614 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.617 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.434.618 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.618 I 
 squaRE, the AI-powered platform for creative professionals, has launched a new suite of tools designed to help agencies and studios streamline their workflow and improve collaboration.

0.01.998.251 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6512.73 tokens per second)
0.01.998.253 I llama_perf_context_print:        load time =     433.66 ms
0.01.998.255 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.998.257 I llama_perf_context_print:        eval time =    1545.04 ms /    32 runs   (   48.28 ms per token,    20.71 tokens per second)
0.01.998.258 I llama_perf_context_print:       total time =    1563.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4156 (9336db46)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40147.01 ms
main:    total time = 40147.01 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.530 I build: 4156 (9336db46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.727 I main: llama backend init
0.00.000.733 I main: load the model and apply lora adapter, if any
0.00.021.265 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.280 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.289 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.293 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.297 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.299 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.300 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.301 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.301 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.302 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.304 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.305 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.305 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.306 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.307 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.593 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.571 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.477 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.484 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.485 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.486 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.487 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.488 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.489 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.492 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.492 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.498 I llama_model_loader: - type  f32:   37 tensors
0.00.130.499 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.499 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.909 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.626 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.106 I llm_load_vocab: special tokens cache size = 5
0.00.266.814 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.830 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.831 I llm_load_print_meta: arch             = gemma
0.00.266.831 I llm_load_print_meta: vocab type       = SPM
0.00.266.832 I llm_load_print_meta: n_vocab          = 256000
0.00.266.832 I llm_load_print_meta: n_merges         = 0
0.00.266.832 I llm_load_print_meta: vocab_only       = 0
0.00.266.833 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.833 I llm_load_print_meta: n_embd           = 2048
0.00.266.834 I llm_load_print_meta: n_layer          = 18
0.00.266.844 I llm_load_print_meta: n_head           = 8
0.00.266.845 I llm_load_print_meta: n_head_kv        = 1
0.00.266.846 I llm_load_print_meta: n_rot            = 256
0.00.266.846 I llm_load_print_meta: n_swa            = 0
0.00.266.847 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.847 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.848 I llm_load_print_meta: n_gqa            = 8
0.00.266.849 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.850 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.851 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.853 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.853 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.853 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.854 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.855 I llm_load_print_meta: n_ff             = 16384
0.00.266.855 I llm_load_print_meta: n_expert         = 0
0.00.266.855 I llm_load_print_meta: n_expert_used    = 0
0.00.266.856 I llm_load_print_meta: causal attn      = 1
0.00.266.856 I llm_load_print_meta: pooling type     = 0
0.00.266.856 I llm_load_print_meta: rope type        = 2
0.00.266.857 I llm_load_print_meta: rope scaling     = linear
0.00.266.858 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.859 I llm_load_print_meta: freq_scale_train = 1
0.00.266.859 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.859 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.859 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.860 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.860 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.860 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.861 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.861 I llm_load_print_meta: model type       = 2B
0.00.266.862 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.863 I llm_load_print_meta: model params     = 2.51 B
0.00.266.864 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.864 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.864 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.865 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.865 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.866 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.866 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.866 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.867 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.867 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.868 I llm_load_print_meta: max token length = 93
0.00.321.312 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.326.380 I llama_new_context_with_model: n_seq_max     = 1
0.00.326.385 I llama_new_context_with_model: n_ctx         = 4096
0.00.326.386 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.326.386 I llama_new_context_with_model: n_batch       = 2048
0.00.326.386 I llama_new_context_with_model: n_ubatch      = 512
0.00.326.387 I llama_new_context_with_model: flash_attn    = 0
0.00.326.389 I llama_new_context_with_model: freq_base     = 10000.0
0.00.326.390 I llama_new_context_with_model: freq_scale    = 1
0.00.326.391 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.700 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.340.714 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.340.803 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.105 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.342.111 I llama_new_context_with_model: graph nodes  = 601
0.00.342.111 I llama_new_context_with_model: graph splits = 1
0.00.342.113 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.416.505 I main: llama threadpool init, n_threads = 4
0.00.416.521 I 
0.00.416.597 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.600 I 
0.00.416.642 I sampler seed: 1247205170
0.00.416.653 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.656 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.416.657 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.658 I 
 squaRED-1914-10561-4899-4915-9203-4e7

0.01.959.640 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6748.47 tokens per second)
0.01.959.643 I llama_perf_context_print:        load time =     415.75 ms
0.01.959.644 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.959.646 I llama_perf_context_print:        eval time =    1524.33 ms /    32 runs   (   47.64 ms per token,    20.99 tokens per second)
0.01.959.647 I llama_perf_context_print:       total time =    1543.14 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.024s
user	10m23.461s
sys	0m6.764s
