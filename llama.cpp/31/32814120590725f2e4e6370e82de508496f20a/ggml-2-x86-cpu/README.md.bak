### ctest_debug

Runs ctest in debug mode
- status: 0
```
+ ctest --output-on-failure -L main -E test-opt
Test project /home/ggml/work/llama.cpp/build-ci-debug
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.11 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    2.48 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.39 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.96 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.59 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.44 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    1.76 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.12 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.44 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.12 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    1.66 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.46 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.45 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    1.72 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.04 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    6.37 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.04 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.01 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    1.31 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   30.88 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.62 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.06 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.94 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  52.99 sec*proc (27 tests)

Total Test time (real) =  53.00 sec

real	0m53.062s
user	1m8.123s
sys	0m0.795s
```

### ctest_release

Runs ctest in release mode
- status: 0
```
+ ctest --output-on-failure -L main
Test project /home/ggml/work/llama.cpp/build-ci-release
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.03 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    0.60 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.07 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.21 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.12 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.09 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    0.41 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.04 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.09 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.04 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    0.33 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.09 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.09 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    0.23 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.02 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    1.28 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.01 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.00 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    0.32 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   16.47 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.08 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.04 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.88 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  22.58 sec*proc (27 tests)

Total Test time (real) =  22.59 sec

real	0m22.652s
user	0m24.248s
sys	0m0.715s
```
### embd_bge_small

BGE Small (BERT):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-f16.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.604 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.898 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.003.911 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.917 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.918 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.919 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.920 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.920 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.925 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.925 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.926 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.926 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.927 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.930 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.931 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.003.939 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.939 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.940 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.941 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.941 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.427 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.222 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.226 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.227 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.228 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.228 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.228 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.229 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.231 I llama_model_loader: - type  f32:  124 tensors
0.00.008.231 I llama_model_loader: - type  f16:   73 tensors
0.00.020.393 I llm_load_vocab: special tokens cache size = 5
0.00.023.196 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.023.207 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.023.207 I llm_load_print_meta: arch             = bert
0.00.023.208 I llm_load_print_meta: vocab type       = WPM
0.00.023.208 I llm_load_print_meta: n_vocab          = 30522
0.00.023.209 I llm_load_print_meta: n_merges         = 0
0.00.023.209 I llm_load_print_meta: vocab_only       = 0
0.00.023.209 I llm_load_print_meta: n_ctx_train      = 512
0.00.023.210 I llm_load_print_meta: n_embd           = 384
0.00.023.210 I llm_load_print_meta: n_layer          = 12
0.00.023.220 I llm_load_print_meta: n_head           = 12
0.00.023.221 I llm_load_print_meta: n_head_kv        = 12
0.00.023.221 I llm_load_print_meta: n_rot            = 32
0.00.023.221 I llm_load_print_meta: n_swa            = 0
0.00.023.222 I llm_load_print_meta: n_embd_head_k    = 32
0.00.023.223 I llm_load_print_meta: n_embd_head_v    = 32
0.00.023.224 I llm_load_print_meta: n_gqa            = 1
0.00.023.225 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.023.225 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.023.227 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.023.228 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.023.228 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.023.228 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.023.229 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.023.229 I llm_load_print_meta: n_ff             = 1536
0.00.023.230 I llm_load_print_meta: n_expert         = 0
0.00.023.230 I llm_load_print_meta: n_expert_used    = 0
0.00.023.230 I llm_load_print_meta: causal attn      = 0
0.00.023.231 I llm_load_print_meta: pooling type     = 2
0.00.023.231 I llm_load_print_meta: rope type        = 2
0.00.023.231 I llm_load_print_meta: rope scaling     = linear
0.00.023.235 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.023.236 I llm_load_print_meta: freq_scale_train = 1
0.00.023.237 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.023.237 I llm_load_print_meta: rope_finetuned   = unknown
0.00.023.237 I llm_load_print_meta: ssm_d_conv       = 0
0.00.023.238 I llm_load_print_meta: ssm_d_inner      = 0
0.00.023.239 I llm_load_print_meta: ssm_d_state      = 0
0.00.023.239 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.023.240 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.023.240 I llm_load_print_meta: model type       = 33M
0.00.023.241 I llm_load_print_meta: model ftype      = F16
0.00.023.242 I llm_load_print_meta: model params     = 33.21 M
0.00.023.243 I llm_load_print_meta: model size       = 63.84 MiB (16.12 BPW) 
0.00.023.244 I llm_load_print_meta: general.name     = Bge Small
0.00.023.245 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.023.245 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.023.246 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.023.246 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.023.247 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.023.247 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.023.247 I llm_load_print_meta: max token length = 21
0.00.027.868 I llm_load_tensors:   CPU_Mapped model buffer size =    63.84 MiB
...............................................
0.00.028.870 I llama_new_context_with_model: n_seq_max     = 1
0.00.028.874 I llama_new_context_with_model: n_ctx         = 512
0.00.028.875 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.028.875 I llama_new_context_with_model: n_batch       = 2048
0.00.028.875 I llama_new_context_with_model: n_ubatch      = 2048
0.00.028.876 I llama_new_context_with_model: flash_attn    = 0
0.00.028.878 I llama_new_context_with_model: freq_base     = 10000.0
0.00.028.879 I llama_new_context_with_model: freq_scale    = 1
0.00.031.588 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.031.598 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.031.605 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.033.159 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.033.165 I llama_new_context_with_model: graph nodes  = 429
0.00.033.166 I llama_new_context_with_model: graph splits = 1
0.00.033.167 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.036.640 I 
0.00.036.717 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.038.295 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.043981 -0.019912  0.007653 -0.000817  0.001368 -0.037036  0.109434  0.042551  0.092053 -0.015928  0.006786 -0.035685 -0.017891  0.015067  0.018122  0.015897 -0.011289  0.010462 -0.085223 -0.008462  0.091371 -0.017062 -0.060338 -0.024475  0.027552  0.076068  0.027959 -0.014586  0.017650 -0.033272 -0.037874 -0.018970  0.068696 -0.009850 -0.025049  0.072347 -0.046561  0.011048 -0.050250  0.047711  0.032363 -0.011729  0.022058  0.049651  0.010451  0.005790 -0.028889  0.008910 -0.018504 -0.051470 -0.046051  0.030501 -0.035401  0.054201 -0.069637  0.044231  0.029804  0.046312  0.073396 -0.042574  0.076081  0.038866 -0.181164  0.082478  0.042289 -0.064568 -0.060101 -0.017852  0.006443  0.005881  0.017190 -0.026621  0.064579  0.112592  0.035119 -0.067439  0.027085 -0.067310 -0.033500 -0.033203  0.033284  0.013506 -0.003304 -0.037496 -0.052081  0.055139 -0.002003 -0.038281  0.064455  0.028829 -0.043329 -0.029286 -0.039474  0.036341  0.008404 -0.015484 -0.036588  0.018115  0.028594  0.342771 -0.044499  0.056128  0.017652 -0.020864 -0.066821  0.000156 -0.037885 -0.030052 -0.008532 -0.021580  0.000528 -0.003207  0.004002  0.018917 -0.008578  0.025847  0.049425  0.000093  0.050960 -0.042520 -0.031882  0.023591  0.030688 -0.023180 -0.046251 -0.079296  0.115182  0.046762  0.027825 -0.040706  0.067815 -0.022944  0.010327 -0.032950 -0.018314  0.043851  0.024273  0.052408  0.007479  0.008896  0.011261 -0.074641 -0.065550 -0.026755 -0.041183 -0.023861  0.026700  0.006908  0.027733  0.052891 -0.036685  0.057699 -0.000166  0.031751 -0.019797 -0.022062  0.041041 -0.058920  0.019588  0.043124  0.043576  0.041590 -0.022536  0.027068 -0.021847  0.005468 -0.041329 -0.001252  0.024406  0.002114  0.044361 -0.022769  0.043658  0.064761  0.055420  0.037071 -0.000892  0.046132  0.045799 -0.008473  0.063054 -0.073263 -0.011963  0.032102  0.023951  0.014715 -0.033687  0.001103 -0.015832 -0.019009  0.047889  0.110844  0.028409  0.031342 -0.013292 -0.057500  0.006651  0.005130 -0.012266 -0.051441 -0.000961 -0.017656 -0.019406 -0.040925  0.009218 -0.057942  0.050951  0.052334 -0.009604 -0.040249 -0.014093 -0.024869 -0.017245  0.006308  0.006589 -0.026888  0.015623  0.030737  0.002593  0.023236 -0.022227 -0.098571 -0.051117 -0.278013 -0.014983 -0.061554 -0.027217  0.017664 -0.010937 -0.017106  0.035068  0.047014 -0.015436  0.015181 -0.025469  0.047838 -0.005962 -0.000707 -0.061015 -0.068932 -0.060372 -0.035959  0.043333 -0.055008  0.015049  0.000546 -0.058232 -0.010431  0.012631  0.151511  0.127122 -0.013588  0.042000 -0.025680  0.014036 -0.001037 -0.150464  0.044853  0.005319 -0.036292 -0.029771 -0.020195 -0.034879  0.010257  0.033528 -0.048161 -0.051813 -0.017459 -0.023496  0.047369  0.052034 -0.016808 -0.055448  0.025848 -0.005719  0.010710  0.038711  0.008214 -0.009744 -0.105767 -0.027430 -0.096152  0.025073 -0.011257  0.092356  0.056104  0.003724  0.027786  0.002081 -0.051055 -0.039905 -0.013559 -0.044960 -0.015337  0.002931 -0.043514 -0.077954  0.065211 -0.006809 -0.001642 -0.014600  0.071543  0.023728 -0.037174  0.009152  0.001557 -0.032289  0.015478  0.037923  0.000353 -0.053199  0.021299 -0.039830  0.000027  0.013394  0.019804 -0.057902  0.006492 -0.049545 -0.267872  0.039153 -0.067966  0.038268 -0.012340  0.041505 -0.016141  0.052383 -0.071362  0.011378  0.024707 -0.007224  0.082095  0.028495 -0.021513  0.040507 -0.004541 -0.074590 -0.014750  0.020038  0.002290  0.023143  0.197207 -0.043248 -0.026016 -0.004951 -0.019268  0.074266  0.001757 -0.031968 -0.036601 -0.045052  0.000560 -0.011559  0.018118 -0.029477 -0.008451  0.006411  0.050800 -0.014935  0.006192  0.026092 -0.030786  0.048049  0.114067 -0.040810 -0.011428  0.005412 -0.003587  0.025157 -0.059144  0.013758 -0.010409  0.038707  0.051460  0.035409  0.035034 -0.017059  0.026389 -0.014506 -0.050054  0.003248  0.054119  0.039741 -0.039141 

0.00.044.102 I llama_perf_context_print:        load time =      36.01 ms
0.00.044.106 I llama_perf_context_print: prompt eval time =       5.52 ms /     9 tokens (    0.61 ms per token,  1630.43 tokens per second)
0.00.044.107 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.044.107 I llama_perf_context_print:       total time =       7.46 ms /    10 tokens

real	0m0.055s
user	0m0.086s
sys	0m0.012s
```
- q8_0:
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-q8_0.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.576 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.820 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.003.831 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.837 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.838 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.839 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.840 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.841 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.845 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.846 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.846 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.847 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.847 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.851 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.852 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.003.852 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.853 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.853 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.854 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.855 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.225 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.052 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.056 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.057 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.057 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.058 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.058 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.059 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.060 I llama_model_loader: - type  f32:  124 tensors
0.00.008.061 I llama_model_loader: - type q8_0:   73 tensors
0.00.019.685 I llm_load_vocab: special tokens cache size = 5
0.00.022.359 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.371 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.371 I llm_load_print_meta: arch             = bert
0.00.022.372 I llm_load_print_meta: vocab type       = WPM
0.00.022.372 I llm_load_print_meta: n_vocab          = 30522
0.00.022.373 I llm_load_print_meta: n_merges         = 0
0.00.022.373 I llm_load_print_meta: vocab_only       = 0
0.00.022.373 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.374 I llm_load_print_meta: n_embd           = 384
0.00.022.374 I llm_load_print_meta: n_layer          = 12
0.00.022.381 I llm_load_print_meta: n_head           = 12
0.00.022.382 I llm_load_print_meta: n_head_kv        = 12
0.00.022.383 I llm_load_print_meta: n_rot            = 32
0.00.022.383 I llm_load_print_meta: n_swa            = 0
0.00.022.384 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.385 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.385 I llm_load_print_meta: n_gqa            = 1
0.00.022.386 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.387 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.388 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.389 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.389 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.390 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.390 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.391 I llm_load_print_meta: n_ff             = 1536
0.00.022.391 I llm_load_print_meta: n_expert         = 0
0.00.022.392 I llm_load_print_meta: n_expert_used    = 0
0.00.022.392 I llm_load_print_meta: causal attn      = 0
0.00.022.392 I llm_load_print_meta: pooling type     = 2
0.00.022.393 I llm_load_print_meta: rope type        = 2
0.00.022.393 I llm_load_print_meta: rope scaling     = linear
0.00.022.397 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.398 I llm_load_print_meta: freq_scale_train = 1
0.00.022.398 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.399 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.399 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.399 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.399 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.400 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.401 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.401 I llm_load_print_meta: model type       = 33M
0.00.022.402 I llm_load_print_meta: model ftype      = Q8_0
0.00.022.403 I llm_load_print_meta: model params     = 33.21 M
0.00.022.404 I llm_load_print_meta: model size       = 34.38 MiB (8.68 BPW) 
0.00.022.404 I llm_load_print_meta: general.name     = Bge Small
0.00.022.405 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.405 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.406 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.406 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.406 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.407 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.408 I llm_load_print_meta: max token length = 21
0.00.025.647 I llm_load_tensors:   CPU_Mapped model buffer size =    34.38 MiB
.................................................
0.00.026.597 I llama_new_context_with_model: n_seq_max     = 1
0.00.026.602 I llama_new_context_with_model: n_ctx         = 512
0.00.026.602 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.026.602 I llama_new_context_with_model: n_batch       = 2048
0.00.026.603 I llama_new_context_with_model: n_ubatch      = 2048
0.00.026.603 I llama_new_context_with_model: flash_attn    = 0
0.00.026.605 I llama_new_context_with_model: freq_base     = 10000.0
0.00.026.605 I llama_new_context_with_model: freq_scale    = 1
0.00.029.008 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.029.016 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.029.021 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.030.447 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.030.452 I llama_new_context_with_model: graph nodes  = 429
0.00.030.453 I llama_new_context_with_model: graph splits = 1
0.00.030.454 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.033.203 I 
0.00.033.272 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.034.738 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.044922 -0.019413  0.009515 -0.002102  0.002819 -0.037346  0.108884  0.042320  0.092050 -0.015802  0.006203 -0.037483 -0.019315  0.014838  0.017312  0.014293 -0.014406  0.012199 -0.084337 -0.007969  0.092391 -0.017228 -0.062058 -0.024418  0.027417  0.077134  0.028219 -0.014623  0.017895 -0.035334 -0.038133 -0.018044  0.068934 -0.010808 -0.024000  0.071910 -0.045750  0.011734 -0.050866  0.050023  0.032255 -0.012384  0.022736  0.051037  0.009457  0.005324 -0.028037  0.007784 -0.019140 -0.054168 -0.047119  0.029088 -0.036035  0.053016 -0.067690  0.044014  0.029616  0.047229  0.073648 -0.043168  0.075918  0.037900 -0.183180  0.081508  0.042762 -0.066165 -0.059699 -0.017308  0.007110  0.005047  0.016962 -0.027730  0.064833  0.111964  0.034996 -0.068446  0.026829 -0.066310 -0.034038 -0.035547  0.032486  0.014914 -0.004339 -0.037040 -0.051606  0.053873 -0.002577 -0.037109  0.062467  0.029008 -0.041969 -0.029640 -0.039698  0.037257  0.007866 -0.014732 -0.036933  0.018711  0.029345  0.345662 -0.043828  0.055518  0.015965 -0.021585 -0.062967  0.000030 -0.037829 -0.031117 -0.008600 -0.019632  0.000917 -0.003949  0.004752  0.017646 -0.010475  0.024866  0.048859 -0.001073  0.050841 -0.042711 -0.029936  0.023056  0.031158 -0.023216 -0.044477 -0.079865  0.114434  0.046968  0.027606 -0.040895  0.067793 -0.022368  0.009769 -0.034681 -0.016154  0.044193  0.022540  0.051639  0.007797  0.007391  0.010083 -0.074316 -0.064372 -0.025101 -0.041340 -0.024550  0.027224  0.005440  0.026617  0.051940 -0.036700  0.058742  0.001461  0.032451 -0.020921 -0.021366  0.040976 -0.059863  0.019722  0.043085  0.042850  0.040582 -0.022107  0.029685 -0.022324  0.007497 -0.040081  0.000397  0.023739  0.002122  0.044315 -0.022987  0.043469  0.064731  0.056117  0.038352  0.000367  0.048953  0.045241 -0.009339  0.060821 -0.073344 -0.011166  0.032674  0.022647  0.014999 -0.033428  0.000347 -0.015448 -0.018743  0.048620  0.110470  0.029597  0.030962 -0.011328 -0.056829  0.006497  0.004694 -0.012985 -0.051779 -0.003150 -0.017702 -0.019727 -0.040388  0.009924 -0.059078  0.050095  0.052471 -0.010575 -0.039471 -0.015563 -0.023734 -0.016019  0.005706  0.007087 -0.027253  0.016754  0.030656  0.001635  0.023381 -0.021934 -0.097271 -0.050370 -0.277306 -0.014223 -0.061428 -0.027445  0.017050 -0.009608 -0.017319  0.033824  0.048471 -0.016368  0.016177 -0.022949  0.049435 -0.005335  0.000750 -0.060800 -0.068838 -0.059804 -0.036057  0.042588 -0.054961  0.014508 -0.000423 -0.059416 -0.009816  0.010768  0.150426  0.126644 -0.011118  0.042668 -0.025554  0.015019 -0.000210 -0.150502  0.042745  0.005784 -0.036606 -0.029014 -0.019236 -0.034275  0.009913  0.034990 -0.049935 -0.053754 -0.017105 -0.024232  0.048749  0.050670 -0.016684 -0.056609  0.023764 -0.005639  0.011582  0.038581  0.006578 -0.008041 -0.106921 -0.027615 -0.097465  0.025000 -0.011210  0.092479  0.055639  0.005293  0.026939  0.001806 -0.051768 -0.038913 -0.013483 -0.046246 -0.014757  0.001830 -0.044614 -0.077737  0.066446 -0.006428 -0.000018 -0.014871  0.071112  0.024387 -0.036434  0.008250  0.001929 -0.033247  0.017147  0.038480  0.001671 -0.051957  0.021081 -0.038685  0.000496  0.012745  0.021241 -0.057647  0.004903 -0.049491 -0.267161  0.038997 -0.067915  0.037074 -0.011075  0.043293 -0.015534  0.050443 -0.070772  0.012405  0.024955 -0.006946  0.082643  0.029026 -0.022356  0.042367 -0.003229 -0.074061 -0.015830  0.020035  0.002637  0.023772  0.196120 -0.044049 -0.024944 -0.004666 -0.017908  0.073222  0.001813 -0.031931 -0.035815 -0.044377 -0.000573 -0.011445  0.018698 -0.027002 -0.010099  0.005813  0.048950 -0.014805  0.006814  0.027005 -0.030880  0.048526  0.111968 -0.039582 -0.012955  0.004347 -0.002677  0.025424 -0.060709  0.014993 -0.008847  0.037792  0.050273  0.035482  0.036962 -0.017363  0.025554 -0.016189 -0.050841  0.003358  0.054623  0.039363 -0.039516 

0.00.038.824 I llama_perf_context_print:        load time =      32.60 ms
0.00.038.826 I llama_perf_context_print: prompt eval time =       3.84 ms /     9 tokens (    0.43 ms per token,  2342.53 tokens per second)
0.00.038.827 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.038.828 I llama_perf_context_print:       total time =       5.62 ms /    10 tokens

real	0m0.048s
user	0m0.064s
sys	0m0.020s
```
### rerank_tiny

Rerank Tiny (Jina):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/rerank-tiny/ggml-model-f16.gguf -p 'what is panda?</s></s>hi\nwhat is panda?</s></s>it'\''s a bear\nwhat is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.' -ngl 99 -c 0 --pooling rank --embd-normalize -1 --verbose-prompt
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.553 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.008.426 I llama_model_loader: loaded meta data with 29 key-value pairs and 70 tensors from ../models-mnt/rerank-tiny/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.008.437 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.008.444 I llama_model_loader: - kv   0:                       general.architecture str              = jina-bert-v2
0.00.008.445 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.008.446 I llama_model_loader: - kv   2:                               general.name str              = Jina Bert Implementation
0.00.008.447 I llama_model_loader: - kv   3:                       general.organization str              = Jinaai
0.00.008.448 I llama_model_loader: - kv   4:                         general.size_label str              = 33M
0.00.008.450 I llama_model_loader: - kv   5:                   jina-bert-v2.block_count u32              = 4
0.00.008.452 I llama_model_loader: - kv   6:                jina-bert-v2.context_length u32              = 8192
0.00.008.452 I llama_model_loader: - kv   7:              jina-bert-v2.embedding_length u32              = 384
0.00.008.453 I llama_model_loader: - kv   8:           jina-bert-v2.feed_forward_length u32              = 1536
0.00.008.453 I llama_model_loader: - kv   9:          jina-bert-v2.attention.head_count u32              = 12
0.00.008.456 I llama_model_loader: - kv  10:  jina-bert-v2.attention.layer_norm_epsilon f32              = 0.000000
0.00.008.457 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.008.458 I llama_model_loader: - kv  12:              jina-bert-v2.attention.causal bool             = false
0.00.008.458 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.008.458 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = jina-v1-en
0.00.014.784 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,61056]   = ["<s>", "<pad>", "</s>", "<unk>", "<m...
0.00.016.397 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,61056]   = [3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, ...
0.00.020.271 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,39382]   = ["t h", "i n", "a n", "e r", "th e", ...
0.00.020.277 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.020.277 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 2
0.00.020.278 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.020.279 I llama_model_loader: - kv  21:          tokenizer.ggml.seperator_token_id u32              = 2
0.00.020.279 I llama_model_loader: - kv  22:            tokenizer.ggml.padding_token_id u32              = 1
0.00.020.280 I llama_model_loader: - kv  23:                tokenizer.ggml.cls_token_id u32              = 0
0.00.020.280 I llama_model_loader: - kv  24:               tokenizer.ggml.mask_token_id u32              = 4
0.00.020.280 I llama_model_loader: - kv  25:            tokenizer.ggml.token_type_count u32              = 2
0.00.020.282 I llama_model_loader: - kv  26:               tokenizer.ggml.add_bos_token bool             = true
0.00.020.282 I llama_model_loader: - kv  27:               tokenizer.ggml.add_eos_token bool             = true
0.00.020.283 I llama_model_loader: - kv  28:               general.quantization_version u32              = 2
0.00.020.285 I llama_model_loader: - type  f32:   41 tensors
0.00.020.285 I llama_model_loader: - type  f16:   29 tensors
0.00.039.523 W llm_load_vocab: empty token at index 5
0.00.049.992 W llm_load_vocab: model vocab missing newline token, using special_pad_id instead
0.00.064.601 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.064.719 I llm_load_vocab: special tokens cache size = 5
0.00.425.167 I llm_load_vocab: token to piece cache size = 1.5060 MB
0.00.425.185 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.425.186 I llm_load_print_meta: arch             = jina-bert-v2
0.00.425.187 I llm_load_print_meta: vocab type       = BPE
0.00.425.187 I llm_load_print_meta: n_vocab          = 61056
0.00.425.188 I llm_load_print_meta: n_merges         = 39382
0.00.425.188 I llm_load_print_meta: vocab_only       = 0
0.00.425.189 I llm_load_print_meta: n_ctx_train      = 8192
0.00.425.189 I llm_load_print_meta: n_embd           = 384
0.00.425.189 I llm_load_print_meta: n_layer          = 4
0.00.425.199 I llm_load_print_meta: n_head           = 12
0.00.425.200 I llm_load_print_meta: n_head_kv        = 12
0.00.425.201 I llm_load_print_meta: n_rot            = 32
0.00.425.201 I llm_load_print_meta: n_swa            = 0
0.00.425.201 I llm_load_print_meta: n_embd_head_k    = 32
0.00.425.202 I llm_load_print_meta: n_embd_head_v    = 32
0.00.425.203 I llm_load_print_meta: n_gqa            = 1
0.00.425.204 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.425.204 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.425.206 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.425.207 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.425.207 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.425.208 I llm_load_print_meta: f_max_alibi_bias = 8.0e+00
0.00.425.208 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.425.209 I llm_load_print_meta: n_ff             = 1536
0.00.425.209 I llm_load_print_meta: n_expert         = 0
0.00.425.210 I llm_load_print_meta: n_expert_used    = 0
0.00.425.210 I llm_load_print_meta: causal attn      = 0
0.00.425.210 I llm_load_print_meta: pooling type     = -1
0.00.425.210 I llm_load_print_meta: rope type        = -1
0.00.425.211 I llm_load_print_meta: rope scaling     = linear
0.00.425.212 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.425.212 I llm_load_print_meta: freq_scale_train = 1
0.00.425.212 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.425.213 I llm_load_print_meta: rope_finetuned   = unknown
0.00.425.213 I llm_load_print_meta: ssm_d_conv       = 0
0.00.425.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.425.214 I llm_load_print_meta: ssm_d_state      = 0
0.00.425.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.425.214 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.425.215 I llm_load_print_meta: model type       = 33M
0.00.425.216 I llm_load_print_meta: model ftype      = F16
0.00.425.217 I llm_load_print_meta: model params     = 32.90 M
0.00.425.217 I llm_load_print_meta: model size       = 62.78 MiB (16.01 BPW) 
0.00.425.218 I llm_load_print_meta: general.name     = Jina Bert Implementation
0.00.425.219 I llm_load_print_meta: BOS token        = 0 '<s>'
0.00.425.219 I llm_load_print_meta: EOS token        = 2 '</s>'
0.00.425.219 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.425.219 I llm_load_print_meta: SEP token        = 2 '</s>'
0.00.425.220 I llm_load_print_meta: PAD token        = 1 '<pad>'
0.00.425.220 I llm_load_print_meta: CLS token        = 0 '<s>'
0.00.425.221 I llm_load_print_meta: MASK token       = 4 '<mask>'
0.00.425.221 I llm_load_print_meta: EOG token        = 2 '</s>'
0.00.425.222 I llm_load_print_meta: max token length = 45
0.00.429.010 I llm_load_tensors:   CPU_Mapped model buffer size =    62.78 MiB
......................
0.00.431.107 I llama_new_context_with_model: n_seq_max     = 1
0.00.431.113 I llama_new_context_with_model: n_ctx         = 8192
0.00.431.113 I llama_new_context_with_model: n_ctx_per_seq = 8192
0.00.431.114 I llama_new_context_with_model: n_batch       = 2048
0.00.431.114 I llama_new_context_with_model: n_ubatch      = 2048
0.00.431.114 I llama_new_context_with_model: flash_attn    = 0
0.00.431.116 I llama_new_context_with_model: freq_base     = 10000.0
0.00.431.117 I llama_new_context_with_model: freq_scale    = 1
0.00.441.346 I llama_kv_cache_init:        CPU KV buffer size =    48.00 MiB
0.00.441.357 I llama_new_context_with_model: KV self size  =   48.00 MiB, K (f16):   24.00 MiB, V (f16):   24.00 MiB
0.00.441.365 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.442.669 I llama_new_context_with_model:        CPU compute buffer size =   220.02 MiB
0.00.442.675 I llama_new_context_with_model: graph nodes  = 154
0.00.442.675 I llama_new_context_with_model: graph splits = 1
0.00.442.677 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.443 I 
0.00.450.529 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.450.765 I main: prompt 0: 'what is panda?</s></s>hi'
0.00.450.768 I main: number of tokens in prompt = 9
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 23233 -> 'hi'
     2 -> '</s>'


0.00.450.779 I main: prompt 1: 'what is panda?</s></s>it's a bear'
0.00.450.779 I main: number of tokens in prompt = 13
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21153 -> 'it'
    37 -> '''
    87 -> 's'
    69 -> 'a'
 25706 -> 'bear'
     2 -> '</s>'


0.00.450.790 I main: prompt 2: 'what is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.'
0.00.450.790 I main: number of tokens in prompt = 40
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21215 -> 'he'
 28390 -> 'giant'
 49990 -> 'panda'
    38 -> '('
 21163 -> 'il'
 26237 -> 'uro'
 21223 -> 'po'
 23179 -> 'da'
 36906 -> 'melan'
 26791 -> 'ole'
    89 -> 'u'
 21402 -> 'ca'
 21686 -> '),'
 23314 -> 'sometimes'
 22517 -> 'called'
    69 -> 'a'
 49990 -> 'panda'
 25706 -> 'bear'
 21142 -> 'or'
 22810 -> 'simply'
 49990 -> 'panda'
    42 -> ','
 21152 -> 'is'
    69 -> 'a'
 25706 -> 'bear'
 25677 -> 'species'
 28930 -> 'ende'
 22024 -> 'mic'
 21148 -> 'to'
    76 -> 'h'
 22344 -> 'ina'
    44 -> '.'
     2 -> '</s>'


0.00.454.475 I batch_decode: n_tokens = 62, n_seq = 3

rerank score 0:    0.023
rerank score 1:    0.024
rerank score 2:    0.199

0.00.470.069 I llama_perf_context_print:        load time =     449.86 ms
0.00.470.072 I llama_perf_context_print: prompt eval time =      15.38 ms /    62 tokens (    0.25 ms per token,  4030.16 tokens per second)
0.00.470.074 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.470.076 I llama_perf_context_print:       total time =      19.63 ms /    63 tokens

real	0m0.489s
user	0m0.533s
sys	0m0.036s
  - rerank score 0 @ 0.023 OK
  - rerank score 1 @ 0.024 OK
  - rerank score 2 @ 0.199 OK
```
### test_scripts_debug

Runs test scripts in debug mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.687 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.880 I main: llama backend init
0.00.000.888 I main: load the model and apply lora adapter, if any
0.00.023.470 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.481 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.574 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.586 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.589 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.595 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.599 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.601 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.602 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.603 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.605 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.613 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.614 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.616 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.617 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.618 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.264 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.818 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.397 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.411 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.412 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.414 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.415 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.417 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.418 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.422 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.424 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.425 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.426 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.428 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.439 I llama_model_loader: - type  f32:   37 tensors
0.00.349.441 I llama_model_loader: - type q8_0:  127 tensors
0.00.583.786 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.641.744 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.642.659 I llm_load_vocab: special tokens cache size = 5
0.00.845.773 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.845.851 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.845.852 I llm_load_print_meta: arch             = gemma
0.00.845.852 I llm_load_print_meta: vocab type       = SPM
0.00.845.853 I llm_load_print_meta: n_vocab          = 256000
0.00.845.856 I llm_load_print_meta: n_merges         = 0
0.00.845.856 I llm_load_print_meta: vocab_only       = 0
0.00.845.856 I llm_load_print_meta: n_ctx_train      = 8192
0.00.845.857 I llm_load_print_meta: n_embd           = 2048
0.00.845.857 I llm_load_print_meta: n_layer          = 18
0.00.845.922 I llm_load_print_meta: n_head           = 8
0.00.845.929 I llm_load_print_meta: n_head_kv        = 1
0.00.845.930 I llm_load_print_meta: n_rot            = 256
0.00.845.930 I llm_load_print_meta: n_swa            = 0
0.00.845.931 I llm_load_print_meta: n_embd_head_k    = 256
0.00.845.931 I llm_load_print_meta: n_embd_head_v    = 256
0.00.845.936 I llm_load_print_meta: n_gqa            = 8
0.00.845.940 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.845.945 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.845.946 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.845.948 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.845.948 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.845.949 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.845.949 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.845.954 I llm_load_print_meta: n_ff             = 16384
0.00.845.955 I llm_load_print_meta: n_expert         = 0
0.00.845.955 I llm_load_print_meta: n_expert_used    = 0
0.00.845.956 I llm_load_print_meta: causal attn      = 1
0.00.845.956 I llm_load_print_meta: pooling type     = 0
0.00.845.956 I llm_load_print_meta: rope type        = 2
0.00.845.957 I llm_load_print_meta: rope scaling     = linear
0.00.845.958 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.845.958 I llm_load_print_meta: freq_scale_train = 1
0.00.845.959 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.845.960 I llm_load_print_meta: rope_finetuned   = unknown
0.00.845.960 I llm_load_print_meta: ssm_d_conv       = 0
0.00.845.983 I llm_load_print_meta: ssm_d_inner      = 0
0.00.845.984 I llm_load_print_meta: ssm_d_state      = 0
0.00.845.984 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.845.985 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.845.985 I llm_load_print_meta: model type       = 2B
0.00.845.987 I llm_load_print_meta: model ftype      = Q8_0
0.00.845.988 I llm_load_print_meta: model params     = 2.51 B
0.00.846.004 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.846.005 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.846.006 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.846.006 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.846.007 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.846.008 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.846.008 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.846.008 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.846.015 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.846.016 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.846.017 I llm_load_print_meta: max token length = 93
0.00.948.306 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.948.316 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.948.317 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.948.318 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.948.319 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.948.319 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.954.125 I llama_new_context_with_model: n_seq_max     = 1
0.00.954.132 I llama_new_context_with_model: n_ctx         = 4096
0.00.954.132 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.954.133 I llama_new_context_with_model: n_batch       = 2048
0.00.954.133 I llama_new_context_with_model: n_ubatch      = 512
0.00.954.134 I llama_new_context_with_model: flash_attn    = 0
0.00.954.136 I llama_new_context_with_model: freq_base     = 10000.0
0.00.954.136 I llama_new_context_with_model: freq_scale    = 1
0.00.954.137 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.968.658 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.968.699 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.968.824 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.971.368 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.971.372 I llama_new_context_with_model: graph nodes  = 601
0.00.971.372 I llama_new_context_with_model: graph splits = 1
0.00.971.394 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.710.417 I main: llama threadpool init, n_threads = 4
0.01.710.433 I 
0.01.710.546 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.710.547 I 
0.01.710.784 I sampler seed: 357344905
0.01.710.799 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.710.811 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.710.812 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.710.812 I 
 seconded.

**Explanation:**

The provided statement contains an error in its use of terminology. The term "seconded" is not commonly used in this

0.15.259.230 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.45 tokens per second)
0.15.259.234 I llama_perf_context_print:        load time =    1709.43 ms
0.15.259.236 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.259.238 I llama_perf_context_print:        eval time =   13459.89 ms /    32 runs   (  420.62 ms per token,     2.38 tokens per second)
0.15.259.239 I llama_perf_context_print:       total time =   13548.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.677 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.881 I main: llama backend init
0.00.000.890 I main: load the model and apply lora adapter, if any
0.00.023.543 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.648 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.665 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.670 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.678 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.679 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.680 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.682 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.683 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.684 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.691 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.695 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.696 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.698 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.699 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.483 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.645 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.134 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.143 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.144 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.145 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.147 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.148 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.149 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.153 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.155 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.156 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.157 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.350.159 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.168 I llama_model_loader: - type  f32:   37 tensors
0.00.350.171 I llama_model_loader: - type q8_0:  127 tensors
0.00.576.413 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.635.927 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.636.893 I llm_load_vocab: special tokens cache size = 5
0.00.827.283 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.827.357 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.827.361 I llm_load_print_meta: arch             = gemma
0.00.827.362 I llm_load_print_meta: vocab type       = SPM
0.00.827.363 I llm_load_print_meta: n_vocab          = 256000
0.00.827.365 I llm_load_print_meta: n_merges         = 0
0.00.827.366 I llm_load_print_meta: vocab_only       = 0
0.00.827.366 I llm_load_print_meta: n_ctx_train      = 8192
0.00.827.366 I llm_load_print_meta: n_embd           = 2048
0.00.827.368 I llm_load_print_meta: n_layer          = 18
0.00.827.433 I llm_load_print_meta: n_head           = 8
0.00.827.443 I llm_load_print_meta: n_head_kv        = 1
0.00.827.443 I llm_load_print_meta: n_rot            = 256
0.00.827.443 I llm_load_print_meta: n_swa            = 0
0.00.827.444 I llm_load_print_meta: n_embd_head_k    = 256
0.00.827.444 I llm_load_print_meta: n_embd_head_v    = 256
0.00.827.449 I llm_load_print_meta: n_gqa            = 8
0.00.827.453 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.827.458 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.827.462 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.827.463 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.827.464 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.827.464 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.827.465 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.827.470 I llm_load_print_meta: n_ff             = 16384
0.00.827.470 I llm_load_print_meta: n_expert         = 0
0.00.827.471 I llm_load_print_meta: n_expert_used    = 0
0.00.827.471 I llm_load_print_meta: causal attn      = 1
0.00.827.471 I llm_load_print_meta: pooling type     = 0
0.00.827.472 I llm_load_print_meta: rope type        = 2
0.00.827.475 I llm_load_print_meta: rope scaling     = linear
0.00.827.476 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.827.477 I llm_load_print_meta: freq_scale_train = 1
0.00.827.477 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.827.477 I llm_load_print_meta: rope_finetuned   = unknown
0.00.827.477 I llm_load_print_meta: ssm_d_conv       = 0
0.00.827.478 I llm_load_print_meta: ssm_d_inner      = 0
0.00.827.478 I llm_load_print_meta: ssm_d_state      = 0
0.00.827.478 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.827.480 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.827.480 I llm_load_print_meta: model type       = 2B
0.00.827.481 I llm_load_print_meta: model ftype      = Q8_0
0.00.827.482 I llm_load_print_meta: model params     = 2.51 B
0.00.827.511 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.827.515 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.827.516 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.827.516 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.827.517 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.827.517 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.827.518 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.827.518 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.827.525 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.827.526 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.827.528 I llm_load_print_meta: max token length = 93
0.00.925.133 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.931.145 I llama_new_context_with_model: n_seq_max     = 1
0.00.931.153 I llama_new_context_with_model: n_ctx         = 4096
0.00.931.153 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.931.154 I llama_new_context_with_model: n_batch       = 2048
0.00.931.154 I llama_new_context_with_model: n_ubatch      = 512
0.00.931.155 I llama_new_context_with_model: flash_attn    = 0
0.00.931.157 I llama_new_context_with_model: freq_base     = 10000.0
0.00.931.158 I llama_new_context_with_model: freq_scale    = 1
0.00.931.159 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.946.319 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.946.360 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.946.485 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.949.033 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.949.037 I llama_new_context_with_model: graph nodes  = 601
0.00.949.038 I llama_new_context_with_model: graph splits = 1
0.00.949.061 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.682.847 I main: llama threadpool init, n_threads = 4
0.01.682.864 I 
0.01.682.986 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.682.990 I 
0.01.683.231 I sampler seed: 676914382
0.01.683.244 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.683.256 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.683.257 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.683.257 I 
 increasities for an all-new, immersive storytelling experience.

**Step 1: The Journey Begins**

- Players embark on a captivating journey through a

0.15.409.860 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.81 tokens per second)
0.15.409.875 I llama_perf_context_print:        load time =    1681.84 ms
0.15.409.877 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.409.878 I llama_perf_context_print:        eval time =   13638.24 ms /    32 runs   (  426.20 ms per token,     2.35 tokens per second)
0.15.409.879 I llama_perf_context_print:       total time =   13727.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.699 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.900 I main: llama backend init
0.00.000.908 I main: load the model and apply lora adapter, if any
0.00.023.482 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.492 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.584 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.595 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.600 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.606 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.608 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.609 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.611 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.612 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.615 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.622 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.625 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.627 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.628 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.629 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.215 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.270 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.282 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.283 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.285 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.286 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.287 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.289 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.293 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.294 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.296 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.297 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.350.319 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.329 I llama_model_loader: - type  f32:   37 tensors
0.00.350.332 I llama_model_loader: - type q8_0:  127 tensors
0.00.576.910 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.648.313 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.649.343 I llm_load_vocab: special tokens cache size = 5
0.00.843.876 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.843.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.843.952 I llm_load_print_meta: arch             = gemma
0.00.843.952 I llm_load_print_meta: vocab type       = SPM
0.00.843.953 I llm_load_print_meta: n_vocab          = 256000
0.00.843.955 I llm_load_print_meta: n_merges         = 0
0.00.843.956 I llm_load_print_meta: vocab_only       = 0
0.00.843.956 I llm_load_print_meta: n_ctx_train      = 8192
0.00.843.957 I llm_load_print_meta: n_embd           = 2048
0.00.843.957 I llm_load_print_meta: n_layer          = 18
0.00.844.021 I llm_load_print_meta: n_head           = 8
0.00.844.029 I llm_load_print_meta: n_head_kv        = 1
0.00.844.029 I llm_load_print_meta: n_rot            = 256
0.00.844.030 I llm_load_print_meta: n_swa            = 0
0.00.844.030 I llm_load_print_meta: n_embd_head_k    = 256
0.00.844.030 I llm_load_print_meta: n_embd_head_v    = 256
0.00.844.035 I llm_load_print_meta: n_gqa            = 8
0.00.844.039 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.844.044 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.844.045 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.844.048 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.844.049 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.844.049 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.844.049 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.844.054 I llm_load_print_meta: n_ff             = 16384
0.00.844.055 I llm_load_print_meta: n_expert         = 0
0.00.844.056 I llm_load_print_meta: n_expert_used    = 0
0.00.844.056 I llm_load_print_meta: causal attn      = 1
0.00.844.056 I llm_load_print_meta: pooling type     = 0
0.00.844.057 I llm_load_print_meta: rope type        = 2
0.00.844.057 I llm_load_print_meta: rope scaling     = linear
0.00.844.059 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.844.059 I llm_load_print_meta: freq_scale_train = 1
0.00.844.060 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.844.060 I llm_load_print_meta: rope_finetuned   = unknown
0.00.844.060 I llm_load_print_meta: ssm_d_conv       = 0
0.00.844.060 I llm_load_print_meta: ssm_d_inner      = 0
0.00.844.061 I llm_load_print_meta: ssm_d_state      = 0
0.00.844.061 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.844.061 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.844.062 I llm_load_print_meta: model type       = 2B
0.00.844.064 I llm_load_print_meta: model ftype      = Q8_0
0.00.844.064 I llm_load_print_meta: model params     = 2.51 B
0.00.844.073 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.844.073 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.844.074 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.844.075 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.844.075 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.844.075 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.844.076 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.844.076 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.844.082 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.844.083 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.844.084 I llm_load_print_meta: max token length = 93
0.00.922.853 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.922.862 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.922.863 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.922.863 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.922.864 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.922.865 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.928.656 I llama_new_context_with_model: n_seq_max     = 1
0.00.928.663 I llama_new_context_with_model: n_ctx         = 4096
0.00.928.663 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.928.663 I llama_new_context_with_model: n_batch       = 2048
0.00.928.664 I llama_new_context_with_model: n_ubatch      = 512
0.00.928.664 I llama_new_context_with_model: flash_attn    = 0
0.00.928.667 I llama_new_context_with_model: freq_base     = 10000.0
0.00.928.668 I llama_new_context_with_model: freq_scale    = 1
0.00.928.668 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.943.477 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.943.514 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.943.642 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.946.213 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.946.217 I llama_new_context_with_model: graph nodes  = 601
0.00.946.218 I llama_new_context_with_model: graph splits = 1
0.00.946.241 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.691.207 I main: llama threadpool init, n_threads = 4
0.01.691.223 I 
0.01.691.369 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.691.373 I 
0.01.691.618 I sampler seed: 1091254530
0.01.691.633 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.691.643 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.691.645 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.691.646 I 
 increably.

I am unable to generate a response as requested because I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.13.516.326 I llama_perf_sampler_print:    sampling time =      43.07 ms /    29 runs   (    1.49 ms per token,   673.37 tokens per second)
0.13.516.329 I llama_perf_context_print:        load time =    1690.20 ms
0.13.516.330 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.516.332 I llama_perf_context_print:        eval time =   11746.53 ms /    28 runs   (  419.52 ms per token,     2.38 tokens per second)
0.13.516.333 I llama_perf_context_print:       total time =   11825.13 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.669 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.878 I main: llama backend init
0.00.000.886 I main: load the model and apply lora adapter, if any
0.00.023.255 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.268 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.368 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.381 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.388 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.396 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.402 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.404 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.407 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.409 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.414 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.430 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.436 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.438 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.440 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.442 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.222.471 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.324.510 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.029 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.038 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.039 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.041 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.042 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.043 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.045 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.049 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.050 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.053 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.348.055 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.062 I llama_model_loader: - type  f32:   37 tensors
0.00.348.065 I llama_model_loader: - type q8_0:  127 tensors
0.00.567.700 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.627.815 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.628.748 I llm_load_vocab: special tokens cache size = 5
0.00.813.975 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.814.047 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.814.048 I llm_load_print_meta: arch             = gemma
0.00.814.049 I llm_load_print_meta: vocab type       = SPM
0.00.814.049 I llm_load_print_meta: n_vocab          = 256000
0.00.814.052 I llm_load_print_meta: n_merges         = 0
0.00.814.052 I llm_load_print_meta: vocab_only       = 0
0.00.814.053 I llm_load_print_meta: n_ctx_train      = 8192
0.00.814.053 I llm_load_print_meta: n_embd           = 2048
0.00.814.053 I llm_load_print_meta: n_layer          = 18
0.00.814.118 I llm_load_print_meta: n_head           = 8
0.00.814.125 I llm_load_print_meta: n_head_kv        = 1
0.00.814.126 I llm_load_print_meta: n_rot            = 256
0.00.814.126 I llm_load_print_meta: n_swa            = 0
0.00.814.126 I llm_load_print_meta: n_embd_head_k    = 256
0.00.814.127 I llm_load_print_meta: n_embd_head_v    = 256
0.00.814.134 I llm_load_print_meta: n_gqa            = 8
0.00.814.140 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.814.148 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.814.149 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.814.151 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.814.152 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.814.153 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.814.154 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.814.162 I llm_load_print_meta: n_ff             = 16384
0.00.814.163 I llm_load_print_meta: n_expert         = 0
0.00.814.167 I llm_load_print_meta: n_expert_used    = 0
0.00.814.168 I llm_load_print_meta: causal attn      = 1
0.00.814.168 I llm_load_print_meta: pooling type     = 0
0.00.814.169 I llm_load_print_meta: rope type        = 2
0.00.814.173 I llm_load_print_meta: rope scaling     = linear
0.00.814.175 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.814.175 I llm_load_print_meta: freq_scale_train = 1
0.00.814.176 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.814.176 I llm_load_print_meta: rope_finetuned   = unknown
0.00.814.177 I llm_load_print_meta: ssm_d_conv       = 0
0.00.814.177 I llm_load_print_meta: ssm_d_inner      = 0
0.00.814.178 I llm_load_print_meta: ssm_d_state      = 0
0.00.814.178 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.814.179 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.814.181 I llm_load_print_meta: model type       = 2B
0.00.814.183 I llm_load_print_meta: model ftype      = Q8_0
0.00.814.184 I llm_load_print_meta: model params     = 2.51 B
0.00.814.195 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.814.198 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.814.199 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.814.200 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.814.201 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.814.201 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.814.202 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.814.203 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.814.210 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.814.211 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.814.212 I llm_load_print_meta: max token length = 93
0.00.887.283 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.887.294 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.893.504 I llama_new_context_with_model: n_seq_max     = 1
0.00.893.513 I llama_new_context_with_model: n_ctx         = 4096
0.00.893.513 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.893.514 I llama_new_context_with_model: n_batch       = 2048
0.00.893.514 I llama_new_context_with_model: n_ubatch      = 512
0.00.893.515 I llama_new_context_with_model: flash_attn    = 0
0.00.893.517 I llama_new_context_with_model: freq_base     = 10000.0
0.00.893.518 I llama_new_context_with_model: freq_scale    = 1
0.00.893.519 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.908.606 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.908.647 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.908.769 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.911.278 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.911.282 I llama_new_context_with_model: graph nodes  = 601
0.00.911.282 I llama_new_context_with_model: graph splits = 1
0.00.911.308 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.650.598 I main: llama threadpool init, n_threads = 4
0.01.650.615 I 
0.01.650.745 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.650.750 I 
0.01.650.995 I sampler seed: 2895364474
0.01.651.009 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.651.021 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.651.022 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.651.022 I 
 increablingly.

I cannot answer this question as it is sexually suggestive in nature. [end of text]


0.09.724.535 I llama_perf_sampler_print:    sampling time =      29.13 ms /    20 runs   (    1.46 ms per token,   686.62 tokens per second)
0.09.724.550 I llama_perf_context_print:        load time =    1649.61 ms
0.09.724.552 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.724.553 I llama_perf_context_print:        eval time =    8020.21 ms /    19 runs   (  422.12 ms per token,     2.37 tokens per second)
0.09.724.554 I llama_perf_context_print:       total time =    8073.95 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m3.698s
user	3m24.337s
sys	0m9.439s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 188128.25 ms
main:    total time = 188128.25 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.834 I main: llama backend init
0.00.000.842 I main: load the model and apply lora adapter, if any
0.00.023.483 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.496 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.590 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.603 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.605 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.611 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.615 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.617 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.618 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.619 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.620 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.628 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.629 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.631 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.632 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.633 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.596 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.918 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.544 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.558 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.560 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.561 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.562 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.563 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.565 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.569 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.570 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.572 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.573 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.350.575 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.585 I llama_model_loader: - type  f32:   37 tensors
0.00.350.587 I llama_model_loader: - type q4_K:  108 tensors
0.00.350.588 I llama_model_loader: - type q6_K:   19 tensors
0.00.592.344 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.660.006 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.660.989 I llm_load_vocab: special tokens cache size = 5
0.00.853.871 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.853.942 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.853.943 I llm_load_print_meta: arch             = gemma
0.00.853.943 I llm_load_print_meta: vocab type       = SPM
0.00.853.945 I llm_load_print_meta: n_vocab          = 256000
0.00.853.947 I llm_load_print_meta: n_merges         = 0
0.00.853.947 I llm_load_print_meta: vocab_only       = 0
0.00.853.948 I llm_load_print_meta: n_ctx_train      = 8192
0.00.853.948 I llm_load_print_meta: n_embd           = 2048
0.00.853.948 I llm_load_print_meta: n_layer          = 18
0.00.854.014 I llm_load_print_meta: n_head           = 8
0.00.854.022 I llm_load_print_meta: n_head_kv        = 1
0.00.854.022 I llm_load_print_meta: n_rot            = 256
0.00.854.023 I llm_load_print_meta: n_swa            = 0
0.00.854.023 I llm_load_print_meta: n_embd_head_k    = 256
0.00.854.023 I llm_load_print_meta: n_embd_head_v    = 256
0.00.854.028 I llm_load_print_meta: n_gqa            = 8
0.00.854.032 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.854.037 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.854.038 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.854.040 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.854.041 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.854.042 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.854.042 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.854.048 I llm_load_print_meta: n_ff             = 16384
0.00.854.048 I llm_load_print_meta: n_expert         = 0
0.00.854.048 I llm_load_print_meta: n_expert_used    = 0
0.00.854.049 I llm_load_print_meta: causal attn      = 1
0.00.854.049 I llm_load_print_meta: pooling type     = 0
0.00.854.050 I llm_load_print_meta: rope type        = 2
0.00.854.051 I llm_load_print_meta: rope scaling     = linear
0.00.854.052 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.854.053 I llm_load_print_meta: freq_scale_train = 1
0.00.854.053 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.854.067 I llm_load_print_meta: rope_finetuned   = unknown
0.00.854.068 I llm_load_print_meta: ssm_d_conv       = 0
0.00.854.083 I llm_load_print_meta: ssm_d_inner      = 0
0.00.854.084 I llm_load_print_meta: ssm_d_state      = 0
0.00.854.085 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.854.085 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.854.086 I llm_load_print_meta: model type       = 2B
0.00.854.088 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.854.089 I llm_load_print_meta: model params     = 2.51 B
0.00.854.100 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.854.101 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.854.102 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.854.102 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.854.103 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.854.104 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.854.104 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.854.105 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.854.111 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.854.113 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.854.113 I llm_load_print_meta: max token length = 93
0.00.916.212 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.916.223 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.916.224 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.916.225 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.916.226 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.916.227 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.922.224 I llama_new_context_with_model: n_seq_max     = 1
0.00.922.229 I llama_new_context_with_model: n_ctx         = 4096
0.00.922.230 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.922.230 I llama_new_context_with_model: n_batch       = 2048
0.00.922.231 I llama_new_context_with_model: n_ubatch      = 512
0.00.922.231 I llama_new_context_with_model: flash_attn    = 0
0.00.922.236 I llama_new_context_with_model: freq_base     = 10000.0
0.00.922.236 I llama_new_context_with_model: freq_scale    = 1
0.00.922.237 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.937.203 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.937.243 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.937.367 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.939.979 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.939.982 I llama_new_context_with_model: graph nodes  = 601
0.00.939.983 I llama_new_context_with_model: graph splits = 1
0.00.940.008 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.528.018 I main: llama threadpool init, n_threads = 4
0.01.528.034 I 
0.01.528.154 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.528.159 I 
0.01.528.394 I sampler seed: 3754851545
0.01.528.408 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.528.420 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.528.421 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.528.421 I 
 seconded, a beautiful woman with a gentle smile, sat poised at the entrance of a grand manor. Her eyes held an unspoken sadness, a yearning for a

0.12.708.980 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.00 tokens per second)
0.12.708.995 I llama_perf_context_print:        load time =    1527.08 ms
0.12.708.997 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.708.999 I llama_perf_context_print:        eval time =   11092.08 ms /    32 runs   (  346.63 ms per token,     2.88 tokens per second)
0.12.709.001 I llama_perf_context_print:       total time =   11180.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 187116.87 ms
main:    total time = 187116.87 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.872 I main: llama backend init
0.00.000.880 I main: load the model and apply lora adapter, if any
0.00.023.261 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.359 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.373 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.375 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.381 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.386 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.387 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.388 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.390 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.391 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.397 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.398 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.400 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.401 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.402 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.227.250 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.329.441 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.352.924 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.352.931 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.352.932 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.352.934 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.352.935 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.352.937 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.352.938 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.352.942 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.352.944 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.352.952 I llama_model_loader: - type  f32:   37 tensors
0.00.352.954 I llama_model_loader: - type q4_K:  108 tensors
0.00.352.955 I llama_model_loader: - type q6_K:   19 tensors
0.00.571.266 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.633.696 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.634.599 I llm_load_vocab: special tokens cache size = 5
0.00.821.359 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.821.432 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.821.436 I llm_load_print_meta: arch             = gemma
0.00.821.437 I llm_load_print_meta: vocab type       = SPM
0.00.821.438 I llm_load_print_meta: n_vocab          = 256000
0.00.821.440 I llm_load_print_meta: n_merges         = 0
0.00.821.440 I llm_load_print_meta: vocab_only       = 0
0.00.821.441 I llm_load_print_meta: n_ctx_train      = 8192
0.00.821.441 I llm_load_print_meta: n_embd           = 2048
0.00.821.441 I llm_load_print_meta: n_layer          = 18
0.00.821.507 I llm_load_print_meta: n_head           = 8
0.00.821.517 I llm_load_print_meta: n_head_kv        = 1
0.00.821.518 I llm_load_print_meta: n_rot            = 256
0.00.821.519 I llm_load_print_meta: n_swa            = 0
0.00.821.519 I llm_load_print_meta: n_embd_head_k    = 256
0.00.821.519 I llm_load_print_meta: n_embd_head_v    = 256
0.00.821.524 I llm_load_print_meta: n_gqa            = 8
0.00.821.529 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.821.533 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.821.536 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.821.537 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.821.537 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.821.538 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.821.538 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.821.543 I llm_load_print_meta: n_ff             = 16384
0.00.821.544 I llm_load_print_meta: n_expert         = 0
0.00.821.544 I llm_load_print_meta: n_expert_used    = 0
0.00.821.544 I llm_load_print_meta: causal attn      = 1
0.00.821.545 I llm_load_print_meta: pooling type     = 0
0.00.821.546 I llm_load_print_meta: rope type        = 2
0.00.821.546 I llm_load_print_meta: rope scaling     = linear
0.00.821.548 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.821.549 I llm_load_print_meta: freq_scale_train = 1
0.00.821.549 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.821.549 I llm_load_print_meta: rope_finetuned   = unknown
0.00.821.549 I llm_load_print_meta: ssm_d_conv       = 0
0.00.821.550 I llm_load_print_meta: ssm_d_inner      = 0
0.00.821.550 I llm_load_print_meta: ssm_d_state      = 0
0.00.821.551 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.821.551 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.821.552 I llm_load_print_meta: model type       = 2B
0.00.821.553 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.821.553 I llm_load_print_meta: model params     = 2.51 B
0.00.821.564 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.821.564 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.821.566 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.821.567 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.821.568 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.821.568 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.821.568 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.821.569 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.821.577 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.821.579 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.821.579 I llm_load_print_meta: max token length = 93
0.00.881.123 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.886.993 I llama_new_context_with_model: n_seq_max     = 1
0.00.886.999 I llama_new_context_with_model: n_ctx         = 4096
0.00.887.000 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.887.000 I llama_new_context_with_model: n_batch       = 2048
0.00.887.000 I llama_new_context_with_model: n_ubatch      = 512
0.00.887.001 I llama_new_context_with_model: flash_attn    = 0
0.00.887.003 I llama_new_context_with_model: freq_base     = 10000.0
0.00.887.004 I llama_new_context_with_model: freq_scale    = 1
0.00.887.005 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.901.835 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.901.877 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.902.000 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.904.545 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.904.549 I llama_new_context_with_model: graph nodes  = 601
0.00.904.550 I llama_new_context_with_model: graph splits = 1
0.00.904.574 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.492.016 I main: llama threadpool init, n_threads = 4
0.01.492.033 I 
0.01.492.149 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.492.153 I 
0.01.492.406 I sampler seed: 3461741356
0.01.492.421 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.492.430 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.492.434 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.492.434 I 
 increasities from various sources. [end of text]


0.03.943.873 I llama_perf_sampler_print:    sampling time =      10.83 ms /     8 runs   (    1.35 ms per token,   738.55 tokens per second)
0.03.943.877 I llama_perf_context_print:        load time =    1491.04 ms
0.03.943.879 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.943.880 I llama_perf_context_print:        eval time =    2429.92 ms /     7 runs   (  347.13 ms per token,     2.88 tokens per second)
0.03.943.881 I llama_perf_context_print:       total time =    2451.87 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m34.862s
user	46m28.593s
sys	0m6.355s
```

### test_scripts_release

Runs test scripts in release mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.178 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.376 I main: llama backend init
0.00.000.383 I main: load the model and apply lora adapter, if any
0.00.020.793 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.806 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.814 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.823 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.824 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.828 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.829 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.830 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.830 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.831 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.831 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.836 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.837 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.838 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.838 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.839 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.710 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.196 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.087 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.093 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.094 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.094 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.095 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.096 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.097 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.099 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.100 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.101 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.102 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.103 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.107 I llama_model_loader: - type  f32:   37 tensors
0.00.132.108 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.647 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.661 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.234 I llm_load_vocab: special tokens cache size = 5
0.00.267.378 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.393 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.394 I llm_load_print_meta: arch             = gemma
0.00.267.394 I llm_load_print_meta: vocab type       = SPM
0.00.267.395 I llm_load_print_meta: n_vocab          = 256000
0.00.267.395 I llm_load_print_meta: n_merges         = 0
0.00.267.395 I llm_load_print_meta: vocab_only       = 0
0.00.267.396 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.396 I llm_load_print_meta: n_embd           = 2048
0.00.267.396 I llm_load_print_meta: n_layer          = 18
0.00.267.408 I llm_load_print_meta: n_head           = 8
0.00.267.409 I llm_load_print_meta: n_head_kv        = 1
0.00.267.410 I llm_load_print_meta: n_rot            = 256
0.00.267.410 I llm_load_print_meta: n_swa            = 0
0.00.267.410 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.411 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.412 I llm_load_print_meta: n_gqa            = 8
0.00.267.413 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.414 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.414 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.416 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.416 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.416 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.417 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.418 I llm_load_print_meta: n_ff             = 16384
0.00.267.418 I llm_load_print_meta: n_expert         = 0
0.00.267.418 I llm_load_print_meta: n_expert_used    = 0
0.00.267.418 I llm_load_print_meta: causal attn      = 1
0.00.267.419 I llm_load_print_meta: pooling type     = 0
0.00.267.419 I llm_load_print_meta: rope type        = 2
0.00.267.419 I llm_load_print_meta: rope scaling     = linear
0.00.267.421 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.421 I llm_load_print_meta: freq_scale_train = 1
0.00.267.421 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.422 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.422 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.422 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.423 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.423 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.423 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.424 I llm_load_print_meta: model type       = 2B
0.00.267.424 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.425 I llm_load_print_meta: model params     = 2.51 B
0.00.267.426 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.426 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.427 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.427 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.427 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.427 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.428 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.428 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.428 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.429 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.429 I llm_load_print_meta: max token length = 93
0.00.367.322 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.367.331 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.367.332 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.367.332 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.367.333 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.367.333 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.372.471 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.477 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.477 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.478 I llama_new_context_with_model: n_batch       = 2048
0.00.372.478 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.478 I llama_new_context_with_model: flash_attn    = 0
0.00.372.481 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.482 I llama_new_context_with_model: freq_scale    = 1
0.00.372.483 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.879 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.893 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.982 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.266 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.388.273 I llama_new_context_with_model: graph nodes  = 601
0.00.388.274 I llama_new_context_with_model: graph splits = 1
0.00.388.275 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.488.702 I main: llama threadpool init, n_threads = 4
0.00.488.718 I 
0.00.488.790 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.488.793 I 
0.00.488.837 I sampler seed: 3656536532
0.00.488.848 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.860 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.488.863 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.864 I 
 seconary.
## **The Importance of Learning a Second Language**

**Introduction:**

Learning a second language offers a plethora of benefits, extending beyond mere

0.02.747.737 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6957.62 tokens per second)
0.02.747.740 I llama_perf_context_print:        load time =     488.30 ms
0.02.747.741 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.747.743 I llama_perf_context_print:        eval time =    2239.45 ms /    32 runs   (   69.98 ms per token,    14.29 tokens per second)
0.02.747.744 I llama_perf_context_print:       total time =    2259.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.569 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.000.780 I main: load the model and apply lora adapter, if any
0.00.021.386 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.400 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.411 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.412 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.417 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.418 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.418 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.419 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.419 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.420 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.425 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.425 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.426 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.427 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.427 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.152 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.022 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.946 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.953 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.954 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.955 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.955 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.956 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.957 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.960 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.960 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.961 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.962 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.963 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.968 I llama_model_loader: - type  f32:   37 tensors
0.00.132.969 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.184 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.269.258 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.884 I llm_load_vocab: special tokens cache size = 5
0.00.291.373 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.390 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.390 I llm_load_print_meta: arch             = gemma
0.00.291.391 I llm_load_print_meta: vocab type       = SPM
0.00.291.391 I llm_load_print_meta: n_vocab          = 256000
0.00.291.392 I llm_load_print_meta: n_merges         = 0
0.00.291.392 I llm_load_print_meta: vocab_only       = 0
0.00.291.392 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.393 I llm_load_print_meta: n_embd           = 2048
0.00.291.393 I llm_load_print_meta: n_layer          = 18
0.00.291.406 I llm_load_print_meta: n_head           = 8
0.00.291.407 I llm_load_print_meta: n_head_kv        = 1
0.00.291.407 I llm_load_print_meta: n_rot            = 256
0.00.291.407 I llm_load_print_meta: n_swa            = 0
0.00.291.408 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.408 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.409 I llm_load_print_meta: n_gqa            = 8
0.00.291.410 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.411 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.412 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.413 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.414 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.414 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.414 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.415 I llm_load_print_meta: n_ff             = 16384
0.00.291.416 I llm_load_print_meta: n_expert         = 0
0.00.291.416 I llm_load_print_meta: n_expert_used    = 0
0.00.291.416 I llm_load_print_meta: causal attn      = 1
0.00.291.417 I llm_load_print_meta: pooling type     = 0
0.00.291.417 I llm_load_print_meta: rope type        = 2
0.00.291.417 I llm_load_print_meta: rope scaling     = linear
0.00.291.418 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.419 I llm_load_print_meta: freq_scale_train = 1
0.00.291.419 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.419 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.420 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.420 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.420 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.421 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.421 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.421 I llm_load_print_meta: model type       = 2B
0.00.291.422 I llm_load_print_meta: model ftype      = Q8_0
0.00.291.423 I llm_load_print_meta: model params     = 2.51 B
0.00.291.424 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.291.424 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.424 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.425 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.425 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.425 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.426 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.426 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.426 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.427 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.427 I llm_load_print_meta: max token length = 93
0.00.386.386 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.391.438 I llama_new_context_with_model: n_seq_max     = 1
0.00.391.445 I llama_new_context_with_model: n_ctx         = 4096
0.00.391.445 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.391.446 I llama_new_context_with_model: n_batch       = 2048
0.00.391.446 I llama_new_context_with_model: n_ubatch      = 512
0.00.391.446 I llama_new_context_with_model: flash_attn    = 0
0.00.391.449 I llama_new_context_with_model: freq_base     = 10000.0
0.00.391.450 I llama_new_context_with_model: freq_scale    = 1
0.00.391.451 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.406.517 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.406.534 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.406.626 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.407.864 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.407.870 I llama_new_context_with_model: graph nodes  = 601
0.00.407.870 I llama_new_context_with_model: graph splits = 1
0.00.407.873 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.505.248 I main: llama threadpool init, n_threads = 4
0.00.505.262 I 
0.00.505.332 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.505.335 I 
0.00.505.378 I sampler seed: 1898071858
0.00.505.389 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.400 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.505.403 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.403 I 
 increably!

I am unable to provide a response that violates our content policies. [end of text]


0.01.733.410 I llama_perf_sampler_print:    sampling time =       2.75 ms /    19 runs   (    0.14 ms per token,  6899.06 tokens per second)
0.01.733.412 I llama_perf_context_print:        load time =     504.45 ms
0.01.733.414 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.733.417 I llama_perf_context_print:        eval time =    1217.11 ms /    18 runs   (   67.62 ms per token,    14.79 tokens per second)
0.01.733.426 I llama_perf_context_print:       total time =    1228.17 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.546 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.000.779 I main: load the model and apply lora adapter, if any
0.00.021.249 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.257 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.265 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.269 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.270 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.273 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.274 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.274 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.275 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.275 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.276 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.280 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.281 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.281 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.282 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.282 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.474 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.709 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.716 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.717 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.717 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.718 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.719 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.719 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.722 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.723 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.724 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.724 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.137.725 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.729 I llama_model_loader: - type  f32:   37 tensors
0.00.137.729 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.694 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.351 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.907 I llm_load_vocab: special tokens cache size = 5
0.00.274.902 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.922 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.923 I llm_load_print_meta: arch             = gemma
0.00.274.923 I llm_load_print_meta: vocab type       = SPM
0.00.274.924 I llm_load_print_meta: n_vocab          = 256000
0.00.274.925 I llm_load_print_meta: n_merges         = 0
0.00.274.925 I llm_load_print_meta: vocab_only       = 0
0.00.274.925 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.926 I llm_load_print_meta: n_embd           = 2048
0.00.274.926 I llm_load_print_meta: n_layer          = 18
0.00.274.939 I llm_load_print_meta: n_head           = 8
0.00.274.940 I llm_load_print_meta: n_head_kv        = 1
0.00.274.940 I llm_load_print_meta: n_rot            = 256
0.00.274.941 I llm_load_print_meta: n_swa            = 0
0.00.274.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.942 I llm_load_print_meta: n_gqa            = 8
0.00.274.943 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.944 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.945 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.946 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.947 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.947 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.948 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.949 I llm_load_print_meta: n_ff             = 16384
0.00.274.949 I llm_load_print_meta: n_expert         = 0
0.00.274.949 I llm_load_print_meta: n_expert_used    = 0
0.00.274.950 I llm_load_print_meta: causal attn      = 1
0.00.274.950 I llm_load_print_meta: pooling type     = 0
0.00.274.950 I llm_load_print_meta: rope type        = 2
0.00.274.950 I llm_load_print_meta: rope scaling     = linear
0.00.274.952 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.952 I llm_load_print_meta: freq_scale_train = 1
0.00.274.953 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.953 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.953 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.954 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.954 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.954 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.955 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.955 I llm_load_print_meta: model type       = 2B
0.00.274.956 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.957 I llm_load_print_meta: model params     = 2.51 B
0.00.274.958 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.958 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.959 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.959 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.959 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.960 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.960 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.960 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.961 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.962 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.962 I llm_load_print_meta: max token length = 93
0.00.355.382 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.355.391 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.392 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.355.393 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.355.393 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.355.394 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.360.715 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.720 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.720 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.721 I llama_new_context_with_model: n_batch       = 2048
0.00.360.721 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.722 I llama_new_context_with_model: flash_attn    = 0
0.00.360.724 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.725 I llama_new_context_with_model: freq_scale    = 1
0.00.360.726 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.375.185 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.375.201 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.375.304 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.060 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.067 I llama_new_context_with_model: graph nodes  = 601
0.00.377.068 I llama_new_context_with_model: graph splits = 1
0.00.377.070 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.068 I main: llama threadpool init, n_threads = 4
0.00.479.086 I 
0.00.479.169 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.479.174 I 
0.00.479.221 I sampler seed: 879177466
0.00.479.234 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.241 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.479.244 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.245 I 
 increamically, and the narrator, consumed by a growing sense of terror and inadequacy, screams the warning "Never!" before collapsing to the cold, hard floor.

0.02.724.179 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6618.53 tokens per second)
0.02.724.181 I llama_perf_context_print:        load time =     478.27 ms
0.02.724.182 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.724.184 I llama_perf_context_print:        eval time =    2225.81 ms /    32 runs   (   69.56 ms per token,    14.38 tokens per second)
0.02.724.184 I llama_perf_context_print:       total time =    2245.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.534 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.764 I main: load the model and apply lora adapter, if any
0.00.020.934 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.943 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.951 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.955 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.956 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.960 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.960 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.961 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.961 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.962 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.963 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.968 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.969 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.970 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.970 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.971 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.431 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.036 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.975 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.982 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.983 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.984 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.984 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.985 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.986 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.989 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.990 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.991 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.992 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.992 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.996 I llama_model_loader: - type  f32:   37 tensors
0.00.131.997 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.211 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.686 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.402 I llm_load_vocab: special tokens cache size = 5
0.00.270.842 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.865 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.865 I llm_load_print_meta: arch             = gemma
0.00.270.866 I llm_load_print_meta: vocab type       = SPM
0.00.270.867 I llm_load_print_meta: n_vocab          = 256000
0.00.270.867 I llm_load_print_meta: n_merges         = 0
0.00.270.867 I llm_load_print_meta: vocab_only       = 0
0.00.270.868 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.868 I llm_load_print_meta: n_embd           = 2048
0.00.270.868 I llm_load_print_meta: n_layer          = 18
0.00.270.880 I llm_load_print_meta: n_head           = 8
0.00.270.881 I llm_load_print_meta: n_head_kv        = 1
0.00.270.881 I llm_load_print_meta: n_rot            = 256
0.00.270.881 I llm_load_print_meta: n_swa            = 0
0.00.270.882 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.882 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.883 I llm_load_print_meta: n_gqa            = 8
0.00.270.884 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.885 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.886 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.887 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.888 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.888 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.889 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.889 I llm_load_print_meta: n_ff             = 16384
0.00.270.890 I llm_load_print_meta: n_expert         = 0
0.00.270.890 I llm_load_print_meta: n_expert_used    = 0
0.00.270.890 I llm_load_print_meta: causal attn      = 1
0.00.270.891 I llm_load_print_meta: pooling type     = 0
0.00.270.891 I llm_load_print_meta: rope type        = 2
0.00.270.891 I llm_load_print_meta: rope scaling     = linear
0.00.270.893 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.893 I llm_load_print_meta: freq_scale_train = 1
0.00.270.893 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.894 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.894 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.894 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.895 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.895 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.895 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.896 I llm_load_print_meta: model type       = 2B
0.00.270.896 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.897 I llm_load_print_meta: model params     = 2.51 B
0.00.270.898 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.898 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.899 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.899 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.899 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.900 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.900 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.900 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.901 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.901 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.902 I llm_load_print_meta: max token length = 93
0.00.343.139 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.343.146 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.348.176 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.182 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.182 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.183 I llama_new_context_with_model: n_batch       = 2048
0.00.348.183 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.183 I llama_new_context_with_model: flash_attn    = 0
0.00.348.186 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.187 I llama_new_context_with_model: freq_scale    = 1
0.00.348.188 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.668 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.682 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.775 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.997 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.005 I llama_new_context_with_model: graph nodes  = 601
0.00.364.006 I llama_new_context_with_model: graph splits = 1
0.00.364.007 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.869 I main: llama threadpool init, n_threads = 4
0.00.465.884 I 
0.00.465.964 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.465.968 I 
0.00.466.026 I sampler seed: 1459698227
0.00.466.037 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.042 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.466.043 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.043 I 
 increasities:

I. If 3 men and 4 women can do a piece of work in 6 days, then in how many days can 

0.02.897.376 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6610.58 tokens per second)
0.02.897.379 I llama_perf_context_print:        load time =     465.09 ms
0.02.897.381 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.897.383 I llama_perf_context_print:        eval time =    2412.08 ms /    32 runs   (   75.38 ms per token,    13.27 tokens per second)
0.02.897.384 I llama_perf_context_print:       total time =    2431.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.740s
user	0m35.787s
sys	0m9.375s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40221.67 ms
main:    total time = 40221.67 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.266 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.275 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.285 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.294 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.304 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.306 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.307 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.308 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.308 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.313 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.314 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.314 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.315 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.316 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.834 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.930 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.816 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.823 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.823 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.824 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.825 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.826 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.826 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.829 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.830 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.831 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.832 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.832 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.836 I llama_model_loader: - type  f32:   37 tensors
0.00.131.837 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.838 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.335 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.914 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.500 I llm_load_vocab: special tokens cache size = 5
0.00.271.652 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.667 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.668 I llm_load_print_meta: arch             = gemma
0.00.271.668 I llm_load_print_meta: vocab type       = SPM
0.00.271.669 I llm_load_print_meta: n_vocab          = 256000
0.00.271.669 I llm_load_print_meta: n_merges         = 0
0.00.271.669 I llm_load_print_meta: vocab_only       = 0
0.00.271.670 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.670 I llm_load_print_meta: n_embd           = 2048
0.00.271.670 I llm_load_print_meta: n_layer          = 18
0.00.271.681 I llm_load_print_meta: n_head           = 8
0.00.271.682 I llm_load_print_meta: n_head_kv        = 1
0.00.271.682 I llm_load_print_meta: n_rot            = 256
0.00.271.683 I llm_load_print_meta: n_swa            = 0
0.00.271.683 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.683 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.684 I llm_load_print_meta: n_gqa            = 8
0.00.271.685 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.686 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.686 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.687 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.688 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.688 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.688 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.689 I llm_load_print_meta: n_ff             = 16384
0.00.271.690 I llm_load_print_meta: n_expert         = 0
0.00.271.690 I llm_load_print_meta: n_expert_used    = 0
0.00.271.691 I llm_load_print_meta: causal attn      = 1
0.00.271.691 I llm_load_print_meta: pooling type     = 0
0.00.271.691 I llm_load_print_meta: rope type        = 2
0.00.271.691 I llm_load_print_meta: rope scaling     = linear
0.00.271.693 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.693 I llm_load_print_meta: freq_scale_train = 1
0.00.271.693 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.694 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.694 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.694 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.694 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.695 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.695 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.695 I llm_load_print_meta: model type       = 2B
0.00.271.696 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.697 I llm_load_print_meta: model params     = 2.51 B
0.00.271.698 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.698 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.698 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.699 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.699 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.699 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.700 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.700 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.700 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.701 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.701 I llm_load_print_meta: max token length = 93
0.00.331.488 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.331.494 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.331.495 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.331.495 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.331.496 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.331.497 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.336.829 I llama_new_context_with_model: n_seq_max     = 1
0.00.336.835 I llama_new_context_with_model: n_ctx         = 4096
0.00.336.835 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.336.836 I llama_new_context_with_model: n_batch       = 2048
0.00.336.836 I llama_new_context_with_model: n_ubatch      = 512
0.00.336.837 I llama_new_context_with_model: flash_attn    = 0
0.00.336.840 I llama_new_context_with_model: freq_base     = 10000.0
0.00.336.841 I llama_new_context_with_model: freq_scale    = 1
0.00.336.842 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.351.575 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.351.591 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.351.691 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.967 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.352.973 I llama_new_context_with_model: graph nodes  = 601
0.00.352.973 I llama_new_context_with_model: graph splits = 1
0.00.352.975 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.213 I main: llama threadpool init, n_threads = 4
0.00.430.228 I 
0.00.430.315 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.430.318 I 
0.00.430.366 I sampler seed: 3246658644
0.00.430.377 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.380 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.381 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.381 I 
 strick by the Japanese media as a threat and is demanding compensation.

**Background:**

* The Japanese media has been reporting extensively on Hikaru Kondo, a

0.02.038.479 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6024.10 tokens per second)
0.02.038.482 I llama_perf_context_print:        load time =     429.42 ms
0.02.038.483 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.038.484 I llama_perf_context_print:        eval time =    1589.04 ms /    32 runs   (   49.66 ms per token,    20.14 tokens per second)
0.02.038.485 I llama_perf_context_print:       total time =    1608.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40187.12 ms
main:    total time = 40187.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.178 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.366 I main: llama backend init
0.00.000.371 I main: load the model and apply lora adapter, if any
0.00.020.523 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.538 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.545 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.546 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.549 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.550 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.550 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.551 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.551 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.552 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.555 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.556 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.557 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.557 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.558 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.015 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.121 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.042 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.048 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.049 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.049 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.050 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.051 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.052 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.055 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.055 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.059 I llama_model_loader: - type  f32:   37 tensors
0.00.131.060 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.061 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.879 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.850 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.394 I llm_load_vocab: special tokens cache size = 5
0.00.265.546 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.563 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.564 I llm_load_print_meta: arch             = gemma
0.00.265.565 I llm_load_print_meta: vocab type       = SPM
0.00.265.565 I llm_load_print_meta: n_vocab          = 256000
0.00.265.566 I llm_load_print_meta: n_merges         = 0
0.00.265.566 I llm_load_print_meta: vocab_only       = 0
0.00.265.566 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.567 I llm_load_print_meta: n_embd           = 2048
0.00.265.567 I llm_load_print_meta: n_layer          = 18
0.00.265.578 I llm_load_print_meta: n_head           = 8
0.00.265.579 I llm_load_print_meta: n_head_kv        = 1
0.00.265.579 I llm_load_print_meta: n_rot            = 256
0.00.265.580 I llm_load_print_meta: n_swa            = 0
0.00.265.580 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.580 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.581 I llm_load_print_meta: n_gqa            = 8
0.00.265.582 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.583 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.584 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.585 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.585 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.586 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.586 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.587 I llm_load_print_meta: n_ff             = 16384
0.00.265.588 I llm_load_print_meta: n_expert         = 0
0.00.265.588 I llm_load_print_meta: n_expert_used    = 0
0.00.265.588 I llm_load_print_meta: causal attn      = 1
0.00.265.589 I llm_load_print_meta: pooling type     = 0
0.00.265.589 I llm_load_print_meta: rope type        = 2
0.00.265.590 I llm_load_print_meta: rope scaling     = linear
0.00.265.591 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.591 I llm_load_print_meta: freq_scale_train = 1
0.00.265.592 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.592 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.592 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.593 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.593 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.593 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.593 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.594 I llm_load_print_meta: model type       = 2B
0.00.265.595 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.595 I llm_load_print_meta: model params     = 2.51 B
0.00.265.596 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.596 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.597 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.597 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.598 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.598 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.598 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.599 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.599 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.599 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.600 I llm_load_print_meta: max token length = 93
0.00.321.004 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.325.971 I llama_new_context_with_model: n_seq_max     = 1
0.00.325.977 I llama_new_context_with_model: n_ctx         = 4096
0.00.325.978 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.325.978 I llama_new_context_with_model: n_batch       = 2048
0.00.325.978 I llama_new_context_with_model: n_ubatch      = 512
0.00.325.979 I llama_new_context_with_model: flash_attn    = 0
0.00.325.981 I llama_new_context_with_model: freq_base     = 10000.0
0.00.325.982 I llama_new_context_with_model: freq_scale    = 1
0.00.325.983 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.651 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.340.667 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.340.758 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.962 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.341.969 I llama_new_context_with_model: graph nodes  = 601
0.00.341.969 I llama_new_context_with_model: graph splits = 1
0.00.341.971 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.417.769 I main: llama threadpool init, n_threads = 4
0.00.417.786 I 
0.00.417.864 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.417.868 I 
0.00.417.913 I sampler seed: 832670256
0.00.417.927 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.417.933 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.417.933 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.417.934 I 
 seconally with the following:

1. The role of technology in education.
2. The challenges and opportunities of integrating technology into the curriculum.
3

0.01.984.695 I llama_perf_sampler_print:    sampling time =       5.19 ms /    33 runs   (    0.16 ms per token,  6360.83 tokens per second)
0.01.984.698 I llama_perf_context_print:        load time =     417.38 ms
0.01.984.699 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.984.701 I llama_perf_context_print:        eval time =    1547.94 ms /    32 runs   (   48.37 ms per token,    20.67 tokens per second)
0.01.984.701 I llama_perf_context_print:       total time =    1566.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.313s
user	10m23.851s
sys	0m7.066s
```

### pythia_1_4b

Pythia 1.4B:
- status: 0
- perplexity:
  - f16 @ 10.1383 OK
  - q8_0 @ 10.1294 OK
  - q4_0 @ 11.2190 OK
  - q4_1 @ 10.5418 OK
  - q5_0 @ 10.0568 OK
  - q5_1 @ 10.0893 OK
  - q3_k @ 12.7265 OK
  - q4_k @ 10.5531 OK
  - q5_k @ 10.5345 OK
  - q6_k @ 10.5551 OK
- imatrix:
```
Final estimate: PPL = 10.1383 +/- 3.22270
```
- f16: 
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.475 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.665 I main: llama backend init
0.00.000.671 I main: load the model and apply lora adapter, if any
0.00.009.547 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.559 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.569 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.570 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.570 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.571 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.571 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.575 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.576 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.576 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.577 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.578 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.579 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.579 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.582 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.583 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.583 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.256 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.905 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.210 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.214 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.215 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.215 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.216 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.218 I llama_model_loader: - type  f32:  194 tensors
0.00.022.218 I llama_model_loader: - type  f16:   98 tensors
0.00.067.712 I llm_load_vocab: special tokens cache size = 25
0.00.081.658 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.671 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.671 I llm_load_print_meta: arch             = gptneox
0.00.081.672 I llm_load_print_meta: vocab type       = BPE
0.00.081.673 I llm_load_print_meta: n_vocab          = 50304
0.00.081.674 I llm_load_print_meta: n_merges         = 50009
0.00.081.674 I llm_load_print_meta: vocab_only       = 0
0.00.081.674 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.675 I llm_load_print_meta: n_embd           = 2048
0.00.081.675 I llm_load_print_meta: n_layer          = 24
0.00.081.686 I llm_load_print_meta: n_head           = 16
0.00.081.687 I llm_load_print_meta: n_head_kv        = 16
0.00.081.687 I llm_load_print_meta: n_rot            = 32
0.00.081.687 I llm_load_print_meta: n_swa            = 0
0.00.081.687 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.688 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.689 I llm_load_print_meta: n_gqa            = 1
0.00.081.690 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.691 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.692 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.693 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.693 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.693 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.694 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.694 I llm_load_print_meta: n_ff             = 8192
0.00.081.695 I llm_load_print_meta: n_expert         = 0
0.00.081.695 I llm_load_print_meta: n_expert_used    = 0
0.00.081.695 I llm_load_print_meta: causal attn      = 1
0.00.081.695 I llm_load_print_meta: pooling type     = 0
0.00.081.696 I llm_load_print_meta: rope type        = 2
0.00.081.696 I llm_load_print_meta: rope scaling     = linear
0.00.081.698 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.698 I llm_load_print_meta: freq_scale_train = 1
0.00.081.699 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.699 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.700 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.700 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.700 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.701 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.702 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.702 I llm_load_print_meta: model type       = 1.4B
0.00.081.703 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.081.704 I llm_load_print_meta: model params     = 1.41 B
0.00.081.705 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.081.705 I llm_load_print_meta: general.name     = 1.4B
0.00.081.706 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.706 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.706 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.707 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.708 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.709 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.709 I llm_load_print_meta: max token length = 1024
0.00.224.070 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.226.548 I llama_new_context_with_model: n_seq_max     = 1
0.00.226.553 I llama_new_context_with_model: n_ctx         = 2048
0.00.226.554 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.226.554 I llama_new_context_with_model: n_batch       = 2048
0.00.226.555 I llama_new_context_with_model: n_ubatch      = 512
0.00.226.555 I llama_new_context_with_model: flash_attn    = 0
0.00.226.557 I llama_new_context_with_model: freq_base     = 10000.0
0.00.226.558 I llama_new_context_with_model: freq_scale    = 1
0.00.303.115 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.303.130 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.303.159 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.305.358 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.305.364 I llama_new_context_with_model: graph nodes  = 967
0.00.305.364 I llama_new_context_with_model: graph splits = 1
0.00.305.367 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.121 I main: llama threadpool init, n_threads = 4
0.00.425.138 I 
0.00.425.209 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.425.212 I 
0.00.425.311 I sampler seed: 1234
0.00.425.321 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.324 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.324 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.425.324 I 
I believe the meaning of life is to do the things we love, with the people we love, and the world we love.

I believe that our only fear is not knowing. And I believe that’s the fear that keeps us from doing the things that we know are good for us.

I believe that we have a choice.

0.04.786.079 I llama_perf_sampler_print:    sampling time =       3.32 ms /    71 runs   (    0.05 ms per token, 21379.10 tokens per second)
0.04.786.082 I llama_perf_context_print:        load time =     424.43 ms
0.04.786.083 I llama_perf_context_print: prompt eval time =     186.81 ms /     7 tokens (   26.69 ms per token,    37.47 tokens per second)
0.04.786.085 I llama_perf_context_print:        eval time =    4163.27 ms /    63 runs   (   66.08 ms per token,    15.13 tokens per second)
0.04.786.086 I llama_perf_context_print:       total time =    4360.97 ms /    70 tokens

real	0m4.881s
user	0m17.920s
sys	0m0.328s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.608 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.476 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.490 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.497 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.498 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.498 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.499 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.499 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.502 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.503 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.503 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.504 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.505 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.505 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.506 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.510 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.511 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.511 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.307 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.649 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.039 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.045 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.045 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.046 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.046 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.048 I llama_model_loader: - type  f32:  194 tensors
0.00.022.049 I llama_model_loader: - type  f16:   98 tensors
0.00.066.703 I llm_load_vocab: special tokens cache size = 25
0.00.080.568 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.580 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.580 I llm_load_print_meta: arch             = gptneox
0.00.080.581 I llm_load_print_meta: vocab type       = BPE
0.00.080.581 I llm_load_print_meta: n_vocab          = 50304
0.00.080.582 I llm_load_print_meta: n_merges         = 50009
0.00.080.582 I llm_load_print_meta: vocab_only       = 0
0.00.080.583 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.583 I llm_load_print_meta: n_embd           = 2048
0.00.080.583 I llm_load_print_meta: n_layer          = 24
0.00.080.593 I llm_load_print_meta: n_head           = 16
0.00.080.594 I llm_load_print_meta: n_head_kv        = 16
0.00.080.595 I llm_load_print_meta: n_rot            = 32
0.00.080.595 I llm_load_print_meta: n_swa            = 0
0.00.080.595 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.595 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.597 I llm_load_print_meta: n_gqa            = 1
0.00.080.598 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.599 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.600 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.600 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.601 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.604 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.604 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.605 I llm_load_print_meta: n_ff             = 8192
0.00.080.605 I llm_load_print_meta: n_expert         = 0
0.00.080.606 I llm_load_print_meta: n_expert_used    = 0
0.00.080.606 I llm_load_print_meta: causal attn      = 1
0.00.080.606 I llm_load_print_meta: pooling type     = 0
0.00.080.607 I llm_load_print_meta: rope type        = 2
0.00.080.607 I llm_load_print_meta: rope scaling     = linear
0.00.080.608 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.609 I llm_load_print_meta: freq_scale_train = 1
0.00.080.609 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.610 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.610 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.610 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.611 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.612 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.612 I llm_load_print_meta: model type       = 1.4B
0.00.080.613 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.080.614 I llm_load_print_meta: model params     = 1.41 B
0.00.080.615 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.080.615 I llm_load_print_meta: general.name     = 1.4B
0.00.080.616 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.617 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.617 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.618 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.618 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.619 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.619 I llm_load_print_meta: max token length = 1024
0.00.223.972 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.226.461 I llama_new_context_with_model: n_seq_max     = 1
0.00.226.466 I llama_new_context_with_model: n_ctx         = 128
0.00.226.466 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.226.467 I llama_new_context_with_model: n_batch       = 128
0.00.226.467 I llama_new_context_with_model: n_ubatch      = 128
0.00.226.467 I llama_new_context_with_model: flash_attn    = 0
0.00.226.469 I llama_new_context_with_model: freq_base     = 10000.0
0.00.226.470 I llama_new_context_with_model: freq_scale    = 1
0.00.226.470 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.231.692 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.231.703 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.231.720 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.234.024 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.234.029 I llama_new_context_with_model: graph nodes  = 967
0.00.234.030 I llama_new_context_with_model: graph splits = 1
0.00.234.032 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.322.246 I 
0.00.322.339 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.322.348 I perplexity: tokenizing the input ..
0.00.332.390 I perplexity: tokenization took 10.036 ms
0.00.332.413 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.03.151.061 I perplexity: 2.82 seconds per pass - ETA 0.03 minutes
[1]10.1383,
0.03.156.335 I Final estimate: PPL = 10.1383 +/- 3.22270

0.03.156.372 I llama_perf_context_print:        load time =     321.61 ms
0.03.156.374 I llama_perf_context_print: prompt eval time =    2817.16 ms /   128 tokens (   22.01 ms per token,    45.44 tokens per second)
0.03.156.377 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.03.156.378 I llama_perf_context_print:       total time =    2834.13 ms /   129 tokens

real	0m3.252s
user	0m11.729s
sys	0m0.264s
```
- q8_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.546 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.000.739 I main: load the model and apply lora adapter, if any
0.00.009.792 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.805 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.811 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.812 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.813 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.813 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.814 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.817 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.818 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.818 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.819 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.819 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.820 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.821 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.824 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.825 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.825 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.735 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.054 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.392 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.397 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.397 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.398 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.398 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.399 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.022.400 I llama_model_loader: - type  f32:  194 tensors
0.00.022.401 I llama_model_loader: - type q8_0:   98 tensors
0.00.067.050 I llm_load_vocab: special tokens cache size = 25
0.00.080.884 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.895 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.895 I llm_load_print_meta: arch             = gptneox
0.00.080.896 I llm_load_print_meta: vocab type       = BPE
0.00.080.896 I llm_load_print_meta: n_vocab          = 50304
0.00.080.897 I llm_load_print_meta: n_merges         = 50009
0.00.080.897 I llm_load_print_meta: vocab_only       = 0
0.00.080.897 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.898 I llm_load_print_meta: n_embd           = 2048
0.00.080.898 I llm_load_print_meta: n_layer          = 24
0.00.080.906 I llm_load_print_meta: n_head           = 16
0.00.080.907 I llm_load_print_meta: n_head_kv        = 16
0.00.080.908 I llm_load_print_meta: n_rot            = 32
0.00.080.908 I llm_load_print_meta: n_swa            = 0
0.00.080.908 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.909 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.910 I llm_load_print_meta: n_gqa            = 1
0.00.080.911 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.912 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.913 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.914 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.914 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.914 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.915 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.916 I llm_load_print_meta: n_ff             = 8192
0.00.080.916 I llm_load_print_meta: n_expert         = 0
0.00.080.916 I llm_load_print_meta: n_expert_used    = 0
0.00.080.917 I llm_load_print_meta: causal attn      = 1
0.00.080.917 I llm_load_print_meta: pooling type     = 0
0.00.080.917 I llm_load_print_meta: rope type        = 2
0.00.080.917 I llm_load_print_meta: rope scaling     = linear
0.00.080.919 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.919 I llm_load_print_meta: freq_scale_train = 1
0.00.080.920 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.920 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.920 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.921 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.921 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.922 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.922 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.922 I llm_load_print_meta: model type       = 1.4B
0.00.080.923 I llm_load_print_meta: model ftype      = Q8_0
0.00.080.924 I llm_load_print_meta: model params     = 1.41 B
0.00.080.925 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.080.925 I llm_load_print_meta: general.name     = 1.4B
0.00.080.925 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.926 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.926 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.926 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.927 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.927 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.927 I llm_load_print_meta: max token length = 1024
0.00.163.673 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.166.200 I llama_new_context_with_model: n_seq_max     = 1
0.00.166.205 I llama_new_context_with_model: n_ctx         = 2048
0.00.166.206 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.166.206 I llama_new_context_with_model: n_batch       = 2048
0.00.166.207 I llama_new_context_with_model: n_ubatch      = 512
0.00.166.207 I llama_new_context_with_model: flash_attn    = 0
0.00.166.209 I llama_new_context_with_model: freq_base     = 10000.0
0.00.166.210 I llama_new_context_with_model: freq_scale    = 1
0.00.241.837 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.241.854 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.241.885 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.244.158 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.244.164 I llama_new_context_with_model: graph nodes  = 967
0.00.244.165 I llama_new_context_with_model: graph splits = 1
0.00.244.168 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.332.035 I main: llama threadpool init, n_threads = 4
0.00.332.052 I 
0.00.332.126 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.332.130 I 
0.00.332.235 I sampler seed: 1234
0.00.332.247 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.332.250 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.332.251 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.332.254 I 
I believe the meaning of life is to become as
spiritual as you can, and to become spiritual as you can.

I have lived
in the spiritual world and have been able to touch the spirit of the
beasts. I believe I am now spiritually connected with them. I believe
that I am spiritually connected with the

0.03.023.221 I llama_perf_sampler_print:    sampling time =       2.37 ms /    71 runs   (    0.03 ms per token, 29932.55 tokens per second)
0.03.023.224 I llama_perf_context_print:        load time =     331.28 ms
0.03.023.226 I llama_perf_context_print: prompt eval time =     116.48 ms /     7 tokens (   16.64 ms per token,    60.09 tokens per second)
0.03.023.228 I llama_perf_context_print:        eval time =    2565.38 ms /    63 runs   (   40.72 ms per token,    24.56 tokens per second)
0.03.023.230 I llama_perf_context_print:       total time =    2691.19 ms /    70 tokens

real	0m3.095s
user	0m11.117s
sys	0m0.244s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.619 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.273 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.288 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.294 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.297 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.298 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.298 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.298 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.302 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.303 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.304 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.305 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.307 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.307 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.308 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.313 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.314 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.315 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.260 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.673 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.122 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.127 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.128 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.128 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.129 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.129 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.022.131 I llama_model_loader: - type  f32:  194 tensors
0.00.022.132 I llama_model_loader: - type q8_0:   98 tensors
0.00.070.073 I llm_load_vocab: special tokens cache size = 25
0.00.083.915 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.929 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.929 I llm_load_print_meta: arch             = gptneox
0.00.083.930 I llm_load_print_meta: vocab type       = BPE
0.00.083.931 I llm_load_print_meta: n_vocab          = 50304
0.00.083.931 I llm_load_print_meta: n_merges         = 50009
0.00.083.931 I llm_load_print_meta: vocab_only       = 0
0.00.083.932 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.932 I llm_load_print_meta: n_embd           = 2048
0.00.083.932 I llm_load_print_meta: n_layer          = 24
0.00.083.944 I llm_load_print_meta: n_head           = 16
0.00.083.945 I llm_load_print_meta: n_head_kv        = 16
0.00.083.945 I llm_load_print_meta: n_rot            = 32
0.00.083.945 I llm_load_print_meta: n_swa            = 0
0.00.083.946 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.946 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.947 I llm_load_print_meta: n_gqa            = 1
0.00.083.948 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.949 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.950 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.950 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.951 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.951 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.951 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.952 I llm_load_print_meta: n_ff             = 8192
0.00.083.952 I llm_load_print_meta: n_expert         = 0
0.00.083.952 I llm_load_print_meta: n_expert_used    = 0
0.00.083.953 I llm_load_print_meta: causal attn      = 1
0.00.083.953 I llm_load_print_meta: pooling type     = 0
0.00.083.953 I llm_load_print_meta: rope type        = 2
0.00.083.954 I llm_load_print_meta: rope scaling     = linear
0.00.083.955 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.955 I llm_load_print_meta: freq_scale_train = 1
0.00.083.956 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.956 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.956 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.957 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.957 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.957 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.957 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.958 I llm_load_print_meta: model type       = 1.4B
0.00.083.959 I llm_load_print_meta: model ftype      = Q8_0
0.00.083.960 I llm_load_print_meta: model params     = 1.41 B
0.00.083.960 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.083.961 I llm_load_print_meta: general.name     = 1.4B
0.00.083.961 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.961 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.962 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.963 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.963 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.963 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.964 I llm_load_print_meta: max token length = 1024
0.00.164.099 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.166.952 I llama_new_context_with_model: n_seq_max     = 1
0.00.166.957 I llama_new_context_with_model: n_ctx         = 128
0.00.166.957 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.166.957 I llama_new_context_with_model: n_batch       = 128
0.00.166.958 I llama_new_context_with_model: n_ubatch      = 128
0.00.166.958 I llama_new_context_with_model: flash_attn    = 0
0.00.166.960 I llama_new_context_with_model: freq_base     = 10000.0
0.00.166.961 I llama_new_context_with_model: freq_scale    = 1
0.00.166.961 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.172.133 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.172.142 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.172.159 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.174.344 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.174.351 I llama_new_context_with_model: graph nodes  = 967
0.00.174.351 I llama_new_context_with_model: graph splits = 1
0.00.174.352 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.232.652 I 
0.00.232.736 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.232.745 I perplexity: tokenizing the input ..
0.00.242.618 I perplexity: tokenization took 9.868 ms
0.00.242.640 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.969.487 I perplexity: 1.73 seconds per pass - ETA 0.02 minutes
[1]10.1294,
0.01.974.649 I Final estimate: PPL = 10.1294 +/- 3.21719

0.01.974.680 I llama_perf_context_print:        load time =     232.00 ms
0.01.974.682 I llama_perf_context_print: prompt eval time =    1724.85 ms /   128 tokens (   13.48 ms per token,    74.21 tokens per second)
0.01.974.684 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.974.685 I llama_perf_context_print:       total time =    1742.03 ms /   129 tokens

real	0m2.034s
user	0m7.258s
sys	0m0.144s
```
- q4_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.535 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.720 I main: llama backend init
0.00.000.727 I main: load the model and apply lora adapter, if any
0.00.009.470 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.483 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.488 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.489 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.490 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.490 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.491 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.494 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.494 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.495 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.495 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.496 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.497 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.497 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.500 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.501 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.501 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.067 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.390 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.849 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.855 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.855 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.856 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.856 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.857 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.021.859 I llama_model_loader: - type  f32:  194 tensors
0.00.021.859 I llama_model_loader: - type q4_0:   97 tensors
0.00.021.860 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.337 I llm_load_vocab: special tokens cache size = 25
0.00.080.149 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.160 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.160 I llm_load_print_meta: arch             = gptneox
0.00.080.161 I llm_load_print_meta: vocab type       = BPE
0.00.080.161 I llm_load_print_meta: n_vocab          = 50304
0.00.080.162 I llm_load_print_meta: n_merges         = 50009
0.00.080.162 I llm_load_print_meta: vocab_only       = 0
0.00.080.163 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.163 I llm_load_print_meta: n_embd           = 2048
0.00.080.163 I llm_load_print_meta: n_layer          = 24
0.00.080.172 I llm_load_print_meta: n_head           = 16
0.00.080.173 I llm_load_print_meta: n_head_kv        = 16
0.00.080.173 I llm_load_print_meta: n_rot            = 32
0.00.080.174 I llm_load_print_meta: n_swa            = 0
0.00.080.174 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.174 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.175 I llm_load_print_meta: n_gqa            = 1
0.00.080.176 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.177 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.178 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.179 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.179 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.180 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.180 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.181 I llm_load_print_meta: n_ff             = 8192
0.00.080.181 I llm_load_print_meta: n_expert         = 0
0.00.080.182 I llm_load_print_meta: n_expert_used    = 0
0.00.080.182 I llm_load_print_meta: causal attn      = 1
0.00.080.182 I llm_load_print_meta: pooling type     = 0
0.00.080.183 I llm_load_print_meta: rope type        = 2
0.00.080.183 I llm_load_print_meta: rope scaling     = linear
0.00.080.184 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.185 I llm_load_print_meta: freq_scale_train = 1
0.00.080.185 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.186 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.186 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.186 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.186 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.187 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.187 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.188 I llm_load_print_meta: model type       = 1.4B
0.00.080.188 I llm_load_print_meta: model ftype      = Q4_0
0.00.080.189 I llm_load_print_meta: model params     = 1.41 B
0.00.080.190 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.080.190 I llm_load_print_meta: general.name     = 1.4B
0.00.080.191 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.191 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.191 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.192 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.192 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.192 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.193 I llm_load_print_meta: max token length = 1024
0.00.125.361 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.127.912 I llama_new_context_with_model: n_seq_max     = 1
0.00.127.916 I llama_new_context_with_model: n_ctx         = 2048
0.00.127.916 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.127.917 I llama_new_context_with_model: n_batch       = 2048
0.00.127.917 I llama_new_context_with_model: n_ubatch      = 512
0.00.127.918 I llama_new_context_with_model: flash_attn    = 0
0.00.127.920 I llama_new_context_with_model: freq_base     = 10000.0
0.00.127.920 I llama_new_context_with_model: freq_scale    = 1
0.00.203.294 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.203.309 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.203.338 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.205.534 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.205.540 I llama_new_context_with_model: graph nodes  = 967
0.00.205.541 I llama_new_context_with_model: graph splits = 1
0.00.205.545 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.283.999 I main: llama threadpool init, n_threads = 4
0.00.284.015 I 
0.00.284.092 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.284.092 I 
0.00.284.193 I sampler seed: 1234
0.00.284.201 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.284.203 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.284.204 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.284.204 I 
I believe the meaning of life is to know and experience what you love and to do it in a way that you enjoy.

I have lived most of my life in the U.S.A. and I feel that the U.S.A. is a very forgiving country for mistakes as long as you don’t hurt anyone else

0.02.336.568 I llama_perf_sampler_print:    sampling time =       2.45 ms /    71 runs   (    0.03 ms per token, 28944.15 tokens per second)
0.02.336.573 I llama_perf_context_print:        load time =     283.26 ms
0.02.336.575 I llama_perf_context_print: prompt eval time =     117.24 ms /     7 tokens (   16.75 ms per token,    59.71 tokens per second)
0.02.336.576 I llama_perf_context_print:        eval time =    1925.50 ms /    63 runs   (   30.56 ms per token,    32.72 tokens per second)
0.02.336.577 I llama_perf_context_print:       total time =    2052.58 ms /    70 tokens

real	0m2.383s
user	0m8.541s
sys	0m0.164s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.238 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.265 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.278 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.284 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.285 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.286 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.286 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.287 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.290 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.291 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.291 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.292 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.292 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.293 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.294 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.297 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.298 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.298 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.088 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.408 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.960 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.966 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.966 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.967 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.967 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.968 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.021.969 I llama_model_loader: - type  f32:  194 tensors
0.00.021.970 I llama_model_loader: - type q4_0:   97 tensors
0.00.021.971 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.320 I llm_load_vocab: special tokens cache size = 25
0.00.081.285 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.300 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.300 I llm_load_print_meta: arch             = gptneox
0.00.081.301 I llm_load_print_meta: vocab type       = BPE
0.00.081.302 I llm_load_print_meta: n_vocab          = 50304
0.00.081.302 I llm_load_print_meta: n_merges         = 50009
0.00.081.302 I llm_load_print_meta: vocab_only       = 0
0.00.081.303 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.303 I llm_load_print_meta: n_embd           = 2048
0.00.081.303 I llm_load_print_meta: n_layer          = 24
0.00.081.314 I llm_load_print_meta: n_head           = 16
0.00.081.315 I llm_load_print_meta: n_head_kv        = 16
0.00.081.316 I llm_load_print_meta: n_rot            = 32
0.00.081.316 I llm_load_print_meta: n_swa            = 0
0.00.081.316 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.317 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.318 I llm_load_print_meta: n_gqa            = 1
0.00.081.319 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.320 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.321 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.322 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.322 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.322 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.323 I llm_load_print_meta: n_ff             = 8192
0.00.081.324 I llm_load_print_meta: n_expert         = 0
0.00.081.324 I llm_load_print_meta: n_expert_used    = 0
0.00.081.325 I llm_load_print_meta: causal attn      = 1
0.00.081.325 I llm_load_print_meta: pooling type     = 0
0.00.081.325 I llm_load_print_meta: rope type        = 2
0.00.081.326 I llm_load_print_meta: rope scaling     = linear
0.00.081.327 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.328 I llm_load_print_meta: freq_scale_train = 1
0.00.081.328 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.328 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.329 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.329 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.329 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.329 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.330 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.330 I llm_load_print_meta: model type       = 1.4B
0.00.081.331 I llm_load_print_meta: model ftype      = Q4_0
0.00.081.332 I llm_load_print_meta: model params     = 1.41 B
0.00.081.333 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.081.333 I llm_load_print_meta: general.name     = 1.4B
0.00.081.334 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.334 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.334 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.335 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.335 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.335 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.336 I llm_load_print_meta: max token length = 1024
0.00.126.342 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.128.851 I llama_new_context_with_model: n_seq_max     = 1
0.00.128.865 I llama_new_context_with_model: n_ctx         = 128
0.00.128.865 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.128.865 I llama_new_context_with_model: n_batch       = 128
0.00.128.866 I llama_new_context_with_model: n_ubatch      = 128
0.00.128.866 I llama_new_context_with_model: flash_attn    = 0
0.00.128.868 I llama_new_context_with_model: freq_base     = 10000.0
0.00.128.869 I llama_new_context_with_model: freq_scale    = 1
0.00.128.869 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.133.906 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.133.916 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.133.933 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.136.390 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.136.396 I llama_new_context_with_model: graph nodes  = 967
0.00.136.396 I llama_new_context_with_model: graph splits = 1
0.00.136.398 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.184.726 I 
0.00.184.833 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.184.841 I perplexity: tokenizing the input ..
0.00.194.981 I perplexity: tokenization took 10.135 ms
0.00.195.003 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.133.172 I perplexity: 1.94 seconds per pass - ETA 0.02 minutes
[1]11.2190,
0.02.141.422 I Final estimate: PPL = 11.2190 +/- 3.50798

0.02.141.467 I llama_perf_context_print:        load time =     184.46 ms
0.02.141.469 I llama_perf_context_print: prompt eval time =    1936.54 ms /   128 tokens (   15.13 ms per token,    66.10 tokens per second)
0.02.141.471 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.141.473 I llama_perf_context_print:       total time =    1956.74 ms /   129 tokens

real	0m2.182s
user	0m8.086s
sys	0m0.096s
```
- q4_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.573 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.000.782 I main: load the model and apply lora adapter, if any
0.00.009.570 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.582 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.588 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.589 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.589 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.589 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.590 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.594 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.595 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.595 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.596 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.596 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.597 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.597 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.600 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.600 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.601 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.278 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.644 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.102 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.107 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.107 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.107 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.108 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.108 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.022.110 I llama_model_loader: - type  f32:  194 tensors
0.00.022.111 I llama_model_loader: - type q4_1:   97 tensors
0.00.022.111 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.462 I llm_load_vocab: special tokens cache size = 25
0.00.081.276 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.289 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.289 I llm_load_print_meta: arch             = gptneox
0.00.081.290 I llm_load_print_meta: vocab type       = BPE
0.00.081.290 I llm_load_print_meta: n_vocab          = 50304
0.00.081.291 I llm_load_print_meta: n_merges         = 50009
0.00.081.291 I llm_load_print_meta: vocab_only       = 0
0.00.081.292 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.292 I llm_load_print_meta: n_embd           = 2048
0.00.081.292 I llm_load_print_meta: n_layer          = 24
0.00.081.303 I llm_load_print_meta: n_head           = 16
0.00.081.304 I llm_load_print_meta: n_head_kv        = 16
0.00.081.304 I llm_load_print_meta: n_rot            = 32
0.00.081.305 I llm_load_print_meta: n_swa            = 0
0.00.081.305 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.305 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.306 I llm_load_print_meta: n_gqa            = 1
0.00.081.307 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.308 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.309 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.310 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.310 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.311 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.311 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.312 I llm_load_print_meta: n_ff             = 8192
0.00.081.312 I llm_load_print_meta: n_expert         = 0
0.00.081.312 I llm_load_print_meta: n_expert_used    = 0
0.00.081.313 I llm_load_print_meta: causal attn      = 1
0.00.081.313 I llm_load_print_meta: pooling type     = 0
0.00.081.313 I llm_load_print_meta: rope type        = 2
0.00.081.313 I llm_load_print_meta: rope scaling     = linear
0.00.081.315 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.316 I llm_load_print_meta: freq_scale_train = 1
0.00.081.316 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.316 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.317 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.317 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.317 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.317 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.318 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.318 I llm_load_print_meta: model type       = 1.4B
0.00.081.319 I llm_load_print_meta: model ftype      = Q4_1
0.00.081.320 I llm_load_print_meta: model params     = 1.41 B
0.00.081.321 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.081.321 I llm_load_print_meta: general.name     = 1.4B
0.00.081.322 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.322 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.322 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.323 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.323 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.324 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.324 I llm_load_print_meta: max token length = 1024
0.00.131.149 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.134.033 I llama_new_context_with_model: n_seq_max     = 1
0.00.134.039 I llama_new_context_with_model: n_ctx         = 2048
0.00.134.039 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.134.040 I llama_new_context_with_model: n_batch       = 2048
0.00.134.040 I llama_new_context_with_model: n_ubatch      = 512
0.00.134.040 I llama_new_context_with_model: flash_attn    = 0
0.00.134.042 I llama_new_context_with_model: freq_base     = 10000.0
0.00.134.043 I llama_new_context_with_model: freq_scale    = 1
0.00.212.113 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.212.129 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.212.158 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.214.490 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.214.497 I llama_new_context_with_model: graph nodes  = 967
0.00.214.497 I llama_new_context_with_model: graph splits = 1
0.00.214.500 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.300.975 I main: llama threadpool init, n_threads = 4
0.00.300.994 I 
0.00.301.081 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.301.085 I 
0.00.301.229 I sampler seed: 1234
0.00.301.240 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.301.244 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.301.245 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.301.245 I 
I believe the meaning of life is that one should always think of the other person as one's own.

I have a friend who has an extreme case of this. She has a brother who, when he was a child, would make fun of her every time he could and she would just go through the motions. She would try to make him

0.02.447.094 I llama_perf_sampler_print:    sampling time =       2.48 ms /    71 runs   (    0.03 ms per token, 28582.93 tokens per second)
0.02.447.097 I llama_perf_context_print:        load time =     300.18 ms
0.02.447.098 I llama_perf_context_print: prompt eval time =     133.69 ms /     7 tokens (   19.10 ms per token,    52.36 tokens per second)
0.02.447.100 I llama_perf_context_print:        eval time =    2002.79 ms /    63 runs   (   31.79 ms per token,    31.46 tokens per second)
0.02.447.100 I llama_perf_context_print:       total time =    2146.13 ms /    70 tokens

real	0m2.497s
user	0m8.928s
sys	0m0.196s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.638 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.690 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.708 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.719 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.723 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.723 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.724 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.725 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.729 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.729 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.730 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.730 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.731 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.732 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.733 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.738 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.738 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.739 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.462 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.820 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.253 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.259 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.259 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.260 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.260 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.261 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.022.263 I llama_model_loader: - type  f32:  194 tensors
0.00.022.263 I llama_model_loader: - type q4_1:   97 tensors
0.00.022.264 I llama_model_loader: - type q6_K:    1 tensors
0.00.069.705 I llm_load_vocab: special tokens cache size = 25
0.00.083.652 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.668 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.669 I llm_load_print_meta: arch             = gptneox
0.00.083.669 I llm_load_print_meta: vocab type       = BPE
0.00.083.670 I llm_load_print_meta: n_vocab          = 50304
0.00.083.670 I llm_load_print_meta: n_merges         = 50009
0.00.083.670 I llm_load_print_meta: vocab_only       = 0
0.00.083.671 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.671 I llm_load_print_meta: n_embd           = 2048
0.00.083.671 I llm_load_print_meta: n_layer          = 24
0.00.083.683 I llm_load_print_meta: n_head           = 16
0.00.083.684 I llm_load_print_meta: n_head_kv        = 16
0.00.083.685 I llm_load_print_meta: n_rot            = 32
0.00.083.685 I llm_load_print_meta: n_swa            = 0
0.00.083.685 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.686 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.688 I llm_load_print_meta: n_gqa            = 1
0.00.083.689 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.690 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.692 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.693 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.693 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.694 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.695 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.695 I llm_load_print_meta: n_ff             = 8192
0.00.083.696 I llm_load_print_meta: n_expert         = 0
0.00.083.697 I llm_load_print_meta: n_expert_used    = 0
0.00.083.697 I llm_load_print_meta: causal attn      = 1
0.00.083.698 I llm_load_print_meta: pooling type     = 0
0.00.083.698 I llm_load_print_meta: rope type        = 2
0.00.083.699 I llm_load_print_meta: rope scaling     = linear
0.00.083.701 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.702 I llm_load_print_meta: freq_scale_train = 1
0.00.083.702 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.702 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.703 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.703 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.704 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.704 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.704 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.705 I llm_load_print_meta: model type       = 1.4B
0.00.083.706 I llm_load_print_meta: model ftype      = Q4_1
0.00.083.707 I llm_load_print_meta: model params     = 1.41 B
0.00.083.708 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.083.708 I llm_load_print_meta: general.name     = 1.4B
0.00.083.709 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.710 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.710 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.710 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.711 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.711 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.712 I llm_load_print_meta: max token length = 1024
0.00.132.005 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.134.574 I llama_new_context_with_model: n_seq_max     = 1
0.00.134.579 I llama_new_context_with_model: n_ctx         = 128
0.00.134.580 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.134.580 I llama_new_context_with_model: n_batch       = 128
0.00.134.580 I llama_new_context_with_model: n_ubatch      = 128
0.00.134.581 I llama_new_context_with_model: flash_attn    = 0
0.00.134.582 I llama_new_context_with_model: freq_base     = 10000.0
0.00.134.583 I llama_new_context_with_model: freq_scale    = 1
0.00.134.585 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.139.620 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.139.630 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.139.647 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.142.099 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.142.105 I llama_new_context_with_model: graph nodes  = 967
0.00.142.105 I llama_new_context_with_model: graph splits = 1
0.00.142.107 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.197.835 I 
0.00.197.938 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.197.947 I perplexity: tokenizing the input ..
0.00.208.126 I perplexity: tokenization took 10.173 ms
0.00.208.147 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.430.725 I perplexity: 2.22 seconds per pass - ETA 0.03 minutes
[1]10.5418,
0.02.438.972 I Final estimate: PPL = 10.5418 +/- 3.33699

0.02.439.002 I llama_perf_context_print:        load time =     197.17 ms
0.02.439.003 I llama_perf_context_print: prompt eval time =    2220.70 ms /   128 tokens (   17.35 ms per token,    57.64 tokens per second)
0.02.439.004 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.439.005 I llama_perf_context_print:       total time =    2241.17 ms /   129 tokens

real	0m2.482s
user	0m9.248s
sys	0m0.108s
```
- q5_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.533 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.721 I main: llama backend init
0.00.000.728 I main: load the model and apply lora adapter, if any
0.00.009.665 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.678 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.684 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.685 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.686 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.687 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.687 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.692 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.693 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.694 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.694 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.695 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.696 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.697 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.700 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.700 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.701 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.418 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.767 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.220 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.226 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.227 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.227 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.228 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.228 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.022.230 I llama_model_loader: - type  f32:  194 tensors
0.00.022.231 I llama_model_loader: - type q5_0:   97 tensors
0.00.022.231 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.752 I llm_load_vocab: special tokens cache size = 25
0.00.080.524 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.534 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.535 I llm_load_print_meta: arch             = gptneox
0.00.080.535 I llm_load_print_meta: vocab type       = BPE
0.00.080.536 I llm_load_print_meta: n_vocab          = 50304
0.00.080.536 I llm_load_print_meta: n_merges         = 50009
0.00.080.536 I llm_load_print_meta: vocab_only       = 0
0.00.080.537 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.537 I llm_load_print_meta: n_embd           = 2048
0.00.080.537 I llm_load_print_meta: n_layer          = 24
0.00.080.545 I llm_load_print_meta: n_head           = 16
0.00.080.546 I llm_load_print_meta: n_head_kv        = 16
0.00.080.546 I llm_load_print_meta: n_rot            = 32
0.00.080.546 I llm_load_print_meta: n_swa            = 0
0.00.080.547 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.547 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.548 I llm_load_print_meta: n_gqa            = 1
0.00.080.549 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.550 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.551 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.552 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.552 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.553 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.553 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.554 I llm_load_print_meta: n_ff             = 8192
0.00.080.554 I llm_load_print_meta: n_expert         = 0
0.00.080.554 I llm_load_print_meta: n_expert_used    = 0
0.00.080.555 I llm_load_print_meta: causal attn      = 1
0.00.080.555 I llm_load_print_meta: pooling type     = 0
0.00.080.555 I llm_load_print_meta: rope type        = 2
0.00.080.556 I llm_load_print_meta: rope scaling     = linear
0.00.080.557 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.558 I llm_load_print_meta: freq_scale_train = 1
0.00.080.558 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.559 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.559 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.560 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.560 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.560 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.561 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.561 I llm_load_print_meta: model type       = 1.4B
0.00.080.562 I llm_load_print_meta: model ftype      = Q5_0
0.00.080.562 I llm_load_print_meta: model params     = 1.41 B
0.00.080.563 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.080.564 I llm_load_print_meta: general.name     = 1.4B
0.00.080.564 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.565 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.565 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.566 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.566 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.567 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.567 I llm_load_print_meta: max token length = 1024
0.00.134.398 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.136.876 I llama_new_context_with_model: n_seq_max     = 1
0.00.136.881 I llama_new_context_with_model: n_ctx         = 2048
0.00.136.882 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.136.882 I llama_new_context_with_model: n_batch       = 2048
0.00.136.882 I llama_new_context_with_model: n_ubatch      = 512
0.00.136.883 I llama_new_context_with_model: flash_attn    = 0
0.00.136.884 I llama_new_context_with_model: freq_base     = 10000.0
0.00.136.885 I llama_new_context_with_model: freq_scale    = 1
0.00.214.399 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.214.417 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.214.446 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.216.683 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.216.689 I llama_new_context_with_model: graph nodes  = 967
0.00.216.690 I llama_new_context_with_model: graph splits = 1
0.00.216.693 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.303.873 I main: llama threadpool init, n_threads = 4
0.00.303.889 I 
0.00.303.967 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.303.971 I 
0.00.304.071 I sampler seed: 1234
0.00.304.082 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.304.084 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.304.085 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.304.085 I 
I believe the meaning of life is to learn and grow, and to share what you have learned with others."

"You are a very special young lady, and I have loved being your mother from the very beginning."

"Thank you, Father. And now it is time for me to go."

"I am sure you will

0.02.635.811 I llama_perf_sampler_print:    sampling time =       2.40 ms /    71 runs   (    0.03 ms per token, 29571.01 tokens per second)
0.02.635.814 I llama_perf_context_print:        load time =     303.13 ms
0.02.635.815 I llama_perf_context_print: prompt eval time =     141.84 ms /     7 tokens (   20.26 ms per token,    49.35 tokens per second)
0.02.635.818 I llama_perf_context_print:        eval time =    2180.42 ms /    63 runs   (   34.61 ms per token,    28.89 tokens per second)
0.02.635.818 I llama_perf_context_print:       total time =    2331.95 ms /    70 tokens

real	0m2.689s
user	0m9.699s
sys	0m0.176s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.601 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.701 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.715 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.721 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.722 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.723 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.724 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.725 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.728 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.729 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.730 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.731 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.731 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.732 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.733 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.738 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.738 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.739 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.482 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.831 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.164 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.169 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.169 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.170 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.170 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.171 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.022.173 I llama_model_loader: - type  f32:  194 tensors
0.00.022.174 I llama_model_loader: - type q5_0:   97 tensors
0.00.022.175 I llama_model_loader: - type q6_K:    1 tensors
0.00.069.798 I llm_load_vocab: special tokens cache size = 25
0.00.083.617 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.634 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.634 I llm_load_print_meta: arch             = gptneox
0.00.083.635 I llm_load_print_meta: vocab type       = BPE
0.00.083.636 I llm_load_print_meta: n_vocab          = 50304
0.00.083.636 I llm_load_print_meta: n_merges         = 50009
0.00.083.636 I llm_load_print_meta: vocab_only       = 0
0.00.083.637 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.637 I llm_load_print_meta: n_embd           = 2048
0.00.083.637 I llm_load_print_meta: n_layer          = 24
0.00.083.648 I llm_load_print_meta: n_head           = 16
0.00.083.649 I llm_load_print_meta: n_head_kv        = 16
0.00.083.649 I llm_load_print_meta: n_rot            = 32
0.00.083.649 I llm_load_print_meta: n_swa            = 0
0.00.083.650 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.650 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.651 I llm_load_print_meta: n_gqa            = 1
0.00.083.652 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.653 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.655 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.655 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.656 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.656 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.656 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.657 I llm_load_print_meta: n_ff             = 8192
0.00.083.657 I llm_load_print_meta: n_expert         = 0
0.00.083.657 I llm_load_print_meta: n_expert_used    = 0
0.00.083.658 I llm_load_print_meta: causal attn      = 1
0.00.083.658 I llm_load_print_meta: pooling type     = 0
0.00.083.658 I llm_load_print_meta: rope type        = 2
0.00.083.659 I llm_load_print_meta: rope scaling     = linear
0.00.083.660 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.661 I llm_load_print_meta: freq_scale_train = 1
0.00.083.661 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.661 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.662 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.662 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.662 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.662 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.662 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.663 I llm_load_print_meta: model type       = 1.4B
0.00.083.663 I llm_load_print_meta: model ftype      = Q5_0
0.00.083.664 I llm_load_print_meta: model params     = 1.41 B
0.00.083.665 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.083.666 I llm_load_print_meta: general.name     = 1.4B
0.00.083.666 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.666 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.667 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.667 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.668 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.668 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.668 I llm_load_print_meta: max token length = 1024
0.00.140.546 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.143.165 I llama_new_context_with_model: n_seq_max     = 1
0.00.143.170 I llama_new_context_with_model: n_ctx         = 128
0.00.143.170 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.143.170 I llama_new_context_with_model: n_batch       = 128
0.00.143.171 I llama_new_context_with_model: n_ubatch      = 128
0.00.143.171 I llama_new_context_with_model: flash_attn    = 0
0.00.143.174 I llama_new_context_with_model: freq_base     = 10000.0
0.00.143.175 I llama_new_context_with_model: freq_scale    = 1
0.00.143.177 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.148.750 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.148.763 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.148.788 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.151.295 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.151.302 I llama_new_context_with_model: graph nodes  = 967
0.00.151.302 I llama_new_context_with_model: graph splits = 1
0.00.151.304 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.209.779 I 
0.00.209.872 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.209.882 I perplexity: tokenizing the input ..
0.00.220.129 I perplexity: tokenization took 10.24 ms
0.00.220.153 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.586.537 I perplexity: 2.37 seconds per pass - ETA 0.03 minutes
[1]10.0568,
0.02.594.805 I Final estimate: PPL = 10.0568 +/- 3.19956

0.02.594.836 I llama_perf_context_print:        load time =     209.15 ms
0.02.594.838 I llama_perf_context_print: prompt eval time =    2364.37 ms /   128 tokens (   18.47 ms per token,    54.14 tokens per second)
0.02.594.839 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.594.840 I llama_perf_context_print:       total time =    2385.06 ms /   129 tokens

real	0m2.642s
user	0m9.825s
sys	0m0.116s
```
- q5_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.612 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.795 I main: llama backend init
0.00.000.803 I main: load the model and apply lora adapter, if any
0.00.009.852 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.865 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.875 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.879 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.880 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.880 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.881 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.884 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.885 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.885 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.886 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.886 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.887 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.887 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.891 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.892 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.892 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.801 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.128 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.449 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.454 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.455 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.455 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.456 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.456 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.022.459 I llama_model_loader: - type  f32:  194 tensors
0.00.022.459 I llama_model_loader: - type q5_1:   97 tensors
0.00.022.460 I llama_model_loader: - type q6_K:    1 tensors
0.00.069.620 I llm_load_vocab: special tokens cache size = 25
0.00.083.625 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.642 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.643 I llm_load_print_meta: arch             = gptneox
0.00.083.643 I llm_load_print_meta: vocab type       = BPE
0.00.083.644 I llm_load_print_meta: n_vocab          = 50304
0.00.083.644 I llm_load_print_meta: n_merges         = 50009
0.00.083.645 I llm_load_print_meta: vocab_only       = 0
0.00.083.645 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.645 I llm_load_print_meta: n_embd           = 2048
0.00.083.646 I llm_load_print_meta: n_layer          = 24
0.00.083.658 I llm_load_print_meta: n_head           = 16
0.00.083.659 I llm_load_print_meta: n_head_kv        = 16
0.00.083.660 I llm_load_print_meta: n_rot            = 32
0.00.083.660 I llm_load_print_meta: n_swa            = 0
0.00.083.661 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.662 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.663 I llm_load_print_meta: n_gqa            = 1
0.00.083.665 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.666 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.667 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.667 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.668 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.669 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.669 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.670 I llm_load_print_meta: n_ff             = 8192
0.00.083.670 I llm_load_print_meta: n_expert         = 0
0.00.083.670 I llm_load_print_meta: n_expert_used    = 0
0.00.083.671 I llm_load_print_meta: causal attn      = 1
0.00.083.671 I llm_load_print_meta: pooling type     = 0
0.00.083.671 I llm_load_print_meta: rope type        = 2
0.00.083.672 I llm_load_print_meta: rope scaling     = linear
0.00.083.674 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.675 I llm_load_print_meta: freq_scale_train = 1
0.00.083.675 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.676 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.676 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.676 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.676 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.677 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.677 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.678 I llm_load_print_meta: model type       = 1.4B
0.00.083.678 I llm_load_print_meta: model ftype      = Q5_1
0.00.083.679 I llm_load_print_meta: model params     = 1.41 B
0.00.083.680 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.083.680 I llm_load_print_meta: general.name     = 1.4B
0.00.083.681 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.681 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.683 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.683 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.684 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.684 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.685 I llm_load_print_meta: max token length = 1024
0.00.141.497 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.144.033 I llama_new_context_with_model: n_seq_max     = 1
0.00.144.039 I llama_new_context_with_model: n_ctx         = 2048
0.00.144.039 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.144.039 I llama_new_context_with_model: n_batch       = 2048
0.00.144.039 I llama_new_context_with_model: n_ubatch      = 512
0.00.144.040 I llama_new_context_with_model: flash_attn    = 0
0.00.144.042 I llama_new_context_with_model: freq_base     = 10000.0
0.00.144.043 I llama_new_context_with_model: freq_scale    = 1
0.00.221.586 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.221.600 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.221.629 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.223.898 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.223.904 I llama_new_context_with_model: graph nodes  = 967
0.00.223.904 I llama_new_context_with_model: graph splits = 1
0.00.223.907 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.315.124 I main: llama threadpool init, n_threads = 4
0.00.315.140 I 
0.00.315.213 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.315.217 I 
0.00.315.312 I sampler seed: 1234
0.00.315.323 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.315.327 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.315.328 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.315.328 I 
I believe the meaning of life is to give one’s life for the freedom of others. I believe the meaning of life is to give one’s life for the freedom of the animals. I believe the meaning of life is to give one’s life for the freedom of all living beings.

I believe the meaning of life is to give

0.02.774.919 I llama_perf_sampler_print:    sampling time =       2.42 ms /    71 runs   (    0.03 ms per token, 29375.26 tokens per second)
0.02.774.922 I llama_perf_context_print:        load time =     314.30 ms
0.02.774.924 I llama_perf_context_print: prompt eval time =     151.14 ms /     7 tokens (   21.59 ms per token,    46.31 tokens per second)
0.02.774.925 I llama_perf_context_print:        eval time =    2298.98 ms /    63 runs   (   36.49 ms per token,    27.40 tokens per second)
0.02.774.926 I llama_perf_context_print:       total time =    2459.80 ms /    70 tokens

real	0m2.832s
user	0m10.203s
sys	0m0.208s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.635 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.739 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.753 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.761 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.762 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.762 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.763 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.763 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.768 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.769 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.770 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.770 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.771 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.772 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.773 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.778 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.778 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.779 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.548 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.943 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.309 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.315 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.316 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.316 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.317 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.318 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.022.320 I llama_model_loader: - type  f32:  194 tensors
0.00.022.321 I llama_model_loader: - type q5_1:   97 tensors
0.00.022.321 I llama_model_loader: - type q6_K:    1 tensors
0.00.068.591 I llm_load_vocab: special tokens cache size = 25
0.00.082.440 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.455 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.456 I llm_load_print_meta: arch             = gptneox
0.00.082.456 I llm_load_print_meta: vocab type       = BPE
0.00.082.457 I llm_load_print_meta: n_vocab          = 50304
0.00.082.457 I llm_load_print_meta: n_merges         = 50009
0.00.082.458 I llm_load_print_meta: vocab_only       = 0
0.00.082.458 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.458 I llm_load_print_meta: n_embd           = 2048
0.00.082.459 I llm_load_print_meta: n_layer          = 24
0.00.082.469 I llm_load_print_meta: n_head           = 16
0.00.082.470 I llm_load_print_meta: n_head_kv        = 16
0.00.082.471 I llm_load_print_meta: n_rot            = 32
0.00.082.471 I llm_load_print_meta: n_swa            = 0
0.00.082.472 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.472 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.474 I llm_load_print_meta: n_gqa            = 1
0.00.082.475 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.476 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.477 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.478 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.478 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.479 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.479 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.480 I llm_load_print_meta: n_ff             = 8192
0.00.082.480 I llm_load_print_meta: n_expert         = 0
0.00.082.481 I llm_load_print_meta: n_expert_used    = 0
0.00.082.482 I llm_load_print_meta: causal attn      = 1
0.00.082.482 I llm_load_print_meta: pooling type     = 0
0.00.082.482 I llm_load_print_meta: rope type        = 2
0.00.082.483 I llm_load_print_meta: rope scaling     = linear
0.00.082.485 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.485 I llm_load_print_meta: freq_scale_train = 1
0.00.082.486 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.486 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.486 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.487 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.487 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.488 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.488 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.489 I llm_load_print_meta: model type       = 1.4B
0.00.082.489 I llm_load_print_meta: model ftype      = Q5_1
0.00.082.491 I llm_load_print_meta: model params     = 1.41 B
0.00.082.494 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.082.495 I llm_load_print_meta: general.name     = 1.4B
0.00.082.495 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.495 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.496 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.497 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.497 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.498 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.498 I llm_load_print_meta: max token length = 1024
0.00.140.767 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.143.269 I llama_new_context_with_model: n_seq_max     = 1
0.00.143.274 I llama_new_context_with_model: n_ctx         = 128
0.00.143.275 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.143.275 I llama_new_context_with_model: n_batch       = 128
0.00.143.275 I llama_new_context_with_model: n_ubatch      = 128
0.00.143.276 I llama_new_context_with_model: flash_attn    = 0
0.00.143.278 I llama_new_context_with_model: freq_base     = 10000.0
0.00.143.278 I llama_new_context_with_model: freq_scale    = 1
0.00.143.279 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.148.295 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.148.304 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.148.322 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.150.767 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.150.773 I llama_new_context_with_model: graph nodes  = 967
0.00.150.773 I llama_new_context_with_model: graph splits = 1
0.00.150.776 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.210.066 I 
0.00.210.156 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.210.168 I perplexity: tokenizing the input ..
0.00.220.606 I perplexity: tokenization took 10.433 ms
0.00.220.625 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.723.041 I perplexity: 2.50 seconds per pass - ETA 0.03 minutes
[1]10.0893,
0.02.731.325 I Final estimate: PPL = 10.0893 +/- 3.15432

0.02.731.357 I llama_perf_context_print:        load time =     209.40 ms
0.02.731.358 I llama_perf_context_print: prompt eval time =    2500.93 ms /   128 tokens (   19.54 ms per token,    51.18 tokens per second)
0.02.731.360 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.731.361 I llama_perf_context_print:       total time =    2521.29 ms /   129 tokens

real	0m2.779s
user	0m10.377s
sys	0m0.120s
```
- q2_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.582 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.000.777 I main: load the model and apply lora adapter, if any
0.00.009.485 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.499 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.505 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.506 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.506 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.507 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.507 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.512 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.512 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.513 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.513 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.514 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.514 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.515 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.518 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.519 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.519 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.153 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.477 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.933 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.939 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.939 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.940 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.940 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.941 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.021.943 I llama_model_loader: - type  f32:  194 tensors
0.00.021.944 I llama_model_loader: - type q2_K:   49 tensors
0.00.021.944 I llama_model_loader: - type q3_K:   48 tensors
0.00.021.946 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.878 I llm_load_vocab: special tokens cache size = 25
0.00.080.745 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.755 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.755 I llm_load_print_meta: arch             = gptneox
0.00.080.756 I llm_load_print_meta: vocab type       = BPE
0.00.080.756 I llm_load_print_meta: n_vocab          = 50304
0.00.080.757 I llm_load_print_meta: n_merges         = 50009
0.00.080.757 I llm_load_print_meta: vocab_only       = 0
0.00.080.757 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.757 I llm_load_print_meta: n_embd           = 2048
0.00.080.758 I llm_load_print_meta: n_layer          = 24
0.00.080.766 I llm_load_print_meta: n_head           = 16
0.00.080.767 I llm_load_print_meta: n_head_kv        = 16
0.00.080.767 I llm_load_print_meta: n_rot            = 32
0.00.080.767 I llm_load_print_meta: n_swa            = 0
0.00.080.768 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.768 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.769 I llm_load_print_meta: n_gqa            = 1
0.00.080.770 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.771 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.772 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.773 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.773 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.774 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.774 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.775 I llm_load_print_meta: n_ff             = 8192
0.00.080.775 I llm_load_print_meta: n_expert         = 0
0.00.080.775 I llm_load_print_meta: n_expert_used    = 0
0.00.080.776 I llm_load_print_meta: causal attn      = 1
0.00.080.776 I llm_load_print_meta: pooling type     = 0
0.00.080.776 I llm_load_print_meta: rope type        = 2
0.00.080.777 I llm_load_print_meta: rope scaling     = linear
0.00.080.778 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.778 I llm_load_print_meta: freq_scale_train = 1
0.00.080.779 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.779 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.779 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.780 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.780 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.780 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.781 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.781 I llm_load_print_meta: model type       = 1.4B
0.00.080.782 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.080.782 I llm_load_print_meta: model params     = 1.41 B
0.00.080.783 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.080.784 I llm_load_print_meta: general.name     = 1.4B
0.00.080.784 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.784 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.785 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.785 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.786 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.786 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.786 I llm_load_print_meta: max token length = 1024
0.00.114.258 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.116.757 I llama_new_context_with_model: n_seq_max     = 1
0.00.116.762 I llama_new_context_with_model: n_ctx         = 2048
0.00.116.762 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.116.762 I llama_new_context_with_model: n_batch       = 2048
0.00.116.763 I llama_new_context_with_model: n_ubatch      = 512
0.00.116.763 I llama_new_context_with_model: flash_attn    = 0
0.00.116.765 I llama_new_context_with_model: freq_base     = 10000.0
0.00.116.766 I llama_new_context_with_model: freq_scale    = 1
0.00.195.422 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.195.438 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.195.468 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.198.061 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.198.068 I llama_new_context_with_model: graph nodes  = 967
0.00.198.068 I llama_new_context_with_model: graph splits = 1
0.00.198.071 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.269.783 I main: llama threadpool init, n_threads = 4
0.00.269.799 I 
0.00.269.873 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.269.876 I 
0.00.269.975 I sampler seed: 1234
0.00.269.986 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.269.989 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.269.989 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.269.991 I 
I believe the meaning of life is a shared property, as in the past, and the past, which is a mystery, and the mystery of not.

1:  
[>_         
        
          
                
                        
              
                
                     
                    
                             
.  '                
         

0.01.893.837 I llama_perf_sampler_print:    sampling time =       2.28 ms /    71 runs   (    0.03 ms per token, 31126.70 tokens per second)
0.01.893.839 I llama_perf_context_print:        load time =     268.99 ms
0.01.893.841 I llama_perf_context_print: prompt eval time =      96.73 ms /     7 tokens (   13.82 ms per token,    72.37 tokens per second)
0.01.893.842 I llama_perf_context_print:        eval time =    1518.05 ms /    63 runs   (   24.10 ms per token,    41.50 tokens per second)
0.01.893.843 I llama_perf_context_print:       total time =    1624.06 ms /    70 tokens

real	0m1.932s
user	0m6.781s
sys	0m0.164s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.605 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.829 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.846 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.852 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.855 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.856 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.856 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.857 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.860 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.861 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.861 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.862 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.863 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.863 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.864 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.869 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.870 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.871 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.594 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.936 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.286 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.292 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.292 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.293 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.293 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.294 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.022.296 I llama_model_loader: - type  f32:  194 tensors
0.00.022.297 I llama_model_loader: - type q2_K:   49 tensors
0.00.022.297 I llama_model_loader: - type q3_K:   48 tensors
0.00.022.298 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.828 I llm_load_vocab: special tokens cache size = 25
0.00.081.597 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.610 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.611 I llm_load_print_meta: arch             = gptneox
0.00.081.612 I llm_load_print_meta: vocab type       = BPE
0.00.081.612 I llm_load_print_meta: n_vocab          = 50304
0.00.081.612 I llm_load_print_meta: n_merges         = 50009
0.00.081.614 I llm_load_print_meta: vocab_only       = 0
0.00.081.614 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.615 I llm_load_print_meta: n_embd           = 2048
0.00.081.615 I llm_load_print_meta: n_layer          = 24
0.00.081.626 I llm_load_print_meta: n_head           = 16
0.00.081.627 I llm_load_print_meta: n_head_kv        = 16
0.00.081.627 I llm_load_print_meta: n_rot            = 32
0.00.081.627 I llm_load_print_meta: n_swa            = 0
0.00.081.628 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.628 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.637 I llm_load_print_meta: n_gqa            = 1
0.00.081.638 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.640 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.641 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.641 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.642 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.642 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.643 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.643 I llm_load_print_meta: n_ff             = 8192
0.00.081.644 I llm_load_print_meta: n_expert         = 0
0.00.081.644 I llm_load_print_meta: n_expert_used    = 0
0.00.081.645 I llm_load_print_meta: causal attn      = 1
0.00.081.645 I llm_load_print_meta: pooling type     = 0
0.00.081.646 I llm_load_print_meta: rope type        = 2
0.00.081.647 I llm_load_print_meta: rope scaling     = linear
0.00.081.649 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.649 I llm_load_print_meta: freq_scale_train = 1
0.00.081.650 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.650 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.650 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.651 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.651 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.651 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.654 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.655 I llm_load_print_meta: model type       = 1.4B
0.00.081.656 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.081.657 I llm_load_print_meta: model params     = 1.41 B
0.00.081.658 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.081.658 I llm_load_print_meta: general.name     = 1.4B
0.00.081.658 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.659 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.659 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.659 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.660 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.660 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.661 I llm_load_print_meta: max token length = 1024
0.00.114.348 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.116.848 I llama_new_context_with_model: n_seq_max     = 1
0.00.116.854 I llama_new_context_with_model: n_ctx         = 128
0.00.116.854 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.116.854 I llama_new_context_with_model: n_batch       = 128
0.00.116.855 I llama_new_context_with_model: n_ubatch      = 128
0.00.116.855 I llama_new_context_with_model: flash_attn    = 0
0.00.116.857 I llama_new_context_with_model: freq_base     = 10000.0
0.00.116.858 I llama_new_context_with_model: freq_scale    = 1
0.00.116.858 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.122.188 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.122.199 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.122.222 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.124.721 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.124.727 I llama_new_context_with_model: graph nodes  = 967
0.00.124.727 I llama_new_context_with_model: graph splits = 1
0.00.124.729 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.165.029 I 
0.00.165.115 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.165.126 I perplexity: tokenizing the input ..
0.00.175.340 I perplexity: tokenization took 10.209 ms
0.00.175.365 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.718.352 I perplexity: 1.54 seconds per pass - ETA 0.02 minutes
[1]71.4792,
0.01.726.649 I Final estimate: PPL = 71.4792 +/- 27.83019

0.01.726.682 I llama_perf_context_print:        load time =     164.40 ms
0.01.726.684 I llama_perf_context_print: prompt eval time =    1541.39 ms /   128 tokens (   12.04 ms per token,    83.04 tokens per second)
0.01.726.685 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.726.686 I llama_perf_context_print:       total time =    1561.65 ms /   129 tokens

real	0m1.759s
user	0m6.473s
sys	0m0.076s
```
- q3_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.635 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.826 I main: llama backend init
0.00.000.833 I main: load the model and apply lora adapter, if any
0.00.009.550 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.564 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.569 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.570 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.571 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.572 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.572 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.575 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.575 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.576 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.577 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.577 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.577 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.578 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.581 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.581 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.582 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.155 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.475 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.924 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.930 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.931 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.931 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.932 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.933 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.021.935 I llama_model_loader: - type  f32:  194 tensors
0.00.021.936 I llama_model_loader: - type q3_K:   25 tensors
0.00.021.936 I llama_model_loader: - type q4_K:   71 tensors
0.00.021.936 I llama_model_loader: - type q5_K:    1 tensors
0.00.021.936 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.932 I llm_load_vocab: special tokens cache size = 25
0.00.081.745 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.762 I llm_load_print_meta: arch             = gptneox
0.00.081.763 I llm_load_print_meta: vocab type       = BPE
0.00.081.763 I llm_load_print_meta: n_vocab          = 50304
0.00.081.764 I llm_load_print_meta: n_merges         = 50009
0.00.081.764 I llm_load_print_meta: vocab_only       = 0
0.00.081.765 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.765 I llm_load_print_meta: n_embd           = 2048
0.00.081.765 I llm_load_print_meta: n_layer          = 24
0.00.081.777 I llm_load_print_meta: n_head           = 16
0.00.081.778 I llm_load_print_meta: n_head_kv        = 16
0.00.081.779 I llm_load_print_meta: n_rot            = 32
0.00.081.780 I llm_load_print_meta: n_swa            = 0
0.00.081.781 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.781 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.783 I llm_load_print_meta: n_gqa            = 1
0.00.081.784 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.785 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.787 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.787 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.788 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.788 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.788 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.789 I llm_load_print_meta: n_ff             = 8192
0.00.081.789 I llm_load_print_meta: n_expert         = 0
0.00.081.789 I llm_load_print_meta: n_expert_used    = 0
0.00.081.790 I llm_load_print_meta: causal attn      = 1
0.00.081.790 I llm_load_print_meta: pooling type     = 0
0.00.081.791 I llm_load_print_meta: rope type        = 2
0.00.081.792 I llm_load_print_meta: rope scaling     = linear
0.00.081.793 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.794 I llm_load_print_meta: freq_scale_train = 1
0.00.081.795 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.795 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.795 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.796 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.796 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.796 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.796 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.797 I llm_load_print_meta: model type       = 1.4B
0.00.081.798 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.081.799 I llm_load_print_meta: model params     = 1.41 B
0.00.081.800 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.081.800 I llm_load_print_meta: general.name     = 1.4B
0.00.081.800 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.801 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.802 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.802 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.803 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.806 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.806 I llm_load_print_meta: max token length = 1024
0.00.123.815 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.126.351 I llama_new_context_with_model: n_seq_max     = 1
0.00.126.357 I llama_new_context_with_model: n_ctx         = 2048
0.00.126.357 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.126.357 I llama_new_context_with_model: n_batch       = 2048
0.00.126.358 I llama_new_context_with_model: n_ubatch      = 512
0.00.126.358 I llama_new_context_with_model: flash_attn    = 0
0.00.126.360 I llama_new_context_with_model: freq_base     = 10000.0
0.00.126.361 I llama_new_context_with_model: freq_scale    = 1
0.00.205.566 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.205.583 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.205.611 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.208.280 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.208.286 I llama_new_context_with_model: graph nodes  = 967
0.00.208.286 I llama_new_context_with_model: graph splits = 1
0.00.208.289 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.282.464 I main: llama threadpool init, n_threads = 4
0.00.282.480 I 
0.00.282.553 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.282.557 I 
0.00.282.665 I sampler seed: 1234
0.00.282.676 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.282.680 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.282.681 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.282.681 I 
I believe the meaning of life is to love your fellow human beings. That is the only meaning I am interested in. I am not interested in money or property. I am not interested in worldly success. My only aim is to be a human being. In my book _Love and the Law,_ I have stated that the only way to live is

0.02.121.504 I llama_perf_sampler_print:    sampling time =       2.48 ms /    71 runs   (    0.03 ms per token, 28629.03 tokens per second)
0.02.121.507 I llama_perf_context_print:        load time =     281.62 ms
0.02.121.509 I llama_perf_context_print: prompt eval time =     102.72 ms /     7 tokens (   14.67 ms per token,    68.15 tokens per second)
0.02.121.510 I llama_perf_context_print:        eval time =    1726.48 ms /    63 runs   (   27.40 ms per token,    36.49 tokens per second)
0.02.121.512 I llama_perf_context_print:       total time =    1839.05 ms /    70 tokens

real	0m2.165s
user	0m7.667s
sys	0m0.168s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.606 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.612 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.628 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.637 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.641 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.641 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.642 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.642 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.645 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.647 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.648 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.648 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.649 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.649 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.650 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.653 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.654 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.654 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.321 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.672 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.940 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.945 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.946 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.946 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.947 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.948 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.021.950 I llama_model_loader: - type  f32:  194 tensors
0.00.021.951 I llama_model_loader: - type q3_K:   25 tensors
0.00.021.952 I llama_model_loader: - type q4_K:   71 tensors
0.00.021.952 I llama_model_loader: - type q5_K:    1 tensors
0.00.021.952 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.384 I llm_load_vocab: special tokens cache size = 25
0.00.081.186 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.198 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.199 I llm_load_print_meta: arch             = gptneox
0.00.081.199 I llm_load_print_meta: vocab type       = BPE
0.00.081.200 I llm_load_print_meta: n_vocab          = 50304
0.00.081.200 I llm_load_print_meta: n_merges         = 50009
0.00.081.201 I llm_load_print_meta: vocab_only       = 0
0.00.081.201 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.201 I llm_load_print_meta: n_embd           = 2048
0.00.081.202 I llm_load_print_meta: n_layer          = 24
0.00.081.213 I llm_load_print_meta: n_head           = 16
0.00.081.214 I llm_load_print_meta: n_head_kv        = 16
0.00.081.214 I llm_load_print_meta: n_rot            = 32
0.00.081.214 I llm_load_print_meta: n_swa            = 0
0.00.081.215 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.215 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.216 I llm_load_print_meta: n_gqa            = 1
0.00.081.217 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.218 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.220 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.220 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.220 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.221 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.221 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.222 I llm_load_print_meta: n_ff             = 8192
0.00.081.222 I llm_load_print_meta: n_expert         = 0
0.00.081.223 I llm_load_print_meta: n_expert_used    = 0
0.00.081.223 I llm_load_print_meta: causal attn      = 1
0.00.081.223 I llm_load_print_meta: pooling type     = 0
0.00.081.223 I llm_load_print_meta: rope type        = 2
0.00.081.224 I llm_load_print_meta: rope scaling     = linear
0.00.081.225 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.226 I llm_load_print_meta: freq_scale_train = 1
0.00.081.226 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.226 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.227 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.227 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.227 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.227 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.228 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.228 I llm_load_print_meta: model type       = 1.4B
0.00.081.229 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.081.230 I llm_load_print_meta: model params     = 1.41 B
0.00.081.231 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.081.231 I llm_load_print_meta: general.name     = 1.4B
0.00.081.231 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.232 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.232 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.232 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.232 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.233 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.233 I llm_load_print_meta: max token length = 1024
0.00.123.507 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.126.007 I llama_new_context_with_model: n_seq_max     = 1
0.00.126.012 I llama_new_context_with_model: n_ctx         = 128
0.00.126.013 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.126.013 I llama_new_context_with_model: n_batch       = 128
0.00.126.013 I llama_new_context_with_model: n_ubatch      = 128
0.00.126.013 I llama_new_context_with_model: flash_attn    = 0
0.00.126.015 I llama_new_context_with_model: freq_base     = 10000.0
0.00.126.016 I llama_new_context_with_model: freq_scale    = 1
0.00.126.016 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.131.096 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.131.107 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.131.126 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.133.328 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.133.334 I llama_new_context_with_model: graph nodes  = 967
0.00.133.334 I llama_new_context_with_model: graph splits = 1
0.00.133.336 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.177.436 I 
0.00.177.521 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.177.530 I perplexity: tokenizing the input ..
0.00.187.773 I perplexity: tokenization took 10.238 ms
0.00.187.793 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.822.678 I perplexity: 1.63 seconds per pass - ETA 0.02 minutes
[1]12.7265,
0.01.830.955 I Final estimate: PPL = 12.7265 +/- 4.19142

0.01.830.992 I llama_perf_context_print:        load time =     176.80 ms
0.01.830.998 I llama_perf_context_print: prompt eval time =    1633.21 ms /   128 tokens (   12.76 ms per token,    78.37 tokens per second)
0.01.830.999 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.831.000 I llama_perf_context_print:       total time =    1653.55 ms /   129 tokens

real	0m1.870s
user	0m6.855s
sys	0m0.096s
```
- q4_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.570 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.000.788 I main: load the model and apply lora adapter, if any
0.00.009.570 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.585 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.590 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.592 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.593 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.593 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.595 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.598 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.599 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.600 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.601 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.602 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.603 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.603 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.608 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.609 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.611 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.304 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.671 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.155 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.160 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.161 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.162 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.162 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.163 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.165 I llama_model_loader: - type  f32:  194 tensors
0.00.022.165 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.166 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.166 I llama_model_loader: - type q6_K:   13 tensors
0.00.067.407 I llm_load_vocab: special tokens cache size = 25
0.00.081.311 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.323 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.323 I llm_load_print_meta: arch             = gptneox
0.00.081.324 I llm_load_print_meta: vocab type       = BPE
0.00.081.325 I llm_load_print_meta: n_vocab          = 50304
0.00.081.325 I llm_load_print_meta: n_merges         = 50009
0.00.081.326 I llm_load_print_meta: vocab_only       = 0
0.00.081.326 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.326 I llm_load_print_meta: n_embd           = 2048
0.00.081.327 I llm_load_print_meta: n_layer          = 24
0.00.081.336 I llm_load_print_meta: n_head           = 16
0.00.081.336 I llm_load_print_meta: n_head_kv        = 16
0.00.081.337 I llm_load_print_meta: n_rot            = 32
0.00.081.337 I llm_load_print_meta: n_swa            = 0
0.00.081.337 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.338 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.339 I llm_load_print_meta: n_gqa            = 1
0.00.081.340 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.340 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.342 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.342 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.342 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.343 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.343 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.344 I llm_load_print_meta: n_ff             = 8192
0.00.081.344 I llm_load_print_meta: n_expert         = 0
0.00.081.344 I llm_load_print_meta: n_expert_used    = 0
0.00.081.345 I llm_load_print_meta: causal attn      = 1
0.00.081.345 I llm_load_print_meta: pooling type     = 0
0.00.081.345 I llm_load_print_meta: rope type        = 2
0.00.081.346 I llm_load_print_meta: rope scaling     = linear
0.00.081.347 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.347 I llm_load_print_meta: freq_scale_train = 1
0.00.081.348 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.348 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.348 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.348 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.349 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.349 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.349 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.349 I llm_load_print_meta: model type       = 1.4B
0.00.081.350 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.081.351 I llm_load_print_meta: model params     = 1.41 B
0.00.081.352 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.081.352 I llm_load_print_meta: general.name     = 1.4B
0.00.081.352 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.353 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.353 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.353 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.354 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.355 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.355 I llm_load_print_meta: max token length = 1024
0.00.132.955 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.135.861 I llama_new_context_with_model: n_seq_max     = 1
0.00.135.867 I llama_new_context_with_model: n_ctx         = 2048
0.00.135.867 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.135.867 I llama_new_context_with_model: n_batch       = 2048
0.00.135.868 I llama_new_context_with_model: n_ubatch      = 512
0.00.135.868 I llama_new_context_with_model: flash_attn    = 0
0.00.135.871 I llama_new_context_with_model: freq_base     = 10000.0
0.00.135.872 I llama_new_context_with_model: freq_scale    = 1
0.00.217.139 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.217.158 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.217.187 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.219.456 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.219.463 I llama_new_context_with_model: graph nodes  = 967
0.00.219.463 I llama_new_context_with_model: graph splits = 1
0.00.219.466 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.296.326 I main: llama threadpool init, n_threads = 4
0.00.296.343 I 
0.00.296.414 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.296.418 I 
0.00.296.534 I sampler seed: 1234
0.00.296.549 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.296.561 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.296.565 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.296.566 I 
I believe the meaning of life is that which you make of it. And I believe that if you want to be happy, you have to live with those things that you can't change. I want to live with the things I can't change because they are who they are. I don't want to change them because I don't want to be unhappy

0.02.311.564 I llama_perf_sampler_print:    sampling time =       2.46 ms /    71 runs   (    0.03 ms per token, 28850.06 tokens per second)
0.02.311.567 I llama_perf_context_print:        load time =     295.52 ms
0.02.311.568 I llama_perf_context_print: prompt eval time =     107.09 ms /     7 tokens (   15.30 ms per token,    65.37 tokens per second)
0.02.311.570 I llama_perf_context_print:        eval time =    1898.62 ms /    63 runs   (   30.14 ms per token,    33.18 tokens per second)
0.02.311.570 I llama_perf_context_print:       total time =    2015.25 ms /    70 tokens

real	0m2.360s
user	0m8.377s
sys	0m0.188s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.613 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.746 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.762 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.768 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.769 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.770 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.771 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.772 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.776 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.777 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.777 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.778 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.778 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.780 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.781 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.786 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.787 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.788 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.506 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.870 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.187 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.192 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.193 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.193 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.194 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.195 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.198 I llama_model_loader: - type  f32:  194 tensors
0.00.022.198 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.208 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.209 I llama_model_loader: - type q6_K:   13 tensors
0.00.067.547 I llm_load_vocab: special tokens cache size = 25
0.00.081.350 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.364 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.365 I llm_load_print_meta: arch             = gptneox
0.00.081.365 I llm_load_print_meta: vocab type       = BPE
0.00.081.366 I llm_load_print_meta: n_vocab          = 50304
0.00.081.366 I llm_load_print_meta: n_merges         = 50009
0.00.081.367 I llm_load_print_meta: vocab_only       = 0
0.00.081.367 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.367 I llm_load_print_meta: n_embd           = 2048
0.00.081.368 I llm_load_print_meta: n_layer          = 24
0.00.081.378 I llm_load_print_meta: n_head           = 16
0.00.081.379 I llm_load_print_meta: n_head_kv        = 16
0.00.081.380 I llm_load_print_meta: n_rot            = 32
0.00.081.380 I llm_load_print_meta: n_swa            = 0
0.00.081.380 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.381 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.382 I llm_load_print_meta: n_gqa            = 1
0.00.081.383 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.384 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.385 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.385 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.386 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.386 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.386 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.387 I llm_load_print_meta: n_ff             = 8192
0.00.081.388 I llm_load_print_meta: n_expert         = 0
0.00.081.388 I llm_load_print_meta: n_expert_used    = 0
0.00.081.388 I llm_load_print_meta: causal attn      = 1
0.00.081.389 I llm_load_print_meta: pooling type     = 0
0.00.081.389 I llm_load_print_meta: rope type        = 2
0.00.081.389 I llm_load_print_meta: rope scaling     = linear
0.00.081.391 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.391 I llm_load_print_meta: freq_scale_train = 1
0.00.081.391 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.392 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.392 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.392 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.393 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.393 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.393 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.394 I llm_load_print_meta: model type       = 1.4B
0.00.081.394 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.081.395 I llm_load_print_meta: model params     = 1.41 B
0.00.081.396 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.081.397 I llm_load_print_meta: general.name     = 1.4B
0.00.081.397 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.397 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.398 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.398 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.398 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.399 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.399 I llm_load_print_meta: max token length = 1024
0.00.132.195 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.134.755 I llama_new_context_with_model: n_seq_max     = 1
0.00.134.760 I llama_new_context_with_model: n_ctx         = 128
0.00.134.761 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.134.761 I llama_new_context_with_model: n_batch       = 128
0.00.134.761 I llama_new_context_with_model: n_ubatch      = 128
0.00.134.762 I llama_new_context_with_model: flash_attn    = 0
0.00.134.764 I llama_new_context_with_model: freq_base     = 10000.0
0.00.134.764 I llama_new_context_with_model: freq_scale    = 1
0.00.134.765 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.139.865 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.139.875 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.139.893 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.142.066 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.142.072 I llama_new_context_with_model: graph nodes  = 967
0.00.142.072 I llama_new_context_with_model: graph splits = 1
0.00.142.074 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.188.961 I 
0.00.189.047 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.189.057 I perplexity: tokenizing the input ..
0.00.199.149 I perplexity: tokenization took 10.087 ms
0.00.199.169 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.895.152 I perplexity: 1.70 seconds per pass - ETA 0.02 minutes
[1]10.5531,
0.01.903.417 I Final estimate: PPL = 10.5531 +/- 3.37082

0.01.903.448 I llama_perf_context_print:        load time =     188.32 ms
0.01.903.450 I llama_perf_context_print: prompt eval time =    1694.50 ms /   128 tokens (   13.24 ms per token,    75.54 tokens per second)
0.01.903.451 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.903.453 I llama_perf_context_print:       total time =    1714.49 ms /   129 tokens

real	0m1.947s
user	0m7.110s
sys	0m0.104s
```
- q5_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.568 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.763 I main: load the model and apply lora adapter, if any
0.00.009.716 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.730 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.735 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.736 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.737 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.738 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.739 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.742 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.743 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.743 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.744 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.744 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.745 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.745 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.748 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.749 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.749 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.412 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.732 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.030 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.035 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.035 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.036 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.036 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.037 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.040 I llama_model_loader: - type  f32:  194 tensors
0.00.022.040 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.041 I llama_model_loader: - type q6_K:   37 tensors
0.00.067.782 I llm_load_vocab: special tokens cache size = 25
0.00.081.598 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.610 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.610 I llm_load_print_meta: arch             = gptneox
0.00.081.611 I llm_load_print_meta: vocab type       = BPE
0.00.081.611 I llm_load_print_meta: n_vocab          = 50304
0.00.081.611 I llm_load_print_meta: n_merges         = 50009
0.00.081.612 I llm_load_print_meta: vocab_only       = 0
0.00.081.612 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.613 I llm_load_print_meta: n_embd           = 2048
0.00.081.613 I llm_load_print_meta: n_layer          = 24
0.00.081.623 I llm_load_print_meta: n_head           = 16
0.00.081.624 I llm_load_print_meta: n_head_kv        = 16
0.00.081.625 I llm_load_print_meta: n_rot            = 32
0.00.081.625 I llm_load_print_meta: n_swa            = 0
0.00.081.625 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.625 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.626 I llm_load_print_meta: n_gqa            = 1
0.00.081.627 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.628 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.630 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.630 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.631 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.631 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.631 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.632 I llm_load_print_meta: n_ff             = 8192
0.00.081.633 I llm_load_print_meta: n_expert         = 0
0.00.081.633 I llm_load_print_meta: n_expert_used    = 0
0.00.081.633 I llm_load_print_meta: causal attn      = 1
0.00.081.633 I llm_load_print_meta: pooling type     = 0
0.00.081.634 I llm_load_print_meta: rope type        = 2
0.00.081.634 I llm_load_print_meta: rope scaling     = linear
0.00.081.636 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.636 I llm_load_print_meta: freq_scale_train = 1
0.00.081.637 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.637 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.637 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.637 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.638 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.638 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.638 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.639 I llm_load_print_meta: model type       = 1.4B
0.00.081.639 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.081.640 I llm_load_print_meta: model params     = 1.41 B
0.00.081.641 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.081.641 I llm_load_print_meta: general.name     = 1.4B
0.00.081.642 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.642 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.642 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.643 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.643 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.644 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.644 I llm_load_print_meta: max token length = 1024
0.00.139.416 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.141.915 I llama_new_context_with_model: n_seq_max     = 1
0.00.141.920 I llama_new_context_with_model: n_ctx         = 2048
0.00.141.920 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.141.921 I llama_new_context_with_model: n_batch       = 2048
0.00.141.921 I llama_new_context_with_model: n_ubatch      = 512
0.00.141.921 I llama_new_context_with_model: flash_attn    = 0
0.00.141.923 I llama_new_context_with_model: freq_base     = 10000.0
0.00.141.924 I llama_new_context_with_model: freq_scale    = 1
0.00.219.221 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.219.237 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.219.264 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.221.422 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.221.428 I llama_new_context_with_model: graph nodes  = 967
0.00.221.428 I llama_new_context_with_model: graph splits = 1
0.00.221.432 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.311.540 I main: llama threadpool init, n_threads = 4
0.00.311.558 I 
0.00.311.627 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.311.630 I 
0.00.311.731 I sampler seed: 1234
0.00.311.741 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.311.744 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.311.745 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.311.745 I 
I believe the meaning of life is that one day, if one is fortunate enough to be born, one will die.

I believe the meaning of life is that if one is fortunate enough to be born, one will die.

But I am not so fortunate, I am dying, my parents, my friends, my relatives, all of

0.02.586.652 I llama_perf_sampler_print:    sampling time =       2.43 ms /    71 runs   (    0.03 ms per token, 29182.08 tokens per second)
0.02.586.656 I llama_perf_context_print:        load time =     310.76 ms
0.02.586.657 I llama_perf_context_print: prompt eval time =     124.88 ms /     7 tokens (   17.84 ms per token,    56.05 tokens per second)
0.02.586.659 I llama_perf_context_print:        eval time =    2140.49 ms /    63 runs   (   33.98 ms per token,    29.43 tokens per second)
0.02.586.660 I llama_perf_context_print:       total time =    2275.12 ms /    70 tokens

real	0m2.641s
user	0m9.501s
sys	0m0.164s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.601 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.744 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.757 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.764 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.765 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.766 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.766 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.767 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.771 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.771 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.772 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.772 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.773 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.774 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.774 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.777 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.778 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.778 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.436 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.815 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.302 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.307 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.307 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.307 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.308 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.309 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.310 I llama_model_loader: - type  f32:  194 tensors
0.00.022.311 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.311 I llama_model_loader: - type q6_K:   37 tensors
0.00.066.518 I llm_load_vocab: special tokens cache size = 25
0.00.080.301 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.311 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.312 I llm_load_print_meta: arch             = gptneox
0.00.080.313 I llm_load_print_meta: vocab type       = BPE
0.00.080.313 I llm_load_print_meta: n_vocab          = 50304
0.00.080.314 I llm_load_print_meta: n_merges         = 50009
0.00.080.314 I llm_load_print_meta: vocab_only       = 0
0.00.080.315 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.315 I llm_load_print_meta: n_embd           = 2048
0.00.080.315 I llm_load_print_meta: n_layer          = 24
0.00.080.324 I llm_load_print_meta: n_head           = 16
0.00.080.325 I llm_load_print_meta: n_head_kv        = 16
0.00.080.325 I llm_load_print_meta: n_rot            = 32
0.00.080.326 I llm_load_print_meta: n_swa            = 0
0.00.080.326 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.326 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.327 I llm_load_print_meta: n_gqa            = 1
0.00.080.328 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.329 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.331 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.331 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.332 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.332 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.332 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.333 I llm_load_print_meta: n_ff             = 8192
0.00.080.334 I llm_load_print_meta: n_expert         = 0
0.00.080.334 I llm_load_print_meta: n_expert_used    = 0
0.00.080.334 I llm_load_print_meta: causal attn      = 1
0.00.080.335 I llm_load_print_meta: pooling type     = 0
0.00.080.335 I llm_load_print_meta: rope type        = 2
0.00.080.335 I llm_load_print_meta: rope scaling     = linear
0.00.080.336 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.337 I llm_load_print_meta: freq_scale_train = 1
0.00.080.337 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.338 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.338 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.338 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.339 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.339 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.339 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.339 I llm_load_print_meta: model type       = 1.4B
0.00.080.340 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.080.341 I llm_load_print_meta: model params     = 1.41 B
0.00.080.342 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.080.342 I llm_load_print_meta: general.name     = 1.4B
0.00.080.343 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.343 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.343 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.344 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.344 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.344 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.345 I llm_load_print_meta: max token length = 1024
0.00.138.091 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.140.936 I llama_new_context_with_model: n_seq_max     = 1
0.00.140.940 I llama_new_context_with_model: n_ctx         = 128
0.00.140.941 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.140.941 I llama_new_context_with_model: n_batch       = 128
0.00.140.941 I llama_new_context_with_model: n_ubatch      = 128
0.00.140.942 I llama_new_context_with_model: flash_attn    = 0
0.00.140.944 I llama_new_context_with_model: freq_base     = 10000.0
0.00.140.945 I llama_new_context_with_model: freq_scale    = 1
0.00.140.945 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.146.190 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.146.201 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.146.218 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.148.822 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.148.828 I llama_new_context_with_model: graph nodes  = 967
0.00.148.828 I llama_new_context_with_model: graph splits = 1
0.00.148.830 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.203.157 I 
0.00.203.235 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.203.244 I perplexity: tokenizing the input ..
0.00.213.349 I perplexity: tokenization took 10.101 ms
0.00.213.367 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.226.152 I perplexity: 2.01 seconds per pass - ETA 0.03 minutes
[1]10.5345,
0.02.234.382 I Final estimate: PPL = 10.5345 +/- 3.32630

0.02.234.416 I llama_perf_context_print:        load time =     202.53 ms
0.02.234.418 I llama_perf_context_print: prompt eval time =    2011.49 ms /   128 tokens (   15.71 ms per token,    63.63 tokens per second)
0.02.234.419 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.234.420 I llama_perf_context_print:       total time =    2031.26 ms /   129 tokens

real	0m2.282s
user	0m8.412s
sys	0m0.108s
```
- q6_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.540 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.734 I main: load the model and apply lora adapter, if any
0.00.009.467 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.479 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.485 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.486 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.487 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.487 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.488 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.491 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.491 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.492 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.492 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.493 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.493 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.494 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.498 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.499 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.499 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.097 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.449 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.711 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.716 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.717 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.717 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.718 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.718 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.021.720 I llama_model_loader: - type  f32:  194 tensors
0.00.021.721 I llama_model_loader: - type q6_K:   98 tensors
0.00.065.493 I llm_load_vocab: special tokens cache size = 25
0.00.079.269 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.079.280 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.079.281 I llm_load_print_meta: arch             = gptneox
0.00.079.282 I llm_load_print_meta: vocab type       = BPE
0.00.079.282 I llm_load_print_meta: n_vocab          = 50304
0.00.079.282 I llm_load_print_meta: n_merges         = 50009
0.00.079.283 I llm_load_print_meta: vocab_only       = 0
0.00.079.283 I llm_load_print_meta: n_ctx_train      = 2048
0.00.079.283 I llm_load_print_meta: n_embd           = 2048
0.00.079.283 I llm_load_print_meta: n_layer          = 24
0.00.079.291 I llm_load_print_meta: n_head           = 16
0.00.079.292 I llm_load_print_meta: n_head_kv        = 16
0.00.079.292 I llm_load_print_meta: n_rot            = 32
0.00.079.293 I llm_load_print_meta: n_swa            = 0
0.00.079.293 I llm_load_print_meta: n_embd_head_k    = 128
0.00.079.293 I llm_load_print_meta: n_embd_head_v    = 128
0.00.079.294 I llm_load_print_meta: n_gqa            = 1
0.00.079.295 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.079.296 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.079.298 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.079.299 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.079.299 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.079.300 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.079.301 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.079.302 I llm_load_print_meta: n_ff             = 8192
0.00.079.302 I llm_load_print_meta: n_expert         = 0
0.00.079.303 I llm_load_print_meta: n_expert_used    = 0
0.00.079.303 I llm_load_print_meta: causal attn      = 1
0.00.079.303 I llm_load_print_meta: pooling type     = 0
0.00.079.303 I llm_load_print_meta: rope type        = 2
0.00.079.304 I llm_load_print_meta: rope scaling     = linear
0.00.079.305 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.079.305 I llm_load_print_meta: freq_scale_train = 1
0.00.079.306 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.079.306 I llm_load_print_meta: rope_finetuned   = unknown
0.00.079.307 I llm_load_print_meta: ssm_d_conv       = 0
0.00.079.307 I llm_load_print_meta: ssm_d_inner      = 0
0.00.079.307 I llm_load_print_meta: ssm_d_state      = 0
0.00.079.308 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.079.308 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.079.308 I llm_load_print_meta: model type       = 1.4B
0.00.079.309 I llm_load_print_meta: model ftype      = Q6_K
0.00.079.310 I llm_load_print_meta: model params     = 1.41 B
0.00.079.311 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.079.311 I llm_load_print_meta: general.name     = 1.4B
0.00.079.311 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.079.311 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.079.312 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.079.312 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.079.313 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.079.313 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.079.314 I llm_load_print_meta: max token length = 1024
0.00.142.299 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.145.096 I llama_new_context_with_model: n_seq_max     = 1
0.00.145.102 I llama_new_context_with_model: n_ctx         = 2048
0.00.145.102 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.145.102 I llama_new_context_with_model: n_batch       = 2048
0.00.145.103 I llama_new_context_with_model: n_ubatch      = 512
0.00.145.103 I llama_new_context_with_model: flash_attn    = 0
0.00.145.105 I llama_new_context_with_model: freq_base     = 10000.0
0.00.145.106 I llama_new_context_with_model: freq_scale    = 1
0.00.225.221 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.225.236 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.225.265 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.227.440 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.227.447 I llama_new_context_with_model: graph nodes  = 967
0.00.227.448 I llama_new_context_with_model: graph splits = 1
0.00.227.451 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.312.839 I main: llama threadpool init, n_threads = 4
0.00.312.855 I 
0.00.312.933 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.312.937 I 
0.00.313.054 I sampler seed: 1234
0.00.313.065 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.313.069 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.313.070 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.313.070 I 
I believe the meaning of life is to die. It’s not a very nice thing to say, but it’s true.

I also believe it’s not a very nice thing to say to a dead person. I don’t think the dead person could ever fully comprehend why you said it, and I’m not sure if

0.02.673.685 I llama_perf_sampler_print:    sampling time =       2.49 ms /    71 runs   (    0.04 ms per token, 28502.61 tokens per second)
0.02.673.687 I llama_perf_context_print:        load time =     312.09 ms
0.02.673.689 I llama_perf_context_print: prompt eval time =     116.41 ms /     7 tokens (   16.63 ms per token,    60.13 tokens per second)
0.02.673.691 I llama_perf_context_print:        eval time =    2234.79 ms /    63 runs   (   35.47 ms per token,    28.19 tokens per second)
0.02.673.692 I llama_perf_context_print:       total time =    2360.85 ms /    70 tokens

real	0m2.732s
user	0m9.820s
sys	0m0.181s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.595 I build: 4202 (31328141) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.570 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.586 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.596 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.596 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.597 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.598 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.599 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.602 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.603 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.603 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.604 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.604 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.605 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.606 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.609 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.610 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.610 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.328 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.670 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.949 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.954 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.955 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.955 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.956 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.957 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.021.959 I llama_model_loader: - type  f32:  194 tensors
0.00.021.959 I llama_model_loader: - type q6_K:   98 tensors
0.00.067.567 I llm_load_vocab: special tokens cache size = 25
0.00.081.374 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.385 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.386 I llm_load_print_meta: arch             = gptneox
0.00.081.387 I llm_load_print_meta: vocab type       = BPE
0.00.081.387 I llm_load_print_meta: n_vocab          = 50304
0.00.081.388 I llm_load_print_meta: n_merges         = 50009
0.00.081.388 I llm_load_print_meta: vocab_only       = 0
0.00.081.389 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.389 I llm_load_print_meta: n_embd           = 2048
0.00.081.389 I llm_load_print_meta: n_layer          = 24
0.00.081.398 I llm_load_print_meta: n_head           = 16
0.00.081.399 I llm_load_print_meta: n_head_kv        = 16
0.00.081.400 I llm_load_print_meta: n_rot            = 32
0.00.081.400 I llm_load_print_meta: n_swa            = 0
0.00.081.400 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.401 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.402 I llm_load_print_meta: n_gqa            = 1
0.00.081.403 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.404 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.405 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.405 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.405 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.406 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.406 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.407 I llm_load_print_meta: n_ff             = 8192
0.00.081.407 I llm_load_print_meta: n_expert         = 0
0.00.081.408 I llm_load_print_meta: n_expert_used    = 0
0.00.081.408 I llm_load_print_meta: causal attn      = 1
0.00.081.408 I llm_load_print_meta: pooling type     = 0
0.00.081.409 I llm_load_print_meta: rope type        = 2
0.00.081.409 I llm_load_print_meta: rope scaling     = linear
0.00.081.410 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.411 I llm_load_print_meta: freq_scale_train = 1
0.00.081.411 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.411 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.412 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.412 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.412 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.412 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.413 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.413 I llm_load_print_meta: model type       = 1.4B
0.00.081.414 I llm_load_print_meta: model ftype      = Q6_K
0.00.081.415 I llm_load_print_meta: model params     = 1.41 B
0.00.081.416 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.081.416 I llm_load_print_meta: general.name     = 1.4B
0.00.081.417 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.417 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.417 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.418 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.418 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.418 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.419 I llm_load_print_meta: max token length = 1024
0.00.145.096 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.147.596 I llama_new_context_with_model: n_seq_max     = 1
0.00.147.602 I llama_new_context_with_model: n_ctx         = 128
0.00.147.602 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.147.602 I llama_new_context_with_model: n_batch       = 128
0.00.147.603 I llama_new_context_with_model: n_ubatch      = 128
0.00.147.603 I llama_new_context_with_model: flash_attn    = 0
0.00.147.605 I llama_new_context_with_model: freq_base     = 10000.0
0.00.147.606 I llama_new_context_with_model: freq_scale    = 1
0.00.147.606 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.152.714 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.152.725 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.152.743 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.155.279 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.155.286 I llama_new_context_with_model: graph nodes  = 967
0.00.155.286 I llama_new_context_with_model: graph splits = 1
0.00.155.290 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.209.691 I 
0.00.209.786 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.209.797 I perplexity: tokenizing the input ..
0.00.219.893 I perplexity: tokenization took 10.092 ms
0.00.219.913 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.041.476 I perplexity: 1.82 seconds per pass - ETA 0.02 minutes
[1]10.5551,
0.02.049.695 I Final estimate: PPL = 10.5551 +/- 3.36749

0.02.049.727 I llama_perf_context_print:        load time =     209.07 ms
0.02.049.729 I llama_perf_context_print: prompt eval time =    1820.20 ms /   128 tokens (   14.22 ms per token,    70.32 tokens per second)
0.02.049.731 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.049.732 I llama_perf_context_print:       total time =    1840.04 ms /   129 tokens

real	0m2.099s
user	0m7.615s
sys	0m0.132s
```
- save-load-state: 
```
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
0.00.205.801 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


second run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


single seq run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O

real	0m2.399s
user	0m7.498s
sys	0m0.327s
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -fa
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (31328141)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
0.00.206.566 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


second run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


single seq run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the

real	0m2.305s
user	0m7.137s
sys	0m0.305s
```
### ctest_with_model_debug

Runs ctest with model files in debug mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-debug
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.01 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.54 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.55 sec*proc (2 tests)

Total Test time (real) =   0.55 sec
0.35user 0.26system 0:00.61elapsed 100%CPU (0avgtext+0avgdata 2897020maxresident)k
0inputs+32outputs (0major+54656minor)pagefaults 0swaps
```
### ctest_with_model_release

Runs ctest with model files in release mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-release
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.00 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.34 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.34 sec*proc (2 tests)

Total Test time (real) =   0.34 sec
0.16user 0.24system 0:00.41elapsed 100%CPU (0avgtext+0avgdata 2893288maxresident)k
0inputs+32outputs (0major+54504minor)pagefaults 0swaps
```
