+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.543 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.594 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.605 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.611 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.612 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.617 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.618 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.619 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.619 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.620 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.620 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.625 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.626 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.626 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.627 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.627 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.183 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.175 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.068 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.075 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.076 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.077 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.077 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.078 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.078 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.081 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.081 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.082 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.082 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.135.083 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.087 I llama_model_loader: - type  f32:   37 tensors
0.00.135.090 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.079 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.045 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.965 I llm_load_vocab: special tokens cache size = 5
0.00.237.775 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.789 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.789 I llm_load_print_meta: arch             = gemma
0.00.237.789 I llm_load_print_meta: vocab type       = SPM
0.00.237.790 I llm_load_print_meta: n_vocab          = 256000
0.00.237.791 I llm_load_print_meta: n_merges         = 0
0.00.237.791 I llm_load_print_meta: vocab_only       = 0
0.00.237.791 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.792 I llm_load_print_meta: n_embd           = 2048
0.00.237.792 I llm_load_print_meta: n_layer          = 18
0.00.237.804 I llm_load_print_meta: n_head           = 8
0.00.237.805 I llm_load_print_meta: n_head_kv        = 1
0.00.237.805 I llm_load_print_meta: n_rot            = 256
0.00.237.805 I llm_load_print_meta: n_swa            = 0
0.00.237.805 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.806 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.807 I llm_load_print_meta: n_gqa            = 8
0.00.237.808 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.809 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.809 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.811 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.811 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.811 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.812 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.813 I llm_load_print_meta: n_ff             = 16384
0.00.237.813 I llm_load_print_meta: n_expert         = 0
0.00.237.813 I llm_load_print_meta: n_expert_used    = 0
0.00.237.813 I llm_load_print_meta: causal attn      = 1
0.00.237.814 I llm_load_print_meta: pooling type     = 0
0.00.237.814 I llm_load_print_meta: rope type        = 2
0.00.237.814 I llm_load_print_meta: rope scaling     = linear
0.00.237.817 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.817 I llm_load_print_meta: freq_scale_train = 1
0.00.237.818 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.818 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.818 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.818 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.819 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.819 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.820 I llm_load_print_meta: model type       = 2B
0.00.237.820 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.821 I llm_load_print_meta: model params     = 2.51 B
0.00.237.822 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.822 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.822 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.823 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.823 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.823 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.824 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.824 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.824 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.825 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.825 I llm_load_print_meta: max token length = 93
0.00.237.854 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.774 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.783 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.784 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.785 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.785 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.786 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.344.098 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.105 I llama_new_context_with_model: n_batch    = 2048
0.00.344.105 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.106 I llama_new_context_with_model: flash_attn = 0
0.00.344.109 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.110 I llama_new_context_with_model: freq_scale = 1
0.00.373.998 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.013 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.105 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.991 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.374.998 I llama_new_context_with_model: graph nodes  = 601
0.00.374.999 I llama_new_context_with_model: graph splits = 1
0.00.375.000 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.347 I main: llama threadpool init, n_threads = 4
0.00.467.360 I 
0.00.467.434 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.437 I 
0.00.467.473 I sampler seed: 959863491
0.00.467.482 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.490 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.467.491 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.491 I 
 increably.

I'm not sure what you're talking about. Can you please provide more context or explain what you mean? [end of text]


0.02.555.713 I llama_perf_sampler_print:    sampling time =       5.21 ms /    30 runs   (    0.17 ms per token,  5754.84 tokens per second)
0.02.555.715 I llama_perf_context_print:        load time =     465.44 ms
0.02.555.716 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.555.718 I llama_perf_context_print:        eval time =    2070.18 ms /    29 runs   (   71.39 ms per token,    14.01 tokens per second)
0.02.555.718 I llama_perf_context_print:       total time =    2088.37 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.559 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.888 I main: load the model and apply lora adapter, if any
0.00.022.103 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.115 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.121 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.122 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.126 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.127 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.128 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.128 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.129 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.129 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.133 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.134 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.135 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.136 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.941 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.311 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.271 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.279 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.280 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.280 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.281 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.281 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.282 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.285 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.285 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.286 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.287 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.136.288 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.292 I llama_model_loader: - type  f32:   37 tensors
0.00.136.295 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.364 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.040 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.944 I llm_load_vocab: special tokens cache size = 5
0.00.231.965 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.988 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.988 I llm_load_print_meta: arch             = gemma
0.00.231.989 I llm_load_print_meta: vocab type       = SPM
0.00.231.990 I llm_load_print_meta: n_vocab          = 256000
0.00.231.990 I llm_load_print_meta: n_merges         = 0
0.00.231.990 I llm_load_print_meta: vocab_only       = 0
0.00.231.991 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.991 I llm_load_print_meta: n_embd           = 2048
0.00.231.991 I llm_load_print_meta: n_layer          = 18
0.00.232.004 I llm_load_print_meta: n_head           = 8
0.00.232.005 I llm_load_print_meta: n_head_kv        = 1
0.00.232.005 I llm_load_print_meta: n_rot            = 256
0.00.232.006 I llm_load_print_meta: n_swa            = 0
0.00.232.006 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.006 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.007 I llm_load_print_meta: n_gqa            = 8
0.00.232.008 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.009 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.010 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.011 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.011 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.011 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.012 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.012 I llm_load_print_meta: n_ff             = 16384
0.00.232.013 I llm_load_print_meta: n_expert         = 0
0.00.232.013 I llm_load_print_meta: n_expert_used    = 0
0.00.232.013 I llm_load_print_meta: causal attn      = 1
0.00.232.014 I llm_load_print_meta: pooling type     = 0
0.00.232.014 I llm_load_print_meta: rope type        = 2
0.00.232.014 I llm_load_print_meta: rope scaling     = linear
0.00.232.015 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.016 I llm_load_print_meta: freq_scale_train = 1
0.00.232.016 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.017 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.017 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.017 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.018 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.018 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.018 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.019 I llm_load_print_meta: model type       = 2B
0.00.232.019 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.020 I llm_load_print_meta: model params     = 2.51 B
0.00.232.021 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.021 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.022 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.022 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.022 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.023 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.023 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.024 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.024 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.024 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.025 I llm_load_print_meta: max token length = 93
0.00.232.052 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.161 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.330.229 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.235 I llama_new_context_with_model: n_batch    = 2048
0.00.330.235 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.236 I llama_new_context_with_model: flash_attn = 0
0.00.330.239 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.241 I llama_new_context_with_model: freq_scale = 1
0.00.361.579 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.597 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.694 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.612 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.619 I llama_new_context_with_model: graph nodes  = 601
0.00.362.619 I llama_new_context_with_model: graph splits = 1
0.00.362.621 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.175 I main: llama threadpool init, n_threads = 4
0.00.451.189 I 
0.00.451.265 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.270 I 
0.00.451.321 I sampler seed: 950420910
0.00.451.331 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.335 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.337 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.337 I 
 increasements of the United Nations.

The UN has been instrumental in promoting human rights, promoting peace and security, and promoting sustainable development. However, the UN

0.02.664.287 I llama_perf_sampler_print:    sampling time =       5.45 ms /    33 runs   (    0.17 ms per token,  6050.61 tokens per second)
0.02.664.290 I llama_perf_context_print:        load time =     449.27 ms
0.02.664.291 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.664.292 I llama_perf_context_print:        eval time =    2194.38 ms /    32 runs   (   68.57 ms per token,    14.58 tokens per second)
0.02.664.293 I llama_perf_context_print:       total time =    2213.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.568 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.905 I main: load the model and apply lora adapter, if any
0.00.022.189 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.238 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.249 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.254 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.258 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.262 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.262 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.263 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.264 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.264 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.265 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.270 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.270 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.271 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.271 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.272 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.163 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.228 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.161 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.167 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.168 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.169 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.169 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.170 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.171 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.174 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.175 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.176 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.177 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.180 I llama_model_loader: - type  f32:   37 tensors
0.00.134.183 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.282 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.564 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.207.333 I llm_load_vocab: special tokens cache size = 5
0.00.228.094 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.108 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.109 I llm_load_print_meta: arch             = gemma
0.00.228.109 I llm_load_print_meta: vocab type       = SPM
0.00.228.110 I llm_load_print_meta: n_vocab          = 256000
0.00.228.111 I llm_load_print_meta: n_merges         = 0
0.00.228.111 I llm_load_print_meta: vocab_only       = 0
0.00.228.111 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.112 I llm_load_print_meta: n_embd           = 2048
0.00.228.112 I llm_load_print_meta: n_layer          = 18
0.00.228.124 I llm_load_print_meta: n_head           = 8
0.00.228.125 I llm_load_print_meta: n_head_kv        = 1
0.00.228.126 I llm_load_print_meta: n_rot            = 256
0.00.228.126 I llm_load_print_meta: n_swa            = 0
0.00.228.126 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.127 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.128 I llm_load_print_meta: n_gqa            = 8
0.00.228.129 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.130 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.131 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.132 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.133 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.133 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.133 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.134 I llm_load_print_meta: n_ff             = 16384
0.00.228.134 I llm_load_print_meta: n_expert         = 0
0.00.228.135 I llm_load_print_meta: n_expert_used    = 0
0.00.228.135 I llm_load_print_meta: causal attn      = 1
0.00.228.135 I llm_load_print_meta: pooling type     = 0
0.00.228.136 I llm_load_print_meta: rope type        = 2
0.00.228.136 I llm_load_print_meta: rope scaling     = linear
0.00.228.137 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.138 I llm_load_print_meta: freq_scale_train = 1
0.00.228.138 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.139 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.139 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.139 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.139 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.140 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.140 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.140 I llm_load_print_meta: model type       = 2B
0.00.228.141 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.141 I llm_load_print_meta: model params     = 2.51 B
0.00.228.142 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.143 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.143 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.143 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.144 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.144 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.144 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.145 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.145 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.146 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.146 I llm_load_print_meta: max token length = 93
0.00.228.173 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.303.550 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.303.558 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.303.558 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.303.559 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.303.560 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.303.560 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.308.634 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.641 I llama_new_context_with_model: n_batch    = 2048
0.00.308.641 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.642 I llama_new_context_with_model: flash_attn = 0
0.00.308.644 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.645 I llama_new_context_with_model: freq_scale = 1
0.00.339.607 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.339.626 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.339.739 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.648 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.340.656 I llama_new_context_with_model: graph nodes  = 601
0.00.340.657 I llama_new_context_with_model: graph splits = 1
0.00.340.658 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.450 I main: llama threadpool init, n_threads = 4
0.00.435.464 I 
0.00.435.537 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.541 I 
0.00.435.578 I sampler seed: 1733425965
0.00.435.587 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.590 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.590 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.590 I 
 increamental, 2002.

**Summary**

The Supreme Court of the United States held that the First Amendment protects a government-sponsored Christmas

0.02.775.380 I llama_perf_sampler_print:    sampling time =       5.45 ms /    33 runs   (    0.17 ms per token,  6050.61 tokens per second)
0.02.775.383 I llama_perf_context_print:        load time =     433.53 ms
0.02.775.384 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.775.385 I llama_perf_context_print:        eval time =    2320.13 ms /    32 runs   (   72.50 ms per token,    13.79 tokens per second)
0.02.775.386 I llama_perf_context_print:       total time =    2339.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.563 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.805 I main: llama backend init
0.00.001.981 I main: load the model and apply lora adapter, if any
0.00.022.229 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.277 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.284 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.289 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.294 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.297 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.298 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.298 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.299 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.299 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.304 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.304 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.305 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.306 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.307 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.948 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.902 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.907 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.915 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.916 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.916 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.917 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.918 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.918 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.921 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.922 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.924 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.924 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.926 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.929 I llama_model_loader: - type  f32:   37 tensors
0.00.134.933 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.948 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.092 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.233.918 I llm_load_vocab: special tokens cache size = 5
0.00.255.559 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.574 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.575 I llm_load_print_meta: arch             = gemma
0.00.255.576 I llm_load_print_meta: vocab type       = SPM
0.00.255.577 I llm_load_print_meta: n_vocab          = 256000
0.00.255.577 I llm_load_print_meta: n_merges         = 0
0.00.255.578 I llm_load_print_meta: vocab_only       = 0
0.00.255.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.578 I llm_load_print_meta: n_embd           = 2048
0.00.255.579 I llm_load_print_meta: n_layer          = 18
0.00.255.591 I llm_load_print_meta: n_head           = 8
0.00.255.592 I llm_load_print_meta: n_head_kv        = 1
0.00.255.593 I llm_load_print_meta: n_rot            = 256
0.00.255.593 I llm_load_print_meta: n_swa            = 0
0.00.255.593 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.594 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.595 I llm_load_print_meta: n_gqa            = 8
0.00.255.596 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.597 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.597 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.599 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.599 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.599 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.600 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.601 I llm_load_print_meta: n_ff             = 16384
0.00.255.601 I llm_load_print_meta: n_expert         = 0
0.00.255.601 I llm_load_print_meta: n_expert_used    = 0
0.00.255.601 I llm_load_print_meta: causal attn      = 1
0.00.255.602 I llm_load_print_meta: pooling type     = 0
0.00.255.602 I llm_load_print_meta: rope type        = 2
0.00.255.602 I llm_load_print_meta: rope scaling     = linear
0.00.255.604 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.605 I llm_load_print_meta: freq_scale_train = 1
0.00.255.605 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.605 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.606 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.606 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.606 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.606 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.607 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.607 I llm_load_print_meta: model type       = 2B
0.00.255.607 I llm_load_print_meta: model ftype      = Q8_0
0.00.255.608 I llm_load_print_meta: model params     = 2.51 B
0.00.255.609 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.255.609 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.610 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.610 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.611 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.611 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.611 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.612 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.612 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.613 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.613 I llm_load_print_meta: max token length = 93
0.00.255.654 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.947 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.327.956 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.333.036 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.043 I llama_new_context_with_model: n_batch    = 2048
0.00.333.043 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.044 I llama_new_context_with_model: flash_attn = 0
0.00.333.047 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.048 I llama_new_context_with_model: freq_scale = 1
0.00.362.951 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.362.968 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.065 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.967 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.363.976 I llama_new_context_with_model: graph nodes  = 601
0.00.363.976 I llama_new_context_with_model: graph splits = 1
0.00.363.979 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.070 I main: llama threadpool init, n_threads = 4
0.00.460.085 I 
0.00.460.162 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.169 I 
0.00.460.206 I sampler seed: 1511067040
0.00.460.213 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.215 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.216 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.216 I 
 seconally and succinctly.

**Assistant**

I am unable to provide medical advice or make medical recommendations. For any health concerns, please consult a qualified medical

0.02.954.819 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6023.00 tokens per second)
0.02.954.822 I llama_perf_context_print:        load time =     458.07 ms
0.02.954.823 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.954.825 I llama_perf_context_print:        eval time =    2474.61 ms /    32 runs   (   77.33 ms per token,    12.93 tokens per second)
0.02.954.826 I llama_perf_context_print:       total time =    2494.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.761s
user	0m39.400s
sys	0m9.579s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3862 (0cbdf133)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32029.58 ms
main:    total time = 32029.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.848 I main: load the model and apply lora adapter, if any
0.00.022.099 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.147 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.159 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.164 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.166 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.170 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.172 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.172 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.173 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.173 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.174 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.177 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.178 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.178 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.179 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.179 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.037 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.233 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.127 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.133 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.134 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.135 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.136 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.137 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.138 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.142 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.143 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.144 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.144 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.145 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.149 I llama_model_loader: - type  f32:   37 tensors
0.00.133.153 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.153 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.920 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.407 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.156 I llm_load_vocab: special tokens cache size = 5
0.00.229.204 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.218 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.218 I llm_load_print_meta: arch             = gemma
0.00.229.219 I llm_load_print_meta: vocab type       = SPM
0.00.229.220 I llm_load_print_meta: n_vocab          = 256000
0.00.229.220 I llm_load_print_meta: n_merges         = 0
0.00.229.221 I llm_load_print_meta: vocab_only       = 0
0.00.229.221 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.221 I llm_load_print_meta: n_embd           = 2048
0.00.229.222 I llm_load_print_meta: n_layer          = 18
0.00.229.235 I llm_load_print_meta: n_head           = 8
0.00.229.235 I llm_load_print_meta: n_head_kv        = 1
0.00.229.236 I llm_load_print_meta: n_rot            = 256
0.00.229.236 I llm_load_print_meta: n_swa            = 0
0.00.229.236 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.237 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.238 I llm_load_print_meta: n_gqa            = 8
0.00.229.239 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.240 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.240 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.242 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.242 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.243 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.243 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.244 I llm_load_print_meta: n_ff             = 16384
0.00.229.244 I llm_load_print_meta: n_expert         = 0
0.00.229.244 I llm_load_print_meta: n_expert_used    = 0
0.00.229.245 I llm_load_print_meta: causal attn      = 1
0.00.229.245 I llm_load_print_meta: pooling type     = 0
0.00.229.245 I llm_load_print_meta: rope type        = 2
0.00.229.246 I llm_load_print_meta: rope scaling     = linear
0.00.229.247 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.248 I llm_load_print_meta: freq_scale_train = 1
0.00.229.248 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.248 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.249 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.249 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.249 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.249 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.249 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.250 I llm_load_print_meta: model type       = 2B
0.00.229.250 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.251 I llm_load_print_meta: model params     = 2.51 B
0.00.229.252 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.252 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.253 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.253 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.254 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.254 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.254 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.255 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.255 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.255 I llm_load_print_meta: max token length = 93
0.00.229.284 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.728 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.737 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.738 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.739 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.739 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.740 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.292.723 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.730 I llama_new_context_with_model: n_batch    = 2048
0.00.292.730 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.731 I llama_new_context_with_model: flash_attn = 0
0.00.292.734 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.735 I llama_new_context_with_model: freq_scale = 1
0.00.321.918 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.933 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.022 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.879 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.886 I llama_new_context_with_model: graph nodes  = 601
0.00.322.886 I llama_new_context_with_model: graph splits = 1
0.00.322.888 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.239 I main: llama threadpool init, n_threads = 4
0.00.404.253 I 
0.00.404.328 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.331 I 
0.00.404.368 I sampler seed: 371611356
0.00.404.378 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.386 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.387 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.387 I 
 fufilling the question and providing relevant information.

**Question:** What are the challenges and opportunities for businesses when adopting AI-powered chatbots?

**Challenges

0.02.064.550 I llama_perf_sampler_print:    sampling time =       6.25 ms /    33 runs   (    0.19 ms per token,  5280.00 tokens per second)
0.02.064.553 I llama_perf_context_print:        load time =     402.37 ms
0.02.064.556 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.064.558 I llama_perf_context_print:        eval time =    1639.47 ms /    32 runs   (   51.23 ms per token,    19.52 tokens per second)
0.02.064.560 I llama_perf_context_print:       total time =    1660.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3862 (0cbdf133)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32103.85 ms
main:    total time = 32103.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.550 I build: 3862 (0cbdf133) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.001.891 I main: load the model and apply lora adapter, if any
0.00.022.098 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.111 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.118 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.119 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.123 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.124 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.125 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.125 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.126 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.126 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.131 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.132 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.133 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.134 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.954 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.674 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.547 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.554 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.555 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.555 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.556 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.557 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.557 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.560 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.560 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.564 I llama_model_loader: - type  f32:   37 tensors
0.00.133.567 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.567 I llama_model_loader: - type q6_K:   19 tensors
0.00.193.703 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.322 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.080 I llm_load_vocab: special tokens cache size = 5
0.00.231.050 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.065 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.066 I llm_load_print_meta: arch             = gemma
0.00.231.066 I llm_load_print_meta: vocab type       = SPM
0.00.231.067 I llm_load_print_meta: n_vocab          = 256000
0.00.231.067 I llm_load_print_meta: n_merges         = 0
0.00.231.067 I llm_load_print_meta: vocab_only       = 0
0.00.231.068 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.068 I llm_load_print_meta: n_embd           = 2048
0.00.231.068 I llm_load_print_meta: n_layer          = 18
0.00.231.081 I llm_load_print_meta: n_head           = 8
0.00.231.082 I llm_load_print_meta: n_head_kv        = 1
0.00.231.082 I llm_load_print_meta: n_rot            = 256
0.00.231.082 I llm_load_print_meta: n_swa            = 0
0.00.231.082 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.083 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.084 I llm_load_print_meta: n_gqa            = 8
0.00.231.085 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.086 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.087 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.088 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.088 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.089 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.089 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.090 I llm_load_print_meta: n_ff             = 16384
0.00.231.090 I llm_load_print_meta: n_expert         = 0
0.00.231.090 I llm_load_print_meta: n_expert_used    = 0
0.00.231.091 I llm_load_print_meta: causal attn      = 1
0.00.231.091 I llm_load_print_meta: pooling type     = 0
0.00.231.091 I llm_load_print_meta: rope type        = 2
0.00.231.092 I llm_load_print_meta: rope scaling     = linear
0.00.231.093 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.093 I llm_load_print_meta: freq_scale_train = 1
0.00.231.094 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.094 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.095 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.095 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.095 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.095 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.096 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.096 I llm_load_print_meta: model type       = 2B
0.00.231.097 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.231.097 I llm_load_print_meta: model params     = 2.51 B
0.00.231.098 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.231.098 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.099 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.099 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.100 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.100 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.100 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.101 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.101 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.101 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.102 I llm_load_print_meta: max token length = 93
0.00.231.129 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.288.171 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.293.243 I llama_new_context_with_model: n_ctx      = 8192
0.00.293.249 I llama_new_context_with_model: n_batch    = 2048
0.00.293.249 I llama_new_context_with_model: n_ubatch   = 512
0.00.293.250 I llama_new_context_with_model: flash_attn = 0
0.00.293.252 I llama_new_context_with_model: freq_base  = 10000.0
0.00.293.253 I llama_new_context_with_model: freq_scale = 1
0.00.322.985 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.001 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.102 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.976 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.985 I llama_new_context_with_model: graph nodes  = 601
0.00.323.985 I llama_new_context_with_model: graph splits = 1
0.00.323.987 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.406.118 I main: llama threadpool init, n_threads = 4
0.00.406.133 I 
0.00.406.210 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.406.212 I 
0.00.406.250 I sampler seed: 2057322365
0.00.406.259 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.406.262 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.406.262 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.406.263 I 
 encompases in a chaotic battle with a giant spider.

The scene opens with a wide shot of the battlefield, littered with debris and smoke. Soldiers and robots

0.02.075.475 I llama_perf_sampler_print:    sampling time =       6.03 ms /    33 runs   (    0.18 ms per token,  5469.92 tokens per second)
0.02.075.478 I llama_perf_context_print:        load time =     404.21 ms
0.02.075.479 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.075.480 I llama_perf_context_print:        eval time =    1648.91 ms /    32 runs   (   51.53 ms per token,    19.41 tokens per second)
0.02.075.481 I llama_perf_context_print:       total time =    1669.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.122s
user	8m15.539s
sys	0m7.204s
