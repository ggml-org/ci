+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.780 I main: load the model and apply lora adapter, if any
0.00.024.983 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.994 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.082 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.094 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.096 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.100 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.102 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.103 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.104 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.105 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.106 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.122 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.127 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.129 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.130 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.132 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.789 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.910 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.628 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.636 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.637 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.638 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.639 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.640 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.641 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.645 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.646 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.647 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.647 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.269.649 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.657 I llama_model_loader: - type  f32:   37 tensors
0.00.269.659 I llama_model_loader: - type q8_0:  127 tensors
0.00.448.175 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.543 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.541 I llm_load_vocab: special tokens cache size = 5
0.00.622.700 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.775 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.776 I llm_load_print_meta: arch             = gemma
0.00.622.777 I llm_load_print_meta: vocab type       = SPM
0.00.622.778 I llm_load_print_meta: n_vocab          = 256000
0.00.622.780 I llm_load_print_meta: n_merges         = 0
0.00.622.788 I llm_load_print_meta: vocab_only       = 0
0.00.622.789 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.789 I llm_load_print_meta: n_embd           = 2048
0.00.622.789 I llm_load_print_meta: n_layer          = 18
0.00.622.852 I llm_load_print_meta: n_head           = 8
0.00.622.863 I llm_load_print_meta: n_head_kv        = 1
0.00.622.864 I llm_load_print_meta: n_rot            = 256
0.00.622.866 I llm_load_print_meta: n_swa            = 0
0.00.622.866 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.867 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.872 I llm_load_print_meta: n_gqa            = 8
0.00.622.877 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.883 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.887 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.888 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.889 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.889 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.889 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.894 I llm_load_print_meta: n_ff             = 16384
0.00.622.895 I llm_load_print_meta: n_expert         = 0
0.00.622.895 I llm_load_print_meta: n_expert_used    = 0
0.00.622.896 I llm_load_print_meta: causal attn      = 1
0.00.622.896 I llm_load_print_meta: pooling type     = 0
0.00.622.905 I llm_load_print_meta: rope type        = 2
0.00.622.906 I llm_load_print_meta: rope scaling     = linear
0.00.622.908 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.909 I llm_load_print_meta: freq_scale_train = 1
0.00.622.909 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.910 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.911 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.911 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.911 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.912 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.913 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.915 I llm_load_print_meta: model type       = 2B
0.00.622.917 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.918 I llm_load_print_meta: model params     = 2.51 B
0.00.622.920 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.920 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.921 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.922 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.923 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.923 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.924 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.924 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.932 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.935 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.935 I llm_load_print_meta: max token length = 93
0.00.724.291 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.724.301 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.724.302 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.724.303 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.724.303 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.724.304 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.730.271 I llama_new_context_with_model: n_ctx      = 8192
0.00.730.279 I llama_new_context_with_model: n_batch    = 2048
0.00.730.279 I llama_new_context_with_model: n_ubatch   = 512
0.00.730.280 I llama_new_context_with_model: flash_attn = 0
0.00.730.282 I llama_new_context_with_model: freq_base  = 10000.0
0.00.730.283 I llama_new_context_with_model: freq_scale = 1
0.00.758.967 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.759.007 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.759.130 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.762.238 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.762.242 I llama_new_context_with_model: graph nodes  = 601
0.00.762.243 I llama_new_context_with_model: graph splits = 1
0.00.762.259 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.371.752 I main: llama threadpool init, n_threads = 4
0.01.371.765 I 
0.01.371.883 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.371.888 I 
0.01.372.125 I sampler seed: 120444353
0.01.372.140 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.372.146 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.372.150 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.372.150 I 
 increamically.

I am sorry, I am unable to generate responses that are sexually suggestive or inappropriate. [end of text]


0.10.676.396 I llama_perf_sampler_print:    sampling time =      33.91 ms /    23 runs   (    1.47 ms per token,   678.31 tokens per second)
0.10.676.399 I llama_perf_context_print:        load time =    1368.87 ms
0.10.676.402 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.676.415 I llama_perf_context_print:        eval time =    9237.70 ms /    22 runs   (  419.90 ms per token,     2.38 tokens per second)
0.10.676.417 I llama_perf_context_print:       total time =    9304.65 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.648 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.839 I main: llama backend init
0.00.002.761 I main: load the model and apply lora adapter, if any
0.00.025.099 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.199 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.213 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.215 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.219 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.223 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.224 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.225 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.226 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.227 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.236 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.238 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.240 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.249 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.250 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.747 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.879 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.508 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.515 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.516 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.517 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.518 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.519 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.521 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.524 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.525 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.526 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.527 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.269.528 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.536 I llama_model_loader: - type  f32:   37 tensors
0.00.269.538 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.924 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.519.241 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.520.196 I llm_load_vocab: special tokens cache size = 5
0.00.619.392 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.619.463 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.619.464 I llm_load_print_meta: arch             = gemma
0.00.619.465 I llm_load_print_meta: vocab type       = SPM
0.00.619.466 I llm_load_print_meta: n_vocab          = 256000
0.00.619.468 I llm_load_print_meta: n_merges         = 0
0.00.619.477 I llm_load_print_meta: vocab_only       = 0
0.00.619.478 I llm_load_print_meta: n_ctx_train      = 8192
0.00.619.478 I llm_load_print_meta: n_embd           = 2048
0.00.619.479 I llm_load_print_meta: n_layer          = 18
0.00.619.543 I llm_load_print_meta: n_head           = 8
0.00.619.550 I llm_load_print_meta: n_head_kv        = 1
0.00.619.552 I llm_load_print_meta: n_rot            = 256
0.00.619.557 I llm_load_print_meta: n_swa            = 0
0.00.619.557 I llm_load_print_meta: n_embd_head_k    = 256
0.00.619.557 I llm_load_print_meta: n_embd_head_v    = 256
0.00.619.563 I llm_load_print_meta: n_gqa            = 8
0.00.619.568 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.619.573 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.619.574 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.619.576 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.619.576 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.619.577 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.619.577 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.619.582 I llm_load_print_meta: n_ff             = 16384
0.00.619.583 I llm_load_print_meta: n_expert         = 0
0.00.619.583 I llm_load_print_meta: n_expert_used    = 0
0.00.619.584 I llm_load_print_meta: causal attn      = 1
0.00.619.584 I llm_load_print_meta: pooling type     = 0
0.00.619.584 I llm_load_print_meta: rope type        = 2
0.00.619.585 I llm_load_print_meta: rope scaling     = linear
0.00.619.587 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.619.588 I llm_load_print_meta: freq_scale_train = 1
0.00.619.591 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.619.592 I llm_load_print_meta: rope_finetuned   = unknown
0.00.619.592 I llm_load_print_meta: ssm_d_conv       = 0
0.00.619.592 I llm_load_print_meta: ssm_d_inner      = 0
0.00.619.593 I llm_load_print_meta: ssm_d_state      = 0
0.00.619.593 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.619.593 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.619.594 I llm_load_print_meta: model type       = 2B
0.00.619.595 I llm_load_print_meta: model ftype      = Q8_0
0.00.619.596 I llm_load_print_meta: model params     = 2.51 B
0.00.619.597 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.619.597 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.619.598 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.619.599 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.619.600 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.619.600 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.619.601 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.619.603 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.619.609 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.619.611 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.619.611 I llm_load_print_meta: max token length = 93
0.00.717.520 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.723.423 I llama_new_context_with_model: n_ctx      = 8192
0.00.723.430 I llama_new_context_with_model: n_batch    = 2048
0.00.723.431 I llama_new_context_with_model: n_ubatch   = 512
0.00.723.432 I llama_new_context_with_model: flash_attn = 0
0.00.723.435 I llama_new_context_with_model: freq_base  = 10000.0
0.00.723.436 I llama_new_context_with_model: freq_scale = 1
0.00.754.152 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.754.195 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.754.318 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.757.419 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.757.423 I llama_new_context_with_model: graph nodes  = 601
0.00.757.423 I llama_new_context_with_model: graph splits = 1
0.00.757.439 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.370.621 I main: llama threadpool init, n_threads = 4
0.01.370.634 I 
0.01.370.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.370.744 I 
0.01.370.977 I sampler seed: 2844906823
0.01.370.989 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.370.996 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.370.999 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.370.999 I 
 increadibly with the current knowledge and technologies. [end of text]


0.05.594.745 I llama_perf_sampler_print:    sampling time =      15.47 ms /    11 runs   (    1.41 ms per token,   710.82 tokens per second)
0.05.594.748 I llama_perf_context_print:        load time =    1367.76 ms
0.05.594.762 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.594.764 I llama_perf_context_print:        eval time =    4193.42 ms /    10 runs   (  419.34 ms per token,     2.38 tokens per second)
0.05.594.765 I llama_perf_context_print:       total time =    4224.13 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.876 I main: llama backend init
0.00.002.829 I main: load the model and apply lora adapter, if any
0.00.025.375 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.386 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.492 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.505 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.507 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.512 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.517 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.519 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.522 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.523 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.525 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.542 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.546 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.548 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.550 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.551 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.945 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.755 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.516 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.527 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.528 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.529 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.530 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.531 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.532 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.536 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.537 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.538 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.539 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.271.540 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.548 I llama_model_loader: - type  f32:   37 tensors
0.00.271.550 I llama_model_loader: - type q8_0:  127 tensors
0.00.461.587 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.530.030 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.044 I llm_load_vocab: special tokens cache size = 5
0.00.629.888 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.629.963 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.629.967 I llm_load_print_meta: arch             = gemma
0.00.629.968 I llm_load_print_meta: vocab type       = SPM
0.00.629.969 I llm_load_print_meta: n_vocab          = 256000
0.00.629.971 I llm_load_print_meta: n_merges         = 0
0.00.629.982 I llm_load_print_meta: vocab_only       = 0
0.00.629.982 I llm_load_print_meta: n_ctx_train      = 8192
0.00.629.984 I llm_load_print_meta: n_embd           = 2048
0.00.629.985 I llm_load_print_meta: n_layer          = 18
0.00.630.057 I llm_load_print_meta: n_head           = 8
0.00.630.067 I llm_load_print_meta: n_head_kv        = 1
0.00.630.069 I llm_load_print_meta: n_rot            = 256
0.00.630.070 I llm_load_print_meta: n_swa            = 0
0.00.630.070 I llm_load_print_meta: n_embd_head_k    = 256
0.00.630.070 I llm_load_print_meta: n_embd_head_v    = 256
0.00.630.086 I llm_load_print_meta: n_gqa            = 8
0.00.630.095 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.630.103 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.630.108 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.630.110 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.630.111 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.630.112 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.630.113 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.630.120 I llm_load_print_meta: n_ff             = 16384
0.00.630.121 I llm_load_print_meta: n_expert         = 0
0.00.630.122 I llm_load_print_meta: n_expert_used    = 0
0.00.630.122 I llm_load_print_meta: causal attn      = 1
0.00.630.123 I llm_load_print_meta: pooling type     = 0
0.00.630.124 I llm_load_print_meta: rope type        = 2
0.00.630.124 I llm_load_print_meta: rope scaling     = linear
0.00.630.125 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.630.126 I llm_load_print_meta: freq_scale_train = 1
0.00.630.126 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.630.127 I llm_load_print_meta: rope_finetuned   = unknown
0.00.630.128 I llm_load_print_meta: ssm_d_conv       = 0
0.00.630.128 I llm_load_print_meta: ssm_d_inner      = 0
0.00.630.128 I llm_load_print_meta: ssm_d_state      = 0
0.00.630.128 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.630.129 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.630.130 I llm_load_print_meta: model type       = 2B
0.00.630.131 I llm_load_print_meta: model ftype      = Q8_0
0.00.630.132 I llm_load_print_meta: model params     = 2.51 B
0.00.630.133 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.630.134 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.630.138 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.630.139 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.630.139 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.630.140 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.630.141 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.630.141 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.630.149 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.630.151 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.630.152 I llm_load_print_meta: max token length = 93
0.00.716.816 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.716.828 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.716.828 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.716.829 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.716.830 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.716.830 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.722.834 I llama_new_context_with_model: n_ctx      = 8192
0.00.722.842 I llama_new_context_with_model: n_batch    = 2048
0.00.722.842 I llama_new_context_with_model: n_ubatch   = 512
0.00.722.843 I llama_new_context_with_model: flash_attn = 0
0.00.722.847 I llama_new_context_with_model: freq_base  = 10000.0
0.00.722.847 I llama_new_context_with_model: freq_scale = 1
0.00.753.107 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.753.150 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.753.270 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.756.416 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.756.420 I llama_new_context_with_model: graph nodes  = 601
0.00.756.421 I llama_new_context_with_model: graph splits = 1
0.00.756.436 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.399.907 I main: llama threadpool init, n_threads = 4
0.01.399.921 I 
0.01.400.041 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.400.046 I 
0.01.400.288 I sampler seed: 1922601490
0.01.400.301 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.400.307 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.400.311 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.400.311 I 
 increasities. [end of text]


0.03.127.695 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   800.26 tokens per second)
0.03.127.698 I llama_perf_context_print:        load time =    1396.97 ms
0.03.127.722 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.127.724 I llama_perf_context_print:        eval time =    1713.59 ms /     4 runs   (  428.40 ms per token,     2.33 tokens per second)
0.03.127.725 I llama_perf_context_print:       total time =    1727.80 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.725 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.930 I main: llama backend init
0.00.002.880 I main: load the model and apply lora adapter, if any
0.00.025.449 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.461 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.550 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.562 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.563 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.567 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.569 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.570 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.571 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.572 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.572 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.583 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.587 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.588 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.589 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.590 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.127 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.598 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.271 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.280 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.281 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.282 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.283 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.286 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.288 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.291 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.292 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.304 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.307 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.270.308 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.317 I llama_model_loader: - type  f32:   37 tensors
0.00.270.319 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.588 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.599 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.526.589 I llm_load_vocab: special tokens cache size = 5
0.00.627.044 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.627.112 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.627.113 I llm_load_print_meta: arch             = gemma
0.00.627.115 I llm_load_print_meta: vocab type       = SPM
0.00.627.116 I llm_load_print_meta: n_vocab          = 256000
0.00.627.118 I llm_load_print_meta: n_merges         = 0
0.00.627.126 I llm_load_print_meta: vocab_only       = 0
0.00.627.127 I llm_load_print_meta: n_ctx_train      = 8192
0.00.627.128 I llm_load_print_meta: n_embd           = 2048
0.00.627.128 I llm_load_print_meta: n_layer          = 18
0.00.627.189 I llm_load_print_meta: n_head           = 8
0.00.627.195 I llm_load_print_meta: n_head_kv        = 1
0.00.627.196 I llm_load_print_meta: n_rot            = 256
0.00.627.197 I llm_load_print_meta: n_swa            = 0
0.00.627.197 I llm_load_print_meta: n_embd_head_k    = 256
0.00.627.198 I llm_load_print_meta: n_embd_head_v    = 256
0.00.627.202 I llm_load_print_meta: n_gqa            = 8
0.00.627.207 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.627.212 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.627.238 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.627.240 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.627.241 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.627.241 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.627.242 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.627.248 I llm_load_print_meta: n_ff             = 16384
0.00.627.249 I llm_load_print_meta: n_expert         = 0
0.00.627.249 I llm_load_print_meta: n_expert_used    = 0
0.00.627.250 I llm_load_print_meta: causal attn      = 1
0.00.627.251 I llm_load_print_meta: pooling type     = 0
0.00.627.251 I llm_load_print_meta: rope type        = 2
0.00.627.252 I llm_load_print_meta: rope scaling     = linear
0.00.627.253 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.627.254 I llm_load_print_meta: freq_scale_train = 1
0.00.627.255 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.627.255 I llm_load_print_meta: rope_finetuned   = unknown
0.00.627.255 I llm_load_print_meta: ssm_d_conv       = 0
0.00.627.256 I llm_load_print_meta: ssm_d_inner      = 0
0.00.627.256 I llm_load_print_meta: ssm_d_state      = 0
0.00.627.256 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.627.257 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.627.258 I llm_load_print_meta: model type       = 2B
0.00.627.260 I llm_load_print_meta: model ftype      = Q8_0
0.00.627.261 I llm_load_print_meta: model params     = 2.51 B
0.00.627.266 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.627.267 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.627.267 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.627.268 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.627.268 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.627.269 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.627.269 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.627.273 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.280 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.282 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.282 I llm_load_print_meta: max token length = 93
0.00.700.393 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.700.404 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.706.366 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.373 I llama_new_context_with_model: n_batch    = 2048
0.00.706.374 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.374 I llama_new_context_with_model: flash_attn = 0
0.00.706.377 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.378 I llama_new_context_with_model: freq_scale = 1
0.00.735.990 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.736.026 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.736.153 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.739.234 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.239 I llama_new_context_with_model: graph nodes  = 601
0.00.739.239 I llama_new_context_with_model: graph splits = 1
0.00.739.256 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.347.251 I main: llama threadpool init, n_threads = 4
0.01.347.264 I 
0.01.347.370 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.347.374 I 
0.01.347.604 I sampler seed: 1667355303
0.01.347.617 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.347.624 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.347.625 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.347.634 I 
 increasements, the most potent natural antioxidants in the world.

**Explanation:**

* **Natural antioxidants:** Substances that fight free radicals and protect cells from damage

0.14.932.732 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.52 tokens per second)
0.14.932.747 I llama_perf_context_print:        load time =    1344.28 ms
0.14.932.749 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.932.751 I llama_perf_context_print:        eval time =   13490.84 ms /    32 runs   (  421.59 ms per token,     2.37 tokens per second)
0.14.932.752 I llama_perf_context_print:       total time =   13585.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m44.195s
user	2m8.358s
sys	0m9.446s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4000 (de44a080)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199511.74 ms
main:    total time = 199511.74 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.624 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.002.773 I main: load the model and apply lora adapter, if any
0.00.025.278 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.288 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.381 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.392 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.394 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.398 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.400 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.402 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.403 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.404 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.404 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.414 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.418 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.419 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.420 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.421 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.389 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.813 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.442 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.450 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.452 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.453 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.454 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.455 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.456 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.459 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.460 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.461 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.462 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.463 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.471 I llama_model_loader: - type  f32:   37 tensors
0.00.271.473 I llama_model_loader: - type q4_K:  108 tensors
0.00.271.474 I llama_model_loader: - type q6_K:   19 tensors
0.00.453.360 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.524.258 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.525.229 I llm_load_vocab: special tokens cache size = 5
0.00.622.814 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.885 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.886 I llm_load_print_meta: arch             = gemma
0.00.622.887 I llm_load_print_meta: vocab type       = SPM
0.00.622.888 I llm_load_print_meta: n_vocab          = 256000
0.00.622.890 I llm_load_print_meta: n_merges         = 0
0.00.622.900 I llm_load_print_meta: vocab_only       = 0
0.00.622.900 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.901 I llm_load_print_meta: n_embd           = 2048
0.00.622.901 I llm_load_print_meta: n_layer          = 18
0.00.622.962 I llm_load_print_meta: n_head           = 8
0.00.622.969 I llm_load_print_meta: n_head_kv        = 1
0.00.622.969 I llm_load_print_meta: n_rot            = 256
0.00.622.970 I llm_load_print_meta: n_swa            = 0
0.00.622.970 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.970 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.975 I llm_load_print_meta: n_gqa            = 8
0.00.622.980 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.985 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.986 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.987 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.988 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.989 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.993 I llm_load_print_meta: n_ff             = 16384
0.00.622.994 I llm_load_print_meta: n_expert         = 0
0.00.622.994 I llm_load_print_meta: n_expert_used    = 0
0.00.622.995 I llm_load_print_meta: causal attn      = 1
0.00.622.995 I llm_load_print_meta: pooling type     = 0
0.00.622.995 I llm_load_print_meta: rope type        = 2
0.00.622.996 I llm_load_print_meta: rope scaling     = linear
0.00.622.998 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.998 I llm_load_print_meta: freq_scale_train = 1
0.00.622.998 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.999 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.999 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.999 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.000 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.000 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.000 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.001 I llm_load_print_meta: model type       = 2B
0.00.623.002 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.623.003 I llm_load_print_meta: model params     = 2.51 B
0.00.623.003 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.623.004 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.623.005 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.623.005 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.623.006 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.623.006 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.623.006 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.623.007 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.623.012 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.623.013 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.623.014 I llm_load_print_meta: max token length = 93
0.00.687.845 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.687.857 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.687.857 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.687.858 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.687.859 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.687.859 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.693.709 I llama_new_context_with_model: n_ctx      = 8192
0.00.693.718 I llama_new_context_with_model: n_batch    = 2048
0.00.693.718 I llama_new_context_with_model: n_ubatch   = 512
0.00.693.718 I llama_new_context_with_model: flash_attn = 0
0.00.693.721 I llama_new_context_with_model: freq_base  = 10000.0
0.00.693.722 I llama_new_context_with_model: freq_scale = 1
0.00.724.580 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.724.617 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.724.747 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.888 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.892 I llama_new_context_with_model: graph nodes  = 601
0.00.727.893 I llama_new_context_with_model: graph splits = 1
0.00.727.924 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.304.615 I main: llama threadpool init, n_threads = 4
0.01.304.628 I 
0.01.304.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.304.744 I 
0.01.304.988 I sampler seed: 2529990262
0.01.305.002 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.305.011 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.305.021 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.305.022 I 
 increasities, and other forms of harassment in the workplace.

**Objectives of the training:**

* To educate employees about the different forms of harassment and bullying

0.12.238.570 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.15 tokens per second)
0.12.238.601 I llama_perf_context_print:        load time =    1301.74 ms
0.12.238.603 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.238.605 I llama_perf_context_print:        eval time =   10839.47 ms /    32 runs   (  338.73 ms per token,     2.95 tokens per second)
0.12.238.607 I llama_perf_context_print:       total time =   10933.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4000 (de44a080)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199662.91 ms
main:    total time = 199662.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 4000 (de44a080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.002.799 I main: load the model and apply lora adapter, if any
0.00.025.201 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.304 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.317 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.322 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.327 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.328 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.329 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.331 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.333 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.334 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.345 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.348 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.349 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.350 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.351 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.695 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.640 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.342 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.352 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.353 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.354 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.355 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.356 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.357 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.361 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.362 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.371 I llama_model_loader: - type  f32:   37 tensors
0.00.269.373 I llama_model_loader: - type q4_K:  108 tensors
0.00.269.373 I llama_model_loader: - type q6_K:   19 tensors
0.00.447.946 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.705 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.672 I llm_load_vocab: special tokens cache size = 5
0.00.608.852 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.919 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.923 I llm_load_print_meta: arch             = gemma
0.00.608.923 I llm_load_print_meta: vocab type       = SPM
0.00.608.924 I llm_load_print_meta: n_vocab          = 256000
0.00.608.926 I llm_load_print_meta: n_merges         = 0
0.00.608.936 I llm_load_print_meta: vocab_only       = 0
0.00.608.936 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.937 I llm_load_print_meta: n_embd           = 2048
0.00.608.938 I llm_load_print_meta: n_layer          = 18
0.00.609.001 I llm_load_print_meta: n_head           = 8
0.00.609.011 I llm_load_print_meta: n_head_kv        = 1
0.00.609.012 I llm_load_print_meta: n_rot            = 256
0.00.609.013 I llm_load_print_meta: n_swa            = 0
0.00.609.013 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.014 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.018 I llm_load_print_meta: n_gqa            = 8
0.00.609.024 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.031 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.032 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.034 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.035 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.035 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.035 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.040 I llm_load_print_meta: n_ff             = 16384
0.00.609.041 I llm_load_print_meta: n_expert         = 0
0.00.609.042 I llm_load_print_meta: n_expert_used    = 0
0.00.609.042 I llm_load_print_meta: causal attn      = 1
0.00.609.043 I llm_load_print_meta: pooling type     = 0
0.00.609.052 I llm_load_print_meta: rope type        = 2
0.00.609.053 I llm_load_print_meta: rope scaling     = linear
0.00.609.055 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.056 I llm_load_print_meta: freq_scale_train = 1
0.00.609.068 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.071 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.071 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.071 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.072 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.072 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.072 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.073 I llm_load_print_meta: model type       = 2B
0.00.609.075 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.609.075 I llm_load_print_meta: model params     = 2.51 B
0.00.609.076 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.609.076 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.086 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.086 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.088 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.088 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.088 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.089 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.095 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.097 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.098 I llm_load_print_meta: max token length = 93
0.00.672.215 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.677.990 I llama_new_context_with_model: n_ctx      = 8192
0.00.677.996 I llama_new_context_with_model: n_batch    = 2048
0.00.677.997 I llama_new_context_with_model: n_ubatch   = 512
0.00.677.997 I llama_new_context_with_model: flash_attn = 0
0.00.677.999 I llama_new_context_with_model: freq_base  = 10000.0
0.00.678.000 I llama_new_context_with_model: freq_scale = 1
0.00.707.692 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.707.732 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.707.859 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.711.029 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.711.033 I llama_new_context_with_model: graph nodes  = 601
0.00.711.033 I llama_new_context_with_model: graph splits = 1
0.00.711.049 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.286.174 I main: llama threadpool init, n_threads = 4
0.01.286.189 I 
0.01.286.296 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.286.299 I 
0.01.286.527 I sampler seed: 3725042709
0.01.286.540 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.286.547 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.286.548 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.286.548 I 
 seconals.

I am unable to access the requested webpage.

I am unable to access the requested webpage because it appears to be blocked or inaccessible. Please

0.12.187.852 I llama_perf_sampler_print:    sampling time =      49.17 ms /    33 runs   (    1.49 ms per token,   671.18 tokens per second)
0.12.187.870 I llama_perf_context_print:        load time =    1283.28 ms
0.12.187.871 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.187.873 I llama_perf_context_print:        eval time =   10807.20 ms /    32 runs   (  337.72 ms per token,     2.96 tokens per second)
0.12.187.874 I llama_perf_context_print:       total time =   10901.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.857s
user	50m13.497s
sys	0m6.864s
