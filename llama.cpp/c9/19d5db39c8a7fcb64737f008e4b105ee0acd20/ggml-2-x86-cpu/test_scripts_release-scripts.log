+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.021.882 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.931 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.941 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.949 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.953 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.956 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.957 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.958 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.959 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.959 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.960 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.964 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.964 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.965 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.965 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.967 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.455 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.331 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.170 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.175 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.176 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.176 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.177 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.178 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.179 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.181 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.182 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.182 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.183 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.184 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.186 I llama_model_loader: - type  f32:   37 tensors
0.00.132.189 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.349 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.137 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.737 I llm_load_vocab: special tokens cache size = 5
0.00.221.490 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.503 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.504 I llm_load_print_meta: arch             = gemma
0.00.221.504 I llm_load_print_meta: vocab type       = SPM
0.00.221.505 I llm_load_print_meta: n_vocab          = 256000
0.00.221.505 I llm_load_print_meta: n_merges         = 0
0.00.221.505 I llm_load_print_meta: vocab_only       = 0
0.00.221.506 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.508 I llm_load_print_meta: n_embd           = 2048
0.00.221.508 I llm_load_print_meta: n_layer          = 18
0.00.221.519 I llm_load_print_meta: n_head           = 8
0.00.221.520 I llm_load_print_meta: n_head_kv        = 1
0.00.221.521 I llm_load_print_meta: n_rot            = 256
0.00.221.521 I llm_load_print_meta: n_swa            = 0
0.00.221.522 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.522 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.523 I llm_load_print_meta: n_gqa            = 8
0.00.221.524 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.525 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.526 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.527 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.528 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.529 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.529 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.530 I llm_load_print_meta: n_ff             = 16384
0.00.221.530 I llm_load_print_meta: n_expert         = 0
0.00.221.530 I llm_load_print_meta: n_expert_used    = 0
0.00.221.531 I llm_load_print_meta: causal attn      = 1
0.00.221.531 I llm_load_print_meta: pooling type     = 0
0.00.221.532 I llm_load_print_meta: rope type        = 2
0.00.221.532 I llm_load_print_meta: rope scaling     = linear
0.00.221.534 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.535 I llm_load_print_meta: freq_scale_train = 1
0.00.221.535 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.535 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.536 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.536 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.536 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.537 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.537 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.538 I llm_load_print_meta: model type       = 2B
0.00.221.539 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.540 I llm_load_print_meta: model params     = 2.51 B
0.00.221.540 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.541 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.542 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.542 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.543 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.543 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.544 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.544 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.544 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.545 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.545 I llm_load_print_meta: max token length = 93
0.00.221.568 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.017 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.022 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.023 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.024 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.024 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.025 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.329.121 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.126 I llama_new_context_with_model: n_batch    = 2048
0.00.329.127 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.127 I llama_new_context_with_model: flash_attn = 0
0.00.329.129 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.130 I llama_new_context_with_model: freq_scale = 1
0.00.360.076 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.360.090 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.180 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.022 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.361.029 I llama_new_context_with_model: graph nodes  = 601
0.00.361.030 I llama_new_context_with_model: graph splits = 1
0.00.361.032 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.927 I main: llama threadpool init, n_threads = 4
0.00.450.940 I 
0.00.451.014 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.018 I 
0.00.451.054 I sampler seed: 91575446
0.00.451.064 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.071 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.074 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.074 I 
 increamically with the time elapsed. 

What time scale is implied by this statement?

The statement suggests that something is happening at an increasing rate. The

0.02.678.645 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7009.35 tokens per second)
0.02.678.648 I llama_perf_context_print:        load time =     449.08 ms
0.02.678.649 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.678.651 I llama_perf_context_print:        eval time =    2209.81 ms /    32 runs   (   69.06 ms per token,    14.48 tokens per second)
0.02.678.653 I llama_perf_context_print:       total time =    2227.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.600 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.810 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.284 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.295 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.301 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.303 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.307 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.308 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.308 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.309 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.309 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.310 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.314 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.314 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.315 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.315 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.316 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.160 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.093 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.976 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.982 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.982 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.983 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.984 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.985 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.985 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.988 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.988 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.990 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.991 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.991 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.994 I llama_model_loader: - type  f32:   37 tensors
0.00.132.996 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.073 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.769 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.473 I llm_load_vocab: special tokens cache size = 5
0.00.223.335 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.349 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.349 I llm_load_print_meta: arch             = gemma
0.00.223.350 I llm_load_print_meta: vocab type       = SPM
0.00.223.350 I llm_load_print_meta: n_vocab          = 256000
0.00.223.351 I llm_load_print_meta: n_merges         = 0
0.00.223.351 I llm_load_print_meta: vocab_only       = 0
0.00.223.352 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.352 I llm_load_print_meta: n_embd           = 2048
0.00.223.352 I llm_load_print_meta: n_layer          = 18
0.00.223.364 I llm_load_print_meta: n_head           = 8
0.00.223.365 I llm_load_print_meta: n_head_kv        = 1
0.00.223.366 I llm_load_print_meta: n_rot            = 256
0.00.223.366 I llm_load_print_meta: n_swa            = 0
0.00.223.366 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.367 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.368 I llm_load_print_meta: n_gqa            = 8
0.00.223.369 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.369 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.370 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.372 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.372 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.373 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.373 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.374 I llm_load_print_meta: n_ff             = 16384
0.00.223.374 I llm_load_print_meta: n_expert         = 0
0.00.223.374 I llm_load_print_meta: n_expert_used    = 0
0.00.223.375 I llm_load_print_meta: causal attn      = 1
0.00.223.375 I llm_load_print_meta: pooling type     = 0
0.00.223.375 I llm_load_print_meta: rope type        = 2
0.00.223.376 I llm_load_print_meta: rope scaling     = linear
0.00.223.377 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.378 I llm_load_print_meta: freq_scale_train = 1
0.00.223.378 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.378 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.379 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.379 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.379 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.379 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.380 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.380 I llm_load_print_meta: model type       = 2B
0.00.223.381 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.382 I llm_load_print_meta: model params     = 2.51 B
0.00.223.382 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.383 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.383 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.383 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.383 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.384 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.384 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.385 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.385 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.386 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.387 I llm_load_print_meta: max token length = 93
0.00.223.411 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.271 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.377 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.384 I llama_new_context_with_model: n_batch    = 2048
0.00.323.385 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.385 I llama_new_context_with_model: flash_attn = 0
0.00.323.388 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.388 I llama_new_context_with_model: freq_scale = 1
0.00.353.638 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.652 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.749 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.682 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.690 I llama_new_context_with_model: graph nodes  = 601
0.00.354.690 I llama_new_context_with_model: graph splits = 1
0.00.354.692 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.987 I main: llama threadpool init, n_threads = 4
0.00.442.000 I 
0.00.442.078 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.081 I 
0.00.442.117 I sampler seed: 2666441223
0.00.442.128 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.131 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.442.132 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.132 I 
 increably.

I am unable to generate a response because the provided context does not contain any information regarding the generation of responses or the ability to generate responses.

0.02.615.251 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6526.90 tokens per second)
0.02.615.254 I llama_perf_context_print:        load time =     440.07 ms
0.02.615.255 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.615.256 I llama_perf_context_print:        eval time =    2154.02 ms /    32 runs   (   67.31 ms per token,    14.86 tokens per second)
0.02.615.257 I llama_perf_context_print:       total time =    2173.27 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.545 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.027.767 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.818 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.825 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.830 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.831 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.836 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.836 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.837 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.837 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.838 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.839 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.844 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.845 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.845 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.846 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.846 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.631 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.139.092 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.146.014 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.146.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.146.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.146.022 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.146.022 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.146.023 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.146.024 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.146.027 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.146.028 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.146.029 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.146.029 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.146.030 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.146.035 I llama_model_loader: - type  f32:   37 tensors
0.00.146.038 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.281 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.221.265 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.222.117 I llm_load_vocab: special tokens cache size = 5
0.00.243.393 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.243.406 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.243.407 I llm_load_print_meta: arch             = gemma
0.00.243.407 I llm_load_print_meta: vocab type       = SPM
0.00.243.408 I llm_load_print_meta: n_vocab          = 256000
0.00.243.408 I llm_load_print_meta: n_merges         = 0
0.00.243.409 I llm_load_print_meta: vocab_only       = 0
0.00.243.409 I llm_load_print_meta: n_ctx_train      = 8192
0.00.243.409 I llm_load_print_meta: n_embd           = 2048
0.00.243.410 I llm_load_print_meta: n_layer          = 18
0.00.243.422 I llm_load_print_meta: n_head           = 8
0.00.243.423 I llm_load_print_meta: n_head_kv        = 1
0.00.243.423 I llm_load_print_meta: n_rot            = 256
0.00.243.423 I llm_load_print_meta: n_swa            = 0
0.00.243.423 I llm_load_print_meta: n_embd_head_k    = 256
0.00.243.424 I llm_load_print_meta: n_embd_head_v    = 256
0.00.243.425 I llm_load_print_meta: n_gqa            = 8
0.00.243.426 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.243.426 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.243.427 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.243.429 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.243.429 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.243.429 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.243.430 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.243.430 I llm_load_print_meta: n_ff             = 16384
0.00.243.431 I llm_load_print_meta: n_expert         = 0
0.00.243.431 I llm_load_print_meta: n_expert_used    = 0
0.00.243.431 I llm_load_print_meta: causal attn      = 1
0.00.243.431 I llm_load_print_meta: pooling type     = 0
0.00.243.432 I llm_load_print_meta: rope type        = 2
0.00.243.432 I llm_load_print_meta: rope scaling     = linear
0.00.243.433 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.243.434 I llm_load_print_meta: freq_scale_train = 1
0.00.243.434 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.243.434 I llm_load_print_meta: rope_finetuned   = unknown
0.00.243.435 I llm_load_print_meta: ssm_d_conv       = 0
0.00.243.435 I llm_load_print_meta: ssm_d_inner      = 0
0.00.243.435 I llm_load_print_meta: ssm_d_state      = 0
0.00.243.436 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.243.436 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.243.436 I llm_load_print_meta: model type       = 2B
0.00.243.437 I llm_load_print_meta: model ftype      = Q8_0
0.00.243.438 I llm_load_print_meta: model params     = 2.51 B
0.00.243.439 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.243.439 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.243.439 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.243.440 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.243.440 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.243.440 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.243.441 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.243.441 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.243.442 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.243.442 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.243.442 I llm_load_print_meta: max token length = 93
0.00.243.462 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.275 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.325.282 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.325.283 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.325.283 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.325.284 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.325.284 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.330.318 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.324 I llama_new_context_with_model: n_batch    = 2048
0.00.330.325 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.325 I llama_new_context_with_model: flash_attn = 0
0.00.330.327 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.328 I llama_new_context_with_model: freq_scale = 1
0.00.359.330 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.346 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.438 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.284 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.291 I llama_new_context_with_model: graph nodes  = 601
0.00.360.292 I llama_new_context_with_model: graph splits = 1
0.00.360.294 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.851 I main: llama threadpool init, n_threads = 4
0.00.452.864 I 
0.00.452.937 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.940 I 
0.00.452.978 I sampler seed: 3392130378
0.00.452.989 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.992 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.992 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.993 I 
 increasities. [end of text]


0.00.736.563 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8038.59 tokens per second)
0.00.736.565 I llama_perf_context_print:        load time =     450.98 ms
0.00.736.566 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.736.567 I llama_perf_context_print:        eval time =     280.36 ms /     4 runs   (   70.09 ms per token,    14.27 tokens per second)
0.00.736.568 I llama_perf_context_print:       total time =     283.72 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.540 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.887 I main: load the model and apply lora adapter, if any
0.00.022.490 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.544 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.558 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.563 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.567 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.572 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.573 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.574 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.575 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.576 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.577 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.581 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.582 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.583 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.584 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.585 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.079 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.911 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.776 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.783 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.783 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.784 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.785 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.786 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.786 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.789 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.789 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.790 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.790 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.791 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.793 I llama_model_loader: - type  f32:   37 tensors
0.00.132.796 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.264 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.083 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.716 I llm_load_vocab: special tokens cache size = 5
0.00.220.508 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.520 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.521 I llm_load_print_meta: arch             = gemma
0.00.220.522 I llm_load_print_meta: vocab type       = SPM
0.00.220.523 I llm_load_print_meta: n_vocab          = 256000
0.00.220.523 I llm_load_print_meta: n_merges         = 0
0.00.220.524 I llm_load_print_meta: vocab_only       = 0
0.00.220.524 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.524 I llm_load_print_meta: n_embd           = 2048
0.00.220.525 I llm_load_print_meta: n_layer          = 18
0.00.220.537 I llm_load_print_meta: n_head           = 8
0.00.220.538 I llm_load_print_meta: n_head_kv        = 1
0.00.220.538 I llm_load_print_meta: n_rot            = 256
0.00.220.539 I llm_load_print_meta: n_swa            = 0
0.00.220.539 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.540 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.541 I llm_load_print_meta: n_gqa            = 8
0.00.220.542 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.543 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.543 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.545 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.545 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.546 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.546 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.547 I llm_load_print_meta: n_ff             = 16384
0.00.220.547 I llm_load_print_meta: n_expert         = 0
0.00.220.548 I llm_load_print_meta: n_expert_used    = 0
0.00.220.548 I llm_load_print_meta: causal attn      = 1
0.00.220.548 I llm_load_print_meta: pooling type     = 0
0.00.220.548 I llm_load_print_meta: rope type        = 2
0.00.220.549 I llm_load_print_meta: rope scaling     = linear
0.00.220.550 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.551 I llm_load_print_meta: freq_scale_train = 1
0.00.220.551 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.551 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.552 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.552 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.552 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.553 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.553 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.553 I llm_load_print_meta: model type       = 2B
0.00.220.554 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.555 I llm_load_print_meta: model params     = 2.51 B
0.00.220.555 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.556 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.556 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.556 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.557 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.557 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.557 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.558 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.558 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.559 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.559 I llm_load_print_meta: max token length = 93
0.00.220.578 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.291.613 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.291.618 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.296.628 I llama_new_context_with_model: n_ctx      = 8192
0.00.296.634 I llama_new_context_with_model: n_batch    = 2048
0.00.296.635 I llama_new_context_with_model: n_ubatch   = 512
0.00.296.635 I llama_new_context_with_model: flash_attn = 0
0.00.296.638 I llama_new_context_with_model: freq_base  = 10000.0
0.00.296.639 I llama_new_context_with_model: freq_scale = 1
0.00.326.126 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.143 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.232 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.102 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.110 I llama_new_context_with_model: graph nodes  = 601
0.00.327.111 I llama_new_context_with_model: graph splits = 1
0.00.327.113 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.444 I main: llama threadpool init, n_threads = 4
0.00.423.456 I 
0.00.423.539 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.543 I 
0.00.423.592 I sampler seed: 2687920395
0.00.423.602 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.610 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.423.614 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.614 I 
 increasities. [end of text]


0.00.724.269 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8012.82 tokens per second)
0.00.724.272 I llama_perf_context_print:        load time =     421.54 ms
0.00.724.274 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.724.276 I llama_perf_context_print:        eval time =     297.38 ms /     4 runs   (   74.35 ms per token,    13.45 tokens per second)
0.00.724.276 I llama_perf_context_print:       total time =     300.83 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.503s
user	0m22.693s
sys	0m9.358s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3848 (c919d5db)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32218.22 ms
main:    total time = 32218.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.535 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.021.848 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.898 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.910 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.915 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.918 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.922 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.922 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.923 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.925 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.926 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.926 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.930 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.930 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.931 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.932 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.932 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.103 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.303 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.142.623 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.142.631 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.142.632 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.142.633 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.142.633 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.142.634 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.142.635 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.142.637 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.142.638 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.142.639 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.142.639 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.142.640 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.142.645 I llama_model_loader: - type  f32:   37 tensors
0.00.142.647 I llama_model_loader: - type q4_K:  108 tensors
0.00.142.658 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.262 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.304 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.033 I llm_load_vocab: special tokens cache size = 5
0.00.240.544 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.558 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.559 I llm_load_print_meta: arch             = gemma
0.00.240.559 I llm_load_print_meta: vocab type       = SPM
0.00.240.560 I llm_load_print_meta: n_vocab          = 256000
0.00.240.561 I llm_load_print_meta: n_merges         = 0
0.00.240.561 I llm_load_print_meta: vocab_only       = 0
0.00.240.561 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.562 I llm_load_print_meta: n_embd           = 2048
0.00.240.562 I llm_load_print_meta: n_layer          = 18
0.00.240.575 I llm_load_print_meta: n_head           = 8
0.00.240.576 I llm_load_print_meta: n_head_kv        = 1
0.00.240.576 I llm_load_print_meta: n_rot            = 256
0.00.240.577 I llm_load_print_meta: n_swa            = 0
0.00.240.577 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.577 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.578 I llm_load_print_meta: n_gqa            = 8
0.00.240.579 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.580 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.581 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.582 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.582 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.583 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.583 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.584 I llm_load_print_meta: n_ff             = 16384
0.00.240.584 I llm_load_print_meta: n_expert         = 0
0.00.240.584 I llm_load_print_meta: n_expert_used    = 0
0.00.240.584 I llm_load_print_meta: causal attn      = 1
0.00.240.585 I llm_load_print_meta: pooling type     = 0
0.00.240.585 I llm_load_print_meta: rope type        = 2
0.00.240.585 I llm_load_print_meta: rope scaling     = linear
0.00.240.587 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.587 I llm_load_print_meta: freq_scale_train = 1
0.00.240.588 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.588 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.589 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.589 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.589 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.589 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.590 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.590 I llm_load_print_meta: model type       = 2B
0.00.240.591 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.240.592 I llm_load_print_meta: model params     = 2.51 B
0.00.240.592 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.240.593 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.593 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.594 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.594 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.594 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.595 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.595 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.595 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.596 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.596 I llm_load_print_meta: max token length = 93
0.00.240.620 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.360 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.300.367 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.300.367 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.300.368 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.300.368 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.300.369 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.305.405 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.412 I llama_new_context_with_model: n_batch    = 2048
0.00.305.412 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.413 I llama_new_context_with_model: flash_attn = 0
0.00.305.415 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.416 I llama_new_context_with_model: freq_scale = 1
0.00.335.775 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.791 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.885 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.729 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.738 I llama_new_context_with_model: graph nodes  = 601
0.00.336.738 I llama_new_context_with_model: graph splits = 1
0.00.336.740 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.731 I main: llama threadpool init, n_threads = 4
0.00.418.742 I 
0.00.418.815 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.818 I 
0.00.418.856 I sampler seed: 4053593490
0.00.418.866 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.870 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.418.870 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.872 I 
 seconally. [end of text]


0.00.618.515 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8156.61 tokens per second)
0.00.618.517 I llama_perf_context_print:        load time =     416.86 ms
0.00.618.518 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.618.519 I llama_perf_context_print:        eval time =     196.75 ms /     4 runs   (   49.19 ms per token,    20.33 tokens per second)
0.00.618.520 I llama_perf_context_print:       total time =     199.79 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3848 (c919d5db)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32036.99 ms
main:    total time = 32036.99 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.724 I main: llama backend init
0.00.001.827 I main: load the model and apply lora adapter, if any
0.00.022.167 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.180 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.187 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.188 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.191 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.192 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.193 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.194 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.194 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.195 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.200 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.200 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.201 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.201 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.202 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.977 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.396 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.302 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.309 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.310 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.310 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.311 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.313 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.314 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.317 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.318 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.321 I llama_model_loader: - type  f32:   37 tensors
0.00.133.325 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.325 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.172 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.741 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.487 I llm_load_vocab: special tokens cache size = 5
0.00.226.454 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.466 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.467 I llm_load_print_meta: arch             = gemma
0.00.226.468 I llm_load_print_meta: vocab type       = SPM
0.00.226.468 I llm_load_print_meta: n_vocab          = 256000
0.00.226.469 I llm_load_print_meta: n_merges         = 0
0.00.226.469 I llm_load_print_meta: vocab_only       = 0
0.00.226.470 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.470 I llm_load_print_meta: n_embd           = 2048
0.00.226.470 I llm_load_print_meta: n_layer          = 18
0.00.226.482 I llm_load_print_meta: n_head           = 8
0.00.226.483 I llm_load_print_meta: n_head_kv        = 1
0.00.226.483 I llm_load_print_meta: n_rot            = 256
0.00.226.483 I llm_load_print_meta: n_swa            = 0
0.00.226.484 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.484 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.485 I llm_load_print_meta: n_gqa            = 8
0.00.226.486 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.487 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.488 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.489 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.490 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.490 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.491 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.492 I llm_load_print_meta: n_ff             = 16384
0.00.226.492 I llm_load_print_meta: n_expert         = 0
0.00.226.492 I llm_load_print_meta: n_expert_used    = 0
0.00.226.492 I llm_load_print_meta: causal attn      = 1
0.00.226.492 I llm_load_print_meta: pooling type     = 0
0.00.226.493 I llm_load_print_meta: rope type        = 2
0.00.226.493 I llm_load_print_meta: rope scaling     = linear
0.00.226.494 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.495 I llm_load_print_meta: freq_scale_train = 1
0.00.226.495 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.495 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.495 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.496 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.496 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.496 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.497 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.497 I llm_load_print_meta: model type       = 2B
0.00.226.498 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.226.499 I llm_load_print_meta: model params     = 2.51 B
0.00.226.499 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.226.500 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.500 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.500 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.501 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.501 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.501 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.502 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.502 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.502 I llm_load_print_meta: max token length = 93
0.00.226.520 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.283.766 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.288.747 I llama_new_context_with_model: n_ctx      = 8192
0.00.288.754 I llama_new_context_with_model: n_batch    = 2048
0.00.288.754 I llama_new_context_with_model: n_ubatch   = 512
0.00.288.755 I llama_new_context_with_model: flash_attn = 0
0.00.288.757 I llama_new_context_with_model: freq_base  = 10000.0
0.00.288.758 I llama_new_context_with_model: freq_scale = 1
0.00.317.289 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.317.305 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.317.394 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.318.250 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.318.258 I llama_new_context_with_model: graph nodes  = 601
0.00.318.258 I llama_new_context_with_model: graph splits = 1
0.00.318.260 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.119 I main: llama threadpool init, n_threads = 4
0.00.399.130 I 
0.00.399.201 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.204 I 
0.00.399.240 I sampler seed: 810574812
0.00.399.250 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.252 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.253 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.253 I 
 seconded 1969 Corvette Sting Ray. This beauty has been meticulously restored to its original condition, with all original paint, interior, and drivetrain

0.01.964.477 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6932.77 tokens per second)
0.01.964.479 I llama_perf_context_print:        load time =     397.28 ms
0.01.964.480 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.964.481 I llama_perf_context_print:        eval time =    1547.36 ms /    32 runs   (   48.35 ms per token,    20.68 tokens per second)
0.01.964.482 I llama_perf_context_print:       total time =    1565.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.564s
user	8m8.399s
sys	0m6.859s
