+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.623 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.832 I main: llama backend init
0.00.002.772 I main: load the model and apply lora adapter, if any
0.00.024.500 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.673 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.754 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.764 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.765 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.769 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.770 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.771 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.772 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.773 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.774 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.779 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.779 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.780 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.782 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.782 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.596 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.078 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.087 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.094 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.095 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.096 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.097 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.098 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.099 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.101 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.102 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.103 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.104 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.192.105 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.113 I llama_model_loader: - type  f32:   37 tensors
0.00.192.117 I llama_model_loader: - type q8_0:  127 tensors
0.00.331.510 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.354.050 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.355.068 I llm_load_vocab: special tokens cache size = 5
0.00.413.218 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.413.273 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.413.274 I llm_load_print_meta: arch             = gemma
0.00.413.274 I llm_load_print_meta: vocab type       = SPM
0.00.413.275 I llm_load_print_meta: n_vocab          = 256000
0.00.413.278 I llm_load_print_meta: n_merges         = 0
0.00.413.278 I llm_load_print_meta: vocab_only       = 0
0.00.413.279 I llm_load_print_meta: n_ctx_train      = 8192
0.00.413.279 I llm_load_print_meta: n_embd           = 2048
0.00.413.280 I llm_load_print_meta: n_layer          = 18
0.00.413.341 I llm_load_print_meta: n_head           = 8
0.00.413.347 I llm_load_print_meta: n_head_kv        = 1
0.00.413.348 I llm_load_print_meta: n_rot            = 256
0.00.413.348 I llm_load_print_meta: n_swa            = 0
0.00.413.348 I llm_load_print_meta: n_embd_head_k    = 256
0.00.413.349 I llm_load_print_meta: n_embd_head_v    = 256
0.00.413.353 I llm_load_print_meta: n_gqa            = 8
0.00.413.358 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.413.362 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.413.363 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.413.365 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.413.365 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.413.366 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.413.367 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.413.389 I llm_load_print_meta: n_ff             = 16384
0.00.413.390 I llm_load_print_meta: n_expert         = 0
0.00.413.390 I llm_load_print_meta: n_expert_used    = 0
0.00.413.391 I llm_load_print_meta: causal attn      = 1
0.00.413.391 I llm_load_print_meta: pooling type     = 0
0.00.413.391 I llm_load_print_meta: rope type        = 2
0.00.413.392 I llm_load_print_meta: rope scaling     = linear
0.00.413.394 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.413.394 I llm_load_print_meta: freq_scale_train = 1
0.00.413.394 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.413.395 I llm_load_print_meta: rope_finetuned   = unknown
0.00.413.395 I llm_load_print_meta: ssm_d_conv       = 0
0.00.413.396 I llm_load_print_meta: ssm_d_inner      = 0
0.00.413.396 I llm_load_print_meta: ssm_d_state      = 0
0.00.413.396 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.413.396 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.413.397 I llm_load_print_meta: model type       = 2B
0.00.413.398 I llm_load_print_meta: model ftype      = Q8_0
0.00.413.398 I llm_load_print_meta: model params     = 2.51 B
0.00.413.399 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.413.399 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.413.400 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.413.400 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.413.401 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.413.401 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.413.402 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.413.402 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.413.408 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.413.409 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.413.410 I llm_load_print_meta: max token length = 93
0.00.413.580 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.513.608 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.513.617 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.513.617 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.513.618 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.513.619 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.513.619 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.519.199 I llama_new_context_with_model: n_ctx      = 8192
0.00.519.206 I llama_new_context_with_model: n_batch    = 2048
0.00.519.207 I llama_new_context_with_model: n_ubatch   = 512
0.00.519.208 I llama_new_context_with_model: flash_attn = 0
0.00.519.210 I llama_new_context_with_model: freq_base  = 10000.0
0.00.519.211 I llama_new_context_with_model: freq_scale = 1
0.00.549.222 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.549.262 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.549.373 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.550.760 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.550.767 I llama_new_context_with_model: graph nodes  = 601
0.00.550.767 I llama_new_context_with_model: graph splits = 1
0.00.550.782 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.165.655 I main: llama threadpool init, n_threads = 4
0.01.165.667 I 
0.01.165.758 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.165.762 I 
0.01.165.929 I sampler seed: 686663093
0.01.165.940 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.165.946 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.165.949 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.165.950 I 
 increasities with the following prompts:

1. "Write a poem about a forgotten city."
2. "Compose a short story about a lost treasure."

0.14.578.530 I llama_perf_sampler_print:    sampling time =      49.31 ms /    33 runs   (    1.49 ms per token,   669.29 tokens per second)
0.14.578.533 I llama_perf_context_print:        load time =    1162.80 ms
0.14.578.535 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.578.537 I llama_perf_context_print:        eval time =   13331.10 ms /    32 runs   (  416.60 ms per token,     2.40 tokens per second)
0.14.578.538 I llama_perf_context_print:       total time =   13412.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.629 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.002.818 I main: load the model and apply lora adapter, if any
0.00.024.725 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.824 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.839 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.844 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.849 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.851 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.852 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.854 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.855 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.857 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.864 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.869 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.870 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.871 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.872 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.004 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.591 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.198 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.205 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.206 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.207 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.208 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.209 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.210 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.213 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.214 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.214 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.215 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.193.216 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.224 I llama_model_loader: - type  f32:   37 tensors
0.00.193.227 I llama_model_loader: - type q8_0:  127 tensors
0.00.335.751 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.359.003 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.360.102 I llm_load_vocab: special tokens cache size = 5
0.00.417.756 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.417.815 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.417.816 I llm_load_print_meta: arch             = gemma
0.00.417.817 I llm_load_print_meta: vocab type       = SPM
0.00.417.818 I llm_load_print_meta: n_vocab          = 256000
0.00.417.820 I llm_load_print_meta: n_merges         = 0
0.00.417.820 I llm_load_print_meta: vocab_only       = 0
0.00.417.821 I llm_load_print_meta: n_ctx_train      = 8192
0.00.417.821 I llm_load_print_meta: n_embd           = 2048
0.00.417.821 I llm_load_print_meta: n_layer          = 18
0.00.417.883 I llm_load_print_meta: n_head           = 8
0.00.417.890 I llm_load_print_meta: n_head_kv        = 1
0.00.417.890 I llm_load_print_meta: n_rot            = 256
0.00.417.891 I llm_load_print_meta: n_swa            = 0
0.00.417.891 I llm_load_print_meta: n_embd_head_k    = 256
0.00.417.891 I llm_load_print_meta: n_embd_head_v    = 256
0.00.417.896 I llm_load_print_meta: n_gqa            = 8
0.00.417.910 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.417.917 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.417.918 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.417.920 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.417.921 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.417.922 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.417.922 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.417.929 I llm_load_print_meta: n_ff             = 16384
0.00.417.930 I llm_load_print_meta: n_expert         = 0
0.00.417.931 I llm_load_print_meta: n_expert_used    = 0
0.00.417.931 I llm_load_print_meta: causal attn      = 1
0.00.417.944 I llm_load_print_meta: pooling type     = 0
0.00.417.945 I llm_load_print_meta: rope type        = 2
0.00.417.946 I llm_load_print_meta: rope scaling     = linear
0.00.417.948 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.417.949 I llm_load_print_meta: freq_scale_train = 1
0.00.417.950 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.417.950 I llm_load_print_meta: rope_finetuned   = unknown
0.00.417.955 I llm_load_print_meta: ssm_d_conv       = 0
0.00.417.955 I llm_load_print_meta: ssm_d_inner      = 0
0.00.417.956 I llm_load_print_meta: ssm_d_state      = 0
0.00.417.956 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.417.977 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.417.978 I llm_load_print_meta: model type       = 2B
0.00.417.980 I llm_load_print_meta: model ftype      = Q8_0
0.00.417.984 I llm_load_print_meta: model params     = 2.51 B
0.00.417.986 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.417.987 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.417.988 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.417.988 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.417.989 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.417.990 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.417.991 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.417.991 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.417.998 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.418.000 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.418.001 I llm_load_print_meta: max token length = 93
0.00.418.190 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.511.631 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.517.496 I llama_new_context_with_model: n_ctx      = 8192
0.00.517.502 I llama_new_context_with_model: n_batch    = 2048
0.00.517.502 I llama_new_context_with_model: n_ubatch   = 512
0.00.517.503 I llama_new_context_with_model: flash_attn = 0
0.00.517.506 I llama_new_context_with_model: freq_base  = 10000.0
0.00.517.507 I llama_new_context_with_model: freq_scale = 1
0.00.546.598 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.546.644 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.546.764 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.548.213 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.548.221 I llama_new_context_with_model: graph nodes  = 601
0.00.548.221 I llama_new_context_with_model: graph splits = 1
0.00.548.246 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.163.776 I main: llama threadpool init, n_threads = 4
0.01.163.787 I 
0.01.163.897 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.163.901 I 
0.01.164.079 I sampler seed: 4035816328
0.01.164.091 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.164.096 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.164.098 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.164.098 I 
 increably with the vibrant hues and intricate patterns of our artisanal jewelry.

We create unique pieces that blend timeless elegance with modern sensibilities, ensuring a perfect balance of

0.14.867.565 I llama_perf_sampler_print:    sampling time =      49.66 ms /    33 runs   (    1.50 ms per token,   664.51 tokens per second)
0.14.867.567 I llama_perf_context_print:        load time =    1160.87 ms
0.14.867.569 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.867.570 I llama_perf_context_print:        eval time =   13620.45 ms /    32 runs   (  425.64 ms per token,     2.35 tokens per second)
0.14.867.593 I llama_perf_context_print:       total time =   13703.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.717 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.939 I main: llama backend init
0.00.002.887 I main: load the model and apply lora adapter, if any
0.00.024.964 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.155 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.258 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.271 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.272 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.278 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.282 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.284 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.285 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.288 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.289 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.299 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.304 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.305 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.307 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.308 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.693 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.182.067 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.144 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.146 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.148 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.149 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.161 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.166 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.167 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.168 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.169 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.194.170 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.179 I llama_model_loader: - type  f32:   37 tensors
0.00.194.183 I llama_model_loader: - type q8_0:  127 tensors
0.00.334.075 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.357.600 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.358.697 I llm_load_vocab: special tokens cache size = 5
0.00.426.691 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.426.754 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.426.755 I llm_load_print_meta: arch             = gemma
0.00.426.756 I llm_load_print_meta: vocab type       = SPM
0.00.426.757 I llm_load_print_meta: n_vocab          = 256000
0.00.426.759 I llm_load_print_meta: n_merges         = 0
0.00.426.760 I llm_load_print_meta: vocab_only       = 0
0.00.426.760 I llm_load_print_meta: n_ctx_train      = 8192
0.00.426.760 I llm_load_print_meta: n_embd           = 2048
0.00.426.761 I llm_load_print_meta: n_layer          = 18
0.00.426.824 I llm_load_print_meta: n_head           = 8
0.00.426.831 I llm_load_print_meta: n_head_kv        = 1
0.00.426.832 I llm_load_print_meta: n_rot            = 256
0.00.426.832 I llm_load_print_meta: n_swa            = 0
0.00.426.833 I llm_load_print_meta: n_embd_head_k    = 256
0.00.426.846 I llm_load_print_meta: n_embd_head_v    = 256
0.00.426.851 I llm_load_print_meta: n_gqa            = 8
0.00.426.856 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.426.861 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.426.862 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.426.864 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.426.865 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.426.865 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.426.865 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.426.871 I llm_load_print_meta: n_ff             = 16384
0.00.426.871 I llm_load_print_meta: n_expert         = 0
0.00.426.871 I llm_load_print_meta: n_expert_used    = 0
0.00.426.876 I llm_load_print_meta: causal attn      = 1
0.00.426.876 I llm_load_print_meta: pooling type     = 0
0.00.426.877 I llm_load_print_meta: rope type        = 2
0.00.426.877 I llm_load_print_meta: rope scaling     = linear
0.00.426.879 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.426.880 I llm_load_print_meta: freq_scale_train = 1
0.00.426.881 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.426.881 I llm_load_print_meta: rope_finetuned   = unknown
0.00.426.881 I llm_load_print_meta: ssm_d_conv       = 0
0.00.426.882 I llm_load_print_meta: ssm_d_inner      = 0
0.00.426.882 I llm_load_print_meta: ssm_d_state      = 0
0.00.426.883 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.426.884 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.426.884 I llm_load_print_meta: model type       = 2B
0.00.426.885 I llm_load_print_meta: model ftype      = Q8_0
0.00.426.886 I llm_load_print_meta: model params     = 2.51 B
0.00.426.886 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.426.900 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.426.901 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.426.910 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.426.911 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.426.911 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.426.912 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.426.913 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.426.919 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.426.921 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.426.921 I llm_load_print_meta: max token length = 93
0.00.427.100 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.504.643 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.504.650 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.504.651 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.504.652 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.504.652 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.504.653 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.510.387 I llama_new_context_with_model: n_ctx      = 8192
0.00.510.394 I llama_new_context_with_model: n_batch    = 2048
0.00.510.395 I llama_new_context_with_model: n_ubatch   = 512
0.00.510.395 I llama_new_context_with_model: flash_attn = 0
0.00.510.398 I llama_new_context_with_model: freq_base  = 10000.0
0.00.510.399 I llama_new_context_with_model: freq_scale = 1
0.00.539.183 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.539.225 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.539.341 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.540.745 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.540.753 I llama_new_context_with_model: graph nodes  = 601
0.00.540.753 I llama_new_context_with_model: graph splits = 1
0.00.540.773 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.155.857 I main: llama threadpool init, n_threads = 4
0.01.155.869 I 
0.01.155.967 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.155.973 I 
0.01.156.152 I sampler seed: 143133118
0.01.156.163 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.156.170 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.156.171 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.156.171 I 
 maneupherately.

I am unable to perform the requested action due to a technical limitation.

I apologize for any inconvenience this may cause. [end of text]


0.13.772.670 I llama_perf_sampler_print:    sampling time =      46.07 ms /    31 runs   (    1.49 ms per token,   672.90 tokens per second)
0.13.772.673 I llama_perf_context_print:        load time =    1152.88 ms
0.13.772.675 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.772.677 I llama_perf_context_print:        eval time =   12540.39 ms /    30 runs   (  418.01 ms per token,     2.39 tokens per second)
0.13.772.679 I llama_perf_context_print:       total time =   12616.82 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.610 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.822 I main: llama backend init
0.00.002.786 I main: load the model and apply lora adapter, if any
0.00.026.468 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.026.653 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.026.746 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.758 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.760 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.764 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.767 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.769 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.771 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.773 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.774 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.783 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.787 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.788 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.789 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.790 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.097.886 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.496 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.576 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.583 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.584 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.585 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.586 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.587 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.588 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.592 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.592 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.593 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.594 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.197.595 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.602 I llama_model_loader: - type  f32:   37 tensors
0.00.197.606 I llama_model_loader: - type q8_0:  127 tensors
0.00.335.828 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.358.117 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.359.159 I llm_load_vocab: special tokens cache size = 5
0.00.416.827 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.416.886 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.416.887 I llm_load_print_meta: arch             = gemma
0.00.416.888 I llm_load_print_meta: vocab type       = SPM
0.00.416.888 I llm_load_print_meta: n_vocab          = 256000
0.00.416.891 I llm_load_print_meta: n_merges         = 0
0.00.416.892 I llm_load_print_meta: vocab_only       = 0
0.00.416.892 I llm_load_print_meta: n_ctx_train      = 8192
0.00.416.893 I llm_load_print_meta: n_embd           = 2048
0.00.416.893 I llm_load_print_meta: n_layer          = 18
0.00.416.954 I llm_load_print_meta: n_head           = 8
0.00.416.961 I llm_load_print_meta: n_head_kv        = 1
0.00.416.962 I llm_load_print_meta: n_rot            = 256
0.00.416.963 I llm_load_print_meta: n_swa            = 0
0.00.416.964 I llm_load_print_meta: n_embd_head_k    = 256
0.00.416.965 I llm_load_print_meta: n_embd_head_v    = 256
0.00.416.972 I llm_load_print_meta: n_gqa            = 8
0.00.416.982 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.416.989 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.416.994 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.416.996 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.416.997 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.416.997 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.416.998 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.417.019 I llm_load_print_meta: n_ff             = 16384
0.00.417.022 I llm_load_print_meta: n_expert         = 0
0.00.417.023 I llm_load_print_meta: n_expert_used    = 0
0.00.417.023 I llm_load_print_meta: causal attn      = 1
0.00.417.024 I llm_load_print_meta: pooling type     = 0
0.00.417.024 I llm_load_print_meta: rope type        = 2
0.00.417.025 I llm_load_print_meta: rope scaling     = linear
0.00.417.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.417.028 I llm_load_print_meta: freq_scale_train = 1
0.00.417.029 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.417.030 I llm_load_print_meta: rope_finetuned   = unknown
0.00.417.043 I llm_load_print_meta: ssm_d_conv       = 0
0.00.417.043 I llm_load_print_meta: ssm_d_inner      = 0
0.00.417.044 I llm_load_print_meta: ssm_d_state      = 0
0.00.417.053 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.417.054 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.417.055 I llm_load_print_meta: model type       = 2B
0.00.417.057 I llm_load_print_meta: model ftype      = Q8_0
0.00.417.058 I llm_load_print_meta: model params     = 2.51 B
0.00.417.060 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.417.060 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.417.061 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.417.062 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.417.063 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.417.064 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.417.065 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.417.069 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.417.076 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.417.077 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.417.078 I llm_load_print_meta: max token length = 93
0.00.417.259 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.488.875 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.488.884 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.494.650 I llama_new_context_with_model: n_ctx      = 8192
0.00.494.657 I llama_new_context_with_model: n_batch    = 2048
0.00.494.658 I llama_new_context_with_model: n_ubatch   = 512
0.00.494.658 I llama_new_context_with_model: flash_attn = 0
0.00.494.662 I llama_new_context_with_model: freq_base  = 10000.0
0.00.494.662 I llama_new_context_with_model: freq_scale = 1
0.00.524.053 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.524.095 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.524.204 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.525.608 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.525.616 I llama_new_context_with_model: graph nodes  = 601
0.00.525.616 I llama_new_context_with_model: graph splits = 1
0.00.525.636 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.141.816 I main: llama threadpool init, n_threads = 4
0.01.141.828 I 
0.01.141.923 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.141.923 I 
0.01.142.106 I sampler seed: 182633053
0.01.142.118 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.142.122 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.142.123 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.142.123 I 
 increasities in the comments section of a news article.

I am unable to access or process the specified content, as I am a language model and do not

0.14.726.555 I llama_perf_sampler_print:    sampling time =      49.29 ms /    33 runs   (    1.49 ms per token,   669.53 tokens per second)
0.14.726.577 I llama_perf_context_print:        load time =    1138.95 ms
0.14.726.579 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.726.581 I llama_perf_context_print:        eval time =   13502.59 ms /    32 runs   (  421.96 ms per token,     2.37 tokens per second)
0.14.726.582 I llama_perf_context_print:       total time =   13584.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m7.430s
user	3m45.178s
sys	0m9.339s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3848 (c919d5db)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200058.75 ms
main:    total time = 200058.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.622 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.823 I main: load the model and apply lora adapter, if any
0.00.024.580 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.756 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.840 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.851 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.852 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.856 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.858 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.859 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.860 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.861 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.862 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.868 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.869 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.870 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.870 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.871 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.627 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.193 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.284 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.293 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.294 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.295 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.295 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.296 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.297 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.301 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.301 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.303 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.192.303 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.192.304 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.192.313 I llama_model_loader: - type  f32:   37 tensors
0.00.192.317 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.318 I llama_model_loader: - type q6_K:   19 tensors
0.00.337.340 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.362.681 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.363.665 I llm_load_vocab: special tokens cache size = 5
0.00.431.636 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.431.695 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.431.696 I llm_load_print_meta: arch             = gemma
0.00.431.697 I llm_load_print_meta: vocab type       = SPM
0.00.431.698 I llm_load_print_meta: n_vocab          = 256000
0.00.431.701 I llm_load_print_meta: n_merges         = 0
0.00.431.701 I llm_load_print_meta: vocab_only       = 0
0.00.431.702 I llm_load_print_meta: n_ctx_train      = 8192
0.00.431.702 I llm_load_print_meta: n_embd           = 2048
0.00.431.702 I llm_load_print_meta: n_layer          = 18
0.00.431.766 I llm_load_print_meta: n_head           = 8
0.00.431.772 I llm_load_print_meta: n_head_kv        = 1
0.00.431.773 I llm_load_print_meta: n_rot            = 256
0.00.431.773 I llm_load_print_meta: n_swa            = 0
0.00.431.774 I llm_load_print_meta: n_embd_head_k    = 256
0.00.431.774 I llm_load_print_meta: n_embd_head_v    = 256
0.00.431.779 I llm_load_print_meta: n_gqa            = 8
0.00.431.784 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.431.789 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.431.790 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.431.791 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.431.792 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.431.792 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.431.792 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.431.797 I llm_load_print_meta: n_ff             = 16384
0.00.431.798 I llm_load_print_meta: n_expert         = 0
0.00.431.798 I llm_load_print_meta: n_expert_used    = 0
0.00.431.798 I llm_load_print_meta: causal attn      = 1
0.00.431.799 I llm_load_print_meta: pooling type     = 0
0.00.431.799 I llm_load_print_meta: rope type        = 2
0.00.431.800 I llm_load_print_meta: rope scaling     = linear
0.00.431.801 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.431.802 I llm_load_print_meta: freq_scale_train = 1
0.00.431.803 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.431.804 I llm_load_print_meta: rope_finetuned   = unknown
0.00.431.804 I llm_load_print_meta: ssm_d_conv       = 0
0.00.431.815 I llm_load_print_meta: ssm_d_inner      = 0
0.00.431.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.431.819 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.431.820 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.431.820 I llm_load_print_meta: model type       = 2B
0.00.431.822 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.431.822 I llm_load_print_meta: model params     = 2.51 B
0.00.431.823 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.431.824 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.431.825 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.431.825 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.431.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.431.826 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.431.830 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.431.831 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.431.849 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.431.851 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.431.859 I llm_load_print_meta: max token length = 93
0.00.432.038 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.492.388 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.492.399 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.492.400 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.492.401 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.492.401 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.492.402 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.497.974 I llama_new_context_with_model: n_ctx      = 8192
0.00.497.981 I llama_new_context_with_model: n_batch    = 2048
0.00.497.982 I llama_new_context_with_model: n_ubatch   = 512
0.00.497.982 I llama_new_context_with_model: flash_attn = 0
0.00.497.985 I llama_new_context_with_model: freq_base  = 10000.0
0.00.497.986 I llama_new_context_with_model: freq_scale = 1
0.00.528.274 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.528.319 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.528.426 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.529.855 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.529.863 I llama_new_context_with_model: graph nodes  = 601
0.00.529.863 I llama_new_context_with_model: graph splits = 1
0.00.529.879 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.109.472 I main: llama threadpool init, n_threads = 4
0.01.109.484 I 
0.01.109.576 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.109.580 I 
0.01.109.750 I sampler seed: 3629091316
0.01.109.761 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.109.765 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.109.766 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.109.777 I 
 seconally. I think I might have a UTI.

I am experiencing:

- Frequent urination
- Strong urge to urinate
- Pain or burning

0.12.042.911 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.12 tokens per second)
0.12.042.914 I llama_perf_context_print:        load time =    1106.57 ms
0.12.042.916 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.042.917 I llama_perf_context_print:        eval time =   10850.42 ms /    32 runs   (  339.08 ms per token,     2.95 tokens per second)
0.12.042.931 I llama_perf_context_print:       total time =   10933.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3848 (c919d5db)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 201186.55 ms
main:    total time = 201186.55 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.617 I build: 3848 (c919d5db) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.818 I main: llama backend init
0.00.002.758 I main: load the model and apply lora adapter, if any
0.00.024.709 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.796 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.810 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.812 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.816 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.817 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.817 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.818 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.820 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.820 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.826 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.826 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.828 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.829 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.830 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.092.760 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.180.037 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.192.133 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.192.140 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.192.140 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.192.141 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.192.142 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.192.143 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.192.144 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.192.147 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.192.148 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.192.155 I llama_model_loader: - type  f32:   37 tensors
0.00.192.159 I llama_model_loader: - type q4_K:  108 tensors
0.00.192.159 I llama_model_loader: - type q6_K:   19 tensors
0.00.340.258 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.365.287 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.366.292 I llm_load_vocab: special tokens cache size = 5
0.00.423.885 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.423.942 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.423.943 I llm_load_print_meta: arch             = gemma
0.00.423.944 I llm_load_print_meta: vocab type       = SPM
0.00.423.944 I llm_load_print_meta: n_vocab          = 256000
0.00.423.947 I llm_load_print_meta: n_merges         = 0
0.00.423.947 I llm_load_print_meta: vocab_only       = 0
0.00.423.947 I llm_load_print_meta: n_ctx_train      = 8192
0.00.423.948 I llm_load_print_meta: n_embd           = 2048
0.00.423.948 I llm_load_print_meta: n_layer          = 18
0.00.424.011 I llm_load_print_meta: n_head           = 8
0.00.424.018 I llm_load_print_meta: n_head_kv        = 1
0.00.424.032 I llm_load_print_meta: n_rot            = 256
0.00.424.033 I llm_load_print_meta: n_swa            = 0
0.00.424.033 I llm_load_print_meta: n_embd_head_k    = 256
0.00.424.033 I llm_load_print_meta: n_embd_head_v    = 256
0.00.424.038 I llm_load_print_meta: n_gqa            = 8
0.00.424.042 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.424.047 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.424.048 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.424.050 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.424.050 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.424.051 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.424.051 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.424.056 I llm_load_print_meta: n_ff             = 16384
0.00.424.057 I llm_load_print_meta: n_expert         = 0
0.00.424.057 I llm_load_print_meta: n_expert_used    = 0
0.00.424.062 I llm_load_print_meta: causal attn      = 1
0.00.424.063 I llm_load_print_meta: pooling type     = 0
0.00.424.063 I llm_load_print_meta: rope type        = 2
0.00.424.064 I llm_load_print_meta: rope scaling     = linear
0.00.424.078 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.424.083 I llm_load_print_meta: freq_scale_train = 1
0.00.424.084 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.424.085 I llm_load_print_meta: rope_finetuned   = unknown
0.00.424.085 I llm_load_print_meta: ssm_d_conv       = 0
0.00.424.085 I llm_load_print_meta: ssm_d_inner      = 0
0.00.424.086 I llm_load_print_meta: ssm_d_state      = 0
0.00.424.086 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.424.087 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.424.092 I llm_load_print_meta: model type       = 2B
0.00.424.093 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.424.093 I llm_load_print_meta: model params     = 2.51 B
0.00.424.094 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.424.104 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.424.105 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.424.106 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.424.106 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.424.106 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.424.107 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.424.107 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.424.113 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.424.115 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.424.115 I llm_load_print_meta: max token length = 93
0.00.424.287 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.483.547 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.489.024 I llama_new_context_with_model: n_ctx      = 8192
0.00.489.031 I llama_new_context_with_model: n_batch    = 2048
0.00.489.032 I llama_new_context_with_model: n_ubatch   = 512
0.00.489.032 I llama_new_context_with_model: flash_attn = 0
0.00.489.034 I llama_new_context_with_model: freq_base  = 10000.0
0.00.489.035 I llama_new_context_with_model: freq_scale = 1
0.00.518.302 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.518.344 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.518.455 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.519.797 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.519.803 I llama_new_context_with_model: graph nodes  = 601
0.00.519.804 I llama_new_context_with_model: graph splits = 1
0.00.519.821 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.101.135 I main: llama threadpool init, n_threads = 4
0.01.101.146 I 
0.01.101.239 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.101.243 I 
0.01.101.414 I sampler seed: 4164900077
0.01.101.425 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.101.429 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.101.430 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.101.430 I 
 seconded text from a document.

I am unable to access the document and would like to request assistance in retrieving the information from the document.

**To

0.12.136.409 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.87 tokens per second)
0.12.136.414 I llama_perf_context_print:        load time =    1098.30 ms
0.12.136.416 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.136.418 I llama_perf_context_print:        eval time =   10953.71 ms /    32 runs   (  342.30 ms per token,     2.92 tokens per second)
0.12.136.419 I llama_perf_context_print:       total time =   11035.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m8.305s
user	50m27.253s
sys	0m6.297s
