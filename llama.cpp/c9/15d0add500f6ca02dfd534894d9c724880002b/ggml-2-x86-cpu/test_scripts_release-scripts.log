+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.553 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.000.934 I main: load the model and apply lora adapter, if any
0.00.021.621 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.632 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.640 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.644 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.645 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.649 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.650 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.660 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.661 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.662 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.662 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.668 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.668 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.669 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.669 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.670 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.698 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.231 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.190 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.198 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.199 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.200 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.200 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.201 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.202 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.204 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.205 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.205 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.206 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.207 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.212 I llama_model_loader: - type  f32:   37 tensors
0.00.133.213 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.972 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.279 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.911 I llm_load_vocab: special tokens cache size = 5
0.00.278.976 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.997 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.998 I llm_load_print_meta: arch             = gemma
0.00.278.999 I llm_load_print_meta: vocab type       = SPM
0.00.278.999 I llm_load_print_meta: n_vocab          = 256000
0.00.279.000 I llm_load_print_meta: n_merges         = 0
0.00.279.000 I llm_load_print_meta: vocab_only       = 0
0.00.279.001 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.001 I llm_load_print_meta: n_embd           = 2048
0.00.279.002 I llm_load_print_meta: n_layer          = 18
0.00.279.014 I llm_load_print_meta: n_head           = 8
0.00.279.015 I llm_load_print_meta: n_head_kv        = 1
0.00.279.016 I llm_load_print_meta: n_rot            = 256
0.00.279.016 I llm_load_print_meta: n_swa            = 0
0.00.279.016 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.017 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.018 I llm_load_print_meta: n_gqa            = 8
0.00.279.019 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.019 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.020 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.022 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.022 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.023 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.023 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.024 I llm_load_print_meta: n_ff             = 16384
0.00.279.024 I llm_load_print_meta: n_expert         = 0
0.00.279.024 I llm_load_print_meta: n_expert_used    = 0
0.00.279.025 I llm_load_print_meta: causal attn      = 1
0.00.279.025 I llm_load_print_meta: pooling type     = 0
0.00.279.025 I llm_load_print_meta: rope type        = 2
0.00.279.026 I llm_load_print_meta: rope scaling     = linear
0.00.279.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.028 I llm_load_print_meta: freq_scale_train = 1
0.00.279.029 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.029 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.029 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.029 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.030 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.030 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.030 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.031 I llm_load_print_meta: model type       = 2B
0.00.279.032 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.032 I llm_load_print_meta: model params     = 2.51 B
0.00.279.033 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.034 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.034 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.034 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.035 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.035 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.036 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.036 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.036 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.037 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.037 I llm_load_print_meta: max token length = 93
0.00.379.078 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.379.086 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.379.087 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.379.087 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.379.088 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.379.088 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.384.666 I llama_new_context_with_model: n_seq_max     = 1
0.00.384.673 I llama_new_context_with_model: n_ctx         = 4096
0.00.384.674 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.384.674 I llama_new_context_with_model: n_batch       = 2048
0.00.384.675 I llama_new_context_with_model: n_ubatch      = 512
0.00.384.675 I llama_new_context_with_model: flash_attn    = 0
0.00.384.678 I llama_new_context_with_model: freq_base     = 10000.0
0.00.384.679 I llama_new_context_with_model: freq_scale    = 1
0.00.384.680 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.400.984 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.401.000 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.401.099 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.361 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.402.367 I llama_new_context_with_model: graph nodes  = 601
0.00.402.367 I llama_new_context_with_model: graph splits = 1
0.00.402.369 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.488.667 I main: llama threadpool init, n_threads = 4
0.00.488.680 I 
0.00.488.766 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.488.770 I 
0.00.488.827 I sampler seed: 1681629160
0.00.488.839 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.844 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.488.845 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.845 I 
 increasities from ancient Greece, including Pythagoras and Plato.

**Pythagoreanism**

Pythagoreanism is a philosophical system that emphasizes the interconnectedness

0.02.753.972 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6719.61 tokens per second)
0.02.753.974 I llama_perf_context_print:        load time =     487.71 ms
0.02.753.975 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.753.991 I llama_perf_context_print:        eval time =    2246.35 ms /    32 runs   (   70.20 ms per token,    14.25 tokens per second)
0.02.753.992 I llama_perf_context_print:       total time =    2265.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.546 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.000.904 I main: load the model and apply lora adapter, if any
0.00.021.631 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.646 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.654 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.655 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.661 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.664 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.666 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.666 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.667 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.668 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.675 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.676 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.677 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.678 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.679 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.180 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.448 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.355 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.363 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.364 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.364 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.365 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.366 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.366 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.369 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.369 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.370 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.371 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.372 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.377 I llama_model_loader: - type  f32:   37 tensors
0.00.133.379 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.167 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.647 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.295 I llm_load_vocab: special tokens cache size = 5
0.00.276.252 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.271 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.272 I llm_load_print_meta: arch             = gemma
0.00.276.272 I llm_load_print_meta: vocab type       = SPM
0.00.276.273 I llm_load_print_meta: n_vocab          = 256000
0.00.276.274 I llm_load_print_meta: n_merges         = 0
0.00.276.274 I llm_load_print_meta: vocab_only       = 0
0.00.276.274 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.275 I llm_load_print_meta: n_embd           = 2048
0.00.276.275 I llm_load_print_meta: n_layer          = 18
0.00.276.286 I llm_load_print_meta: n_head           = 8
0.00.276.287 I llm_load_print_meta: n_head_kv        = 1
0.00.276.287 I llm_load_print_meta: n_rot            = 256
0.00.276.288 I llm_load_print_meta: n_swa            = 0
0.00.276.288 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.288 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.289 I llm_load_print_meta: n_gqa            = 8
0.00.276.290 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.291 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.292 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.293 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.294 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.294 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.294 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.295 I llm_load_print_meta: n_ff             = 16384
0.00.276.295 I llm_load_print_meta: n_expert         = 0
0.00.276.296 I llm_load_print_meta: n_expert_used    = 0
0.00.276.296 I llm_load_print_meta: causal attn      = 1
0.00.276.296 I llm_load_print_meta: pooling type     = 0
0.00.276.297 I llm_load_print_meta: rope type        = 2
0.00.276.297 I llm_load_print_meta: rope scaling     = linear
0.00.276.298 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.299 I llm_load_print_meta: freq_scale_train = 1
0.00.276.299 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.300 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.300 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.300 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.300 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.300 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.301 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.301 I llm_load_print_meta: model type       = 2B
0.00.276.302 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.302 I llm_load_print_meta: model params     = 2.51 B
0.00.276.303 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.304 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.304 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.305 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.305 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.305 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.306 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.306 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.306 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.307 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.307 I llm_load_print_meta: max token length = 93
0.00.374.045 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.379.500 I llama_new_context_with_model: n_seq_max     = 1
0.00.379.507 I llama_new_context_with_model: n_ctx         = 4096
0.00.379.507 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.379.508 I llama_new_context_with_model: n_batch       = 2048
0.00.379.508 I llama_new_context_with_model: n_ubatch      = 512
0.00.379.509 I llama_new_context_with_model: flash_attn    = 0
0.00.379.512 I llama_new_context_with_model: freq_base     = 10000.0
0.00.379.513 I llama_new_context_with_model: freq_scale    = 1
0.00.379.515 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.395.598 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.395.614 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.395.712 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.989 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.996 I llama_new_context_with_model: graph nodes  = 601
0.00.396.997 I llama_new_context_with_model: graph splits = 1
0.00.396.998 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.720 I main: llama threadpool init, n_threads = 4
0.00.479.734 I 
0.00.479.825 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.479.829 I 
0.00.479.882 I sampler seed: 1412154544
0.00.479.893 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.897 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.479.901 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.901 I 
 increasities, but does not respond to them.

This creature is a powerful entity that can shape the world, but is ultimately powerless against the forces of fate

0.02.737.247 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7040.75 tokens per second)
0.02.737.250 I llama_perf_context_print:        load time =     478.79 ms
0.02.737.251 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.737.253 I llama_perf_context_print:        eval time =    2238.51 ms /    32 runs   (   69.95 ms per token,    14.30 tokens per second)
0.02.737.253 I llama_perf_context_print:       total time =    2257.53 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.000.866 I main: load the model and apply lora adapter, if any
0.00.021.251 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.260 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.267 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.271 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.272 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.276 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.277 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.277 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.278 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.278 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.279 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.291 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.292 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.293 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.294 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.294 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.536 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.259 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.150 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.157 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.158 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.158 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.159 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.160 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.161 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.163 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.164 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.164 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.164 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.165 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.170 I llama_model_loader: - type  f32:   37 tensors
0.00.133.171 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.684 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.264.758 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.389 I llm_load_vocab: special tokens cache size = 5
0.00.287.700 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.718 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.719 I llm_load_print_meta: arch             = gemma
0.00.287.719 I llm_load_print_meta: vocab type       = SPM
0.00.287.731 I llm_load_print_meta: n_vocab          = 256000
0.00.287.731 I llm_load_print_meta: n_merges         = 0
0.00.287.732 I llm_load_print_meta: vocab_only       = 0
0.00.287.732 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.733 I llm_load_print_meta: n_embd           = 2048
0.00.287.733 I llm_load_print_meta: n_layer          = 18
0.00.287.744 I llm_load_print_meta: n_head           = 8
0.00.287.745 I llm_load_print_meta: n_head_kv        = 1
0.00.287.746 I llm_load_print_meta: n_rot            = 256
0.00.287.747 I llm_load_print_meta: n_swa            = 0
0.00.287.747 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.748 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.749 I llm_load_print_meta: n_gqa            = 8
0.00.287.750 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.751 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.752 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.753 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.754 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.754 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.754 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.755 I llm_load_print_meta: n_ff             = 16384
0.00.287.756 I llm_load_print_meta: n_expert         = 0
0.00.287.756 I llm_load_print_meta: n_expert_used    = 0
0.00.287.756 I llm_load_print_meta: causal attn      = 1
0.00.287.757 I llm_load_print_meta: pooling type     = 0
0.00.287.757 I llm_load_print_meta: rope type        = 2
0.00.287.758 I llm_load_print_meta: rope scaling     = linear
0.00.287.759 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.761 I llm_load_print_meta: freq_scale_train = 1
0.00.287.761 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.761 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.762 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.763 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.763 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.763 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.764 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.765 I llm_load_print_meta: model type       = 2B
0.00.287.766 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.777 I llm_load_print_meta: model params     = 2.51 B
0.00.287.779 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.779 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.780 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.780 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.781 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.782 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.783 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.783 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.784 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.784 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.785 I llm_load_print_meta: max token length = 93
0.00.379.344 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.379.352 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.379.352 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.379.353 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.379.354 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.379.354 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.384.582 I llama_new_context_with_model: n_seq_max     = 1
0.00.384.587 I llama_new_context_with_model: n_ctx         = 4096
0.00.384.588 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.384.588 I llama_new_context_with_model: n_batch       = 2048
0.00.384.588 I llama_new_context_with_model: n_ubatch      = 512
0.00.384.589 I llama_new_context_with_model: flash_attn    = 0
0.00.384.591 I llama_new_context_with_model: freq_base     = 10000.0
0.00.384.592 I llama_new_context_with_model: freq_scale    = 1
0.00.384.593 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.400.779 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.400.795 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.400.888 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.115 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.402.121 I llama_new_context_with_model: graph nodes  = 601
0.00.402.121 I llama_new_context_with_model: graph splits = 1
0.00.402.123 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.488.201 I main: llama threadpool init, n_threads = 4
0.00.488.217 I 
0.00.488.309 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.488.313 I 
0.00.488.366 I sampler seed: 2764338184
0.00.488.380 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.384 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.488.386 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.386 I 
 increasities.

**Answer:**
I am unable to provide a response that contains sexually suggestive or inappropriate content. [end of text]


0.02.142.187 I llama_perf_sampler_print:    sampling time =       3.75 ms /    25 runs   (    0.15 ms per token,  6668.44 tokens per second)
0.02.142.189 I llama_perf_context_print:        load time =     487.31 ms
0.02.142.190 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.142.191 I llama_perf_context_print:        eval time =    1639.24 ms /    24 runs   (   68.30 ms per token,    14.64 tokens per second)
0.02.142.192 I llama_perf_context_print:       total time =    1653.99 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.568 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.000.913 I main: load the model and apply lora adapter, if any
0.00.021.343 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.350 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.358 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.364 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.365 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.372 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.374 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.375 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.377 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.377 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.378 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.384 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.386 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.386 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.387 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.388 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.190 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.448 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.300 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.308 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.309 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.309 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.310 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.310 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.311 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.314 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.315 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.316 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.316 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.317 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.322 I llama_model_loader: - type  f32:   37 tensors
0.00.132.323 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.729 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.231 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.922 I llm_load_vocab: special tokens cache size = 5
0.00.279.808 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.826 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.826 I llm_load_print_meta: arch             = gemma
0.00.279.827 I llm_load_print_meta: vocab type       = SPM
0.00.279.828 I llm_load_print_meta: n_vocab          = 256000
0.00.279.829 I llm_load_print_meta: n_merges         = 0
0.00.279.829 I llm_load_print_meta: vocab_only       = 0
0.00.279.829 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.830 I llm_load_print_meta: n_embd           = 2048
0.00.279.830 I llm_load_print_meta: n_layer          = 18
0.00.279.842 I llm_load_print_meta: n_head           = 8
0.00.279.842 I llm_load_print_meta: n_head_kv        = 1
0.00.279.843 I llm_load_print_meta: n_rot            = 256
0.00.279.843 I llm_load_print_meta: n_swa            = 0
0.00.279.843 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.844 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.845 I llm_load_print_meta: n_gqa            = 8
0.00.279.846 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.847 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.847 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.848 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.849 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.849 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.849 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.851 I llm_load_print_meta: n_ff             = 16384
0.00.279.851 I llm_load_print_meta: n_expert         = 0
0.00.279.851 I llm_load_print_meta: n_expert_used    = 0
0.00.279.851 I llm_load_print_meta: causal attn      = 1
0.00.279.852 I llm_load_print_meta: pooling type     = 0
0.00.279.852 I llm_load_print_meta: rope type        = 2
0.00.279.853 I llm_load_print_meta: rope scaling     = linear
0.00.279.854 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.855 I llm_load_print_meta: freq_scale_train = 1
0.00.279.855 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.855 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.856 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.856 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.856 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.856 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.856 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.857 I llm_load_print_meta: model type       = 2B
0.00.279.857 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.858 I llm_load_print_meta: model params     = 2.51 B
0.00.279.859 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.859 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.860 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.860 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.861 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.861 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.861 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.862 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.862 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.863 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.863 I llm_load_print_meta: max token length = 93
0.00.350.655 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.350.662 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.356.005 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.011 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.012 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.012 I llama_new_context_with_model: n_batch       = 2048
0.00.356.013 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.013 I llama_new_context_with_model: flash_attn    = 0
0.00.356.016 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.017 I llama_new_context_with_model: freq_scale    = 1
0.00.356.018 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.595 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.612 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.712 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.963 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.969 I llama_new_context_with_model: graph nodes  = 601
0.00.372.969 I llama_new_context_with_model: graph splits = 1
0.00.372.971 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.095 I main: llama threadpool init, n_threads = 4
0.00.461.110 I 
0.00.461.206 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.210 I 
0.00.461.259 I sampler seed: 1813619202
0.00.461.272 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.275 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.276 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.277 I 
 increasities, and other inappropriate and sexually suggestive behaviors in the workplace.

It is important to establish clear boundaries and expectations in the workplace to prevent such behaviors and

0.02.861.758 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6932.77 tokens per second)
0.02.861.760 I llama_perf_context_print:        load time =     460.16 ms
0.02.861.762 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.861.763 I llama_perf_context_print:        eval time =    2380.95 ms /    32 runs   (   74.40 ms per token,    13.44 tokens per second)
0.02.861.764 I llama_perf_context_print:       total time =    2400.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.257s
user	0m37.267s
sys	0m9.573s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4038 (c915d0ad)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32107.22 ms
main:    total time = 32107.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.000.880 I main: load the model and apply lora adapter, if any
0.00.022.303 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.314 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.323 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.332 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.333 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.338 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.339 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.339 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.340 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.341 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.341 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.346 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.346 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.347 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.347 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.348 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.344 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.210 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.163 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.170 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.171 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.172 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.173 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.174 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.176 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.179 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.181 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.182 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.182 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.184 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.189 I llama_model_loader: - type  f32:   37 tensors
0.00.134.191 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.193 I llama_model_loader: - type q6_K:   19 tensors
0.00.220.790 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.274.162 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.882 I llm_load_vocab: special tokens cache size = 5
0.00.295.659 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.678 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.678 I llm_load_print_meta: arch             = gemma
0.00.295.679 I llm_load_print_meta: vocab type       = SPM
0.00.295.679 I llm_load_print_meta: n_vocab          = 256000
0.00.295.680 I llm_load_print_meta: n_merges         = 0
0.00.295.693 I llm_load_print_meta: vocab_only       = 0
0.00.295.694 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.694 I llm_load_print_meta: n_embd           = 2048
0.00.295.694 I llm_load_print_meta: n_layer          = 18
0.00.295.706 I llm_load_print_meta: n_head           = 8
0.00.295.707 I llm_load_print_meta: n_head_kv        = 1
0.00.295.708 I llm_load_print_meta: n_rot            = 256
0.00.295.709 I llm_load_print_meta: n_swa            = 0
0.00.295.709 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.709 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.711 I llm_load_print_meta: n_gqa            = 8
0.00.295.712 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.713 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.714 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.715 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.716 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.719 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.720 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.721 I llm_load_print_meta: n_ff             = 16384
0.00.295.721 I llm_load_print_meta: n_expert         = 0
0.00.295.721 I llm_load_print_meta: n_expert_used    = 0
0.00.295.722 I llm_load_print_meta: causal attn      = 1
0.00.295.722 I llm_load_print_meta: pooling type     = 0
0.00.295.722 I llm_load_print_meta: rope type        = 2
0.00.295.723 I llm_load_print_meta: rope scaling     = linear
0.00.295.724 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.725 I llm_load_print_meta: freq_scale_train = 1
0.00.295.725 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.726 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.726 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.726 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.727 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.727 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.728 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.728 I llm_load_print_meta: model type       = 2B
0.00.295.729 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.295.730 I llm_load_print_meta: model params     = 2.51 B
0.00.295.731 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.295.731 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.732 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.733 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.733 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.733 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.734 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.734 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.735 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.735 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.735 I llm_load_print_meta: max token length = 93
0.00.357.302 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.357.311 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.357.312 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.357.313 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.357.313 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.357.314 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.362.755 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.762 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.762 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.763 I llama_new_context_with_model: n_batch       = 2048
0.00.362.763 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.764 I llama_new_context_with_model: flash_attn    = 0
0.00.362.768 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.769 I llama_new_context_with_model: freq_scale    = 1
0.00.362.770 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.885 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.899 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.991 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.222 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.380.229 I llama_new_context_with_model: graph nodes  = 601
0.00.380.230 I llama_new_context_with_model: graph splits = 1
0.00.380.231 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.312 I main: llama threadpool init, n_threads = 4
0.00.458.324 I 
0.00.458.404 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.407 I 
0.00.458.451 I sampler seed: 1875529112
0.00.458.462 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.465 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.466 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.467 I 
 increasities of a large, complex system require an integrated approach involving simulation and analysis. This requires a deep understanding of the system's structure, dynamics, and

0.02.165.717 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6621.19 tokens per second)
0.02.165.729 I llama_perf_context_print:        load time =     457.41 ms
0.02.165.731 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.165.733 I llama_perf_context_print:        eval time =    1686.96 ms /    32 runs   (   52.72 ms per token,    18.97 tokens per second)
0.02.165.734 I llama_perf_context_print:       total time =    1707.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4038 (c915d0ad)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32124.59 ms
main:    total time = 32124.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.555 I build: 4038 (c915d0ad) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.896 I main: load the model and apply lora adapter, if any
0.00.021.781 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.795 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.805 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.807 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.813 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.814 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.815 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.815 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.816 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.816 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.820 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.820 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.821 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.822 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.822 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.854 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.404 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.250 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.256 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.256 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.257 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.258 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.258 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.259 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.262 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.262 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.266 I llama_model_loader: - type  f32:   37 tensors
0.00.133.267 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.267 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.361 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.361 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.938 I llm_load_vocab: special tokens cache size = 5
0.00.281.956 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.974 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.975 I llm_load_print_meta: arch             = gemma
0.00.281.975 I llm_load_print_meta: vocab type       = SPM
0.00.281.976 I llm_load_print_meta: n_vocab          = 256000
0.00.281.977 I llm_load_print_meta: n_merges         = 0
0.00.281.977 I llm_load_print_meta: vocab_only       = 0
0.00.281.977 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.978 I llm_load_print_meta: n_embd           = 2048
0.00.281.978 I llm_load_print_meta: n_layer          = 18
0.00.281.991 I llm_load_print_meta: n_head           = 8
0.00.281.992 I llm_load_print_meta: n_head_kv        = 1
0.00.281.992 I llm_load_print_meta: n_rot            = 256
0.00.281.993 I llm_load_print_meta: n_swa            = 0
0.00.281.993 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.993 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.994 I llm_load_print_meta: n_gqa            = 8
0.00.281.995 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.996 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.997 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.998 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.999 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.999 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.000 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.001 I llm_load_print_meta: n_ff             = 16384
0.00.282.001 I llm_load_print_meta: n_expert         = 0
0.00.282.001 I llm_load_print_meta: n_expert_used    = 0
0.00.282.002 I llm_load_print_meta: causal attn      = 1
0.00.282.002 I llm_load_print_meta: pooling type     = 0
0.00.282.002 I llm_load_print_meta: rope type        = 2
0.00.282.003 I llm_load_print_meta: rope scaling     = linear
0.00.282.004 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.005 I llm_load_print_meta: freq_scale_train = 1
0.00.282.005 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.006 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.006 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.006 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.006 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.007 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.007 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.007 I llm_load_print_meta: model type       = 2B
0.00.282.008 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.282.008 I llm_load_print_meta: model params     = 2.51 B
0.00.282.009 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.282.010 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.010 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.010 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.011 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.011 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.011 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.012 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.012 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.013 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.013 I llm_load_print_meta: max token length = 93
0.00.339.822 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.345.038 I llama_new_context_with_model: n_seq_max     = 1
0.00.345.045 I llama_new_context_with_model: n_ctx         = 4096
0.00.345.046 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.345.046 I llama_new_context_with_model: n_batch       = 2048
0.00.345.047 I llama_new_context_with_model: n_ubatch      = 512
0.00.345.047 I llama_new_context_with_model: flash_attn    = 0
0.00.345.049 I llama_new_context_with_model: freq_base     = 10000.0
0.00.345.050 I llama_new_context_with_model: freq_scale    = 1
0.00.345.051 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.249 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.265 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.357 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.627 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.634 I llama_new_context_with_model: graph nodes  = 601
0.00.362.634 I llama_new_context_with_model: graph splits = 1
0.00.362.636 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.444 I main: llama threadpool init, n_threads = 4
0.00.438.458 I 
0.00.438.541 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.544 I 
0.00.438.587 I sampler seed: 2721625506
0.00.438.599 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.602 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.604 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.604 I 
 squaRED TEXT: "A journey that began with the spark of curiosity."

**Task:** Analyze the provided text and identify the key elements that contribute to the

0.02.080.241 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6505.03 tokens per second)
0.02.080.244 I llama_perf_context_print:        load time =     437.53 ms
0.02.080.246 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.080.247 I llama_perf_context_print:        eval time =    1621.67 ms /    32 runs   (   50.68 ms per token,    19.73 tokens per second)
0.02.080.248 I llama_perf_context_print:       total time =    1641.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.323s
user	8m15.171s
sys	0m7.301s
