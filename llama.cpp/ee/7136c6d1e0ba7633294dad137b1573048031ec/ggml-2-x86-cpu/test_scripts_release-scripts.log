+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.193 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.383 I main: llama backend init
0.00.000.390 I main: load the model and apply lora adapter, if any
0.00.030.104 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.030.116 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.030.124 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.130 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.132 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.134 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.135 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.137 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.137 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.138 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.139 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.145 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.146 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.146 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.147 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.030.147 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.057.045 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.250 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.255 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.256 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.257 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.258 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.260 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.261 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.263 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.264 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.265 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.266 I llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
0.00.138.267 I llama_model_loader: - kv  26:                                split.count u16              = 6
0.00.138.271 I llama_model_loader: - type  f32:   37 tensors
0.00.138.272 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.620 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.165 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.720 I llm_load_vocab: special tokens cache size = 5
0.00.268.182 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.201 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.202 I llm_load_print_meta: arch             = gemma
0.00.268.202 I llm_load_print_meta: vocab type       = SPM
0.00.268.203 I llm_load_print_meta: n_vocab          = 256000
0.00.268.204 I llm_load_print_meta: n_merges         = 0
0.00.268.204 I llm_load_print_meta: vocab_only       = 0
0.00.268.204 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.205 I llm_load_print_meta: n_embd           = 2048
0.00.268.205 I llm_load_print_meta: n_layer          = 18
0.00.268.216 I llm_load_print_meta: n_head           = 8
0.00.268.218 I llm_load_print_meta: n_head_kv        = 1
0.00.268.219 I llm_load_print_meta: n_rot            = 256
0.00.268.219 I llm_load_print_meta: n_swa            = 0
0.00.268.219 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.219 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.221 I llm_load_print_meta: n_gqa            = 8
0.00.268.223 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.224 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.226 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.227 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.227 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.230 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.230 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.232 I llm_load_print_meta: n_ff             = 16384
0.00.268.232 I llm_load_print_meta: n_expert         = 0
0.00.268.233 I llm_load_print_meta: n_expert_used    = 0
0.00.268.233 I llm_load_print_meta: causal attn      = 1
0.00.268.233 I llm_load_print_meta: pooling type     = 0
0.00.268.234 I llm_load_print_meta: rope type        = 2
0.00.268.234 I llm_load_print_meta: rope scaling     = linear
0.00.268.236 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.236 I llm_load_print_meta: freq_scale_train = 1
0.00.268.237 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.237 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.237 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.237 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.238 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.238 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.238 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.240 I llm_load_print_meta: model type       = 2B
0.00.268.241 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.242 I llm_load_print_meta: model params     = 2.51 B
0.00.268.242 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.243 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.243 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.243 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.244 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.244 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.245 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.245 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.245 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.246 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.246 I llm_load_print_meta: max token length = 93
0.00.369.074 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.369.081 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.369.082 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.369.083 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.369.083 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.369.084 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.370.484 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.488 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.488 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.488 I llama_new_context_with_model: n_batch       = 2048
0.00.370.489 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.490 I llama_new_context_with_model: flash_attn    = 0
0.00.370.491 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.492 I llama_new_context_with_model: freq_scale    = 1
0.00.370.493 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.512 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.384.800 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.813 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.907 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.801 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.808 I llama_new_context_with_model: graph nodes  = 601
0.00.386.808 I llama_new_context_with_model: graph splits = 1
0.00.386.811 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.386.812 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.107 I main: llama threadpool init, n_threads = 4
0.00.472.122 I 
0.00.472.196 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.472.199 I 
0.00.472.243 I sampler seed: 4043603063
0.00.472.256 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.261 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.472.262 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.262 I 
 increasities with the following:

**a) **The Tortoise and the Hare**
**b) **The Ant and the Carpenter**

**Answer Key

0.02.720.887 I llama_perf_sampler_print:    sampling time =       5.55 ms /    33 runs   (    0.17 ms per token,  5948.09 tokens per second)
0.02.720.890 I llama_perf_context_print:        load time =     471.70 ms
0.02.720.891 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.720.892 I llama_perf_context_print:        eval time =    2228.77 ms /    32 runs   (   69.65 ms per token,    14.36 tokens per second)
0.02.720.893 I llama_perf_context_print:       total time =    2248.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.567 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.000.771 I main: load the model and apply lora adapter, if any
0.00.030.095 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.030.109 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.117 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.118 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.121 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.122 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.123 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.124 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.124 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.125 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.129 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.130 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.130 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.131 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.030.132 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.056.488 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.481 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.829 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.838 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.839 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.840 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.840 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.842 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.843 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.844 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.845 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.846 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.847 I llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
0.00.136.848 I llama_model_loader: - kv  26:                                split.count u16              = 0
0.00.136.851 I llama_model_loader: - type  f32:   37 tensors
0.00.136.852 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.533 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.269.487 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.050 I llm_load_vocab: special tokens cache size = 5
0.00.290.486 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.502 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.503 I llm_load_print_meta: arch             = gemma
0.00.290.504 I llm_load_print_meta: vocab type       = SPM
0.00.290.504 I llm_load_print_meta: n_vocab          = 256000
0.00.290.504 I llm_load_print_meta: n_merges         = 0
0.00.290.505 I llm_load_print_meta: vocab_only       = 0
0.00.290.505 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.506 I llm_load_print_meta: n_embd           = 2048
0.00.290.506 I llm_load_print_meta: n_layer          = 18
0.00.290.518 I llm_load_print_meta: n_head           = 8
0.00.290.520 I llm_load_print_meta: n_head_kv        = 1
0.00.290.520 I llm_load_print_meta: n_rot            = 256
0.00.290.521 I llm_load_print_meta: n_swa            = 0
0.00.290.521 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.521 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.523 I llm_load_print_meta: n_gqa            = 8
0.00.290.525 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.526 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.527 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.528 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.529 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.529 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.530 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.531 I llm_load_print_meta: n_ff             = 16384
0.00.290.531 I llm_load_print_meta: n_expert         = 0
0.00.290.532 I llm_load_print_meta: n_expert_used    = 0
0.00.290.532 I llm_load_print_meta: causal attn      = 1
0.00.290.532 I llm_load_print_meta: pooling type     = 0
0.00.290.533 I llm_load_print_meta: rope type        = 2
0.00.290.533 I llm_load_print_meta: rope scaling     = linear
0.00.290.534 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.535 I llm_load_print_meta: freq_scale_train = 1
0.00.290.535 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.536 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.536 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.536 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.536 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.537 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.537 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.539 I llm_load_print_meta: model type       = 2B
0.00.290.540 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.540 I llm_load_print_meta: model params     = 2.51 B
0.00.290.541 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.541 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.542 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.542 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.543 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.543 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.543 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.543 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.544 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.544 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.544 I llm_load_print_meta: max token length = 93
0.00.387.186 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.388.439 I llama_new_context_with_model: n_seq_max     = 1
0.00.388.443 I llama_new_context_with_model: n_ctx         = 4096
0.00.388.444 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.388.444 I llama_new_context_with_model: n_batch       = 2048
0.00.388.445 I llama_new_context_with_model: n_ubatch      = 512
0.00.388.445 I llama_new_context_with_model: flash_attn    = 0
0.00.388.447 I llama_new_context_with_model: freq_base     = 10000.0
0.00.388.448 I llama_new_context_with_model: freq_scale    = 1
0.00.388.449 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.466 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.403.349 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.403.362 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.403.456 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.334 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.405.338 I llama_new_context_with_model: graph nodes  = 601
0.00.405.338 I llama_new_context_with_model: graph splits = 1
0.00.405.341 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.405.342 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.011 I main: llama threadpool init, n_threads = 4
0.00.487.025 I 
0.00.487.102 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.487.105 I 
0.00.487.137 I sampler seed: 2945462370
0.00.487.146 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.149 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.487.150 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.151 I 
 increably.

I am unable to generate the requested response due to limitations in my programming. I am programmed to provide safe and ethical responses, and generating sexually

0.02.676.970 I llama_perf_sampler_print:    sampling time =       5.64 ms /    33 runs   (    0.17 ms per token,  5850.03 tokens per second)
0.02.676.973 I llama_perf_context_print:        load time =     486.22 ms
0.02.676.974 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.676.975 I llama_perf_context_print:        eval time =    2170.45 ms /    32 runs   (   67.83 ms per token,    14.74 tokens per second)
0.02.676.976 I llama_perf_context_print:       total time =    2189.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.183 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.397 I main: llama backend init
0.00.000.404 I main: load the model and apply lora adapter, if any
0.00.029.522 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.029.533 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.029.541 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.029.547 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.029.549 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.029.551 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.029.552 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.029.553 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.029.553 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.029.554 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.029.554 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.029.560 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.029.561 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.029.562 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.029.563 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.029.564 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.056.295 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.556 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.944 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.952 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.953 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.953 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.954 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.956 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.956 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.958 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.959 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.960 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.961 I llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
0.00.136.962 I llama_model_loader: - kv  26:                                split.count u16              = 7
0.00.136.965 I llama_model_loader: - type  f32:   37 tensors
0.00.136.966 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.215 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.465 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.099 I llm_load_vocab: special tokens cache size = 5
0.00.269.558 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.576 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.577 I llm_load_print_meta: arch             = gemma
0.00.269.578 I llm_load_print_meta: vocab type       = SPM
0.00.269.578 I llm_load_print_meta: n_vocab          = 256000
0.00.269.579 I llm_load_print_meta: n_merges         = 0
0.00.269.579 I llm_load_print_meta: vocab_only       = 0
0.00.269.580 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.580 I llm_load_print_meta: n_embd           = 2048
0.00.269.580 I llm_load_print_meta: n_layer          = 18
0.00.269.592 I llm_load_print_meta: n_head           = 8
0.00.269.593 I llm_load_print_meta: n_head_kv        = 1
0.00.269.594 I llm_load_print_meta: n_rot            = 256
0.00.269.594 I llm_load_print_meta: n_swa            = 0
0.00.269.594 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.595 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.596 I llm_load_print_meta: n_gqa            = 8
0.00.269.598 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.600 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.601 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.602 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.602 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.603 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.603 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.605 I llm_load_print_meta: n_ff             = 16384
0.00.269.605 I llm_load_print_meta: n_expert         = 0
0.00.269.606 I llm_load_print_meta: n_expert_used    = 0
0.00.269.606 I llm_load_print_meta: causal attn      = 1
0.00.269.606 I llm_load_print_meta: pooling type     = 0
0.00.269.607 I llm_load_print_meta: rope type        = 2
0.00.269.607 I llm_load_print_meta: rope scaling     = linear
0.00.269.608 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.609 I llm_load_print_meta: freq_scale_train = 1
0.00.269.609 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.609 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.610 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.610 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.610 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.610 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.611 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.620 I llm_load_print_meta: model type       = 2B
0.00.269.621 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.622 I llm_load_print_meta: model params     = 2.51 B
0.00.269.623 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.624 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.624 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.624 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.625 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.625 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.626 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.626 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.626 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.627 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.627 I llm_load_print_meta: max token length = 93
0.00.348.517 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.348.524 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.348.525 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.348.525 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.348.526 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.348.527 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.349.999 I llama_new_context_with_model: n_seq_max     = 1
0.00.350.003 I llama_new_context_with_model: n_ctx         = 4096
0.00.350.003 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.350.004 I llama_new_context_with_model: n_batch       = 2048
0.00.350.004 I llama_new_context_with_model: n_ubatch      = 512
0.00.350.005 I llama_new_context_with_model: flash_attn    = 0
0.00.350.007 I llama_new_context_with_model: freq_base     = 10000.0
0.00.350.008 I llama_new_context_with_model: freq_scale    = 1
0.00.350.009 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.029 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.363.757 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.770 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.862 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.772 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.365.778 I llama_new_context_with_model: graph nodes  = 601
0.00.365.779 I llama_new_context_with_model: graph splits = 1
0.00.365.782 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.365.783 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.504 I main: llama threadpool init, n_threads = 4
0.00.452.519 I 
0.00.452.605 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.452.609 I 
0.00.452.652 I sampler seed: 1711794339
0.00.452.663 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.673 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.452.677 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.678 I 
 increasities and injustices, and the harm that they inflict on both individuals and society. [end of text]


0.01.728.137 I llama_perf_sampler_print:    sampling time =       3.11 ms /    19 runs   (    0.16 ms per token,  6107.36 tokens per second)
0.01.728.140 I llama_perf_context_print:        load time =     452.08 ms
0.01.728.141 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.728.142 I llama_perf_context_print:        eval time =    1263.93 ms /    18 runs   (   70.22 ms per token,    14.24 tokens per second)
0.01.728.143 I llama_perf_context_print:       total time =    1275.64 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.543 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.000.784 I main: load the model and apply lora adapter, if any
0.00.030.281 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.030.294 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.030.303 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.311 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.312 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.316 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.317 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.319 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.320 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.321 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.322 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.330 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.330 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.331 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.332 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.030.333 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.057.953 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.134.793 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.142.081 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.142.092 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.142.093 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.142.095 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.142.096 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.142.097 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.142.099 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.142.102 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.142.103 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.142.104 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.142.105 I llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
0.00.142.106 I llama_model_loader: - kv  26:                                split.count u16              = 2
0.00.142.111 I llama_model_loader: - type  f32:   37 tensors
0.00.142.113 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.677 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.290 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.927 I llm_load_vocab: special tokens cache size = 5
0.00.281.581 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.602 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.603 I llm_load_print_meta: arch             = gemma
0.00.281.604 I llm_load_print_meta: vocab type       = SPM
0.00.281.604 I llm_load_print_meta: n_vocab          = 256000
0.00.281.605 I llm_load_print_meta: n_merges         = 0
0.00.281.605 I llm_load_print_meta: vocab_only       = 0
0.00.281.606 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.606 I llm_load_print_meta: n_embd           = 2048
0.00.281.606 I llm_load_print_meta: n_layer          = 18
0.00.281.619 I llm_load_print_meta: n_head           = 8
0.00.281.622 I llm_load_print_meta: n_head_kv        = 1
0.00.281.622 I llm_load_print_meta: n_rot            = 256
0.00.281.623 I llm_load_print_meta: n_swa            = 0
0.00.281.623 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.623 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.625 I llm_load_print_meta: n_gqa            = 8
0.00.281.627 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.628 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.629 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.631 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.632 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.632 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.632 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.634 I llm_load_print_meta: n_ff             = 16384
0.00.281.635 I llm_load_print_meta: n_expert         = 0
0.00.281.635 I llm_load_print_meta: n_expert_used    = 0
0.00.281.635 I llm_load_print_meta: causal attn      = 1
0.00.281.636 I llm_load_print_meta: pooling type     = 0
0.00.281.636 I llm_load_print_meta: rope type        = 2
0.00.281.636 I llm_load_print_meta: rope scaling     = linear
0.00.281.638 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.638 I llm_load_print_meta: freq_scale_train = 1
0.00.281.639 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.639 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.639 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.640 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.640 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.640 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.641 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.643 I llm_load_print_meta: model type       = 2B
0.00.281.644 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.645 I llm_load_print_meta: model params     = 2.51 B
0.00.281.645 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.646 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.646 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.646 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.647 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.647 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.647 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.648 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.648 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.649 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.649 I llm_load_print_meta: max token length = 93
0.00.356.611 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.356.621 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.357.847 I llama_new_context_with_model: n_seq_max     = 1
0.00.357.851 I llama_new_context_with_model: n_ctx         = 4096
0.00.357.851 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.357.852 I llama_new_context_with_model: n_batch       = 2048
0.00.357.852 I llama_new_context_with_model: n_ubatch      = 512
0.00.357.853 I llama_new_context_with_model: flash_attn    = 0
0.00.357.855 I llama_new_context_with_model: freq_base     = 10000.0
0.00.357.856 I llama_new_context_with_model: freq_scale    = 1
0.00.357.857 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.876 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.373.071 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.086 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.182 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.364 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.375.371 I llama_new_context_with_model: graph nodes  = 601
0.00.375.371 I llama_new_context_with_model: graph splits = 1
0.00.375.375 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.375.376 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.006 I main: llama threadpool init, n_threads = 4
0.00.468.021 I 
0.00.468.098 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.468.101 I 
0.00.468.134 I sampler seed: 3836128361
0.00.468.145 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.157 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.161 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.161 I 
 increasities and the subsequent societal consequences.

**Answer:**

**Introduction:**

The intersection of narcissistic desires and societal consequences has been a topic of considerable philosophical

0.02.884.362 I llama_perf_sampler_print:    sampling time =       5.88 ms /    33 runs   (    0.18 ms per token,  5616.07 tokens per second)
0.02.884.364 I llama_perf_context_print:        load time =     467.20 ms
0.02.884.365 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.884.367 I llama_perf_context_print:        eval time =    2396.32 ms /    32 runs   (   74.88 ms per token,    13.35 tokens per second)
0.02.884.367 I llama_perf_context_print:       total time =    2416.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.946s
user	0m35.581s
sys	0m9.361s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4457 (ee7136c6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
llama_model_loader: - kv  26:                                split.count u16              = 6
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_impl: model size  =  2539.66 MB
llama_model_quantize_impl: quant size  =  1548.98 MB

main: quantize time = 40234.08 ms
main:    total time = 40234.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.578 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.000.793 I main: load the model and apply lora adapter, if any
0.00.030.428 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.030.438 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.030.447 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.453 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.454 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.457 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.458 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.459 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.459 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.460 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.460 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.464 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.465 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.466 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.466 I llama_model_loader: - kv  11:                       tokenizer.ggml.model str              = llama
0.00.056.707 I llama_model_loader: - kv  12:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.038 I llama_model_loader: - kv  13:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.574 I llama_model_loader: - kv  14:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.581 I llama_model_loader: - kv  15:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.581 I llama_model_loader: - kv  16:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.582 I llama_model_loader: - kv  17:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.583 I llama_model_loader: - kv  18:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.584 I llama_model_loader: - kv  19:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.585 I llama_model_loader: - kv  20:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.586 I llama_model_loader: - kv  21:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.588 I llama_model_loader: - kv  22:               general.quantization_version u32              = 2
0.00.137.589 I llama_model_loader: - kv  23:                          general.file_type u32              = 15
0.00.137.590 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.590 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.137.591 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.594 I llama_model_loader: - type  f32:   37 tensors
0.00.137.594 I llama_model_loader: - type q4_K:  108 tensors
0.00.137.595 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.174 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.505 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.025 I llm_load_vocab: special tokens cache size = 5
0.00.266.757 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.777 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.779 I llm_load_print_meta: arch             = gemma
0.00.266.779 I llm_load_print_meta: vocab type       = SPM
0.00.266.780 I llm_load_print_meta: n_vocab          = 256000
0.00.266.780 I llm_load_print_meta: n_merges         = 0
0.00.266.780 I llm_load_print_meta: vocab_only       = 0
0.00.266.781 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.781 I llm_load_print_meta: n_embd           = 2048
0.00.266.781 I llm_load_print_meta: n_layer          = 18
0.00.266.793 I llm_load_print_meta: n_head           = 8
0.00.266.796 I llm_load_print_meta: n_head_kv        = 1
0.00.266.797 I llm_load_print_meta: n_rot            = 256
0.00.266.798 I llm_load_print_meta: n_swa            = 0
0.00.266.798 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.799 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.801 I llm_load_print_meta: n_gqa            = 8
0.00.266.802 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.804 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.805 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.806 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.807 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.807 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.808 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.810 I llm_load_print_meta: n_ff             = 16384
0.00.266.811 I llm_load_print_meta: n_expert         = 0
0.00.266.811 I llm_load_print_meta: n_expert_used    = 0
0.00.266.812 I llm_load_print_meta: causal attn      = 1
0.00.266.812 I llm_load_print_meta: pooling type     = 0
0.00.266.813 I llm_load_print_meta: rope type        = 2
0.00.266.813 I llm_load_print_meta: rope scaling     = linear
0.00.266.815 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.815 I llm_load_print_meta: freq_scale_train = 1
0.00.266.816 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.817 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.817 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.817 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.817 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.818 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.821 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.824 I llm_load_print_meta: model type       = 2B
0.00.266.825 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.826 I llm_load_print_meta: model params     = 2.51 B
0.00.266.827 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.827 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.828 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.837 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.838 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.839 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.839 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.839 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.840 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.840 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.841 I llm_load_print_meta: max token length = 93
0.00.326.224 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.233 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.234 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.235 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.235 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.236 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.327.640 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.644 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.644 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.645 I llama_new_context_with_model: n_batch       = 2048
0.00.327.645 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.646 I llama_new_context_with_model: flash_attn    = 0
0.00.327.648 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.649 I llama_new_context_with_model: freq_scale    = 1
0.00.327.650 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.327.668 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.342.760 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.774 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.871 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.782 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.344.786 I llama_new_context_with_model: graph nodes  = 601
0.00.344.786 I llama_new_context_with_model: graph splits = 1
0.00.344.789 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.344.789 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.226 I main: llama threadpool init, n_threads = 4
0.00.423.242 I 
0.00.423.320 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.423.323 I 
0.00.423.356 I sampler seed: 568645176
0.00.423.369 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.372 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.373 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.374 I 
 increasities to the text, ensuring they are grammatically correct and fit the context.

The text provided is as follows:

"I am excited about the

0.02.031.312 I llama_perf_sampler_print:    sampling time =       5.86 ms /    33 runs   (    0.18 ms per token,  5635.25 tokens per second)
0.02.031.315 I llama_perf_context_print:        load time =     422.41 ms
0.02.031.316 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.031.317 I llama_perf_context_print:        eval time =    1588.34 ms /    32 runs   (   49.64 ms per token,    20.15 tokens per second)
0.02.031.318 I llama_perf_context_print:       total time =    1608.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4457 (ee7136c6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                        split.tensors.count i32              = 164
llama_model_loader: - kv  26:                                split.count u16              = 6
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_impl: model size  =  2539.66 MB
llama_model_quantize_impl: quant size  =  1548.98 MB

main: quantize time = 40203.52 ms
main:    total time = 40203.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.175 I build: 4457 (ee7136c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.386 I main: llama backend init
0.00.000.393 I main: load the model and apply lora adapter, if any
0.00.029.602 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.029.619 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.029.629 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.029.630 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.029.632 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.029.633 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.029.634 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.029.635 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.029.635 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.029.636 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.029.641 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.029.641 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.029.642 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.029.643 I llama_model_loader: - kv  11:                       tokenizer.ggml.model str              = llama
0.00.056.408 I llama_model_loader: - kv  12:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.391 I llama_model_loader: - kv  13:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.861 I llama_model_loader: - kv  14:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.868 I llama_model_loader: - kv  15:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.869 I llama_model_loader: - kv  16:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.870 I llama_model_loader: - kv  17:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.870 I llama_model_loader: - kv  18:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.871 I llama_model_loader: - kv  19:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.872 I llama_model_loader: - kv  20:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.874 I llama_model_loader: - kv  21:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.874 I llama_model_loader: - kv  22:               general.quantization_version u32              = 2
0.00.136.875 I llama_model_loader: - kv  23:                          general.file_type u32              = 15
0.00.136.878 I llama_model_loader: - type  f32:   37 tensors
0.00.136.879 I llama_model_loader: - type q4_K:  108 tensors
0.00.136.879 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.411 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.735 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.518 I llm_load_vocab: special tokens cache size = 5
0.00.279.491 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.514 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.516 I llm_load_print_meta: arch             = gemma
0.00.279.516 I llm_load_print_meta: vocab type       = SPM
0.00.279.517 I llm_load_print_meta: n_vocab          = 256000
0.00.279.517 I llm_load_print_meta: n_merges         = 0
0.00.279.518 I llm_load_print_meta: vocab_only       = 0
0.00.279.518 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.518 I llm_load_print_meta: n_embd           = 2048
0.00.279.520 I llm_load_print_meta: n_layer          = 18
0.00.279.533 I llm_load_print_meta: n_head           = 8
0.00.279.535 I llm_load_print_meta: n_head_kv        = 1
0.00.279.535 I llm_load_print_meta: n_rot            = 256
0.00.279.536 I llm_load_print_meta: n_swa            = 0
0.00.279.536 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.536 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.538 I llm_load_print_meta: n_gqa            = 8
0.00.279.540 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.542 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.543 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.545 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.545 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.546 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.546 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.548 I llm_load_print_meta: n_ff             = 16384
0.00.279.549 I llm_load_print_meta: n_expert         = 0
0.00.279.549 I llm_load_print_meta: n_expert_used    = 0
0.00.279.549 I llm_load_print_meta: causal attn      = 1
0.00.279.550 I llm_load_print_meta: pooling type     = 0
0.00.279.550 I llm_load_print_meta: rope type        = 2
0.00.279.551 I llm_load_print_meta: rope scaling     = linear
0.00.279.552 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.553 I llm_load_print_meta: freq_scale_train = 1
0.00.279.554 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.554 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.555 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.555 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.555 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.556 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.557 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.559 I llm_load_print_meta: model type       = 2B
0.00.279.560 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.561 I llm_load_print_meta: model params     = 2.51 B
0.00.279.562 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.562 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.563 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.568 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.568 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.568 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.569 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.569 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.570 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.570 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.570 I llm_load_print_meta: max token length = 93
0.00.337.047 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.338.376 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.380 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.380 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.380 I llama_new_context_with_model: n_batch       = 2048
0.00.338.381 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.381 I llama_new_context_with_model: flash_attn    = 0
0.00.338.382 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.383 I llama_new_context_with_model: freq_scale    = 1
0.00.338.384 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.338.404 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.353.479 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.492 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.589 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.796 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.803 I llama_new_context_with_model: graph nodes  = 601
0.00.355.803 I llama_new_context_with_model: graph splits = 1
0.00.355.807 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.355.807 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.875 I main: llama threadpool init, n_threads = 4
0.00.430.888 I 
0.00.430.965 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.430.968 I 
0.00.431.002 I sampler seed: 2541055653
0.00.431.016 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.020 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.431.021 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.022 I 
 seconded "The Book of Mormon" and the Book of Ether, forming the Book of Mormon-Ether.

**True or False?**

The Book

0.01.986.775 I llama_perf_sampler_print:    sampling time =       5.85 ms /    33 runs   (    0.18 ms per token,  5639.10 tokens per second)
0.01.986.777 I llama_perf_context_print:        load time =     430.46 ms
0.01.986.778 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.986.780 I llama_perf_context_print:        eval time =    1536.55 ms /    32 runs   (   48.02 ms per token,    20.83 tokens per second)
0.01.986.781 I llama_perf_context_print:       total time =    1555.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.301s
user	10m24.135s
sys	0m6.729s
