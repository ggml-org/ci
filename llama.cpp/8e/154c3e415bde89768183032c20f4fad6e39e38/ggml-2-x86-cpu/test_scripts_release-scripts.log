+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.561 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.975 I main: load the model and apply lora adapter, if any
0.00.022.389 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.440 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.447 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.453 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.454 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.459 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.464 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.465 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.465 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.466 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.466 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.470 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.471 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.471 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.559 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.563 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.009 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.815 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.765 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.774 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.775 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.775 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.776 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.777 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.777 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.780 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.780 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.781 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.781 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.783 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.786 I llama_model_loader: - type  f32:   37 tensors
0.00.132.789 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.475 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.269.834 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.513 I llm_load_vocab: special tokens cache size = 5
0.00.291.871 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.889 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.889 I llm_load_print_meta: arch             = gemma
0.00.291.890 I llm_load_print_meta: vocab type       = SPM
0.00.291.890 I llm_load_print_meta: n_vocab          = 256000
0.00.291.891 I llm_load_print_meta: n_merges         = 0
0.00.291.891 I llm_load_print_meta: vocab_only       = 0
0.00.291.892 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.892 I llm_load_print_meta: n_embd           = 2048
0.00.291.892 I llm_load_print_meta: n_layer          = 18
0.00.291.903 I llm_load_print_meta: n_head           = 8
0.00.291.904 I llm_load_print_meta: n_head_kv        = 1
0.00.291.905 I llm_load_print_meta: n_rot            = 256
0.00.291.905 I llm_load_print_meta: n_swa            = 0
0.00.291.905 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.905 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.906 I llm_load_print_meta: n_gqa            = 8
0.00.291.907 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.908 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.909 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.910 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.910 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.910 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.911 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.912 I llm_load_print_meta: n_ff             = 16384
0.00.291.912 I llm_load_print_meta: n_expert         = 0
0.00.291.912 I llm_load_print_meta: n_expert_used    = 0
0.00.291.913 I llm_load_print_meta: causal attn      = 1
0.00.291.913 I llm_load_print_meta: pooling type     = 0
0.00.291.913 I llm_load_print_meta: rope type        = 2
0.00.291.914 I llm_load_print_meta: rope scaling     = linear
0.00.291.915 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.916 I llm_load_print_meta: freq_scale_train = 1
0.00.291.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.917 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.917 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.917 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.918 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.918 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.918 I llm_load_print_meta: model type       = 2B
0.00.291.919 I llm_load_print_meta: model ftype      = Q8_0
0.00.291.920 I llm_load_print_meta: model params     = 2.51 B
0.00.291.921 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.291.921 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.922 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.922 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.922 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.923 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.923 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.923 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.923 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.924 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.924 I llm_load_print_meta: max token length = 93
0.00.291.952 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.389.309 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.389.319 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.389.319 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.389.320 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.389.320 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.389.321 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.394.702 I llama_new_context_with_model: n_ctx      = 8192
0.00.394.708 I llama_new_context_with_model: n_batch    = 2048
0.00.394.709 I llama_new_context_with_model: n_ubatch   = 512
0.00.394.709 I llama_new_context_with_model: flash_attn = 0
0.00.394.713 I llama_new_context_with_model: freq_base  = 10000.0
0.00.394.715 I llama_new_context_with_model: freq_scale = 1
0.00.424.786 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.424.803 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.424.895 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.425.834 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.425.841 I llama_new_context_with_model: graph nodes  = 601
0.00.425.841 I llama_new_context_with_model: graph splits = 1
0.00.425.843 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.520.404 I main: llama threadpool init, n_threads = 4
0.00.520.422 I 
0.00.520.501 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.520.505 I 
0.00.520.545 I sampler seed: 751013593
0.00.520.555 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.520.559 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.520.560 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.520.562 I 
 increasities!

I am unable to generate the requested text due to the presence of sexually suggestive or inappropriate content. [end of text]


0.02.275.042 I llama_perf_sampler_print:    sampling time =       4.17 ms /    25 runs   (    0.17 ms per token,  5992.33 tokens per second)
0.02.275.045 I llama_perf_context_print:        load time =     518.41 ms
0.02.275.046 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.275.050 I llama_perf_context_print:        eval time =    1739.11 ms /    24 runs   (   72.46 ms per token,    13.80 tokens per second)
0.02.275.051 I llama_perf_context_print:       total time =    1754.65 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.611 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.809 I main: llama backend init
0.00.001.962 I main: load the model and apply lora adapter, if any
0.00.022.273 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.285 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.293 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.294 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.298 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.299 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.300 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.300 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.301 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.301 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.306 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.307 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.307 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.308 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.416 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.531 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.469 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.475 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.476 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.476 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.477 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.478 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.479 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.482 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.483 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.484 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.485 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.487 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.491 I llama_model_loader: - type  f32:   37 tensors
0.00.133.493 I llama_model_loader: - type q8_0:  127 tensors
0.00.233.371 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.289.449 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.290.190 I llm_load_vocab: special tokens cache size = 5
0.00.311.742 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.311.762 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.311.762 I llm_load_print_meta: arch             = gemma
0.00.311.763 I llm_load_print_meta: vocab type       = SPM
0.00.311.764 I llm_load_print_meta: n_vocab          = 256000
0.00.311.764 I llm_load_print_meta: n_merges         = 0
0.00.311.765 I llm_load_print_meta: vocab_only       = 0
0.00.311.765 I llm_load_print_meta: n_ctx_train      = 8192
0.00.311.765 I llm_load_print_meta: n_embd           = 2048
0.00.311.765 I llm_load_print_meta: n_layer          = 18
0.00.311.778 I llm_load_print_meta: n_head           = 8
0.00.311.779 I llm_load_print_meta: n_head_kv        = 1
0.00.311.780 I llm_load_print_meta: n_rot            = 256
0.00.311.780 I llm_load_print_meta: n_swa            = 0
0.00.311.781 I llm_load_print_meta: n_embd_head_k    = 256
0.00.311.781 I llm_load_print_meta: n_embd_head_v    = 256
0.00.311.782 I llm_load_print_meta: n_gqa            = 8
0.00.311.783 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.311.784 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.311.785 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.311.786 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.311.786 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.311.786 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.311.787 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.311.788 I llm_load_print_meta: n_ff             = 16384
0.00.311.788 I llm_load_print_meta: n_expert         = 0
0.00.311.788 I llm_load_print_meta: n_expert_used    = 0
0.00.311.789 I llm_load_print_meta: causal attn      = 1
0.00.311.789 I llm_load_print_meta: pooling type     = 0
0.00.311.789 I llm_load_print_meta: rope type        = 2
0.00.311.790 I llm_load_print_meta: rope scaling     = linear
0.00.311.791 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.311.791 I llm_load_print_meta: freq_scale_train = 1
0.00.311.792 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.311.792 I llm_load_print_meta: rope_finetuned   = unknown
0.00.311.792 I llm_load_print_meta: ssm_d_conv       = 0
0.00.311.793 I llm_load_print_meta: ssm_d_inner      = 0
0.00.311.793 I llm_load_print_meta: ssm_d_state      = 0
0.00.311.793 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.311.793 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.311.794 I llm_load_print_meta: model type       = 2B
0.00.311.794 I llm_load_print_meta: model ftype      = Q8_0
0.00.311.795 I llm_load_print_meta: model params     = 2.51 B
0.00.311.796 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.311.796 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.311.797 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.311.797 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.311.798 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.311.798 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.311.798 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.311.799 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.311.799 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.311.799 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.311.800 I llm_load_print_meta: max token length = 93
0.00.311.822 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.406.611 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.411.813 I llama_new_context_with_model: n_ctx      = 8192
0.00.411.821 I llama_new_context_with_model: n_batch    = 2048
0.00.411.822 I llama_new_context_with_model: n_ubatch   = 512
0.00.411.822 I llama_new_context_with_model: flash_attn = 0
0.00.411.825 I llama_new_context_with_model: freq_base  = 10000.0
0.00.411.826 I llama_new_context_with_model: freq_scale = 1
0.00.444.321 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.444.338 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.444.429 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.445.297 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.445.305 I llama_new_context_with_model: graph nodes  = 601
0.00.445.305 I llama_new_context_with_model: graph splits = 1
0.00.445.307 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.535.443 I main: llama threadpool init, n_threads = 4
0.00.535.457 I 
0.00.535.535 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.535.538 I 
0.00.535.580 I sampler seed: 973788694
0.00.535.591 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.535.595 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.535.596 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.535.596 I 
 increasively, but not without some pauses. [end of text]


0.01.248.282 I llama_perf_sampler_print:    sampling time =       1.60 ms /    11 runs   (    0.15 ms per token,  6857.86 tokens per second)
0.01.248.286 I llama_perf_context_print:        load time =     533.46 ms
0.01.248.287 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.248.289 I llama_perf_context_print:        eval time =     706.23 ms /    10 runs   (   70.62 ms per token,    14.16 tokens per second)
0.01.248.290 I llama_perf_context_print:       total time =     712.85 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.568 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.940 I main: load the model and apply lora adapter, if any
0.00.022.813 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.864 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.875 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.881 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.884 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.891 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.891 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.892 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.892 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.893 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.893 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.898 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.899 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.899 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.900 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.900 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.963 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.967 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.925 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.933 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.934 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.935 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.936 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.937 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.938 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.942 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.943 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.944 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.945 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.946 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.950 I llama_model_loader: - type  f32:   37 tensors
0.00.133.953 I llama_model_loader: - type q8_0:  127 tensors
0.00.228.497 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.283.668 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.284.402 I llm_load_vocab: special tokens cache size = 5
0.00.306.037 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.306.056 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.306.057 I llm_load_print_meta: arch             = gemma
0.00.306.057 I llm_load_print_meta: vocab type       = SPM
0.00.306.058 I llm_load_print_meta: n_vocab          = 256000
0.00.306.059 I llm_load_print_meta: n_merges         = 0
0.00.306.059 I llm_load_print_meta: vocab_only       = 0
0.00.306.059 I llm_load_print_meta: n_ctx_train      = 8192
0.00.306.059 I llm_load_print_meta: n_embd           = 2048
0.00.306.060 I llm_load_print_meta: n_layer          = 18
0.00.306.072 I llm_load_print_meta: n_head           = 8
0.00.306.073 I llm_load_print_meta: n_head_kv        = 1
0.00.306.073 I llm_load_print_meta: n_rot            = 256
0.00.306.073 I llm_load_print_meta: n_swa            = 0
0.00.306.074 I llm_load_print_meta: n_embd_head_k    = 256
0.00.306.074 I llm_load_print_meta: n_embd_head_v    = 256
0.00.306.075 I llm_load_print_meta: n_gqa            = 8
0.00.306.076 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.306.077 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.306.077 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.306.078 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.306.079 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.306.079 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.306.079 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.306.080 I llm_load_print_meta: n_ff             = 16384
0.00.306.081 I llm_load_print_meta: n_expert         = 0
0.00.306.081 I llm_load_print_meta: n_expert_used    = 0
0.00.306.081 I llm_load_print_meta: causal attn      = 1
0.00.306.081 I llm_load_print_meta: pooling type     = 0
0.00.306.082 I llm_load_print_meta: rope type        = 2
0.00.306.082 I llm_load_print_meta: rope scaling     = linear
0.00.306.084 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.306.085 I llm_load_print_meta: freq_scale_train = 1
0.00.306.085 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.306.086 I llm_load_print_meta: rope_finetuned   = unknown
0.00.306.086 I llm_load_print_meta: ssm_d_conv       = 0
0.00.306.086 I llm_load_print_meta: ssm_d_inner      = 0
0.00.306.086 I llm_load_print_meta: ssm_d_state      = 0
0.00.306.086 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.306.087 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.306.087 I llm_load_print_meta: model type       = 2B
0.00.306.088 I llm_load_print_meta: model ftype      = Q8_0
0.00.306.089 I llm_load_print_meta: model params     = 2.51 B
0.00.306.090 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.306.090 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.306.090 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.306.091 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.306.091 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.306.092 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.306.092 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.306.092 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.306.093 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.306.093 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.306.093 I llm_load_print_meta: max token length = 93
0.00.306.120 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.381.789 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.381.798 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.381.798 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.381.799 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.381.800 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.381.800 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.386.868 I llama_new_context_with_model: n_ctx      = 8192
0.00.386.875 I llama_new_context_with_model: n_batch    = 2048
0.00.386.875 I llama_new_context_with_model: n_ubatch   = 512
0.00.386.876 I llama_new_context_with_model: flash_attn = 0
0.00.386.878 I llama_new_context_with_model: freq_base  = 10000.0
0.00.386.879 I llama_new_context_with_model: freq_scale = 1
0.00.417.549 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.417.565 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.417.657 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.418.556 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.418.565 I llama_new_context_with_model: graph nodes  = 601
0.00.418.565 I llama_new_context_with_model: graph splits = 1
0.00.418.567 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.511.889 I main: llama threadpool init, n_threads = 4
0.00.511.903 I 
0.00.511.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.511.986 I 
0.00.512.026 I sampler seed: 1144398732
0.00.512.037 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.512.045 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.512.045 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.512.045 I 
 increably with the vibrant colours and bold designs of our exclusive collection.

Explore the world of printed textiles that embody both style and substance. From intricate patterns and

0.02.859.002 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6715.51 tokens per second)
0.02.859.005 I llama_perf_context_print:        load time =     509.92 ms
0.02.859.006 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.859.008 I llama_perf_context_print:        eval time =    2327.80 ms /    32 runs   (   72.74 ms per token,    13.75 tokens per second)
0.02.859.009 I llama_perf_context_print:       total time =    2347.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.529 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.727 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.022.289 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.335 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.346 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.351 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.355 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.359 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.361 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.361 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.362 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.362 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.363 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.368 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.368 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.369 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.369 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.370 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.149 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.043 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.999 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.006 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.007 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.008 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.009 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.010 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.011 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.015 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.016 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.017 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.018 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.019 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.023 I llama_model_loader: - type  f32:   37 tensors
0.00.134.025 I llama_model_loader: - type q8_0:  127 tensors
0.00.231.288 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.286.566 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.287.236 I llm_load_vocab: special tokens cache size = 5
0.00.308.630 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.308.649 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.308.650 I llm_load_print_meta: arch             = gemma
0.00.308.650 I llm_load_print_meta: vocab type       = SPM
0.00.308.651 I llm_load_print_meta: n_vocab          = 256000
0.00.308.651 I llm_load_print_meta: n_merges         = 0
0.00.308.652 I llm_load_print_meta: vocab_only       = 0
0.00.308.652 I llm_load_print_meta: n_ctx_train      = 8192
0.00.308.652 I llm_load_print_meta: n_embd           = 2048
0.00.308.653 I llm_load_print_meta: n_layer          = 18
0.00.308.665 I llm_load_print_meta: n_head           = 8
0.00.308.666 I llm_load_print_meta: n_head_kv        = 1
0.00.308.666 I llm_load_print_meta: n_rot            = 256
0.00.308.667 I llm_load_print_meta: n_swa            = 0
0.00.308.667 I llm_load_print_meta: n_embd_head_k    = 256
0.00.308.667 I llm_load_print_meta: n_embd_head_v    = 256
0.00.308.668 I llm_load_print_meta: n_gqa            = 8
0.00.308.669 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.308.670 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.308.671 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.308.672 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.308.672 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.308.672 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.308.673 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.308.674 I llm_load_print_meta: n_ff             = 16384
0.00.308.674 I llm_load_print_meta: n_expert         = 0
0.00.308.674 I llm_load_print_meta: n_expert_used    = 0
0.00.308.675 I llm_load_print_meta: causal attn      = 1
0.00.308.675 I llm_load_print_meta: pooling type     = 0
0.00.308.675 I llm_load_print_meta: rope type        = 2
0.00.308.676 I llm_load_print_meta: rope scaling     = linear
0.00.308.677 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.308.678 I llm_load_print_meta: freq_scale_train = 1
0.00.308.678 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.308.678 I llm_load_print_meta: rope_finetuned   = unknown
0.00.308.678 I llm_load_print_meta: ssm_d_conv       = 0
0.00.308.678 I llm_load_print_meta: ssm_d_inner      = 0
0.00.308.679 I llm_load_print_meta: ssm_d_state      = 0
0.00.308.679 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.308.679 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.308.680 I llm_load_print_meta: model type       = 2B
0.00.308.680 I llm_load_print_meta: model ftype      = Q8_0
0.00.308.681 I llm_load_print_meta: model params     = 2.51 B
0.00.308.682 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.308.682 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.308.683 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.308.683 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.308.683 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.308.684 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.308.684 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.308.684 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.308.685 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.308.685 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.308.686 I llm_load_print_meta: max token length = 93
0.00.308.708 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.379.179 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.379.186 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.384.294 I llama_new_context_with_model: n_ctx      = 8192
0.00.384.300 I llama_new_context_with_model: n_batch    = 2048
0.00.384.301 I llama_new_context_with_model: n_ubatch   = 512
0.00.384.301 I llama_new_context_with_model: flash_attn = 0
0.00.384.304 I llama_new_context_with_model: freq_base  = 10000.0
0.00.384.305 I llama_new_context_with_model: freq_scale = 1
0.00.414.319 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.414.337 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.414.434 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.415.310 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.415.318 I llama_new_context_with_model: graph nodes  = 601
0.00.415.318 I llama_new_context_with_model: graph splits = 1
0.00.415.321 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.513.151 I main: llama threadpool init, n_threads = 4
0.00.513.168 I 
0.00.513.251 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.513.254 I 
0.00.513.294 I sampler seed: 3104220799
0.00.513.306 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.513.313 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.513.313 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.513.313 I 
 increasities. [end of text]


0.00.826.919 I llama_perf_sampler_print:    sampling time =       0.70 ms /     5 runs   (    0.14 ms per token,  7153.08 tokens per second)
0.00.826.921 I llama_perf_context_print:        load time =     511.27 ms
0.00.826.922 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.826.924 I llama_perf_context_print:        eval time =     310.15 ms /     4 runs   (   77.54 ms per token,    12.90 tokens per second)
0.00.826.924 I llama_perf_context_print:       total time =     313.78 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.354s
user	0m23.651s
sys	0m9.697s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3977 (8e154c3e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32186.14 ms
main:    total time = 32186.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.580 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.936 I main: load the model and apply lora adapter, if any
0.00.022.263 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.313 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.321 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.328 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.329 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.333 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.333 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.334 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.334 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.335 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.335 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.340 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.340 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.341 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.341 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.342 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.436 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.374 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.308 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.315 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.316 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.316 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.317 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.318 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.318 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.320 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.321 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.322 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.322 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.323 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.328 I llama_model_loader: - type  f32:   37 tensors
0.00.133.330 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.331 I llama_model_loader: - type q6_K:   19 tensors
0.00.218.540 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.270.080 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.795 I llm_load_vocab: special tokens cache size = 5
0.00.292.221 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.242 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.242 I llm_load_print_meta: arch             = gemma
0.00.292.243 I llm_load_print_meta: vocab type       = SPM
0.00.292.244 I llm_load_print_meta: n_vocab          = 256000
0.00.292.244 I llm_load_print_meta: n_merges         = 0
0.00.292.245 I llm_load_print_meta: vocab_only       = 0
0.00.292.245 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.245 I llm_load_print_meta: n_embd           = 2048
0.00.292.246 I llm_load_print_meta: n_layer          = 18
0.00.292.258 I llm_load_print_meta: n_head           = 8
0.00.292.259 I llm_load_print_meta: n_head_kv        = 1
0.00.292.259 I llm_load_print_meta: n_rot            = 256
0.00.292.260 I llm_load_print_meta: n_swa            = 0
0.00.292.276 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.277 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.279 I llm_load_print_meta: n_gqa            = 8
0.00.292.280 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.281 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.282 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.284 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.284 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.284 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.285 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.286 I llm_load_print_meta: n_ff             = 16384
0.00.292.286 I llm_load_print_meta: n_expert         = 0
0.00.292.287 I llm_load_print_meta: n_expert_used    = 0
0.00.292.287 I llm_load_print_meta: causal attn      = 1
0.00.292.287 I llm_load_print_meta: pooling type     = 0
0.00.292.288 I llm_load_print_meta: rope type        = 2
0.00.292.288 I llm_load_print_meta: rope scaling     = linear
0.00.292.289 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.291 I llm_load_print_meta: freq_scale_train = 1
0.00.292.291 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.291 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.292 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.292 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.292 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.293 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.294 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.294 I llm_load_print_meta: model type       = 2B
0.00.292.295 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.292.296 I llm_load_print_meta: model params     = 2.51 B
0.00.292.297 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.292.297 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.297 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.298 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.299 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.299 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.299 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.300 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.300 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.301 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.301 I llm_load_print_meta: max token length = 93
0.00.292.323 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.350.949 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.350.957 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.350.958 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.350.958 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.350.959 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.350.959 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.356.192 I llama_new_context_with_model: n_ctx      = 8192
0.00.356.200 I llama_new_context_with_model: n_batch    = 2048
0.00.356.200 I llama_new_context_with_model: n_ubatch   = 512
0.00.356.201 I llama_new_context_with_model: flash_attn = 0
0.00.356.205 I llama_new_context_with_model: freq_base  = 10000.0
0.00.356.206 I llama_new_context_with_model: freq_scale = 1
0.00.387.637 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.387.653 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.387.750 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.628 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.388.636 I llama_new_context_with_model: graph nodes  = 601
0.00.388.637 I llama_new_context_with_model: graph splits = 1
0.00.388.638 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.471.588 I main: llama threadpool init, n_threads = 4
0.00.471.604 I 
0.00.471.682 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.471.685 I 
0.00.471.726 I sampler seed: 2436790738
0.00.471.736 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.739 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.471.739 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.739 I 
 squaRED-UP

The prompt provides a directive to "squash up" something, but it is unclear what the intended meaning is. Can you provide some

0.02.155.449 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6860.71 tokens per second)
0.02.155.451 I llama_perf_context_print:        load time =     469.63 ms
0.02.155.452 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.155.453 I llama_perf_context_print:        eval time =    1664.96 ms /    32 runs   (   52.03 ms per token,    19.22 tokens per second)
0.02.155.454 I llama_perf_context_print:       total time =    1683.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3977 (8e154c3e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32099.62 ms
main:    total time = 32099.62 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.567 I build: 3977 (8e154c3e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.022.029 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.041 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.048 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.049 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.056 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.057 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.058 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.058 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.059 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.060 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.064 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.064 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.065 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.065 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.066 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.675 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.725 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.619 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.626 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.627 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.628 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.628 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.630 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.630 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.632 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.633 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.637 I llama_model_loader: - type  f32:   37 tensors
0.00.132.639 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.640 I llama_model_loader: - type q6_K:   19 tensors
0.00.215.676 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.919 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.510 I llm_load_vocab: special tokens cache size = 5
0.00.290.981 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.002 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.003 I llm_load_print_meta: arch             = gemma
0.00.291.003 I llm_load_print_meta: vocab type       = SPM
0.00.291.004 I llm_load_print_meta: n_vocab          = 256000
0.00.291.005 I llm_load_print_meta: n_merges         = 0
0.00.291.005 I llm_load_print_meta: vocab_only       = 0
0.00.291.005 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.005 I llm_load_print_meta: n_embd           = 2048
0.00.291.006 I llm_load_print_meta: n_layer          = 18
0.00.291.018 I llm_load_print_meta: n_head           = 8
0.00.291.019 I llm_load_print_meta: n_head_kv        = 1
0.00.291.019 I llm_load_print_meta: n_rot            = 256
0.00.291.020 I llm_load_print_meta: n_swa            = 0
0.00.291.020 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.020 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.021 I llm_load_print_meta: n_gqa            = 8
0.00.291.023 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.024 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.024 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.025 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.026 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.026 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.026 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.027 I llm_load_print_meta: n_ff             = 16384
0.00.291.027 I llm_load_print_meta: n_expert         = 0
0.00.291.028 I llm_load_print_meta: n_expert_used    = 0
0.00.291.028 I llm_load_print_meta: causal attn      = 1
0.00.291.028 I llm_load_print_meta: pooling type     = 0
0.00.291.028 I llm_load_print_meta: rope type        = 2
0.00.291.029 I llm_load_print_meta: rope scaling     = linear
0.00.291.031 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.031 I llm_load_print_meta: freq_scale_train = 1
0.00.291.032 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.032 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.032 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.032 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.033 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.033 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.033 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.034 I llm_load_print_meta: model type       = 2B
0.00.291.034 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.291.035 I llm_load_print_meta: model params     = 2.51 B
0.00.291.036 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.291.036 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.037 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.037 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.037 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.037 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.038 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.038 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.038 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.039 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.039 I llm_load_print_meta: max token length = 93
0.00.291.064 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.348.018 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.353.074 I llama_new_context_with_model: n_ctx      = 8192
0.00.353.082 I llama_new_context_with_model: n_batch    = 2048
0.00.353.082 I llama_new_context_with_model: n_ubatch   = 512
0.00.353.083 I llama_new_context_with_model: flash_attn = 0
0.00.353.086 I llama_new_context_with_model: freq_base  = 10000.0
0.00.353.087 I llama_new_context_with_model: freq_scale = 1
0.00.384.168 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.384.184 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.384.281 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.137 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.385.146 I llama_new_context_with_model: graph nodes  = 601
0.00.385.147 I llama_new_context_with_model: graph splits = 1
0.00.385.148 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.120 I main: llama threadpool init, n_threads = 4
0.00.468.135 I 
0.00.468.217 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.220 I 
0.00.468.258 I sampler seed: 715441028
0.00.468.267 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.270 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.468.271 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.271 I 
 seconally, and they can speak for themselves.

The first speaker is a woman. She is a doctor and has a wealth of experience in treating patients.

0.02.160.197 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6767.84 tokens per second)
0.02.160.200 I llama_perf_context_print:        load time =     466.22 ms
0.02.160.202 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.160.204 I llama_perf_context_print:        eval time =    1673.08 ms /    32 runs   (   52.28 ms per token,    19.13 tokens per second)
0.02.160.204 I llama_perf_context_print:       total time =    1692.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m12.103s
user	8m15.997s
sys	0m7.064s
