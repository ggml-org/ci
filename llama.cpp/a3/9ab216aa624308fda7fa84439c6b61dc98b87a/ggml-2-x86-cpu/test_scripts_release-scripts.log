+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.567 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.022.342 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.391 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.398 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.404 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.404 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.408 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.409 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.410 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.410 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.411 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.412 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.417 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.419 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.419 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.420 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.421 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.933 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.264 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.200 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.206 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.206 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.207 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.208 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.209 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.210 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.215 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.216 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.217 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.217 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.218 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.223 I llama_model_loader: - type  f32:   37 tensors
0.00.133.225 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.401 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.874 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.646 I llm_load_vocab: special tokens cache size = 5
0.00.236.927 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.941 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.942 I llm_load_print_meta: arch             = gemma
0.00.236.942 I llm_load_print_meta: vocab type       = SPM
0.00.236.944 I llm_load_print_meta: n_vocab          = 256000
0.00.236.944 I llm_load_print_meta: n_merges         = 0
0.00.236.945 I llm_load_print_meta: vocab_only       = 0
0.00.236.945 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.945 I llm_load_print_meta: n_embd           = 2048
0.00.236.946 I llm_load_print_meta: n_layer          = 18
0.00.236.960 I llm_load_print_meta: n_head           = 8
0.00.236.961 I llm_load_print_meta: n_head_kv        = 1
0.00.236.961 I llm_load_print_meta: n_rot            = 256
0.00.236.961 I llm_load_print_meta: n_swa            = 0
0.00.236.962 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.962 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.963 I llm_load_print_meta: n_gqa            = 8
0.00.236.964 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.965 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.966 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.967 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.968 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.968 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.969 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.970 I llm_load_print_meta: n_ff             = 16384
0.00.236.970 I llm_load_print_meta: n_expert         = 0
0.00.236.970 I llm_load_print_meta: n_expert_used    = 0
0.00.236.971 I llm_load_print_meta: causal attn      = 1
0.00.236.971 I llm_load_print_meta: pooling type     = 0
0.00.236.971 I llm_load_print_meta: rope type        = 2
0.00.236.972 I llm_load_print_meta: rope scaling     = linear
0.00.236.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.974 I llm_load_print_meta: freq_scale_train = 1
0.00.236.974 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.975 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.975 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.975 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.976 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.976 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.976 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.977 I llm_load_print_meta: model type       = 2B
0.00.236.978 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.979 I llm_load_print_meta: model params     = 2.51 B
0.00.236.981 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.982 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.983 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.983 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.983 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.984 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.985 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.985 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.986 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.987 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.988 I llm_load_print_meta: max token length = 93
0.00.237.005 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.440 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.448 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.449 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.450 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.450 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.451 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.688 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.695 I llama_new_context_with_model: n_batch    = 2048
0.00.339.695 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.696 I llama_new_context_with_model: flash_attn = 0
0.00.339.699 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.699 I llama_new_context_with_model: freq_scale = 1
0.00.369.857 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.874 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.970 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.844 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.852 I llama_new_context_with_model: graph nodes  = 601
0.00.370.853 I llama_new_context_with_model: graph splits = 1
0.00.370.854 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.179 I main: llama threadpool init, n_threads = 4
0.00.465.191 I 
0.00.465.269 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.272 I 
0.00.465.309 I sampler seed: 1985444430
0.00.465.319 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.321 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.465.322 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.322 I 
 increasities of a common ancestor occurring in geographically distant populations.

**Explanation:**

The dispersal of humans from Africa likely occurred in small groups and gradually over thousands

0.02.774.053 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6596.04 tokens per second)
0.02.774.056 I llama_perf_context_print:        load time =     463.29 ms
0.02.774.057 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.774.059 I llama_perf_context_print:        eval time =    2290.34 ms /    32 runs   (   71.57 ms per token,    13.97 tokens per second)
0.02.774.060 I llama_perf_context_print:       total time =    2308.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.599 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.805 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.022.091 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.103 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.110 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.111 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.116 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.117 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.117 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.118 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.118 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.119 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.123 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.124 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.125 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.125 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.126 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.482 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.887 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.781 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.788 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.789 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.790 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.791 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.792 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.794 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.797 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.798 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.799 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.800 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.801 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.805 I llama_model_loader: - type  f32:   37 tensors
0.00.132.808 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.245 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.206.082 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.858 I llm_load_vocab: special tokens cache size = 5
0.00.227.871 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.886 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.887 I llm_load_print_meta: arch             = gemma
0.00.227.888 I llm_load_print_meta: vocab type       = SPM
0.00.227.889 I llm_load_print_meta: n_vocab          = 256000
0.00.227.889 I llm_load_print_meta: n_merges         = 0
0.00.227.890 I llm_load_print_meta: vocab_only       = 0
0.00.227.890 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.890 I llm_load_print_meta: n_embd           = 2048
0.00.227.891 I llm_load_print_meta: n_layer          = 18
0.00.227.903 I llm_load_print_meta: n_head           = 8
0.00.227.904 I llm_load_print_meta: n_head_kv        = 1
0.00.227.905 I llm_load_print_meta: n_rot            = 256
0.00.227.905 I llm_load_print_meta: n_swa            = 0
0.00.227.906 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.906 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.907 I llm_load_print_meta: n_gqa            = 8
0.00.227.908 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.909 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.910 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.911 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.912 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.912 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.913 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.913 I llm_load_print_meta: n_ff             = 16384
0.00.227.914 I llm_load_print_meta: n_expert         = 0
0.00.227.914 I llm_load_print_meta: n_expert_used    = 0
0.00.227.914 I llm_load_print_meta: causal attn      = 1
0.00.227.915 I llm_load_print_meta: pooling type     = 0
0.00.227.915 I llm_load_print_meta: rope type        = 2
0.00.227.915 I llm_load_print_meta: rope scaling     = linear
0.00.227.917 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.917 I llm_load_print_meta: freq_scale_train = 1
0.00.227.918 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.918 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.918 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.919 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.919 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.919 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.919 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.920 I llm_load_print_meta: model type       = 2B
0.00.227.921 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.922 I llm_load_print_meta: model params     = 2.51 B
0.00.227.923 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.923 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.924 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.925 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.925 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.926 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.926 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.927 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.927 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.928 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.928 I llm_load_print_meta: max token length = 93
0.00.227.949 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.152 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.325.327 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.333 I llama_new_context_with_model: n_batch    = 2048
0.00.325.333 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.334 I llama_new_context_with_model: flash_attn = 0
0.00.325.337 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.338 I llama_new_context_with_model: freq_scale = 1
0.00.356.281 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.298 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.389 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.270 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.278 I llama_new_context_with_model: graph nodes  = 601
0.00.357.278 I llama_new_context_with_model: graph splits = 1
0.00.357.280 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.828 I main: llama threadpool init, n_threads = 4
0.00.445.839 I 
0.00.445.917 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.920 I 
0.00.445.959 I sampler seed: 3631407766
0.00.445.967 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.971 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.971 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.972 I 
 increasities to a new and improved level of sophistication. [end of text]


0.01.273.595 I llama_perf_sampler_print:    sampling time =       1.87 ms /    13 runs   (    0.14 ms per token,  6955.59 tokens per second)
0.01.273.598 I llama_perf_context_print:        load time =     443.91 ms
0.01.273.599 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.273.600 I llama_perf_context_print:        eval time =     819.82 ms /    12 runs   (   68.32 ms per token,    14.64 tokens per second)
0.01.273.601 I llama_perf_context_print:       total time =     827.77 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.574 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.076 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.128 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.139 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.149 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.150 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.155 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.155 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.156 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.156 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.157 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.157 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.163 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.164 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.164 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.164 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.165 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.013 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.430 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.321 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.328 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.329 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.330 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.330 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.331 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.332 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.335 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.335 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.336 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.336 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.337 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.340 I llama_model_loader: - type  f32:   37 tensors
0.00.133.343 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.514 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.481 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.277 I llm_load_vocab: special tokens cache size = 5
0.00.230.351 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.364 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.365 I llm_load_print_meta: arch             = gemma
0.00.230.366 I llm_load_print_meta: vocab type       = SPM
0.00.230.367 I llm_load_print_meta: n_vocab          = 256000
0.00.230.367 I llm_load_print_meta: n_merges         = 0
0.00.230.368 I llm_load_print_meta: vocab_only       = 0
0.00.230.368 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.369 I llm_load_print_meta: n_embd           = 2048
0.00.230.369 I llm_load_print_meta: n_layer          = 18
0.00.230.381 I llm_load_print_meta: n_head           = 8
0.00.230.382 I llm_load_print_meta: n_head_kv        = 1
0.00.230.383 I llm_load_print_meta: n_rot            = 256
0.00.230.383 I llm_load_print_meta: n_swa            = 0
0.00.230.383 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.384 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.385 I llm_load_print_meta: n_gqa            = 8
0.00.230.386 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.387 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.387 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.389 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.389 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.389 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.390 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.391 I llm_load_print_meta: n_ff             = 16384
0.00.230.391 I llm_load_print_meta: n_expert         = 0
0.00.230.392 I llm_load_print_meta: n_expert_used    = 0
0.00.230.392 I llm_load_print_meta: causal attn      = 1
0.00.230.392 I llm_load_print_meta: pooling type     = 0
0.00.230.392 I llm_load_print_meta: rope type        = 2
0.00.230.393 I llm_load_print_meta: rope scaling     = linear
0.00.230.394 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.395 I llm_load_print_meta: freq_scale_train = 1
0.00.230.395 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.396 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.396 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.397 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.397 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.397 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.398 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.398 I llm_load_print_meta: model type       = 2B
0.00.230.399 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.399 I llm_load_print_meta: model params     = 2.51 B
0.00.230.400 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.400 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.401 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.401 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.401 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.402 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.403 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.403 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.404 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.404 I llm_load_print_meta: max token length = 93
0.00.230.422 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.305.403 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.305.409 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.410 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.305.411 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.305.412 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.412 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.310.785 I llama_new_context_with_model: n_ctx      = 8192
0.00.310.791 I llama_new_context_with_model: n_batch    = 2048
0.00.310.792 I llama_new_context_with_model: n_ubatch   = 512
0.00.310.793 I llama_new_context_with_model: flash_attn = 0
0.00.310.796 I llama_new_context_with_model: freq_base  = 10000.0
0.00.310.797 I llama_new_context_with_model: freq_scale = 1
0.00.340.522 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.540 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.633 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.512 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.521 I llama_new_context_with_model: graph nodes  = 601
0.00.341.522 I llama_new_context_with_model: graph splits = 1
0.00.341.524 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.739 I main: llama threadpool init, n_threads = 4
0.00.434.753 I 
0.00.434.831 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.434.834 I 
0.00.434.871 I sampler seed: 2036950698
0.00.434.880 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.882 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.434.883 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.883 I 
 increasities by suggesting that they are manifestations of a deeper psychological process.

**Answer:**

This is a fascinating proposition that opens up a range of questions and

0.02.748.377 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7013.82 tokens per second)
0.02.748.380 I llama_perf_context_print:        load time =     432.85 ms
0.02.748.382 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.748.383 I llama_perf_context_print:        eval time =    2295.18 ms /    32 runs   (   71.72 ms per token,    13.94 tokens per second)
0.02.748.384 I llama_perf_context_print:       total time =    2313.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.530 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.021.877 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.935 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.952 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.959 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.975 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.979 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.979 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.980 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.981 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.981 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.981 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.986 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.987 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.988 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.465 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.986 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.905 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.913 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.915 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.916 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.917 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.918 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.922 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.922 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.923 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.924 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.925 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.930 I llama_model_loader: - type  f32:   37 tensors
0.00.132.934 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.242 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.196 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.077 I llm_load_vocab: special tokens cache size = 5
0.00.234.477 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.492 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.492 I llm_load_print_meta: arch             = gemma
0.00.234.493 I llm_load_print_meta: vocab type       = SPM
0.00.234.494 I llm_load_print_meta: n_vocab          = 256000
0.00.234.494 I llm_load_print_meta: n_merges         = 0
0.00.234.495 I llm_load_print_meta: vocab_only       = 0
0.00.234.495 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.496 I llm_load_print_meta: n_embd           = 2048
0.00.234.496 I llm_load_print_meta: n_layer          = 18
0.00.234.510 I llm_load_print_meta: n_head           = 8
0.00.234.511 I llm_load_print_meta: n_head_kv        = 1
0.00.234.511 I llm_load_print_meta: n_rot            = 256
0.00.234.512 I llm_load_print_meta: n_swa            = 0
0.00.234.512 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.513 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.513 I llm_load_print_meta: n_gqa            = 8
0.00.234.514 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.515 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.516 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.517 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.518 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.518 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.519 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.520 I llm_load_print_meta: n_ff             = 16384
0.00.234.520 I llm_load_print_meta: n_expert         = 0
0.00.234.520 I llm_load_print_meta: n_expert_used    = 0
0.00.234.521 I llm_load_print_meta: causal attn      = 1
0.00.234.521 I llm_load_print_meta: pooling type     = 0
0.00.234.521 I llm_load_print_meta: rope type        = 2
0.00.234.521 I llm_load_print_meta: rope scaling     = linear
0.00.234.523 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.524 I llm_load_print_meta: freq_scale_train = 1
0.00.234.524 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.524 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.525 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.525 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.525 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.526 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.526 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.526 I llm_load_print_meta: model type       = 2B
0.00.234.527 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.528 I llm_load_print_meta: model params     = 2.51 B
0.00.234.529 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.529 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.530 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.530 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.530 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.530 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.531 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.531 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.532 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.532 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.533 I llm_load_print_meta: max token length = 93
0.00.234.555 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.305.046 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.305.054 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.310.177 I llama_new_context_with_model: n_ctx      = 8192
0.00.310.183 I llama_new_context_with_model: n_batch    = 2048
0.00.310.183 I llama_new_context_with_model: n_ubatch   = 512
0.00.310.184 I llama_new_context_with_model: flash_attn = 0
0.00.310.187 I llama_new_context_with_model: freq_base  = 10000.0
0.00.310.188 I llama_new_context_with_model: freq_scale = 1
0.00.340.906 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.922 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.341.022 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.905 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.914 I llama_new_context_with_model: graph nodes  = 601
0.00.341.914 I llama_new_context_with_model: graph splits = 1
0.00.341.916 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.933 I main: llama threadpool init, n_threads = 4
0.00.439.945 I 
0.00.440.035 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.038 I 
0.00.440.090 I sampler seed: 1184055407
0.00.440.099 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.102 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.103 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.103 I 
 increably, a woman with fiery red hair and eyes that sparkled with mischief. Her laughter echoed through the grand hall, a symphony of joy that resonated

0.02.914.900 I llama_perf_sampler_print:    sampling time =       5.10 ms /    33 runs   (    0.15 ms per token,  6471.86 tokens per second)
0.02.914.902 I llama_perf_context_print:        load time =     438.03 ms
0.02.914.903 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.914.905 I llama_perf_context_print:        eval time =    2456.23 ms /    32 runs   (   76.76 ms per token,    13.03 tokens per second)
0.02.914.906 I llama_perf_context_print:       total time =    2474.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.482s
user	0m34.509s
sys	0m9.637s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3867 (a39ab216)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32090.57 ms
main:    total time = 32090.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.022.297 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.345 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.356 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.361 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.362 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.366 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.367 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.367 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.368 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.369 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.369 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.374 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.374 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.375 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.376 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.376 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.313 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.989 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.988 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.997 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.998 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.998 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.999 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.000 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.001 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.004 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.005 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.005 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.006 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.007 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.010 I llama_model_loader: - type  f32:   37 tensors
0.00.134.013 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.013 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.166 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.222.514 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.351 I llm_load_vocab: special tokens cache size = 5
0.00.244.493 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.244.510 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.244.511 I llm_load_print_meta: arch             = gemma
0.00.244.511 I llm_load_print_meta: vocab type       = SPM
0.00.244.512 I llm_load_print_meta: n_vocab          = 256000
0.00.244.513 I llm_load_print_meta: n_merges         = 0
0.00.244.513 I llm_load_print_meta: vocab_only       = 0
0.00.244.514 I llm_load_print_meta: n_ctx_train      = 8192
0.00.244.514 I llm_load_print_meta: n_embd           = 2048
0.00.244.514 I llm_load_print_meta: n_layer          = 18
0.00.244.530 I llm_load_print_meta: n_head           = 8
0.00.244.531 I llm_load_print_meta: n_head_kv        = 1
0.00.244.532 I llm_load_print_meta: n_rot            = 256
0.00.244.532 I llm_load_print_meta: n_swa            = 0
0.00.244.533 I llm_load_print_meta: n_embd_head_k    = 256
0.00.244.533 I llm_load_print_meta: n_embd_head_v    = 256
0.00.244.534 I llm_load_print_meta: n_gqa            = 8
0.00.244.536 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.244.537 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.244.538 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.244.539 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.244.539 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.244.540 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.244.540 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.244.541 I llm_load_print_meta: n_ff             = 16384
0.00.244.542 I llm_load_print_meta: n_expert         = 0
0.00.244.543 I llm_load_print_meta: n_expert_used    = 0
0.00.244.543 I llm_load_print_meta: causal attn      = 1
0.00.244.543 I llm_load_print_meta: pooling type     = 0
0.00.244.546 I llm_load_print_meta: rope type        = 2
0.00.244.546 I llm_load_print_meta: rope scaling     = linear
0.00.244.547 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.244.549 I llm_load_print_meta: freq_scale_train = 1
0.00.244.549 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.244.550 I llm_load_print_meta: rope_finetuned   = unknown
0.00.244.551 I llm_load_print_meta: ssm_d_conv       = 0
0.00.244.551 I llm_load_print_meta: ssm_d_inner      = 0
0.00.244.551 I llm_load_print_meta: ssm_d_state      = 0
0.00.244.552 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.244.552 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.244.553 I llm_load_print_meta: model type       = 2B
0.00.244.553 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.244.554 I llm_load_print_meta: model params     = 2.51 B
0.00.244.555 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.244.555 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.244.556 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.244.557 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.244.557 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.244.558 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.244.558 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.244.559 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.244.559 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.244.560 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.244.561 I llm_load_print_meta: max token length = 93
0.00.244.582 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.302.891 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.302.900 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.302.901 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.302.901 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.302.902 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.302.902 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.308.046 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.054 I llama_new_context_with_model: n_batch    = 2048
0.00.308.054 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.055 I llama_new_context_with_model: flash_attn = 0
0.00.308.058 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.059 I llama_new_context_with_model: freq_scale = 1
0.00.341.122 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.341.142 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.341.239 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.342.261 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.342.270 I llama_new_context_with_model: graph nodes  = 601
0.00.342.271 I llama_new_context_with_model: graph splits = 1
0.00.342.273 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.127 I main: llama threadpool init, n_threads = 4
0.00.430.141 I 
0.00.430.216 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.430.219 I 
0.00.430.257 I sampler seed: 3434774255
0.00.430.266 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.270 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.430.270 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.271 I 
 seconded.

I am unable to access the internet or any external websites. I am experiencing an internet outage in my area.

I need to access important

0.02.123.238 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6804.12 tokens per second)
0.02.123.241 I llama_perf_context_print:        load time =     428.22 ms
0.02.123.242 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.123.243 I llama_perf_context_print:        eval time =    1673.57 ms /    32 runs   (   52.30 ms per token,    19.12 tokens per second)
0.02.123.244 I llama_perf_context_print:       total time =    1693.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3867 (a39ab216)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32244.08 ms
main:    total time = 32244.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.575 I build: 3867 (a39ab216) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.000 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.017 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.024 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.025 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.033 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.033 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.034 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.034 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.035 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.035 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.040 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.041 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.041 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.042 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.042 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.611 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.027 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.892 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.899 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.899 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.900 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.901 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.901 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.902 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.905 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.906 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.910 I llama_model_loader: - type  f32:   37 tensors
0.00.132.912 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.913 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.870 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.232.630 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.233.489 I llm_load_vocab: special tokens cache size = 5
0.00.254.992 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.010 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.011 I llm_load_print_meta: arch             = gemma
0.00.255.011 I llm_load_print_meta: vocab type       = SPM
0.00.255.012 I llm_load_print_meta: n_vocab          = 256000
0.00.255.012 I llm_load_print_meta: n_merges         = 0
0.00.255.013 I llm_load_print_meta: vocab_only       = 0
0.00.255.013 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.013 I llm_load_print_meta: n_embd           = 2048
0.00.255.014 I llm_load_print_meta: n_layer          = 18
0.00.255.028 I llm_load_print_meta: n_head           = 8
0.00.255.029 I llm_load_print_meta: n_head_kv        = 1
0.00.255.029 I llm_load_print_meta: n_rot            = 256
0.00.255.030 I llm_load_print_meta: n_swa            = 0
0.00.255.030 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.030 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.031 I llm_load_print_meta: n_gqa            = 8
0.00.255.032 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.033 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.033 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.035 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.035 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.036 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.036 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.037 I llm_load_print_meta: n_ff             = 16384
0.00.255.037 I llm_load_print_meta: n_expert         = 0
0.00.255.038 I llm_load_print_meta: n_expert_used    = 0
0.00.255.038 I llm_load_print_meta: causal attn      = 1
0.00.255.038 I llm_load_print_meta: pooling type     = 0
0.00.255.038 I llm_load_print_meta: rope type        = 2
0.00.255.039 I llm_load_print_meta: rope scaling     = linear
0.00.255.040 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.040 I llm_load_print_meta: freq_scale_train = 1
0.00.255.040 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.041 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.041 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.041 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.041 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.042 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.042 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.043 I llm_load_print_meta: model type       = 2B
0.00.255.043 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.255.044 I llm_load_print_meta: model params     = 2.51 B
0.00.255.045 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.255.045 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.045 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.046 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.046 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.046 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.047 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.047 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.047 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.048 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.048 I llm_load_print_meta: max token length = 93
0.00.255.070 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.488 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.319.610 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.617 I llama_new_context_with_model: n_batch    = 2048
0.00.319.617 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.618 I llama_new_context_with_model: flash_attn = 0
0.00.319.622 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.623 I llama_new_context_with_model: freq_scale = 1
0.00.351.105 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.351.123 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.351.215 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.089 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.096 I llama_new_context_with_model: graph nodes  = 601
0.00.352.097 I llama_new_context_with_model: graph splits = 1
0.00.352.098 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.424 I main: llama threadpool init, n_threads = 4
0.00.436.440 I 
0.00.436.531 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.436.536 I 
0.00.436.585 I sampler seed: 1847595052
0.00.436.596 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.605 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.436.606 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.608 I 
 affors the role of a _______ in a team.

A) Leader
B) Coordinator
C) Manager
D) All of the above

The

0.02.142.142 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6956.16 tokens per second)
0.02.142.145 I llama_perf_context_print:        load time =     434.54 ms
0.02.142.147 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.142.148 I llama_perf_context_print:        eval time =    1686.83 ms /    32 runs   (   52.71 ms per token,    18.97 tokens per second)
0.02.142.151 I llama_perf_context_print:       total time =    1705.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.789s
user	8m15.868s
sys	0m7.171s
