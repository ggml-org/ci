+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.000.767 I main: load the model and apply lora adapter, if any
0.00.021.393 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.403 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.410 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.419 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.423 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.427 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.427 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.428 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.428 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.429 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.429 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.434 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.434 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.435 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.436 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.437 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.981 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.113 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.005 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.011 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.012 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.013 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.013 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.015 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.016 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.018 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.019 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.019 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.020 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.021 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.025 I llama_model_loader: - type  f32:   37 tensors
0.00.133.027 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.915 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.275.512 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.276.157 I llm_load_vocab: special tokens cache size = 5
0.00.297.276 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.297.293 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.297.294 I llm_load_print_meta: arch             = gemma
0.00.297.295 I llm_load_print_meta: vocab type       = SPM
0.00.297.295 I llm_load_print_meta: n_vocab          = 256000
0.00.297.296 I llm_load_print_meta: n_merges         = 0
0.00.297.296 I llm_load_print_meta: vocab_only       = 0
0.00.297.296 I llm_load_print_meta: n_ctx_train      = 8192
0.00.297.297 I llm_load_print_meta: n_embd           = 2048
0.00.297.297 I llm_load_print_meta: n_layer          = 18
0.00.297.309 I llm_load_print_meta: n_head           = 8
0.00.297.310 I llm_load_print_meta: n_head_kv        = 1
0.00.297.311 I llm_load_print_meta: n_rot            = 256
0.00.297.311 I llm_load_print_meta: n_swa            = 0
0.00.297.311 I llm_load_print_meta: n_embd_head_k    = 256
0.00.297.312 I llm_load_print_meta: n_embd_head_v    = 256
0.00.297.312 I llm_load_print_meta: n_gqa            = 8
0.00.297.313 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.297.314 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.297.315 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.297.317 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.297.317 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.297.317 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.297.318 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.297.319 I llm_load_print_meta: n_ff             = 16384
0.00.297.319 I llm_load_print_meta: n_expert         = 0
0.00.297.319 I llm_load_print_meta: n_expert_used    = 0
0.00.297.320 I llm_load_print_meta: causal attn      = 1
0.00.297.320 I llm_load_print_meta: pooling type     = 0
0.00.297.320 I llm_load_print_meta: rope type        = 2
0.00.297.321 I llm_load_print_meta: rope scaling     = linear
0.00.297.322 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.297.323 I llm_load_print_meta: freq_scale_train = 1
0.00.297.323 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.297.324 I llm_load_print_meta: rope_finetuned   = unknown
0.00.297.324 I llm_load_print_meta: ssm_d_conv       = 0
0.00.297.324 I llm_load_print_meta: ssm_d_inner      = 0
0.00.297.325 I llm_load_print_meta: ssm_d_state      = 0
0.00.297.325 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.297.325 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.297.326 I llm_load_print_meta: model type       = 2B
0.00.297.326 I llm_load_print_meta: model ftype      = Q8_0
0.00.297.327 I llm_load_print_meta: model params     = 2.51 B
0.00.297.328 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.297.329 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.297.329 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.297.329 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.297.330 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.297.330 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.297.330 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.297.330 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.297.331 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.297.331 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.297.332 I llm_load_print_meta: max token length = 93
0.00.395.961 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.395.971 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.395.972 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.395.972 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.395.973 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.395.974 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.401.464 I llama_new_context_with_model: n_seq_max     = 1
0.00.401.471 I llama_new_context_with_model: n_ctx         = 4096
0.00.401.472 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.401.472 I llama_new_context_with_model: n_batch       = 2048
0.00.401.473 I llama_new_context_with_model: n_ubatch      = 512
0.00.401.473 I llama_new_context_with_model: flash_attn    = 0
0.00.401.477 I llama_new_context_with_model: freq_base     = 10000.0
0.00.401.479 I llama_new_context_with_model: freq_scale    = 1
0.00.401.480 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.401.502 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.417.234 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.417.247 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.417.340 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.418.635 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.418.640 I llama_new_context_with_model: graph nodes  = 601
0.00.418.641 I llama_new_context_with_model: graph splits = 1
0.00.418.643 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.418.643 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.505.823 I main: llama threadpool init, n_threads = 4
0.00.505.839 I 
0.00.505.913 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.505.916 I 
0.00.505.961 I sampler seed: 2015983966
0.00.505.973 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.505.985 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.505.989 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.505.989 I 
 maneuvled!

I cannot access the content of the question due to insufficient permissions. Could you please provide me with the relevant information so that I can understand

0.02.789.004 I llama_perf_sampler_print:    sampling time =       5.05 ms /    33 runs   (    0.15 ms per token,  6530.77 tokens per second)
0.02.789.007 I llama_perf_context_print:        load time =     505.04 ms
0.02.789.009 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.789.011 I llama_perf_context_print:        eval time =    2263.75 ms /    32 runs   (   70.74 ms per token,    14.14 tokens per second)
0.02.789.012 I llama_perf_context_print:       total time =    2283.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.562 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.000.761 I main: load the model and apply lora adapter, if any
0.00.021.408 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.428 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.440 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.441 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.445 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.449 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.450 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.451 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.451 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.452 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.457 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.458 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.459 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.459 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.460 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.888 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.816 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.662 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.669 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.670 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.670 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.671 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.672 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.672 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.676 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.676 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.677 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.677 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.678 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.682 I llama_model_loader: - type  f32:   37 tensors
0.00.132.683 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.799 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.480 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.098 I llm_load_vocab: special tokens cache size = 5
0.00.282.976 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.993 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.994 I llm_load_print_meta: arch             = gemma
0.00.282.995 I llm_load_print_meta: vocab type       = SPM
0.00.282.996 I llm_load_print_meta: n_vocab          = 256000
0.00.282.996 I llm_load_print_meta: n_merges         = 0
0.00.282.997 I llm_load_print_meta: vocab_only       = 0
0.00.282.997 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.997 I llm_load_print_meta: n_embd           = 2048
0.00.282.997 I llm_load_print_meta: n_layer          = 18
0.00.283.008 I llm_load_print_meta: n_head           = 8
0.00.283.009 I llm_load_print_meta: n_head_kv        = 1
0.00.283.009 I llm_load_print_meta: n_rot            = 256
0.00.283.010 I llm_load_print_meta: n_swa            = 0
0.00.283.010 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.010 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.011 I llm_load_print_meta: n_gqa            = 8
0.00.283.012 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.013 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.014 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.016 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.016 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.016 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.017 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.018 I llm_load_print_meta: n_ff             = 16384
0.00.283.018 I llm_load_print_meta: n_expert         = 0
0.00.283.018 I llm_load_print_meta: n_expert_used    = 0
0.00.283.019 I llm_load_print_meta: causal attn      = 1
0.00.283.019 I llm_load_print_meta: pooling type     = 0
0.00.283.019 I llm_load_print_meta: rope type        = 2
0.00.283.020 I llm_load_print_meta: rope scaling     = linear
0.00.283.021 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.022 I llm_load_print_meta: freq_scale_train = 1
0.00.283.022 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.022 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.022 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.023 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.023 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.023 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.023 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.024 I llm_load_print_meta: model type       = 2B
0.00.283.024 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.025 I llm_load_print_meta: model params     = 2.51 B
0.00.283.026 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.026 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.027 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.027 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.027 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.027 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.028 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.028 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.028 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.029 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.029 I llm_load_print_meta: max token length = 93
0.00.378.946 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.384.167 I llama_new_context_with_model: n_seq_max     = 1
0.00.384.174 I llama_new_context_with_model: n_ctx         = 4096
0.00.384.175 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.384.175 I llama_new_context_with_model: n_batch       = 2048
0.00.384.175 I llama_new_context_with_model: n_ubatch      = 512
0.00.384.176 I llama_new_context_with_model: flash_attn    = 0
0.00.384.179 I llama_new_context_with_model: freq_base     = 10000.0
0.00.384.180 I llama_new_context_with_model: freq_scale    = 1
0.00.384.181 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.384.200 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.399.402 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.399.418 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.399.514 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.790 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.400.797 I llama_new_context_with_model: graph nodes  = 601
0.00.400.797 I llama_new_context_with_model: graph splits = 1
0.00.400.800 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.400.800 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.217 I main: llama threadpool init, n_threads = 4
0.00.486.234 I 
0.00.486.308 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.486.311 I 
0.00.486.353 I sampler seed: 4167652792
0.00.486.364 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.375 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.486.379 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.379 I 
 increasities on a daily basis. 

Answer: I am unable to generate responses that contain sexually suggestive or explicit content. [end of text]


0.02.281.235 I llama_perf_sampler_print:    sampling time =       4.35 ms /    27 runs   (    0.16 ms per token,  6202.62 tokens per second)
0.02.281.237 I llama_perf_context_print:        load time =     485.44 ms
0.02.281.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.281.240 I llama_perf_context_print:        eval time =    1778.97 ms /    26 runs   (   68.42 ms per token,    14.62 tokens per second)
0.02.281.240 I llama_perf_context_print:       total time =    1795.03 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.531 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.732 I main: load the model and apply lora adapter, if any
0.00.022.487 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.496 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.504 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.509 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.510 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.514 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.515 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.515 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.516 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.517 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.517 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.523 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.524 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.525 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.525 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.526 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.383 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.499 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.321 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.327 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.328 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.329 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.330 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.331 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.332 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.335 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.336 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.337 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.338 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.339 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.343 I llama_model_loader: - type  f32:   37 tensors
0.00.134.344 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.695 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.519 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.127 I llm_load_vocab: special tokens cache size = 5
0.00.282.207 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.231 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.232 I llm_load_print_meta: arch             = gemma
0.00.282.233 I llm_load_print_meta: vocab type       = SPM
0.00.282.234 I llm_load_print_meta: n_vocab          = 256000
0.00.282.234 I llm_load_print_meta: n_merges         = 0
0.00.282.235 I llm_load_print_meta: vocab_only       = 0
0.00.282.235 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.235 I llm_load_print_meta: n_embd           = 2048
0.00.282.236 I llm_load_print_meta: n_layer          = 18
0.00.282.247 I llm_load_print_meta: n_head           = 8
0.00.282.248 I llm_load_print_meta: n_head_kv        = 1
0.00.282.249 I llm_load_print_meta: n_rot            = 256
0.00.282.250 I llm_load_print_meta: n_swa            = 0
0.00.282.250 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.250 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.251 I llm_load_print_meta: n_gqa            = 8
0.00.282.252 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.253 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.254 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.255 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.255 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.256 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.256 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.257 I llm_load_print_meta: n_ff             = 16384
0.00.282.258 I llm_load_print_meta: n_expert         = 0
0.00.282.258 I llm_load_print_meta: n_expert_used    = 0
0.00.282.259 I llm_load_print_meta: causal attn      = 1
0.00.282.259 I llm_load_print_meta: pooling type     = 0
0.00.282.259 I llm_load_print_meta: rope type        = 2
0.00.282.259 I llm_load_print_meta: rope scaling     = linear
0.00.282.261 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.262 I llm_load_print_meta: freq_scale_train = 1
0.00.282.262 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.263 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.263 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.263 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.263 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.264 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.264 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.265 I llm_load_print_meta: model type       = 2B
0.00.282.265 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.266 I llm_load_print_meta: model params     = 2.51 B
0.00.282.267 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.267 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.268 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.269 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.269 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.269 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.269 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.270 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.270 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.271 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.271 I llm_load_print_meta: max token length = 93
0.00.359.476 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.359.482 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.359.483 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.359.484 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.359.484 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.359.485 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.364.613 I llama_new_context_with_model: n_seq_max     = 1
0.00.364.622 I llama_new_context_with_model: n_ctx         = 4096
0.00.364.623 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.364.623 I llama_new_context_with_model: n_batch       = 2048
0.00.364.624 I llama_new_context_with_model: n_ubatch      = 512
0.00.364.624 I llama_new_context_with_model: flash_attn    = 0
0.00.364.627 I llama_new_context_with_model: freq_base     = 10000.0
0.00.364.628 I llama_new_context_with_model: freq_scale    = 1
0.00.364.629 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.364.650 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.379.354 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.379.367 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.379.461 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.676 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.380.682 I llama_new_context_with_model: graph nodes  = 601
0.00.380.682 I llama_new_context_with_model: graph splits = 1
0.00.380.684 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.380.684 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.029 I main: llama threadpool init, n_threads = 4
0.00.467.045 I 
0.00.467.116 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.467.119 I 
0.00.467.165 I sampler seed: 1801634143
0.00.467.176 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.178 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.467.178 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.178 I 
 increasities in the following passage:

I am unable to answer this question as it contains inappropriate and sexually suggestive content that is not appropriate for me to provide.

0.02.779.979 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6503.74 tokens per second)
0.02.779.981 I llama_perf_context_print:        load time =     466.28 ms
0.02.779.983 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.779.984 I llama_perf_context_print:        eval time =    2293.52 ms /    32 runs   (   71.67 ms per token,    13.95 tokens per second)
0.02.779.985 I llama_perf_context_print:       total time =    2312.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.163 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.377 I main: llama backend init
0.00.000.384 I main: load the model and apply lora adapter, if any
0.00.020.448 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.457 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.465 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.474 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.475 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.479 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.479 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.480 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.481 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.482 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.483 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.492 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.496 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.497 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.498 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.499 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.338 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.381 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.270 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.277 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.278 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.279 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.279 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.281 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.281 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.285 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.286 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.287 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.287 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.288 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.292 I llama_model_loader: - type  f32:   37 tensors
0.00.132.294 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.100 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.745 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.478 I llm_load_vocab: special tokens cache size = 5
0.00.283.581 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.603 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.604 I llm_load_print_meta: arch             = gemma
0.00.283.605 I llm_load_print_meta: vocab type       = SPM
0.00.283.605 I llm_load_print_meta: n_vocab          = 256000
0.00.283.606 I llm_load_print_meta: n_merges         = 0
0.00.283.607 I llm_load_print_meta: vocab_only       = 0
0.00.283.607 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.608 I llm_load_print_meta: n_embd           = 2048
0.00.283.608 I llm_load_print_meta: n_layer          = 18
0.00.283.621 I llm_load_print_meta: n_head           = 8
0.00.283.622 I llm_load_print_meta: n_head_kv        = 1
0.00.283.622 I llm_load_print_meta: n_rot            = 256
0.00.283.622 I llm_load_print_meta: n_swa            = 0
0.00.283.623 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.623 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.624 I llm_load_print_meta: n_gqa            = 8
0.00.283.625 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.626 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.627 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.628 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.628 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.629 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.629 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.630 I llm_load_print_meta: n_ff             = 16384
0.00.283.631 I llm_load_print_meta: n_expert         = 0
0.00.283.631 I llm_load_print_meta: n_expert_used    = 0
0.00.283.631 I llm_load_print_meta: causal attn      = 1
0.00.283.632 I llm_load_print_meta: pooling type     = 0
0.00.283.632 I llm_load_print_meta: rope type        = 2
0.00.283.632 I llm_load_print_meta: rope scaling     = linear
0.00.283.634 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.634 I llm_load_print_meta: freq_scale_train = 1
0.00.283.634 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.635 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.635 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.635 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.635 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.636 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.636 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.636 I llm_load_print_meta: model type       = 2B
0.00.283.637 I llm_load_print_meta: model ftype      = Q8_0
0.00.283.638 I llm_load_print_meta: model params     = 2.51 B
0.00.283.638 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.283.639 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.639 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.640 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.640 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.640 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.640 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.641 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.642 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.642 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.643 I llm_load_print_meta: max token length = 93
0.00.354.968 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.354.975 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.360.169 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.175 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.176 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.176 I llama_new_context_with_model: n_batch       = 2048
0.00.360.177 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.177 I llama_new_context_with_model: flash_attn    = 0
0.00.360.179 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.181 I llama_new_context_with_model: freq_scale    = 1
0.00.360.181 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.360.204 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.374.443 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.374.457 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.374.547 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.824 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.375.828 I llama_new_context_with_model: graph nodes  = 601
0.00.375.828 I llama_new_context_with_model: graph splits = 1
0.00.375.831 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.375.831 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.914 I main: llama threadpool init, n_threads = 4
0.00.464.929 I 
0.00.465.009 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.465.013 I 
0.00.465.065 I sampler seed: 3871700400
0.00.465.076 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.080 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.465.081 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.082 I 
 increasities, and other forms of child sexual abuse are illegal and should not be tolerated. [end of text]


0.01.916.287 I llama_perf_sampler_print:    sampling time =       2.87 ms /    20 runs   (    0.14 ms per token,  6968.64 tokens per second)
0.01.916.289 I llama_perf_context_print:        load time =     464.51 ms
0.01.916.290 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.916.292 I llama_perf_context_print:        eval time =    1439.72 ms /    19 runs   (   75.77 ms per token,    13.20 tokens per second)
0.01.916.292 I llama_perf_context_print:       total time =    1451.38 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.662s
user	0m34.280s
sys	0m9.595s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4363 (a3c33b1d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40285.39 ms
main:    total time = 40285.39 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.576 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.000.811 I main: load the model and apply lora adapter, if any
0.00.021.638 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.649 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.659 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.668 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.670 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.674 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.677 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.678 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.678 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.680 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.681 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.687 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.688 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.689 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.690 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.691 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.356 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.416 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.264 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.270 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.271 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.272 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.272 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.273 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.274 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.277 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.278 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.279 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.280 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.281 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.285 I llama_model_loader: - type  f32:   37 tensors
0.00.133.286 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.288 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.286 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.671 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.266 I llm_load_vocab: special tokens cache size = 5
0.00.279.281 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.299 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.300 I llm_load_print_meta: arch             = gemma
0.00.279.301 I llm_load_print_meta: vocab type       = SPM
0.00.279.301 I llm_load_print_meta: n_vocab          = 256000
0.00.279.302 I llm_load_print_meta: n_merges         = 0
0.00.279.302 I llm_load_print_meta: vocab_only       = 0
0.00.279.303 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.303 I llm_load_print_meta: n_embd           = 2048
0.00.279.303 I llm_load_print_meta: n_layer          = 18
0.00.279.314 I llm_load_print_meta: n_head           = 8
0.00.279.315 I llm_load_print_meta: n_head_kv        = 1
0.00.279.315 I llm_load_print_meta: n_rot            = 256
0.00.279.315 I llm_load_print_meta: n_swa            = 0
0.00.279.315 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.316 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.316 I llm_load_print_meta: n_gqa            = 8
0.00.279.317 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.318 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.319 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.320 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.321 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.321 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.322 I llm_load_print_meta: n_ff             = 16384
0.00.279.323 I llm_load_print_meta: n_expert         = 0
0.00.279.323 I llm_load_print_meta: n_expert_used    = 0
0.00.279.323 I llm_load_print_meta: causal attn      = 1
0.00.279.324 I llm_load_print_meta: pooling type     = 0
0.00.279.324 I llm_load_print_meta: rope type        = 2
0.00.279.324 I llm_load_print_meta: rope scaling     = linear
0.00.279.325 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.326 I llm_load_print_meta: freq_scale_train = 1
0.00.279.326 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.327 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.327 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.327 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.327 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.328 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.328 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.328 I llm_load_print_meta: model type       = 2B
0.00.279.329 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.279.330 I llm_load_print_meta: model params     = 2.51 B
0.00.279.331 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.279.331 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.331 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.332 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.332 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.332 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.332 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.333 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.333 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.334 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.334 I llm_load_print_meta: max token length = 93
0.00.339.172 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.339.179 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.339.180 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.339.180 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.339.181 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.339.181 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.344.402 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.409 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.410 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.410 I llama_new_context_with_model: n_batch       = 2048
0.00.344.410 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.411 I llama_new_context_with_model: flash_attn    = 0
0.00.344.414 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.415 I llama_new_context_with_model: freq_scale    = 1
0.00.344.416 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.344.435 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.358.960 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.974 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.359.064 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.332 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.339 I llama_new_context_with_model: graph nodes  = 601
0.00.360.339 I llama_new_context_with_model: graph splits = 1
0.00.360.342 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.360.342 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.436.592 I main: llama threadpool init, n_threads = 4
0.00.436.610 I 
0.00.436.692 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.436.696 I 
0.00.436.749 I sampler seed: 3237945814
0.00.436.760 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.436.772 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.436.776 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.436.776 I 
 maneupherously with the following statements:

**a) "The sky is blue because of the scattering of sunlight by the molecules in the air."**



0.02.099.563 I llama_perf_sampler_print:    sampling time =       5.71 ms /    33 runs   (    0.17 ms per token,  5778.32 tokens per second)
0.02.099.565 I llama_perf_context_print:        load time =     435.76 ms
0.02.099.567 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.099.568 I llama_perf_context_print:        eval time =    1642.58 ms /    32 runs   (   51.33 ms per token,    19.48 tokens per second)
0.02.099.569 I llama_perf_context_print:       total time =    1662.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4363 (a3c33b1d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40272.03 ms
main:    total time = 40272.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.175 I build: 4363 (a3c33b1d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.388 I main: llama backend init
0.00.000.394 I main: load the model and apply lora adapter, if any
0.00.020.776 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.793 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.800 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.804 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.809 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.809 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.810 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.811 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.812 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.813 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.817 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.818 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.818 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.819 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.819 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.259 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.196 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.408 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.415 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.416 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.416 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.417 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.418 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.418 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.421 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.421 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.425 I llama_model_loader: - type  f32:   37 tensors
0.00.133.425 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.426 I llama_model_loader: - type q6_K:   19 tensors
0.00.215.702 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.269.952 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.605 I llm_load_vocab: special tokens cache size = 5
0.00.291.572 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.592 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.593 I llm_load_print_meta: arch             = gemma
0.00.291.594 I llm_load_print_meta: vocab type       = SPM
0.00.291.595 I llm_load_print_meta: n_vocab          = 256000
0.00.291.596 I llm_load_print_meta: n_merges         = 0
0.00.291.596 I llm_load_print_meta: vocab_only       = 0
0.00.291.596 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.596 I llm_load_print_meta: n_embd           = 2048
0.00.291.597 I llm_load_print_meta: n_layer          = 18
0.00.291.609 I llm_load_print_meta: n_head           = 8
0.00.291.610 I llm_load_print_meta: n_head_kv        = 1
0.00.291.611 I llm_load_print_meta: n_rot            = 256
0.00.291.611 I llm_load_print_meta: n_swa            = 0
0.00.291.611 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.612 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.613 I llm_load_print_meta: n_gqa            = 8
0.00.291.614 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.615 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.615 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.616 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.617 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.617 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.617 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.618 I llm_load_print_meta: n_ff             = 16384
0.00.291.619 I llm_load_print_meta: n_expert         = 0
0.00.291.619 I llm_load_print_meta: n_expert_used    = 0
0.00.291.619 I llm_load_print_meta: causal attn      = 1
0.00.291.620 I llm_load_print_meta: pooling type     = 0
0.00.291.620 I llm_load_print_meta: rope type        = 2
0.00.291.620 I llm_load_print_meta: rope scaling     = linear
0.00.291.622 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.622 I llm_load_print_meta: freq_scale_train = 1
0.00.291.623 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.623 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.623 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.623 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.624 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.624 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.624 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.625 I llm_load_print_meta: model type       = 2B
0.00.291.625 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.291.626 I llm_load_print_meta: model params     = 2.51 B
0.00.291.627 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.291.627 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.628 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.628 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.628 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.629 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.629 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.629 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.629 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.630 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.630 I llm_load_print_meta: max token length = 93
0.00.349.008 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.354.036 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.043 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.044 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.044 I llama_new_context_with_model: n_batch       = 2048
0.00.354.045 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.045 I llama_new_context_with_model: flash_attn    = 0
0.00.354.048 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.049 I llama_new_context_with_model: freq_scale    = 1
0.00.354.050 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.072 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.369.135 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.150 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.244 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.517 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.524 I llama_new_context_with_model: graph nodes  = 601
0.00.370.524 I llama_new_context_with_model: graph splits = 1
0.00.370.527 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.370.527 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.180 I main: llama threadpool init, n_threads = 4
0.00.446.198 I 
0.00.446.276 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.446.280 I 
0.00.446.325 I sampler seed: 1756480747
0.00.446.336 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.344 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.446.345 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.345 I 
 seconals and the other related organisms were found in the _____.

a) Cambrian period
b) Mesozoic era
c) Paleozoic era
d) Precambrian

0.02.069.055 I llama_perf_sampler_print:    sampling time =       4.87 ms /    33 runs   (    0.15 ms per token,  6772.01 tokens per second)
0.02.069.057 I llama_perf_context_print:        load time =     445.77 ms
0.02.069.059 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.069.060 I llama_perf_context_print:        eval time =    1603.90 ms /    32 runs   (   50.12 ms per token,    19.95 tokens per second)
0.02.069.061 I llama_perf_context_print:       total time =    1622.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.842s
user	10m24.913s
sys	0m7.119s
