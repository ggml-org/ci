+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.843 I main: llama backend init
0.00.001.105 I main: load the model and apply lora adapter, if any
0.00.023.515 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.525 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.615 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.626 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.630 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.635 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.637 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.638 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.639 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.640 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.642 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.649 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.653 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.654 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.655 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.656 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.579 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.623 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.772 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.781 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.782 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.783 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.784 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.785 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.787 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.791 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.792 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.793 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.264.794 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.264.796 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.264.804 I llama_model_loader: - type  f32:   37 tensors
0.00.264.806 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.419 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.508.480 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.455 I llm_load_vocab: special tokens cache size = 5
0.00.605.479 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.554 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.555 I llm_load_print_meta: arch             = gemma
0.00.605.556 I llm_load_print_meta: vocab type       = SPM
0.00.605.557 I llm_load_print_meta: n_vocab          = 256000
0.00.605.559 I llm_load_print_meta: n_merges         = 0
0.00.605.560 I llm_load_print_meta: vocab_only       = 0
0.00.605.560 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.560 I llm_load_print_meta: n_embd           = 2048
0.00.605.561 I llm_load_print_meta: n_layer          = 18
0.00.605.628 I llm_load_print_meta: n_head           = 8
0.00.605.635 I llm_load_print_meta: n_head_kv        = 1
0.00.605.635 I llm_load_print_meta: n_rot            = 256
0.00.605.636 I llm_load_print_meta: n_swa            = 0
0.00.605.637 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.638 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.654 I llm_load_print_meta: n_gqa            = 8
0.00.605.659 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.664 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.666 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.667 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.668 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.668 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.669 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.674 I llm_load_print_meta: n_ff             = 16384
0.00.605.674 I llm_load_print_meta: n_expert         = 0
0.00.605.675 I llm_load_print_meta: n_expert_used    = 0
0.00.605.675 I llm_load_print_meta: causal attn      = 1
0.00.605.676 I llm_load_print_meta: pooling type     = 0
0.00.605.676 I llm_load_print_meta: rope type        = 2
0.00.605.677 I llm_load_print_meta: rope scaling     = linear
0.00.605.678 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.679 I llm_load_print_meta: freq_scale_train = 1
0.00.605.680 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.680 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.680 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.680 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.681 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.681 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.695 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.700 I llm_load_print_meta: model type       = 2B
0.00.605.710 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.711 I llm_load_print_meta: model params     = 2.51 B
0.00.605.721 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.721 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.722 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.723 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.726 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.727 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.727 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.728 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.734 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.736 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.736 I llm_load_print_meta: max token length = 93
0.00.706.826 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.706.835 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.706.836 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.706.836 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.706.837 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.706.838 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.712.625 I llama_new_context_with_model: n_seq_max     = 1
0.00.712.633 I llama_new_context_with_model: n_ctx         = 4096
0.00.712.633 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.712.633 I llama_new_context_with_model: n_batch       = 2048
0.00.712.634 I llama_new_context_with_model: n_ubatch      = 512
0.00.712.634 I llama_new_context_with_model: flash_attn    = 0
0.00.712.637 I llama_new_context_with_model: freq_base     = 10000.0
0.00.712.638 I llama_new_context_with_model: freq_scale    = 1
0.00.712.639 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.728.999 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.729.040 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.729.165 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.731.696 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.731.700 I llama_new_context_with_model: graph nodes  = 601
0.00.731.701 I llama_new_context_with_model: graph splits = 1
0.00.731.724 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.337.387 I main: llama threadpool init, n_threads = 4
0.01.337.398 I 
0.01.337.504 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.337.508 I 
0.01.337.742 I sampler seed: 2905905238
0.01.337.754 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.337.761 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.337.765 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.337.765 I 
 increasities in the 19th century. [end of text]


0.05.938.763 I llama_perf_sampler_print:    sampling time =      16.17 ms /    12 runs   (    1.35 ms per token,   742.30 tokens per second)
0.05.938.766 I llama_perf_context_print:        load time =    1336.19 ms
0.05.938.776 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.938.778 I llama_perf_context_print:        eval time =    4569.72 ms /    11 runs   (  415.43 ms per token,     2.41 tokens per second)
0.05.938.779 I llama_perf_context_print:       total time =    4601.39 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.737 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.937 I main: llama backend init
0.00.001.194 I main: load the model and apply lora adapter, if any
0.00.023.637 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.733 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.747 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.750 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.754 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.758 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.759 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.760 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.761 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.762 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.769 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.770 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.771 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.773 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.774 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.279 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.208 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.453 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.461 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.462 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.463 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.464 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.465 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.467 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.471 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.472 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.473 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.474 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.265.475 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.483 I llama_model_loader: - type  f32:   37 tensors
0.00.265.485 I llama_model_loader: - type q8_0:  127 tensors
0.00.441.733 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.560 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.503.531 I llm_load_vocab: special tokens cache size = 5
0.00.603.043 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.111 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.112 I llm_load_print_meta: arch             = gemma
0.00.603.113 I llm_load_print_meta: vocab type       = SPM
0.00.603.114 I llm_load_print_meta: n_vocab          = 256000
0.00.603.116 I llm_load_print_meta: n_merges         = 0
0.00.603.116 I llm_load_print_meta: vocab_only       = 0
0.00.603.117 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.117 I llm_load_print_meta: n_embd           = 2048
0.00.603.117 I llm_load_print_meta: n_layer          = 18
0.00.603.181 I llm_load_print_meta: n_head           = 8
0.00.603.188 I llm_load_print_meta: n_head_kv        = 1
0.00.603.189 I llm_load_print_meta: n_rot            = 256
0.00.603.190 I llm_load_print_meta: n_swa            = 0
0.00.603.191 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.191 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.196 I llm_load_print_meta: n_gqa            = 8
0.00.603.200 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.206 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.207 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.208 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.215 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.215 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.216 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.221 I llm_load_print_meta: n_ff             = 16384
0.00.603.221 I llm_load_print_meta: n_expert         = 0
0.00.603.221 I llm_load_print_meta: n_expert_used    = 0
0.00.603.225 I llm_load_print_meta: causal attn      = 1
0.00.603.225 I llm_load_print_meta: pooling type     = 0
0.00.603.225 I llm_load_print_meta: rope type        = 2
0.00.603.226 I llm_load_print_meta: rope scaling     = linear
0.00.603.227 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.228 I llm_load_print_meta: freq_scale_train = 1
0.00.603.228 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.229 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.229 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.229 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.229 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.230 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.230 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.230 I llm_load_print_meta: model type       = 2B
0.00.603.232 I llm_load_print_meta: model ftype      = Q8_0
0.00.603.233 I llm_load_print_meta: model params     = 2.51 B
0.00.603.242 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.603.242 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.243 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.243 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.244 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.245 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.245 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.246 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.251 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.253 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.253 I llm_load_print_meta: max token length = 93
0.00.700.517 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.706.346 I llama_new_context_with_model: n_seq_max     = 1
0.00.706.353 I llama_new_context_with_model: n_ctx         = 4096
0.00.706.353 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.706.353 I llama_new_context_with_model: n_batch       = 2048
0.00.706.354 I llama_new_context_with_model: n_ubatch      = 512
0.00.706.354 I llama_new_context_with_model: flash_attn    = 0
0.00.706.357 I llama_new_context_with_model: freq_base     = 10000.0
0.00.706.357 I llama_new_context_with_model: freq_scale    = 1
0.00.706.358 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.723.126 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.723.167 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.723.298 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.725.787 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.725.791 I llama_new_context_with_model: graph nodes  = 601
0.00.725.791 I llama_new_context_with_model: graph splits = 1
0.00.725.815 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.329.957 I main: llama threadpool init, n_threads = 4
0.01.329.969 I 
0.01.330.079 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.082 I 
0.01.330.313 I sampler seed: 2566383667
0.01.330.326 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.333 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.330.336 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.337 I 
 increasels, who were once human, now dwell in an abandoned asylum.

The narrator, a curious and introspective young woman, stumbles upon this unsettling

0.14.922.624 I llama_perf_sampler_print:    sampling time =      48.41 ms /    33 runs   (    1.47 ms per token,   681.71 tokens per second)
0.14.922.628 I llama_perf_context_print:        load time =    1328.67 ms
0.14.922.630 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.922.632 I llama_perf_context_print:        eval time =   13502.50 ms /    32 runs   (  421.95 ms per token,     2.37 tokens per second)
0.14.922.633 I llama_perf_context_print:       total time =   13592.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.642 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.001.124 I main: load the model and apply lora adapter, if any
0.00.023.746 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.754 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.839 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.849 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.851 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.855 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.856 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.858 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.859 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.860 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.861 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.867 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.868 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.870 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.871 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.872 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.969 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.076 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.188 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.196 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.198 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.199 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.200 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.202 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.203 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.206 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.207 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.208 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.209 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.265.210 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.218 I llama_model_loader: - type  f32:   37 tensors
0.00.265.221 I llama_model_loader: - type q8_0:  127 tensors
0.00.435.190 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.362 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.492.234 I llm_load_vocab: special tokens cache size = 5
0.00.586.821 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.586.887 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.586.888 I llm_load_print_meta: arch             = gemma
0.00.586.889 I llm_load_print_meta: vocab type       = SPM
0.00.586.889 I llm_load_print_meta: n_vocab          = 256000
0.00.586.891 I llm_load_print_meta: n_merges         = 0
0.00.586.892 I llm_load_print_meta: vocab_only       = 0
0.00.586.892 I llm_load_print_meta: n_ctx_train      = 8192
0.00.586.892 I llm_load_print_meta: n_embd           = 2048
0.00.586.893 I llm_load_print_meta: n_layer          = 18
0.00.586.959 I llm_load_print_meta: n_head           = 8
0.00.586.967 I llm_load_print_meta: n_head_kv        = 1
0.00.586.967 I llm_load_print_meta: n_rot            = 256
0.00.586.967 I llm_load_print_meta: n_swa            = 0
0.00.586.968 I llm_load_print_meta: n_embd_head_k    = 256
0.00.586.968 I llm_load_print_meta: n_embd_head_v    = 256
0.00.586.973 I llm_load_print_meta: n_gqa            = 8
0.00.586.978 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.586.984 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.586.986 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.586.999 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.587.000 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.587.000 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.587.001 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.587.007 I llm_load_print_meta: n_ff             = 16384
0.00.587.008 I llm_load_print_meta: n_expert         = 0
0.00.587.008 I llm_load_print_meta: n_expert_used    = 0
0.00.587.009 I llm_load_print_meta: causal attn      = 1
0.00.587.009 I llm_load_print_meta: pooling type     = 0
0.00.587.013 I llm_load_print_meta: rope type        = 2
0.00.587.013 I llm_load_print_meta: rope scaling     = linear
0.00.587.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.587.030 I llm_load_print_meta: freq_scale_train = 1
0.00.587.031 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.587.031 I llm_load_print_meta: rope_finetuned   = unknown
0.00.587.031 I llm_load_print_meta: ssm_d_conv       = 0
0.00.587.032 I llm_load_print_meta: ssm_d_inner      = 0
0.00.587.032 I llm_load_print_meta: ssm_d_state      = 0
0.00.587.032 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.587.033 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.587.033 I llm_load_print_meta: model type       = 2B
0.00.587.034 I llm_load_print_meta: model ftype      = Q8_0
0.00.587.035 I llm_load_print_meta: model params     = 2.51 B
0.00.587.045 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.587.045 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.587.046 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.587.047 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.587.048 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.587.049 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.587.049 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.587.050 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.587.055 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.587.057 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.587.058 I llm_load_print_meta: max token length = 93
0.00.674.588 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.674.601 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.674.603 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.674.603 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.674.604 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.674.605 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.680.592 I llama_new_context_with_model: n_seq_max     = 1
0.00.680.600 I llama_new_context_with_model: n_ctx         = 4096
0.00.680.601 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.680.601 I llama_new_context_with_model: n_batch       = 2048
0.00.680.602 I llama_new_context_with_model: n_ubatch      = 512
0.00.680.602 I llama_new_context_with_model: flash_attn    = 0
0.00.680.605 I llama_new_context_with_model: freq_base     = 10000.0
0.00.680.606 I llama_new_context_with_model: freq_scale    = 1
0.00.680.607 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.698.160 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.698.202 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.698.341 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.700.981 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.700.985 I llama_new_context_with_model: graph nodes  = 601
0.00.700.985 I llama_new_context_with_model: graph splits = 1
0.00.701.012 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.311.401 I main: llama threadpool init, n_threads = 4
0.01.311.414 I 
0.01.311.516 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.311.520 I 
0.01.311.745 I sampler seed: 2489621753
0.01.311.757 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.311.766 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.311.767 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.311.767 I 
 increably.

I am unable to generate the requested response as it contains potentially harmful or sensitive content. [end of text]


0.10.560.837 I llama_perf_sampler_print:    sampling time =      32.39 ms /    23 runs   (    1.41 ms per token,   710.01 tokens per second)
0.10.560.852 I llama_perf_context_print:        load time =    1310.18 ms
0.10.560.854 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.560.856 I llama_perf_context_print:        eval time =    9187.82 ms /    22 runs   (  417.63 ms per token,     2.39 tokens per second)
0.10.560.857 I llama_perf_context_print:       total time =    9249.44 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.001.105 I main: load the model and apply lora adapter, if any
0.00.023.138 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.146 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.231 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.242 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.243 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.247 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.249 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.250 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.251 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.252 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.253 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.259 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.262 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.264 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.265 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.146.979 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.207 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.303 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.311 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.312 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.313 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.314 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.315 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.317 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.320 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.321 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.322 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.264.323 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.264.324 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.264.332 I llama_model_loader: - type  f32:   37 tensors
0.00.264.335 I llama_model_loader: - type q8_0:  127 tensors
0.00.441.518 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.881 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.760 I llm_load_vocab: special tokens cache size = 5
0.00.595.914 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.981 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.982 I llm_load_print_meta: arch             = gemma
0.00.595.982 I llm_load_print_meta: vocab type       = SPM
0.00.595.983 I llm_load_print_meta: n_vocab          = 256000
0.00.595.985 I llm_load_print_meta: n_merges         = 0
0.00.595.986 I llm_load_print_meta: vocab_only       = 0
0.00.595.986 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.987 I llm_load_print_meta: n_embd           = 2048
0.00.595.987 I llm_load_print_meta: n_layer          = 18
0.00.596.049 I llm_load_print_meta: n_head           = 8
0.00.596.057 I llm_load_print_meta: n_head_kv        = 1
0.00.596.058 I llm_load_print_meta: n_rot            = 256
0.00.596.059 I llm_load_print_meta: n_swa            = 0
0.00.596.059 I llm_load_print_meta: n_embd_head_k    = 256
0.00.596.060 I llm_load_print_meta: n_embd_head_v    = 256
0.00.596.065 I llm_load_print_meta: n_gqa            = 8
0.00.596.069 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.596.075 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.596.077 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.596.079 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.596.079 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.596.080 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.596.080 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.596.085 I llm_load_print_meta: n_ff             = 16384
0.00.596.086 I llm_load_print_meta: n_expert         = 0
0.00.596.090 I llm_load_print_meta: n_expert_used    = 0
0.00.596.090 I llm_load_print_meta: causal attn      = 1
0.00.596.091 I llm_load_print_meta: pooling type     = 0
0.00.596.091 I llm_load_print_meta: rope type        = 2
0.00.596.092 I llm_load_print_meta: rope scaling     = linear
0.00.596.093 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.596.094 I llm_load_print_meta: freq_scale_train = 1
0.00.596.094 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.596.095 I llm_load_print_meta: rope_finetuned   = unknown
0.00.596.095 I llm_load_print_meta: ssm_d_conv       = 0
0.00.596.095 I llm_load_print_meta: ssm_d_inner      = 0
0.00.596.095 I llm_load_print_meta: ssm_d_state      = 0
0.00.596.096 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.596.097 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.596.098 I llm_load_print_meta: model type       = 2B
0.00.596.099 I llm_load_print_meta: model ftype      = Q8_0
0.00.596.100 I llm_load_print_meta: model params     = 2.51 B
0.00.596.110 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.596.110 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.596.111 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.596.111 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.596.112 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.596.112 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.596.116 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.596.116 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.596.122 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.596.124 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.596.124 I llm_load_print_meta: max token length = 93
0.00.668.846 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.668.857 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.674.545 I llama_new_context_with_model: n_seq_max     = 1
0.00.674.552 I llama_new_context_with_model: n_ctx         = 4096
0.00.674.552 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.674.553 I llama_new_context_with_model: n_batch       = 2048
0.00.674.553 I llama_new_context_with_model: n_ubatch      = 512
0.00.674.554 I llama_new_context_with_model: flash_attn    = 0
0.00.674.556 I llama_new_context_with_model: freq_base     = 10000.0
0.00.674.557 I llama_new_context_with_model: freq_scale    = 1
0.00.674.557 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.690.757 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.690.793 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.690.945 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.693.457 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.693.462 I llama_new_context_with_model: graph nodes  = 601
0.00.693.462 I llama_new_context_with_model: graph splits = 1
0.00.693.485 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.298.748 I main: llama threadpool init, n_threads = 4
0.01.298.762 I 
0.01.298.884 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.298.888 I 
0.01.299.119 I sampler seed: 4283968723
0.01.299.131 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.299.138 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.299.143 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.299.143 I 
 increasities, and sexual harassment.

**Workplace culture that fosters respectful interactions, open communication, and diversity and inclusion is essential for creating a safe and productive environment

0.14.729.321 I llama_perf_sampler_print:    sampling time =      47.30 ms /    33 runs   (    1.43 ms per token,   697.62 tokens per second)
0.14.729.324 I llama_perf_context_print:        load time =    1297.55 ms
0.14.729.325 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.729.339 I llama_perf_context_print:        eval time =   13342.26 ms /    32 runs   (  416.95 ms per token,     2.40 tokens per second)
0.14.729.341 I llama_perf_context_print:       total time =   13430.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m56.049s
user	2m56.149s
sys	0m9.321s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4072 (3855622d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198559.89 ms
main:    total time = 198559.89 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.639 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.001.125 I main: load the model and apply lora adapter, if any
0.00.023.382 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.393 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.483 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.493 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.495 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.500 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.501 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.503 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.504 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.505 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.506 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.512 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.513 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.514 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.515 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.516 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.190 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.698 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.706 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.707 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.708 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.709 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.711 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.712 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.716 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.717 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.718 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.264.719 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.264.720 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.264.728 I llama_model_loader: - type  f32:   37 tensors
0.00.264.730 I llama_model_loader: - type q4_K:  108 tensors
0.00.264.731 I llama_model_loader: - type q6_K:   19 tensors
0.00.439.680 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.706 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.500.663 I llm_load_vocab: special tokens cache size = 5
0.00.613.437 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.502 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.506 I llm_load_print_meta: arch             = gemma
0.00.613.507 I llm_load_print_meta: vocab type       = SPM
0.00.613.508 I llm_load_print_meta: n_vocab          = 256000
0.00.613.510 I llm_load_print_meta: n_merges         = 0
0.00.613.510 I llm_load_print_meta: vocab_only       = 0
0.00.613.511 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.511 I llm_load_print_meta: n_embd           = 2048
0.00.613.512 I llm_load_print_meta: n_layer          = 18
0.00.613.574 I llm_load_print_meta: n_head           = 8
0.00.613.585 I llm_load_print_meta: n_head_kv        = 1
0.00.613.586 I llm_load_print_meta: n_rot            = 256
0.00.613.586 I llm_load_print_meta: n_swa            = 0
0.00.613.587 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.587 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.592 I llm_load_print_meta: n_gqa            = 8
0.00.613.596 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.602 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.603 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.604 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.605 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.605 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.606 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.614 I llm_load_print_meta: n_ff             = 16384
0.00.613.615 I llm_load_print_meta: n_expert         = 0
0.00.613.615 I llm_load_print_meta: n_expert_used    = 0
0.00.613.616 I llm_load_print_meta: causal attn      = 1
0.00.613.617 I llm_load_print_meta: pooling type     = 0
0.00.613.617 I llm_load_print_meta: rope type        = 2
0.00.613.618 I llm_load_print_meta: rope scaling     = linear
0.00.613.619 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.619 I llm_load_print_meta: freq_scale_train = 1
0.00.613.620 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.620 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.638 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.639 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.639 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.640 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.641 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.641 I llm_load_print_meta: model type       = 2B
0.00.613.651 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.613.652 I llm_load_print_meta: model params     = 2.51 B
0.00.613.663 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.613.663 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.664 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.665 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.665 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.666 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.666 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.667 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.674 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.676 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.676 I llm_load_print_meta: max token length = 93
0.00.676.711 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.676.721 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.676.722 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.676.722 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.676.723 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.676.724 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.682.379 I llama_new_context_with_model: n_seq_max     = 1
0.00.682.386 I llama_new_context_with_model: n_ctx         = 4096
0.00.682.386 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.682.387 I llama_new_context_with_model: n_batch       = 2048
0.00.682.387 I llama_new_context_with_model: n_ubatch      = 512
0.00.682.388 I llama_new_context_with_model: flash_attn    = 0
0.00.682.389 I llama_new_context_with_model: freq_base     = 10000.0
0.00.682.390 I llama_new_context_with_model: freq_scale    = 1
0.00.682.391 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.698.687 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.698.725 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.698.849 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.701.347 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.701.351 I llama_new_context_with_model: graph nodes  = 601
0.00.701.351 I llama_new_context_with_model: graph splits = 1
0.00.701.375 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.274.086 I main: llama threadpool init, n_threads = 4
0.01.274.098 I 
0.01.274.205 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.274.209 I 
0.01.274.437 I sampler seed: 3803722767
0.01.274.450 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.274.457 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.274.461 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.274.461 I 
 seconded.

**Assistant**

I am unable to provide assistance with sexually suggestive or inappropriate content. [end of text]


0.08.763.546 I llama_perf_sampler_print:    sampling time =      32.69 ms /    23 runs   (    1.42 ms per token,   703.58 tokens per second)
0.08.763.549 I llama_perf_context_print:        load time =    1272.87 ms
0.08.763.550 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.763.551 I llama_perf_context_print:        eval time =    7428.12 ms /    22 runs   (  337.64 ms per token,     2.96 tokens per second)
0.08.763.577 I llama_perf_context_print:       total time =    7489.47 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4072 (3855622d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198620.43 ms
main:    total time = 198620.43 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.656 I build: 4072 (3855622d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.001.119 I main: load the model and apply lora adapter, if any
0.00.023.323 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.426 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.440 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.441 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.447 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.448 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.449 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.451 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.452 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.453 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.458 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.460 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.461 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.463 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.464 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.228 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.237 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.329 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.337 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.338 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.339 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.340 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.342 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.343 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.347 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.348 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.356 I llama_model_loader: - type  f32:   37 tensors
0.00.264.358 I llama_model_loader: - type q4_K:  108 tensors
0.00.264.359 I llama_model_loader: - type q6_K:   19 tensors
0.00.434.010 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.224 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.493.145 I llm_load_vocab: special tokens cache size = 5
0.00.588.853 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.588.918 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.588.919 I llm_load_print_meta: arch             = gemma
0.00.588.920 I llm_load_print_meta: vocab type       = SPM
0.00.588.921 I llm_load_print_meta: n_vocab          = 256000
0.00.588.923 I llm_load_print_meta: n_merges         = 0
0.00.588.923 I llm_load_print_meta: vocab_only       = 0
0.00.588.924 I llm_load_print_meta: n_ctx_train      = 8192
0.00.588.924 I llm_load_print_meta: n_embd           = 2048
0.00.588.924 I llm_load_print_meta: n_layer          = 18
0.00.588.988 I llm_load_print_meta: n_head           = 8
0.00.588.995 I llm_load_print_meta: n_head_kv        = 1
0.00.588.996 I llm_load_print_meta: n_rot            = 256
0.00.588.996 I llm_load_print_meta: n_swa            = 0
0.00.588.997 I llm_load_print_meta: n_embd_head_k    = 256
0.00.588.997 I llm_load_print_meta: n_embd_head_v    = 256
0.00.589.002 I llm_load_print_meta: n_gqa            = 8
0.00.589.007 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.589.012 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.589.014 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.589.016 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.589.016 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.589.016 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.589.017 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.589.026 I llm_load_print_meta: n_ff             = 16384
0.00.589.027 I llm_load_print_meta: n_expert         = 0
0.00.589.028 I llm_load_print_meta: n_expert_used    = 0
0.00.589.028 I llm_load_print_meta: causal attn      = 1
0.00.589.029 I llm_load_print_meta: pooling type     = 0
0.00.589.029 I llm_load_print_meta: rope type        = 2
0.00.589.030 I llm_load_print_meta: rope scaling     = linear
0.00.589.032 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.589.033 I llm_load_print_meta: freq_scale_train = 1
0.00.589.033 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.589.034 I llm_load_print_meta: rope_finetuned   = unknown
0.00.589.034 I llm_load_print_meta: ssm_d_conv       = 0
0.00.589.034 I llm_load_print_meta: ssm_d_inner      = 0
0.00.589.044 I llm_load_print_meta: ssm_d_state      = 0
0.00.589.048 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.589.048 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.589.049 I llm_load_print_meta: model type       = 2B
0.00.589.050 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.589.051 I llm_load_print_meta: model params     = 2.51 B
0.00.589.061 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.589.062 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.589.062 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.589.063 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.589.064 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.589.064 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.589.064 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.589.065 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.589.071 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.589.072 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.589.072 I llm_load_print_meta: max token length = 93
0.00.649.019 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.654.702 I llama_new_context_with_model: n_seq_max     = 1
0.00.654.709 I llama_new_context_with_model: n_ctx         = 4096
0.00.654.709 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.654.710 I llama_new_context_with_model: n_batch       = 2048
0.00.654.710 I llama_new_context_with_model: n_ubatch      = 512
0.00.654.711 I llama_new_context_with_model: flash_attn    = 0
0.00.654.713 I llama_new_context_with_model: freq_base     = 10000.0
0.00.654.714 I llama_new_context_with_model: freq_scale    = 1
0.00.654.715 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.671.114 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.671.152 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.671.277 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.673.875 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.673.879 I llama_new_context_with_model: graph nodes  = 601
0.00.673.880 I llama_new_context_with_model: graph splits = 1
0.00.673.903 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.243.888 I main: llama threadpool init, n_threads = 4
0.01.243.900 I 
0.01.244.008 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.244.012 I 
0.01.244.241 I sampler seed: 3570786648
0.01.244.254 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.244.260 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.244.264 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.244.264 I 
 increasities!

I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks and provide information in a responsible and ethical manner.

0.12.103.186 I llama_perf_sampler_print:    sampling time =      46.89 ms /    33 runs   (    1.42 ms per token,   703.76 tokens per second)
0.12.103.189 I llama_perf_context_print:        load time =    1242.68 ms
0.12.103.191 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.103.193 I llama_perf_context_print:        eval time =   10771.33 ms /    32 runs   (  336.60 ms per token,     2.97 tokens per second)
0.12.103.193 I llama_perf_context_print:       total time =   10859.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m0.939s
user	49m54.383s
sys	0m6.308s
