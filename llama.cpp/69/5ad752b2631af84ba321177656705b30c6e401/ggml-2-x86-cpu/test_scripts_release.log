+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.539 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.000.881 I main: load the model and apply lora adapter, if any
0.00.021.554 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.566 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.575 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.580 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.584 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.588 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.589 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.591 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.592 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.592 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.593 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.598 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.599 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.600 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.600 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.601 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.251 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.093 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.019 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.027 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.028 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.029 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.029 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.030 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.030 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.033 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.034 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.034 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.035 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.036 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.041 I llama_model_loader: - type  f32:   37 tensors
0.00.133.042 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.392 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.865 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.611 I llm_load_vocab: special tokens cache size = 5
0.00.299.229 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.250 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.251 I llm_load_print_meta: arch             = gemma
0.00.299.251 I llm_load_print_meta: vocab type       = SPM
0.00.299.253 I llm_load_print_meta: n_vocab          = 256000
0.00.299.253 I llm_load_print_meta: n_merges         = 0
0.00.299.253 I llm_load_print_meta: vocab_only       = 0
0.00.299.254 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.254 I llm_load_print_meta: n_embd           = 2048
0.00.299.254 I llm_load_print_meta: n_layer          = 18
0.00.299.268 I llm_load_print_meta: n_head           = 8
0.00.299.268 I llm_load_print_meta: n_head_kv        = 1
0.00.299.269 I llm_load_print_meta: n_rot            = 256
0.00.299.269 I llm_load_print_meta: n_swa            = 0
0.00.299.269 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.270 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.271 I llm_load_print_meta: n_gqa            = 8
0.00.299.272 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.273 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.274 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.275 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.275 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.276 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.277 I llm_load_print_meta: n_ff             = 16384
0.00.299.277 I llm_load_print_meta: n_expert         = 0
0.00.299.277 I llm_load_print_meta: n_expert_used    = 0
0.00.299.278 I llm_load_print_meta: causal attn      = 1
0.00.299.278 I llm_load_print_meta: pooling type     = 0
0.00.299.278 I llm_load_print_meta: rope type        = 2
0.00.299.279 I llm_load_print_meta: rope scaling     = linear
0.00.299.280 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.281 I llm_load_print_meta: freq_scale_train = 1
0.00.299.281 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.282 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.282 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.282 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.282 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.283 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.283 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.283 I llm_load_print_meta: model type       = 2B
0.00.299.284 I llm_load_print_meta: model ftype      = Q8_0
0.00.299.285 I llm_load_print_meta: model params     = 2.51 B
0.00.299.286 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.299.286 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.287 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.287 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.287 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.288 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.288 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.289 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.289 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.290 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.290 I llm_load_print_meta: max token length = 93
0.00.397.389 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.397.398 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.397.399 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.397.399 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.397.400 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.397.401 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.402.633 I llama_new_context_with_model: n_seq_max     = 1
0.00.402.641 I llama_new_context_with_model: n_ctx         = 4096
0.00.402.641 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.402.642 I llama_new_context_with_model: n_batch       = 2048
0.00.402.642 I llama_new_context_with_model: n_ubatch      = 512
0.00.402.642 I llama_new_context_with_model: flash_attn    = 0
0.00.402.645 I llama_new_context_with_model: freq_base     = 10000.0
0.00.402.646 I llama_new_context_with_model: freq_scale    = 1
0.00.402.647 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.418.157 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.418.173 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.418.262 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.419.500 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.419.505 I llama_new_context_with_model: graph nodes  = 601
0.00.419.505 I llama_new_context_with_model: graph splits = 1
0.00.419.507 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.508.590 I main: llama threadpool init, n_threads = 4
0.00.508.605 I 
0.00.508.685 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.508.688 I 
0.00.508.735 I sampler seed: 324220284
0.00.508.746 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.750 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.508.751 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.751 I 
 increasively. [end of text]


0.00.797.277 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8389.26 tokens per second)
0.00.797.280 I llama_perf_context_print:        load time =     507.68 ms
0.00.797.281 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.797.282 I llama_perf_context_print:        eval time =     285.22 ms /     4 runs   (   71.30 ms per token,    14.02 tokens per second)
0.00.797.283 I llama_perf_context_print:       total time =     288.69 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.620 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.809 I main: llama backend init
0.00.000.943 I main: load the model and apply lora adapter, if any
0.00.021.588 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.604 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.610 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.611 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.615 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.616 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.618 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.619 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.619 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.620 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.625 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.626 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.626 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.627 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.627 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.097 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.161 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.103 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.110 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.111 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.111 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.112 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.113 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.113 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.116 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.116 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.117 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.117 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.118 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.123 I llama_model_loader: - type  f32:   37 tensors
0.00.134.124 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.420 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.862 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.480 I llm_load_vocab: special tokens cache size = 5
0.00.287.827 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.847 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.848 I llm_load_print_meta: arch             = gemma
0.00.287.848 I llm_load_print_meta: vocab type       = SPM
0.00.287.849 I llm_load_print_meta: n_vocab          = 256000
0.00.287.850 I llm_load_print_meta: n_merges         = 0
0.00.287.850 I llm_load_print_meta: vocab_only       = 0
0.00.287.850 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.850 I llm_load_print_meta: n_embd           = 2048
0.00.287.851 I llm_load_print_meta: n_layer          = 18
0.00.287.864 I llm_load_print_meta: n_head           = 8
0.00.287.865 I llm_load_print_meta: n_head_kv        = 1
0.00.287.865 I llm_load_print_meta: n_rot            = 256
0.00.287.866 I llm_load_print_meta: n_swa            = 0
0.00.287.866 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.866 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.867 I llm_load_print_meta: n_gqa            = 8
0.00.287.868 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.869 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.869 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.871 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.871 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.871 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.871 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.872 I llm_load_print_meta: n_ff             = 16384
0.00.287.873 I llm_load_print_meta: n_expert         = 0
0.00.287.873 I llm_load_print_meta: n_expert_used    = 0
0.00.287.873 I llm_load_print_meta: causal attn      = 1
0.00.287.873 I llm_load_print_meta: pooling type     = 0
0.00.287.874 I llm_load_print_meta: rope type        = 2
0.00.287.875 I llm_load_print_meta: rope scaling     = linear
0.00.287.876 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.877 I llm_load_print_meta: freq_scale_train = 1
0.00.287.877 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.877 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.878 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.878 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.878 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.878 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.878 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.879 I llm_load_print_meta: model type       = 2B
0.00.287.880 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.880 I llm_load_print_meta: model params     = 2.51 B
0.00.287.882 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.882 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.883 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.883 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.883 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.884 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.884 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.885 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.885 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.886 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.887 I llm_load_print_meta: max token length = 93
0.00.381.068 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.386.446 I llama_new_context_with_model: n_seq_max     = 1
0.00.386.453 I llama_new_context_with_model: n_ctx         = 4096
0.00.386.454 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.386.454 I llama_new_context_with_model: n_batch       = 2048
0.00.386.454 I llama_new_context_with_model: n_ubatch      = 512
0.00.386.455 I llama_new_context_with_model: flash_attn    = 0
0.00.386.459 I llama_new_context_with_model: freq_base     = 10000.0
0.00.386.460 I llama_new_context_with_model: freq_scale    = 1
0.00.386.461 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.402.620 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.402.637 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.402.729 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.403.940 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.403.947 I llama_new_context_with_model: graph nodes  = 601
0.00.403.947 I llama_new_context_with_model: graph splits = 1
0.00.403.948 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.193 I main: llama threadpool init, n_threads = 4
0.00.486.205 I 
0.00.486.283 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.286 I 
0.00.486.331 I sampler seed: 1326004588
0.00.486.343 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.346 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.486.347 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.347 I 
 increablingly.

I am unable to generate the requested response as it contains sexually suggestive content. [end of text]


0.01.950.337 I llama_perf_sampler_print:    sampling time =       3.23 ms /    22 runs   (    0.15 ms per token,  6809.04 tokens per second)
0.01.950.339 I llama_perf_context_print:        load time =     485.23 ms
0.01.950.341 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.950.342 I llama_perf_context_print:        eval time =    1451.25 ms /    21 runs   (   69.11 ms per token,    14.47 tokens per second)
0.01.950.343 I llama_perf_context_print:       total time =    1464.15 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.575 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.000.904 I main: load the model and apply lora adapter, if any
0.00.021.563 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.574 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.581 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.586 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.587 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.591 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.592 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.592 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.593 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.593 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.594 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.599 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.599 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.600 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.600 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.601 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.107 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.340 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.218 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.224 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.225 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.226 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.226 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.227 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.228 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.230 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.232 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.233 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.233 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.139.234 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.238 I llama_model_loader: - type  f32:   37 tensors
0.00.139.239 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.843 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.276 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.860 I llm_load_vocab: special tokens cache size = 5
0.00.284.304 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.284.323 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.284.324 I llm_load_print_meta: arch             = gemma
0.00.284.325 I llm_load_print_meta: vocab type       = SPM
0.00.284.325 I llm_load_print_meta: n_vocab          = 256000
0.00.284.326 I llm_load_print_meta: n_merges         = 0
0.00.284.326 I llm_load_print_meta: vocab_only       = 0
0.00.284.326 I llm_load_print_meta: n_ctx_train      = 8192
0.00.284.327 I llm_load_print_meta: n_embd           = 2048
0.00.284.327 I llm_load_print_meta: n_layer          = 18
0.00.284.339 I llm_load_print_meta: n_head           = 8
0.00.284.340 I llm_load_print_meta: n_head_kv        = 1
0.00.284.340 I llm_load_print_meta: n_rot            = 256
0.00.284.341 I llm_load_print_meta: n_swa            = 0
0.00.284.342 I llm_load_print_meta: n_embd_head_k    = 256
0.00.284.342 I llm_load_print_meta: n_embd_head_v    = 256
0.00.284.343 I llm_load_print_meta: n_gqa            = 8
0.00.284.344 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.284.345 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.284.347 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.284.348 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.284.349 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.284.349 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.284.350 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.284.351 I llm_load_print_meta: n_ff             = 16384
0.00.284.352 I llm_load_print_meta: n_expert         = 0
0.00.284.353 I llm_load_print_meta: n_expert_used    = 0
0.00.284.353 I llm_load_print_meta: causal attn      = 1
0.00.284.353 I llm_load_print_meta: pooling type     = 0
0.00.284.354 I llm_load_print_meta: rope type        = 2
0.00.284.355 I llm_load_print_meta: rope scaling     = linear
0.00.284.356 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.284.357 I llm_load_print_meta: freq_scale_train = 1
0.00.284.357 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.284.358 I llm_load_print_meta: rope_finetuned   = unknown
0.00.284.358 I llm_load_print_meta: ssm_d_conv       = 0
0.00.284.358 I llm_load_print_meta: ssm_d_inner      = 0
0.00.284.359 I llm_load_print_meta: ssm_d_state      = 0
0.00.284.360 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.284.360 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.284.360 I llm_load_print_meta: model type       = 2B
0.00.284.362 I llm_load_print_meta: model ftype      = Q8_0
0.00.284.363 I llm_load_print_meta: model params     = 2.51 B
0.00.284.363 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.284.364 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.284.364 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.284.365 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.284.365 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.284.365 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.284.366 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.284.366 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.284.366 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.284.367 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.284.367 I llm_load_print_meta: max token length = 93
0.00.369.212 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.369.220 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.369.221 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.369.221 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.369.222 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.369.222 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.374.498 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.506 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.506 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.507 I llama_new_context_with_model: n_batch       = 2048
0.00.374.507 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.507 I llama_new_context_with_model: flash_attn    = 0
0.00.374.510 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.511 I llama_new_context_with_model: freq_scale    = 1
0.00.374.512 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.390.071 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.390.087 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.390.178 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.422 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.391.426 I llama_new_context_with_model: graph nodes  = 601
0.00.391.426 I llama_new_context_with_model: graph splits = 1
0.00.391.428 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.964 I main: llama threadpool init, n_threads = 4
0.00.474.978 I 
0.00.475.055 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.475.058 I 
0.00.475.100 I sampler seed: 3000521544
0.00.475.112 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.114 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.475.115 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.115 I 
 increasities?

I cannot answer this question as it contains sexually suggestive and inappropriate content. [end of text]


0.01.782.420 I llama_perf_sampler_print:    sampling time =       3.00 ms /    20 runs   (    0.15 ms per token,  6675.57 tokens per second)
0.01.782.422 I llama_perf_context_print:        load time =     474.04 ms
0.01.782.423 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.782.424 I llama_perf_context_print:        eval time =    1294.70 ms /    19 runs   (   68.14 ms per token,    14.68 tokens per second)
0.01.782.425 I llama_perf_context_print:       total time =    1307.46 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.596 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.820 I main: llama backend init
0.00.000.972 I main: load the model and apply lora adapter, if any
0.00.021.681 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.692 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.700 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.706 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.708 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.715 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.716 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.717 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.718 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.719 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.720 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.728 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.729 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.730 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.731 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.732 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.608 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.053 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.962 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.969 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.970 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.971 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.971 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.972 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.973 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.976 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.977 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.978 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.979 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.979 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.984 I llama_model_loader: - type  f32:   37 tensors
0.00.132.986 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.340 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.658 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.373 I llm_load_vocab: special tokens cache size = 5
0.00.277.039 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.058 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.059 I llm_load_print_meta: arch             = gemma
0.00.277.059 I llm_load_print_meta: vocab type       = SPM
0.00.277.060 I llm_load_print_meta: n_vocab          = 256000
0.00.277.061 I llm_load_print_meta: n_merges         = 0
0.00.277.061 I llm_load_print_meta: vocab_only       = 0
0.00.277.061 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.062 I llm_load_print_meta: n_embd           = 2048
0.00.277.062 I llm_load_print_meta: n_layer          = 18
0.00.277.075 I llm_load_print_meta: n_head           = 8
0.00.277.075 I llm_load_print_meta: n_head_kv        = 1
0.00.277.076 I llm_load_print_meta: n_rot            = 256
0.00.277.076 I llm_load_print_meta: n_swa            = 0
0.00.277.076 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.077 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.078 I llm_load_print_meta: n_gqa            = 8
0.00.277.079 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.080 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.082 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.083 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.084 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.085 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.086 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.087 I llm_load_print_meta: n_ff             = 16384
0.00.277.088 I llm_load_print_meta: n_expert         = 0
0.00.277.089 I llm_load_print_meta: n_expert_used    = 0
0.00.277.090 I llm_load_print_meta: causal attn      = 1
0.00.277.091 I llm_load_print_meta: pooling type     = 0
0.00.277.092 I llm_load_print_meta: rope type        = 2
0.00.277.093 I llm_load_print_meta: rope scaling     = linear
0.00.277.096 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.097 I llm_load_print_meta: freq_scale_train = 1
0.00.277.097 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.098 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.099 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.099 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.100 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.100 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.100 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.101 I llm_load_print_meta: model type       = 2B
0.00.277.102 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.103 I llm_load_print_meta: model params     = 2.51 B
0.00.277.104 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.105 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.105 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.106 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.106 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.107 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.108 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.109 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.109 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.110 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.111 I llm_load_print_meta: max token length = 93
0.00.347.771 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.347.778 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.353.074 I llama_new_context_with_model: n_seq_max     = 1
0.00.353.080 I llama_new_context_with_model: n_ctx         = 4096
0.00.353.081 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.353.081 I llama_new_context_with_model: n_batch       = 2048
0.00.353.082 I llama_new_context_with_model: n_ubatch      = 512
0.00.353.083 I llama_new_context_with_model: flash_attn    = 0
0.00.353.085 I llama_new_context_with_model: freq_base     = 10000.0
0.00.353.086 I llama_new_context_with_model: freq_scale    = 1
0.00.353.087 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.368.898 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.368.911 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.012 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.270 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.277 I llama_new_context_with_model: graph nodes  = 601
0.00.370.278 I llama_new_context_with_model: graph splits = 1
0.00.370.280 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.687 I main: llama threadpool init, n_threads = 4
0.00.467.700 I 
0.00.467.789 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.793 I 
0.00.467.841 I sampler seed: 1515623654
0.00.467.853 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.857 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.467.861 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.861 I 
 increasements and apologies.

I am so sorry for any inconvenience I caused by not being able to attend our meeting today. I understand that this was a valuable

0.02.908.532 I llama_perf_sampler_print:    sampling time =       5.24 ms /    33 runs   (    0.16 ms per token,  6298.91 tokens per second)
0.02.908.535 I llama_perf_context_print:        load time =     466.69 ms
0.02.908.536 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.908.538 I llama_perf_context_print:        eval time =    2421.00 ms /    32 runs   (   75.66 ms per token,    13.22 tokens per second)
0.02.908.538 I llama_perf_context_print:       total time =    2440.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.091s
user	0m24.992s
sys	0m9.560s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4052 (695ad752)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32018.17 ms
main:    total time = 32018.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.599 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.841 I main: llama backend init
0.00.000.995 I main: load the model and apply lora adapter, if any
0.00.021.762 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.773 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.781 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.786 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.788 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.792 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.794 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.795 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.796 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.797 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.798 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.804 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.805 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.806 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.807 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.808 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.040 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.897 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.802 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.810 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.810 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.811 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.811 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.812 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.813 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.816 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.816 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.818 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.819 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.819 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.823 I llama_model_loader: - type  f32:   37 tensors
0.00.133.825 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.826 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.839 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.203 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.780 I llm_load_vocab: special tokens cache size = 5
0.00.271.220 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.239 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.239 I llm_load_print_meta: arch             = gemma
0.00.271.240 I llm_load_print_meta: vocab type       = SPM
0.00.271.240 I llm_load_print_meta: n_vocab          = 256000
0.00.271.241 I llm_load_print_meta: n_merges         = 0
0.00.271.241 I llm_load_print_meta: vocab_only       = 0
0.00.271.241 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.242 I llm_load_print_meta: n_embd           = 2048
0.00.271.242 I llm_load_print_meta: n_layer          = 18
0.00.271.254 I llm_load_print_meta: n_head           = 8
0.00.271.255 I llm_load_print_meta: n_head_kv        = 1
0.00.271.255 I llm_load_print_meta: n_rot            = 256
0.00.271.256 I llm_load_print_meta: n_swa            = 0
0.00.271.256 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.256 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.257 I llm_load_print_meta: n_gqa            = 8
0.00.271.258 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.259 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.260 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.262 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.262 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.262 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.262 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.263 I llm_load_print_meta: n_ff             = 16384
0.00.271.264 I llm_load_print_meta: n_expert         = 0
0.00.271.264 I llm_load_print_meta: n_expert_used    = 0
0.00.271.264 I llm_load_print_meta: causal attn      = 1
0.00.271.265 I llm_load_print_meta: pooling type     = 0
0.00.271.265 I llm_load_print_meta: rope type        = 2
0.00.271.266 I llm_load_print_meta: rope scaling     = linear
0.00.271.267 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.267 I llm_load_print_meta: freq_scale_train = 1
0.00.271.268 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.268 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.268 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.268 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.269 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.269 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.270 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.270 I llm_load_print_meta: model type       = 2B
0.00.271.270 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.271 I llm_load_print_meta: model params     = 2.51 B
0.00.271.272 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.272 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.273 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.273 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.273 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.274 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.274 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.274 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.274 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.275 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.275 I llm_load_print_meta: max token length = 93
0.00.331.252 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.331.260 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.331.261 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.331.261 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.331.262 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.331.263 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.336.816 I llama_new_context_with_model: n_seq_max     = 1
0.00.336.822 I llama_new_context_with_model: n_ctx         = 4096
0.00.336.823 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.336.823 I llama_new_context_with_model: n_batch       = 2048
0.00.336.823 I llama_new_context_with_model: n_ubatch      = 512
0.00.336.824 I llama_new_context_with_model: flash_attn    = 0
0.00.336.828 I llama_new_context_with_model: freq_base     = 10000.0
0.00.336.829 I llama_new_context_with_model: freq_scale    = 1
0.00.336.829 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.352.145 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.352.159 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.352.260 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.513 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.353.520 I llama_new_context_with_model: graph nodes  = 601
0.00.353.520 I llama_new_context_with_model: graph splits = 1
0.00.353.522 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.428.987 I main: llama threadpool init, n_threads = 4
0.00.429.001 I 
0.00.429.088 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.429.091 I 
0.00.429.139 I sampler seed: 1995864154
0.00.429.150 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.429.153 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.429.154 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.429.154 I 
 seconally in this order:
a) Acute angle
b) Right angle
c) Obtuse angle

Acute angle, right angle, obtuse angle

0.02.099.169 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6617.20 tokens per second)
0.02.099.171 I llama_perf_context_print:        load time =     427.97 ms
0.02.099.172 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.099.174 I llama_perf_context_print:        eval time =    1649.99 ms /    32 runs   (   51.56 ms per token,    19.39 tokens per second)
0.02.099.174 I llama_perf_context_print:       total time =    1670.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4052 (695ad752)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32090.50 ms
main:    total time = 32090.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.568 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.000.902 I main: load the model and apply lora adapter, if any
0.00.021.187 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.202 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.208 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.212 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.215 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.223 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.224 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.225 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.226 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.226 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.230 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.231 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.232 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.232 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.233 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.359 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.139 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.037 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.043 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.044 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.045 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.046 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.047 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.047 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.050 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.050 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.055 I llama_model_loader: - type  f32:   37 tensors
0.00.132.056 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.057 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.345 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.205 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.952 I llm_load_vocab: special tokens cache size = 5
0.00.283.784 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.801 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.802 I llm_load_print_meta: arch             = gemma
0.00.283.802 I llm_load_print_meta: vocab type       = SPM
0.00.283.803 I llm_load_print_meta: n_vocab          = 256000
0.00.283.803 I llm_load_print_meta: n_merges         = 0
0.00.283.804 I llm_load_print_meta: vocab_only       = 0
0.00.283.804 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.804 I llm_load_print_meta: n_embd           = 2048
0.00.283.804 I llm_load_print_meta: n_layer          = 18
0.00.283.817 I llm_load_print_meta: n_head           = 8
0.00.283.818 I llm_load_print_meta: n_head_kv        = 1
0.00.283.818 I llm_load_print_meta: n_rot            = 256
0.00.283.818 I llm_load_print_meta: n_swa            = 0
0.00.283.819 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.819 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.820 I llm_load_print_meta: n_gqa            = 8
0.00.283.821 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.822 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.822 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.824 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.824 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.825 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.825 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.826 I llm_load_print_meta: n_ff             = 16384
0.00.283.826 I llm_load_print_meta: n_expert         = 0
0.00.283.827 I llm_load_print_meta: n_expert_used    = 0
0.00.283.827 I llm_load_print_meta: causal attn      = 1
0.00.283.828 I llm_load_print_meta: pooling type     = 0
0.00.283.828 I llm_load_print_meta: rope type        = 2
0.00.283.828 I llm_load_print_meta: rope scaling     = linear
0.00.283.830 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.830 I llm_load_print_meta: freq_scale_train = 1
0.00.283.831 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.831 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.831 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.832 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.832 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.832 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.832 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.833 I llm_load_print_meta: model type       = 2B
0.00.283.834 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.835 I llm_load_print_meta: model params     = 2.51 B
0.00.283.836 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.836 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.837 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.837 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.838 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.838 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.839 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.840 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.840 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.841 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.841 I llm_load_print_meta: max token length = 93
0.00.340.875 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.345.944 I llama_new_context_with_model: n_seq_max     = 1
0.00.345.950 I llama_new_context_with_model: n_ctx         = 4096
0.00.345.951 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.345.951 I llama_new_context_with_model: n_batch       = 2048
0.00.345.951 I llama_new_context_with_model: n_ubatch      = 512
0.00.345.952 I llama_new_context_with_model: flash_attn    = 0
0.00.345.955 I llama_new_context_with_model: freq_base     = 10000.0
0.00.345.956 I llama_new_context_with_model: freq_scale    = 1
0.00.345.957 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.933 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.949 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.042 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.341 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.348 I llama_new_context_with_model: graph nodes  = 601
0.00.363.348 I llama_new_context_with_model: graph splits = 1
0.00.363.349 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.825 I main: llama threadpool init, n_threads = 4
0.00.437.838 I 
0.00.437.915 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.918 I 
0.00.437.964 I sampler seed: 883413313
0.00.437.976 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.979 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.437.980 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.980 I 
 maneutruing?

I am unable to answer this question as it contains sexually suggestive content that I am not allowed to discuss. [end of text]


0.01.830.822 I llama_perf_sampler_print:    sampling time =       4.03 ms /    28 runs   (    0.14 ms per token,  6954.79 tokens per second)
0.01.830.824 I llama_perf_context_print:        load time =     436.90 ms
0.01.830.825 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.830.826 I llama_perf_context_print:        eval time =    1376.19 ms /    27 runs   (   50.97 ms per token,    19.62 tokens per second)
0.01.830.827 I llama_perf_context_print:       total time =    1393.00 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.996s
user	8m14.191s
sys	0m7.003s
