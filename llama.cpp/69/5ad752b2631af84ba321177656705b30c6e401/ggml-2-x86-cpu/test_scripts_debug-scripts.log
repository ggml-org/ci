+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.656 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.001.119 I main: load the model and apply lora adapter, if any
0.00.023.822 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.833 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.926 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.937 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.939 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.943 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.948 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.950 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.951 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.952 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.953 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.960 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.961 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.963 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.964 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.966 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.154 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.455 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.727 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.737 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.742 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.743 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.746 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.747 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.748 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.749 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.265.750 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.758 I llama_model_loader: - type  f32:   37 tensors
0.00.265.760 I llama_model_loader: - type q8_0:  127 tensors
0.00.462.133 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.765 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.833 I llm_load_vocab: special tokens cache size = 5
0.00.624.549 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.621 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.622 I llm_load_print_meta: arch             = gemma
0.00.624.623 I llm_load_print_meta: vocab type       = SPM
0.00.624.624 I llm_load_print_meta: n_vocab          = 256000
0.00.624.627 I llm_load_print_meta: n_merges         = 0
0.00.624.627 I llm_load_print_meta: vocab_only       = 0
0.00.624.628 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.628 I llm_load_print_meta: n_embd           = 2048
0.00.624.628 I llm_load_print_meta: n_layer          = 18
0.00.624.693 I llm_load_print_meta: n_head           = 8
0.00.624.701 I llm_load_print_meta: n_head_kv        = 1
0.00.624.701 I llm_load_print_meta: n_rot            = 256
0.00.624.701 I llm_load_print_meta: n_swa            = 0
0.00.624.702 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.702 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.707 I llm_load_print_meta: n_gqa            = 8
0.00.624.713 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.718 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.719 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.721 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.721 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.722 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.722 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.728 I llm_load_print_meta: n_ff             = 16384
0.00.624.729 I llm_load_print_meta: n_expert         = 0
0.00.624.729 I llm_load_print_meta: n_expert_used    = 0
0.00.624.730 I llm_load_print_meta: causal attn      = 1
0.00.624.730 I llm_load_print_meta: pooling type     = 0
0.00.624.731 I llm_load_print_meta: rope type        = 2
0.00.624.731 I llm_load_print_meta: rope scaling     = linear
0.00.624.733 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.734 I llm_load_print_meta: freq_scale_train = 1
0.00.624.735 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.735 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.735 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.736 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.736 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.737 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.737 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.738 I llm_load_print_meta: model type       = 2B
0.00.624.738 I llm_load_print_meta: model ftype      = Q8_0
0.00.624.739 I llm_load_print_meta: model params     = 2.51 B
0.00.624.749 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.624.749 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.750 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.750 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.751 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.751 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.752 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.764 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.771 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.772 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.773 I llm_load_print_meta: max token length = 93
0.00.726.098 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.726.110 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.726.111 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.726.112 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.726.113 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.726.114 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.732.167 I llama_new_context_with_model: n_seq_max     = 1
0.00.732.175 I llama_new_context_with_model: n_ctx         = 4096
0.00.732.176 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.732.176 I llama_new_context_with_model: n_batch       = 2048
0.00.732.177 I llama_new_context_with_model: n_ubatch      = 512
0.00.732.177 I llama_new_context_with_model: flash_attn    = 0
0.00.732.181 I llama_new_context_with_model: freq_base     = 10000.0
0.00.732.182 I llama_new_context_with_model: freq_scale    = 1
0.00.732.183 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.749.776 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.749.819 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.749.958 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.752.543 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.752.547 I llama_new_context_with_model: graph nodes  = 601
0.00.752.548 I llama_new_context_with_model: graph splits = 1
0.00.752.572 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.364.425 I main: llama threadpool init, n_threads = 4
0.01.364.437 I 
0.01.364.544 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.364.548 I 
0.01.364.776 I sampler seed: 3831630201
0.01.364.788 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.364.797 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.364.798 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.364.798 I 
 increasities?

I cannot answer this question as it contains sexually suggestive and inappropriate content. [end of text]


0.09.291.271 I llama_perf_sampler_print:    sampling time =      28.47 ms /    20 runs   (    1.42 ms per token,   702.49 tokens per second)
0.09.291.274 I llama_perf_context_print:        load time =    1363.21 ms
0.09.291.285 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.291.288 I llama_perf_context_print:        eval time =    7873.12 ms /    19 runs   (  414.37 ms per token,     2.41 tokens per second)
0.09.291.289 I llama_perf_context_print:       total time =    7926.86 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.826 I main: llama backend init
0.00.001.084 I main: load the model and apply lora adapter, if any
0.00.023.597 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.691 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.706 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.710 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.715 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.716 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.717 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.719 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.721 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.722 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.728 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.730 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.731 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.732 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.734 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.585 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.746 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.962 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.963 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.964 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.965 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.967 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.968 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.972 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.973 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.974 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.975 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.270.976 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.984 I llama_model_loader: - type  f32:   37 tensors
0.00.270.986 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.745 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.518.255 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.519.362 I llm_load_vocab: special tokens cache size = 5
0.00.614.150 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.220 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.221 I llm_load_print_meta: arch             = gemma
0.00.614.222 I llm_load_print_meta: vocab type       = SPM
0.00.614.223 I llm_load_print_meta: n_vocab          = 256000
0.00.614.225 I llm_load_print_meta: n_merges         = 0
0.00.614.226 I llm_load_print_meta: vocab_only       = 0
0.00.614.226 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.227 I llm_load_print_meta: n_embd           = 2048
0.00.614.227 I llm_load_print_meta: n_layer          = 18
0.00.614.291 I llm_load_print_meta: n_head           = 8
0.00.614.298 I llm_load_print_meta: n_head_kv        = 1
0.00.614.298 I llm_load_print_meta: n_rot            = 256
0.00.614.299 I llm_load_print_meta: n_swa            = 0
0.00.614.299 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.299 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.304 I llm_load_print_meta: n_gqa            = 8
0.00.614.309 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.314 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.315 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.316 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.317 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.317 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.317 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.322 I llm_load_print_meta: n_ff             = 16384
0.00.614.322 I llm_load_print_meta: n_expert         = 0
0.00.614.323 I llm_load_print_meta: n_expert_used    = 0
0.00.614.323 I llm_load_print_meta: causal attn      = 1
0.00.614.323 I llm_load_print_meta: pooling type     = 0
0.00.614.324 I llm_load_print_meta: rope type        = 2
0.00.614.324 I llm_load_print_meta: rope scaling     = linear
0.00.614.326 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.326 I llm_load_print_meta: freq_scale_train = 1
0.00.614.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.327 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.328 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.328 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.328 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.328 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.329 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.329 I llm_load_print_meta: model type       = 2B
0.00.614.330 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.331 I llm_load_print_meta: model params     = 2.51 B
0.00.614.339 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.340 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.340 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.341 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.341 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.342 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.342 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.342 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.348 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.349 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.349 I llm_load_print_meta: max token length = 93
0.00.712.613 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.718.442 I llama_new_context_with_model: n_seq_max     = 1
0.00.718.449 I llama_new_context_with_model: n_ctx         = 4096
0.00.718.449 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.718.450 I llama_new_context_with_model: n_batch       = 2048
0.00.718.450 I llama_new_context_with_model: n_ubatch      = 512
0.00.718.451 I llama_new_context_with_model: flash_attn    = 0
0.00.718.453 I llama_new_context_with_model: freq_base     = 10000.0
0.00.718.454 I llama_new_context_with_model: freq_scale    = 1
0.00.718.455 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.735.978 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.736.021 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.736.150 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.625 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.738.629 I llama_new_context_with_model: graph nodes  = 601
0.00.738.629 I llama_new_context_with_model: graph splits = 1
0.00.738.654 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.132 I main: llama threadpool init, n_threads = 4
0.01.350.145 I 
0.01.350.249 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.350.253 I 
0.01.350.483 I sampler seed: 2673342027
0.01.350.495 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.350.502 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.350.505 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.350.505 I 
 increasities!

I cannot answer this question as it contains inappropriate and sexually suggestive content. [end of text]


0.09.468.470 I llama_perf_sampler_print:    sampling time =      28.69 ms /    20 runs   (    1.43 ms per token,   697.16 tokens per second)
0.09.468.473 I llama_perf_context_print:        load time =    1348.95 ms
0.09.468.475 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.468.487 I llama_perf_context_print:        eval time =    8064.61 ms /    19 runs   (  424.45 ms per token,     2.36 tokens per second)
0.09.468.488 I llama_perf_context_print:       total time =    8118.35 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.641 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.001.108 I main: load the model and apply lora adapter, if any
0.00.023.382 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.391 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.478 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.489 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.491 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.496 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.497 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.499 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.500 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.508 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.509 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.516 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.517 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.526 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.545 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.554 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.723 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.886 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.053 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.064 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.065 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.066 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.067 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.068 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.069 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.073 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.074 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.075 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.076 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.265.077 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.086 I llama_model_loader: - type  f32:   37 tensors
0.00.265.088 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.984 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.524.377 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.525.440 I llm_load_vocab: special tokens cache size = 5
0.00.620.323 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.390 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.391 I llm_load_print_meta: arch             = gemma
0.00.620.392 I llm_load_print_meta: vocab type       = SPM
0.00.620.392 I llm_load_print_meta: n_vocab          = 256000
0.00.620.395 I llm_load_print_meta: n_merges         = 0
0.00.620.395 I llm_load_print_meta: vocab_only       = 0
0.00.620.395 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.396 I llm_load_print_meta: n_embd           = 2048
0.00.620.396 I llm_load_print_meta: n_layer          = 18
0.00.620.460 I llm_load_print_meta: n_head           = 8
0.00.620.466 I llm_load_print_meta: n_head_kv        = 1
0.00.620.467 I llm_load_print_meta: n_rot            = 256
0.00.620.467 I llm_load_print_meta: n_swa            = 0
0.00.620.468 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.468 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.473 I llm_load_print_meta: n_gqa            = 8
0.00.620.477 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.620.482 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.620.483 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.620.485 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.620.485 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.620.486 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.620.486 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.620.491 I llm_load_print_meta: n_ff             = 16384
0.00.620.491 I llm_load_print_meta: n_expert         = 0
0.00.620.492 I llm_load_print_meta: n_expert_used    = 0
0.00.620.492 I llm_load_print_meta: causal attn      = 1
0.00.620.494 I llm_load_print_meta: pooling type     = 0
0.00.620.494 I llm_load_print_meta: rope type        = 2
0.00.620.495 I llm_load_print_meta: rope scaling     = linear
0.00.620.496 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.620.497 I llm_load_print_meta: freq_scale_train = 1
0.00.620.497 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.620.498 I llm_load_print_meta: rope_finetuned   = unknown
0.00.620.499 I llm_load_print_meta: ssm_d_conv       = 0
0.00.620.499 I llm_load_print_meta: ssm_d_inner      = 0
0.00.620.499 I llm_load_print_meta: ssm_d_state      = 0
0.00.620.499 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.620.500 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.620.500 I llm_load_print_meta: model type       = 2B
0.00.620.513 I llm_load_print_meta: model ftype      = Q8_0
0.00.620.525 I llm_load_print_meta: model params     = 2.51 B
0.00.620.539 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.620.540 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.620.542 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.620.544 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.620.545 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.620.546 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.620.546 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.620.547 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.555 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.557 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.557 I llm_load_print_meta: max token length = 93
0.00.709.266 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.709.277 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.709.278 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.709.278 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.709.279 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.709.280 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.715.152 I llama_new_context_with_model: n_seq_max     = 1
0.00.715.161 I llama_new_context_with_model: n_ctx         = 4096
0.00.715.161 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.715.161 I llama_new_context_with_model: n_batch       = 2048
0.00.715.162 I llama_new_context_with_model: n_ubatch      = 512
0.00.715.162 I llama_new_context_with_model: flash_attn    = 0
0.00.715.165 I llama_new_context_with_model: freq_base     = 10000.0
0.00.715.166 I llama_new_context_with_model: freq_scale    = 1
0.00.715.167 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.732.241 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.732.281 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.732.408 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.734.935 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.734.940 I llama_new_context_with_model: graph nodes  = 601
0.00.734.940 I llama_new_context_with_model: graph splits = 1
0.00.734.965 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.341.028 I main: llama threadpool init, n_threads = 4
0.01.341.040 I 
0.01.341.146 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.341.150 I 
0.01.341.381 I sampler seed: 4153635834
0.01.341.393 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.341.403 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.341.404 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.341.405 I 
 increably.

I cannot answer this question as it contains inappropriate content. [end of text]


0.08.074.663 I llama_perf_sampler_print:    sampling time =      24.07 ms /    17 runs   (    1.42 ms per token,   706.36 tokens per second)
0.08.074.666 I llama_perf_context_print:        load time =    1339.82 ms
0.08.074.668 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.074.669 I llama_perf_context_print:        eval time =    6687.90 ms /    16 runs   (  417.99 ms per token,     2.39 tokens per second)
0.08.074.670 I llama_perf_context_print:       total time =    6733.64 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.001.104 I main: load the model and apply lora adapter, if any
0.00.023.665 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.676 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.762 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.774 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.775 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.780 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.782 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.783 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.785 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.786 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.787 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.794 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.798 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.799 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.800 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.801 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.042 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.946 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.979 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.990 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.991 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.992 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.993 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.995 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.998 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.002 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.003 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.004 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.005 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.265.007 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.014 I llama_model_loader: - type  f32:   37 tensors
0.00.265.017 I llama_model_loader: - type q8_0:  127 tensors
0.00.462.599 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.527.143 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.528.117 I llm_load_vocab: special tokens cache size = 5
0.00.631.366 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.438 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.443 I llm_load_print_meta: arch             = gemma
0.00.631.444 I llm_load_print_meta: vocab type       = SPM
0.00.631.444 I llm_load_print_meta: n_vocab          = 256000
0.00.631.446 I llm_load_print_meta: n_merges         = 0
0.00.631.447 I llm_load_print_meta: vocab_only       = 0
0.00.631.447 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.448 I llm_load_print_meta: n_embd           = 2048
0.00.631.448 I llm_load_print_meta: n_layer          = 18
0.00.631.513 I llm_load_print_meta: n_head           = 8
0.00.631.523 I llm_load_print_meta: n_head_kv        = 1
0.00.631.524 I llm_load_print_meta: n_rot            = 256
0.00.631.525 I llm_load_print_meta: n_swa            = 0
0.00.631.525 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.525 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.531 I llm_load_print_meta: n_gqa            = 8
0.00.631.535 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.541 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.542 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.544 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.544 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.544 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.546 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.551 I llm_load_print_meta: n_ff             = 16384
0.00.631.552 I llm_load_print_meta: n_expert         = 0
0.00.631.552 I llm_load_print_meta: n_expert_used    = 0
0.00.631.553 I llm_load_print_meta: causal attn      = 1
0.00.631.562 I llm_load_print_meta: pooling type     = 0
0.00.631.562 I llm_load_print_meta: rope type        = 2
0.00.631.564 I llm_load_print_meta: rope scaling     = linear
0.00.631.566 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.566 I llm_load_print_meta: freq_scale_train = 1
0.00.631.581 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.584 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.584 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.585 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.585 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.585 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.586 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.586 I llm_load_print_meta: model type       = 2B
0.00.631.588 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.588 I llm_load_print_meta: model params     = 2.51 B
0.00.631.603 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.607 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.608 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.609 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.609 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.610 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.611 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.612 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.619 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.622 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.623 I llm_load_print_meta: max token length = 93
0.00.704.125 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.704.136 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.709.930 I llama_new_context_with_model: n_seq_max     = 1
0.00.709.937 I llama_new_context_with_model: n_ctx         = 4096
0.00.709.938 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.709.938 I llama_new_context_with_model: n_batch       = 2048
0.00.709.939 I llama_new_context_with_model: n_ubatch      = 512
0.00.709.939 I llama_new_context_with_model: flash_attn    = 0
0.00.709.942 I llama_new_context_with_model: freq_base     = 10000.0
0.00.709.943 I llama_new_context_with_model: freq_scale    = 1
0.00.709.943 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.726.591 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.726.627 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.726.750 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.729.285 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.729.289 I llama_new_context_with_model: graph nodes  = 601
0.00.729.289 I llama_new_context_with_model: graph splits = 1
0.00.729.314 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.334.710 I main: llama threadpool init, n_threads = 4
0.01.334.722 I 
0.01.334.829 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.334.833 I 
0.01.335.065 I sampler seed: 984424450
0.01.335.077 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.335.084 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.335.087 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.335.087 I 
 increasities, a phenomenon where two individuals are involuntarily attracted to each other despite not having romantic or sexual feelings for each other. [end of text]


0.12.332.093 I llama_perf_sampler_print:    sampling time =      38.82 ms /    27 runs   (    1.44 ms per token,   695.55 tokens per second)
0.12.332.097 I llama_perf_context_print:        load time =    1333.51 ms
0.12.332.099 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.332.100 I llama_perf_context_print:        eval time =   10925.24 ms /    26 runs   (  420.20 ms per token,     2.38 tokens per second)
0.12.332.101 I llama_perf_context_print:       total time =   10997.39 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m49.057s
user	2m27.834s
sys	0m9.511s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4052 (695ad752)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198651.56 ms
main:    total time = 198651.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.001.131 I main: load the model and apply lora adapter, if any
0.00.023.620 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.634 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.736 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.750 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.752 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.757 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.762 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.763 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.764 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.765 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.766 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.774 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.776 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.777 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.778 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.779 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.354 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.359 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.316 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.325 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.326 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.327 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.328 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.329 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.331 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.335 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.336 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.337 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.338 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.265.339 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.347 I llama_model_loader: - type  f32:   37 tensors
0.00.265.349 I llama_model_loader: - type q4_K:  108 tensors
0.00.265.350 I llama_model_loader: - type q6_K:   19 tensors
0.00.442.790 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.513.182 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.514.174 I llm_load_vocab: special tokens cache size = 5
0.00.608.588 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.658 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.658 I llm_load_print_meta: arch             = gemma
0.00.608.659 I llm_load_print_meta: vocab type       = SPM
0.00.608.660 I llm_load_print_meta: n_vocab          = 256000
0.00.608.662 I llm_load_print_meta: n_merges         = 0
0.00.608.663 I llm_load_print_meta: vocab_only       = 0
0.00.608.663 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.664 I llm_load_print_meta: n_embd           = 2048
0.00.608.664 I llm_load_print_meta: n_layer          = 18
0.00.608.729 I llm_load_print_meta: n_head           = 8
0.00.608.736 I llm_load_print_meta: n_head_kv        = 1
0.00.608.736 I llm_load_print_meta: n_rot            = 256
0.00.608.737 I llm_load_print_meta: n_swa            = 0
0.00.608.738 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.739 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.744 I llm_load_print_meta: n_gqa            = 8
0.00.608.749 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.753 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.765 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.766 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.767 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.767 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.768 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.773 I llm_load_print_meta: n_ff             = 16384
0.00.608.774 I llm_load_print_meta: n_expert         = 0
0.00.608.778 I llm_load_print_meta: n_expert_used    = 0
0.00.608.779 I llm_load_print_meta: causal attn      = 1
0.00.608.779 I llm_load_print_meta: pooling type     = 0
0.00.608.779 I llm_load_print_meta: rope type        = 2
0.00.608.780 I llm_load_print_meta: rope scaling     = linear
0.00.608.782 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.783 I llm_load_print_meta: freq_scale_train = 1
0.00.608.786 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.787 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.787 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.787 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.788 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.788 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.788 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.789 I llm_load_print_meta: model type       = 2B
0.00.608.790 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.608.791 I llm_load_print_meta: model params     = 2.51 B
0.00.608.801 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.608.801 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.804 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.804 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.805 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.805 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.806 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.806 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.811 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.813 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.814 I llm_load_print_meta: max token length = 93
0.00.671.042 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.671.053 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.671.054 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.671.055 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.671.056 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.671.057 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.676.899 I llama_new_context_with_model: n_seq_max     = 1
0.00.676.907 I llama_new_context_with_model: n_ctx         = 4096
0.00.676.908 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.676.908 I llama_new_context_with_model: n_batch       = 2048
0.00.676.908 I llama_new_context_with_model: n_ubatch      = 512
0.00.676.909 I llama_new_context_with_model: flash_attn    = 0
0.00.676.913 I llama_new_context_with_model: freq_base     = 10000.0
0.00.676.914 I llama_new_context_with_model: freq_scale    = 1
0.00.676.915 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.693.519 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.693.560 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.693.717 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.696.252 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.696.255 I llama_new_context_with_model: graph nodes  = 601
0.00.696.256 I llama_new_context_with_model: graph splits = 1
0.00.696.281 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.269.225 I main: llama threadpool init, n_threads = 4
0.01.269.237 I 
0.01.269.346 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.269.350 I 
0.01.269.585 I sampler seed: 256748192
0.01.269.598 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.269.605 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.269.608 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.269.609 I 
 maneutruing and storytelling.

## Storytelling through Dialogue

Dialogue is the heartbeat of storytelling. It's the fuel that propels the narrative forward, reveals

0.12.112.760 I llama_perf_sampler_print:    sampling time =      48.02 ms /    33 runs   (    1.46 ms per token,   687.19 tokens per second)
0.12.112.765 I llama_perf_context_print:        load time =    1267.99 ms
0.12.112.767 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.112.769 I llama_perf_context_print:        eval time =   10754.42 ms /    32 runs   (  336.08 ms per token,     2.98 tokens per second)
0.12.112.770 I llama_perf_context_print:       total time =   10843.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4052 (695ad752)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198672.71 ms
main:    total time = 198672.71 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 4052 (695ad752) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.001.132 I main: load the model and apply lora adapter, if any
0.00.023.775 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.890 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.907 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.911 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.916 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.918 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.919 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.920 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.921 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.923 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.930 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.931 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.932 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.933 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.934 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.349 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.983 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.122 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.131 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.133 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.134 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.136 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.138 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.140 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.145 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.147 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.157 I llama_model_loader: - type  f32:   37 tensors
0.00.267.160 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.161 I llama_model_loader: - type q6_K:   19 tensors
0.00.458.702 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.272 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.237 I llm_load_vocab: special tokens cache size = 5
0.00.623.755 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.838 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.842 I llm_load_print_meta: arch             = gemma
0.00.623.843 I llm_load_print_meta: vocab type       = SPM
0.00.623.843 I llm_load_print_meta: n_vocab          = 256000
0.00.623.846 I llm_load_print_meta: n_merges         = 0
0.00.623.847 I llm_load_print_meta: vocab_only       = 0
0.00.623.848 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.848 I llm_load_print_meta: n_embd           = 2048
0.00.623.850 I llm_load_print_meta: n_layer          = 18
0.00.623.926 I llm_load_print_meta: n_head           = 8
0.00.623.938 I llm_load_print_meta: n_head_kv        = 1
0.00.623.939 I llm_load_print_meta: n_rot            = 256
0.00.623.940 I llm_load_print_meta: n_swa            = 0
0.00.623.940 I llm_load_print_meta: n_embd_head_k    = 256
0.00.623.943 I llm_load_print_meta: n_embd_head_v    = 256
0.00.623.951 I llm_load_print_meta: n_gqa            = 8
0.00.623.960 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.623.967 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.623.969 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.623.971 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.623.972 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.623.973 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.623.973 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.623.981 I llm_load_print_meta: n_ff             = 16384
0.00.623.984 I llm_load_print_meta: n_expert         = 0
0.00.623.984 I llm_load_print_meta: n_expert_used    = 0
0.00.623.985 I llm_load_print_meta: causal attn      = 1
0.00.623.986 I llm_load_print_meta: pooling type     = 0
0.00.623.986 I llm_load_print_meta: rope type        = 2
0.00.623.987 I llm_load_print_meta: rope scaling     = linear
0.00.623.989 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.623.990 I llm_load_print_meta: freq_scale_train = 1
0.00.623.991 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.623.991 I llm_load_print_meta: rope_finetuned   = unknown
0.00.623.992 I llm_load_print_meta: ssm_d_conv       = 0
0.00.623.994 I llm_load_print_meta: ssm_d_inner      = 0
0.00.623.994 I llm_load_print_meta: ssm_d_state      = 0
0.00.623.995 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.623.996 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.623.997 I llm_load_print_meta: model type       = 2B
0.00.624.001 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.624.002 I llm_load_print_meta: model params     = 2.51 B
0.00.624.015 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.624.016 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.018 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.018 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.019 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.020 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.021 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.021 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.029 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.031 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.032 I llm_load_print_meta: max token length = 93
0.00.683.854 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.690.369 I llama_new_context_with_model: n_seq_max     = 1
0.00.690.376 I llama_new_context_with_model: n_ctx         = 4096
0.00.690.377 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.690.378 I llama_new_context_with_model: n_batch       = 2048
0.00.690.378 I llama_new_context_with_model: n_ubatch      = 512
0.00.690.379 I llama_new_context_with_model: flash_attn    = 0
0.00.690.385 I llama_new_context_with_model: freq_base     = 10000.0
0.00.690.386 I llama_new_context_with_model: freq_scale    = 1
0.00.690.387 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.708.509 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.708.559 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.708.693 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.711.354 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.711.357 I llama_new_context_with_model: graph nodes  = 601
0.00.711.358 I llama_new_context_with_model: graph splits = 1
0.00.711.385 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.282.410 I main: llama threadpool init, n_threads = 4
0.01.282.422 I 
0.01.282.547 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.282.550 I 
0.01.282.788 I sampler seed: 446765470
0.01.282.805 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.282.814 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.282.817 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.282.818 I 
 increasities and other forms of harassment can have devastating effects on the targets, both physically and psychologically.

**What steps should be taken to prevent harassment and create

0.12.141.972 I llama_perf_sampler_print:    sampling time =      48.48 ms /    33 runs   (    1.47 ms per token,   680.68 tokens per second)
0.12.141.975 I llama_perf_context_print:        load time =    1281.18 ms
0.12.141.997 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.141.999 I llama_perf_context_print:        eval time =   10770.31 ms /    32 runs   (  336.57 ms per token,     2.97 tokens per second)
0.12.141.999 I llama_perf_context_print:       total time =   10859.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.560s
user	50m9.201s
sys	0m6.535s
