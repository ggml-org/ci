+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.574 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.915 I main: load the model and apply lora adapter, if any
0.00.022.223 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.284 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.294 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.301 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.306 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.312 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.313 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.314 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.315 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.315 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.316 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.322 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.323 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.324 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.325 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.326 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.182 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.384 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.264 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.272 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.273 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.274 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.274 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.275 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.276 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.279 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.279 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.280 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.280 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.281 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.286 I llama_model_loader: - type  f32:   37 tensors
0.00.133.289 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.755 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.667 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.492 I llm_load_vocab: special tokens cache size = 5
0.00.236.658 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.673 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.673 I llm_load_print_meta: arch             = gemma
0.00.236.674 I llm_load_print_meta: vocab type       = SPM
0.00.236.675 I llm_load_print_meta: n_vocab          = 256000
0.00.236.675 I llm_load_print_meta: n_merges         = 0
0.00.236.675 I llm_load_print_meta: vocab_only       = 0
0.00.236.676 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.676 I llm_load_print_meta: n_embd           = 2048
0.00.236.676 I llm_load_print_meta: n_layer          = 18
0.00.236.689 I llm_load_print_meta: n_head           = 8
0.00.236.690 I llm_load_print_meta: n_head_kv        = 1
0.00.236.690 I llm_load_print_meta: n_rot            = 256
0.00.236.691 I llm_load_print_meta: n_swa            = 0
0.00.236.691 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.692 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.693 I llm_load_print_meta: n_gqa            = 8
0.00.236.694 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.695 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.696 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.697 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.698 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.698 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.699 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.699 I llm_load_print_meta: n_ff             = 16384
0.00.236.700 I llm_load_print_meta: n_expert         = 0
0.00.236.700 I llm_load_print_meta: n_expert_used    = 0
0.00.236.700 I llm_load_print_meta: causal attn      = 1
0.00.236.700 I llm_load_print_meta: pooling type     = 0
0.00.236.701 I llm_load_print_meta: rope type        = 2
0.00.236.701 I llm_load_print_meta: rope scaling     = linear
0.00.236.702 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.703 I llm_load_print_meta: freq_scale_train = 1
0.00.236.703 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.703 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.704 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.704 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.704 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.704 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.705 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.706 I llm_load_print_meta: model type       = 2B
0.00.236.706 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.707 I llm_load_print_meta: model params     = 2.51 B
0.00.236.708 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.708 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.709 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.709 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.709 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.710 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.710 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.711 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.711 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.711 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.712 I llm_load_print_meta: max token length = 93
0.00.236.731 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.822 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.335.829 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.335.830 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.335.830 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.335.831 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.335.831 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.340.948 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.955 I llama_new_context_with_model: n_batch    = 2048
0.00.340.955 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.956 I llama_new_context_with_model: flash_attn = 0
0.00.340.958 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.959 I llama_new_context_with_model: freq_scale = 1
0.00.370.474 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.491 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.591 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.459 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.468 I llama_new_context_with_model: graph nodes  = 601
0.00.371.469 I llama_new_context_with_model: graph splits = 1
0.00.371.471 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.978 I main: llama threadpool init, n_threads = 4
0.00.463.992 I 
0.00.464.091 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.095 I 
0.00.464.140 I sampler seed: 326530574
0.00.464.150 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.153 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.154 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.154 I 
 increasements, and provide the corresponding citations.

**Example:**

**Original Text:** "The cat sat on the mat."

**Revised Text:** "

0.02.745.929 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6921.14 tokens per second)
0.02.745.932 I llama_perf_context_print:        load time =     462.04 ms
0.02.745.933 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.745.934 I llama_perf_context_print:        eval time =    2263.05 ms /    32 runs   (   70.72 ms per token,    14.14 tokens per second)
0.02.745.935 I llama_perf_context_print:       total time =    2281.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.602 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.814 I main: llama backend init
0.00.001.970 I main: load the model and apply lora adapter, if any
0.00.022.070 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.081 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.090 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.091 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.096 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.097 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.099 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.100 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.109 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.110 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.111 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.112 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.113 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.431 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.132 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.100 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.108 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.109 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.111 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.111 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.113 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.114 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.118 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.118 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.119 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.120 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.122 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.127 I llama_model_loader: - type  f32:   37 tensors
0.00.134.131 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.069 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.074 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.970 I llm_load_vocab: special tokens cache size = 5
0.00.238.078 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.091 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.092 I llm_load_print_meta: arch             = gemma
0.00.238.092 I llm_load_print_meta: vocab type       = SPM
0.00.238.093 I llm_load_print_meta: n_vocab          = 256000
0.00.238.093 I llm_load_print_meta: n_merges         = 0
0.00.238.094 I llm_load_print_meta: vocab_only       = 0
0.00.238.094 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.094 I llm_load_print_meta: n_embd           = 2048
0.00.238.095 I llm_load_print_meta: n_layer          = 18
0.00.238.107 I llm_load_print_meta: n_head           = 8
0.00.238.108 I llm_load_print_meta: n_head_kv        = 1
0.00.238.108 I llm_load_print_meta: n_rot            = 256
0.00.238.108 I llm_load_print_meta: n_swa            = 0
0.00.238.109 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.109 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.110 I llm_load_print_meta: n_gqa            = 8
0.00.238.111 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.112 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.112 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.114 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.114 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.115 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.115 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.116 I llm_load_print_meta: n_ff             = 16384
0.00.238.116 I llm_load_print_meta: n_expert         = 0
0.00.238.116 I llm_load_print_meta: n_expert_used    = 0
0.00.238.117 I llm_load_print_meta: causal attn      = 1
0.00.238.117 I llm_load_print_meta: pooling type     = 0
0.00.238.117 I llm_load_print_meta: rope type        = 2
0.00.238.117 I llm_load_print_meta: rope scaling     = linear
0.00.238.119 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.120 I llm_load_print_meta: freq_scale_train = 1
0.00.238.120 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.120 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.121 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.121 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.121 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.121 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.122 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.122 I llm_load_print_meta: model type       = 2B
0.00.238.123 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.123 I llm_load_print_meta: model params     = 2.51 B
0.00.238.124 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.124 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.125 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.125 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.125 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.126 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.126 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.127 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.127 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.127 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.128 I llm_load_print_meta: max token length = 93
0.00.238.154 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.283 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.338.299 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.305 I llama_new_context_with_model: n_batch    = 2048
0.00.338.305 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.306 I llama_new_context_with_model: flash_attn = 0
0.00.338.308 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.309 I llama_new_context_with_model: freq_scale = 1
0.00.369.695 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.710 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.801 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.697 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.704 I llama_new_context_with_model: graph nodes  = 601
0.00.370.705 I llama_new_context_with_model: graph splits = 1
0.00.370.707 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.265 I main: llama threadpool init, n_threads = 4
0.00.460.275 I 
0.00.460.359 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.363 I 
0.00.460.411 I sampler seed: 3342052740
0.00.460.421 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.426 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.426 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.426 I 
 increasities. [end of text]


0.00.740.541 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7788.16 tokens per second)
0.00.740.544 I llama_perf_context_print:        load time =     458.28 ms
0.00.740.545 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.740.546 I llama_perf_context_print:        eval time =     277.15 ms /     4 runs   (   69.29 ms per token,    14.43 tokens per second)
0.00.740.547 I llama_perf_context_print:       total time =     280.28 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.591 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.825 I main: llama backend init
0.00.001.990 I main: load the model and apply lora adapter, if any
0.00.022.370 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.423 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.436 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.448 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.452 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.458 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.459 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.460 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.462 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.465 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.471 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.472 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.473 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.474 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.475 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.395 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.925 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.880 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.886 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.887 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.888 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.889 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.890 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.890 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.893 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.895 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.895 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.896 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.897 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.902 I llama_model_loader: - type  f32:   37 tensors
0.00.133.905 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.975 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.564 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.371 I llm_load_vocab: special tokens cache size = 5
0.00.231.572 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.586 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.587 I llm_load_print_meta: arch             = gemma
0.00.231.587 I llm_load_print_meta: vocab type       = SPM
0.00.231.588 I llm_load_print_meta: n_vocab          = 256000
0.00.231.589 I llm_load_print_meta: n_merges         = 0
0.00.231.589 I llm_load_print_meta: vocab_only       = 0
0.00.231.589 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.590 I llm_load_print_meta: n_embd           = 2048
0.00.231.590 I llm_load_print_meta: n_layer          = 18
0.00.231.603 I llm_load_print_meta: n_head           = 8
0.00.231.604 I llm_load_print_meta: n_head_kv        = 1
0.00.231.604 I llm_load_print_meta: n_rot            = 256
0.00.231.605 I llm_load_print_meta: n_swa            = 0
0.00.231.605 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.605 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.606 I llm_load_print_meta: n_gqa            = 8
0.00.231.607 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.608 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.609 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.610 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.611 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.612 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.612 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.613 I llm_load_print_meta: n_ff             = 16384
0.00.231.613 I llm_load_print_meta: n_expert         = 0
0.00.231.613 I llm_load_print_meta: n_expert_used    = 0
0.00.231.613 I llm_load_print_meta: causal attn      = 1
0.00.231.614 I llm_load_print_meta: pooling type     = 0
0.00.231.614 I llm_load_print_meta: rope type        = 2
0.00.231.614 I llm_load_print_meta: rope scaling     = linear
0.00.231.616 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.616 I llm_load_print_meta: freq_scale_train = 1
0.00.231.617 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.617 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.617 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.618 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.618 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.618 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.619 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.619 I llm_load_print_meta: model type       = 2B
0.00.231.620 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.620 I llm_load_print_meta: model params     = 2.51 B
0.00.231.621 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.621 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.622 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.622 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.623 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.623 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.624 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.624 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.624 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.625 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.625 I llm_load_print_meta: max token length = 93
0.00.231.653 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.306.901 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.306.911 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.912 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.306.913 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.306.913 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.914 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.312.144 I llama_new_context_with_model: n_ctx      = 8192
0.00.312.151 I llama_new_context_with_model: n_batch    = 2048
0.00.312.152 I llama_new_context_with_model: n_ubatch   = 512
0.00.312.152 I llama_new_context_with_model: flash_attn = 0
0.00.312.156 I llama_new_context_with_model: freq_base  = 10000.0
0.00.312.157 I llama_new_context_with_model: freq_scale = 1
0.00.342.113 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.342.131 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.342.231 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.085 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.343.093 I llama_new_context_with_model: graph nodes  = 601
0.00.343.093 I llama_new_context_with_model: graph splits = 1
0.00.343.095 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.022 I main: llama threadpool init, n_threads = 4
0.00.443.036 I 
0.00.443.126 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.130 I 
0.00.443.178 I sampler seed: 1144184168
0.00.443.188 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.198 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.443.202 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.202 I 
 seconally. [end of text]


0.00.736.493 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8064.52 tokens per second)
0.00.736.495 I llama_perf_context_print:        load time =     441.01 ms
0.00.736.497 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.736.498 I llama_perf_context_print:        eval time =     290.30 ms /     4 runs   (   72.57 ms per token,    13.78 tokens per second)
0.00.736.499 I llama_perf_context_print:       total time =     293.48 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.813 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.001.063 I main: llama backend init
0.00.002.803 I main: load the model and apply lora adapter, if any
0.00.028.163 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.028.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.028.219 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.225 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.225 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.230 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.230 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.231 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.232 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.233 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.237 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.238 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.238 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.239 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.028.239 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.056.255 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.819 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.891 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.898 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.899 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.899 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.900 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.901 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.902 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.905 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.905 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.905 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.906 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.145.907 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.911 I llama_model_loader: - type  f32:   37 tensors
0.00.145.914 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.839 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.633 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.469 I llm_load_vocab: special tokens cache size = 5
0.00.261.830 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.845 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.846 I llm_load_print_meta: arch             = gemma
0.00.261.846 I llm_load_print_meta: vocab type       = SPM
0.00.261.847 I llm_load_print_meta: n_vocab          = 256000
0.00.261.848 I llm_load_print_meta: n_merges         = 0
0.00.261.848 I llm_load_print_meta: vocab_only       = 0
0.00.261.848 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.849 I llm_load_print_meta: n_embd           = 2048
0.00.261.849 I llm_load_print_meta: n_layer          = 18
0.00.261.864 I llm_load_print_meta: n_head           = 8
0.00.261.865 I llm_load_print_meta: n_head_kv        = 1
0.00.261.865 I llm_load_print_meta: n_rot            = 256
0.00.261.865 I llm_load_print_meta: n_swa            = 0
0.00.261.865 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.866 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.867 I llm_load_print_meta: n_gqa            = 8
0.00.261.868 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.868 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.869 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.870 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.871 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.871 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.872 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.872 I llm_load_print_meta: n_ff             = 16384
0.00.261.873 I llm_load_print_meta: n_expert         = 0
0.00.261.873 I llm_load_print_meta: n_expert_used    = 0
0.00.261.873 I llm_load_print_meta: causal attn      = 1
0.00.261.873 I llm_load_print_meta: pooling type     = 0
0.00.261.874 I llm_load_print_meta: rope type        = 2
0.00.261.874 I llm_load_print_meta: rope scaling     = linear
0.00.261.875 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.876 I llm_load_print_meta: freq_scale_train = 1
0.00.261.876 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.877 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.877 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.878 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.878 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.878 I llm_load_print_meta: model type       = 2B
0.00.261.879 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.880 I llm_load_print_meta: model params     = 2.51 B
0.00.261.881 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.882 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.882 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.883 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.884 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.884 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.885 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.885 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.886 I llm_load_print_meta: max token length = 93
0.00.261.907 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.339.201 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.339.210 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.344.315 I llama_new_context_with_model: n_ctx      = 8192
0.00.344.322 I llama_new_context_with_model: n_batch    = 2048
0.00.344.322 I llama_new_context_with_model: n_ubatch   = 512
0.00.344.323 I llama_new_context_with_model: flash_attn = 0
0.00.344.325 I llama_new_context_with_model: freq_base  = 10000.0
0.00.344.326 I llama_new_context_with_model: freq_scale = 1
0.00.374.919 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.937 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.028 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.924 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.932 I llama_new_context_with_model: graph nodes  = 601
0.00.375.933 I llama_new_context_with_model: graph splits = 1
0.00.375.934 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.418 I main: llama threadpool init, n_threads = 4
0.00.473.430 I 
0.00.473.507 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.510 I 
0.00.473.545 I sampler seed: 632693214
0.00.473.555 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.557 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.558 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.558 I 
 increasities, the world's oldest game, and a relic from a legendary civilization.

What is the game?

The provided text does not specify the

0.02.932.996 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6830.88 tokens per second)
0.02.932.998 I llama_perf_context_print:        load time =     470.59 ms
0.02.932.999 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.933.000 I llama_perf_context_print:        eval time =    2440.30 ms /    32 runs   (   76.26 ms per token,    13.11 tokens per second)
0.02.933.001 I llama_perf_context_print:       total time =    2459.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.832s
user	0m24.147s
sys	0m9.573s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3850 (699eaabc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32066.91 ms
main:    total time = 32066.91 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.579 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.780 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.021.886 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.936 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.944 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.950 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.950 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.954 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.955 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.956 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.957 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.957 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.958 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.962 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.962 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.963 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.963 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.964 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.611 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.211 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.130 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.137 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.138 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.138 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.139 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.140 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.140 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.143 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.144 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.145 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.146 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.147 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.150 I llama_model_loader: - type  f32:   37 tensors
0.00.133.153 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.153 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.416 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.039 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.815 I llm_load_vocab: special tokens cache size = 5
0.00.229.945 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.961 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.961 I llm_load_print_meta: arch             = gemma
0.00.229.962 I llm_load_print_meta: vocab type       = SPM
0.00.229.963 I llm_load_print_meta: n_vocab          = 256000
0.00.229.964 I llm_load_print_meta: n_merges         = 0
0.00.229.964 I llm_load_print_meta: vocab_only       = 0
0.00.229.964 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.964 I llm_load_print_meta: n_embd           = 2048
0.00.229.965 I llm_load_print_meta: n_layer          = 18
0.00.229.979 I llm_load_print_meta: n_head           = 8
0.00.229.980 I llm_load_print_meta: n_head_kv        = 1
0.00.229.980 I llm_load_print_meta: n_rot            = 256
0.00.229.981 I llm_load_print_meta: n_swa            = 0
0.00.229.981 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.981 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.982 I llm_load_print_meta: n_gqa            = 8
0.00.229.983 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.984 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.985 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.986 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.987 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.987 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.987 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.988 I llm_load_print_meta: n_ff             = 16384
0.00.229.989 I llm_load_print_meta: n_expert         = 0
0.00.229.989 I llm_load_print_meta: n_expert_used    = 0
0.00.229.989 I llm_load_print_meta: causal attn      = 1
0.00.229.989 I llm_load_print_meta: pooling type     = 0
0.00.229.989 I llm_load_print_meta: rope type        = 2
0.00.229.990 I llm_load_print_meta: rope scaling     = linear
0.00.229.992 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.992 I llm_load_print_meta: freq_scale_train = 1
0.00.229.993 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.993 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.993 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.994 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.994 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.994 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.994 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.995 I llm_load_print_meta: model type       = 2B
0.00.229.995 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.996 I llm_load_print_meta: model params     = 2.51 B
0.00.229.997 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.997 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.998 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.999 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.999 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.999 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.000 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.000 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.001 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.001 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.001 I llm_load_print_meta: max token length = 93
0.00.230.039 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.460 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.467 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.468 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.469 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.469 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.470 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.292.611 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.618 I llama_new_context_with_model: n_batch    = 2048
0.00.292.618 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.619 I llama_new_context_with_model: flash_attn = 0
0.00.292.622 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.623 I llama_new_context_with_model: freq_scale = 1
0.00.324.465 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.481 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.324.570 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.442 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.450 I llama_new_context_with_model: graph nodes  = 601
0.00.325.451 I llama_new_context_with_model: graph splits = 1
0.00.325.453 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.408.595 I main: llama threadpool init, n_threads = 4
0.00.408.607 I 
0.00.408.684 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.408.687 I 
0.00.408.724 I sampler seed: 1822279517
0.00.408.732 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.408.735 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.408.736 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.408.736 I 
 seconded.

**Assistant**

I understand. I will ensure that your request is handled promptly and efficiently. Please provide me with any additional information or context

0.02.063.778 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6953.22 tokens per second)
0.02.063.780 I llama_perf_context_print:        load time =     406.68 ms
0.02.063.781 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.063.783 I llama_perf_context_print:        eval time =    1636.50 ms /    32 runs   (   51.14 ms per token,    19.55 tokens per second)
0.02.063.783 I llama_perf_context_print:       total time =    1655.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3850 (699eaabc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32080.10 ms
main:    total time = 32080.10 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.582 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.907 I main: load the model and apply lora adapter, if any
0.00.022.134 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.146 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.153 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.154 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.159 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.160 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.162 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.163 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.164 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.164 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.170 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.171 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.172 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.173 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.174 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.194 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.399 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.382 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.391 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.392 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.393 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.394 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.395 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.396 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.398 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.399 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.404 I llama_model_loader: - type  f32:   37 tensors
0.00.133.406 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.407 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.441 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.970 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.206.710 I llm_load_vocab: special tokens cache size = 5
0.00.227.796 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.813 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.813 I llm_load_print_meta: arch             = gemma
0.00.227.814 I llm_load_print_meta: vocab type       = SPM
0.00.227.815 I llm_load_print_meta: n_vocab          = 256000
0.00.227.815 I llm_load_print_meta: n_merges         = 0
0.00.227.816 I llm_load_print_meta: vocab_only       = 0
0.00.227.816 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.817 I llm_load_print_meta: n_embd           = 2048
0.00.227.817 I llm_load_print_meta: n_layer          = 18
0.00.227.831 I llm_load_print_meta: n_head           = 8
0.00.227.832 I llm_load_print_meta: n_head_kv        = 1
0.00.227.832 I llm_load_print_meta: n_rot            = 256
0.00.227.833 I llm_load_print_meta: n_swa            = 0
0.00.227.833 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.833 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.834 I llm_load_print_meta: n_gqa            = 8
0.00.227.835 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.836 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.837 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.838 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.839 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.839 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.840 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.841 I llm_load_print_meta: n_ff             = 16384
0.00.227.841 I llm_load_print_meta: n_expert         = 0
0.00.227.841 I llm_load_print_meta: n_expert_used    = 0
0.00.227.841 I llm_load_print_meta: causal attn      = 1
0.00.227.842 I llm_load_print_meta: pooling type     = 0
0.00.227.842 I llm_load_print_meta: rope type        = 2
0.00.227.842 I llm_load_print_meta: rope scaling     = linear
0.00.227.844 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.845 I llm_load_print_meta: freq_scale_train = 1
0.00.227.845 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.845 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.846 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.846 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.847 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.847 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.848 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.849 I llm_load_print_meta: model type       = 2B
0.00.227.850 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.227.852 I llm_load_print_meta: model params     = 2.51 B
0.00.227.853 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.227.854 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.855 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.856 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.857 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.857 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.858 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.859 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.860 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.861 I llm_load_print_meta: max token length = 93
0.00.227.886 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.203 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.290.275 I llama_new_context_with_model: n_ctx      = 8192
0.00.290.282 I llama_new_context_with_model: n_batch    = 2048
0.00.290.283 I llama_new_context_with_model: n_ubatch   = 512
0.00.290.283 I llama_new_context_with_model: flash_attn = 0
0.00.290.286 I llama_new_context_with_model: freq_base  = 10000.0
0.00.290.287 I llama_new_context_with_model: freq_scale = 1
0.00.322.622 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.639 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.727 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.612 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.620 I llama_new_context_with_model: graph nodes  = 601
0.00.323.621 I llama_new_context_with_model: graph splits = 1
0.00.323.623 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.407.425 I main: llama threadpool init, n_threads = 4
0.00.407.439 I 
0.00.407.529 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.407.533 I 
0.00.407.576 I sampler seed: 914252468
0.00.407.586 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.407.589 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.407.589 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.407.589 I 
 seconally.

The question is about a sentence from the text.

"The boy looked at the girl, his eyes filled with a mixture of curiosity and

0.02.036.355 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6845.05 tokens per second)
0.02.036.357 I llama_perf_context_print:        load time =     405.50 ms
0.02.036.359 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.036.360 I llama_perf_context_print:        eval time =    1610.42 ms /    32 runs   (   50.33 ms per token,    19.87 tokens per second)
0.02.036.361 I llama_perf_context_print:       total time =    1628.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.176s
user	8m14.952s
sys	0m7.041s
