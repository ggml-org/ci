+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.662 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.862 I main: llama backend init
0.00.002.803 I main: load the model and apply lora adapter, if any
0.00.028.386 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.028.573 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.028.665 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.028.679 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.028.680 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.028.685 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.028.692 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.028.692 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.028.693 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.028.694 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.028.695 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.028.702 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.028.716 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.028.718 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.028.719 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.028.720 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.097.547 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.309 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.354 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.362 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.363 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.365 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.365 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.366 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.367 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.371 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.372 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.373 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.373 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.374 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.382 I llama_model_loader: - type  f32:   37 tensors
0.00.197.386 I llama_model_loader: - type q8_0:  127 tensors
0.00.342.687 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.369.740 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.370.875 I llm_load_vocab: special tokens cache size = 5
0.00.429.269 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.429.333 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.429.334 I llm_load_print_meta: arch             = gemma
0.00.429.335 I llm_load_print_meta: vocab type       = SPM
0.00.429.336 I llm_load_print_meta: n_vocab          = 256000
0.00.429.338 I llm_load_print_meta: n_merges         = 0
0.00.429.339 I llm_load_print_meta: vocab_only       = 0
0.00.429.339 I llm_load_print_meta: n_ctx_train      = 8192
0.00.429.340 I llm_load_print_meta: n_embd           = 2048
0.00.429.340 I llm_load_print_meta: n_layer          = 18
0.00.429.402 I llm_load_print_meta: n_head           = 8
0.00.429.408 I llm_load_print_meta: n_head_kv        = 1
0.00.429.409 I llm_load_print_meta: n_rot            = 256
0.00.429.409 I llm_load_print_meta: n_swa            = 0
0.00.429.409 I llm_load_print_meta: n_embd_head_k    = 256
0.00.429.410 I llm_load_print_meta: n_embd_head_v    = 256
0.00.429.414 I llm_load_print_meta: n_gqa            = 8
0.00.429.418 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.429.423 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.429.424 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.429.425 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.429.426 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.429.426 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.429.427 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.429.431 I llm_load_print_meta: n_ff             = 16384
0.00.429.432 I llm_load_print_meta: n_expert         = 0
0.00.429.432 I llm_load_print_meta: n_expert_used    = 0
0.00.429.432 I llm_load_print_meta: causal attn      = 1
0.00.429.433 I llm_load_print_meta: pooling type     = 0
0.00.429.433 I llm_load_print_meta: rope type        = 2
0.00.429.433 I llm_load_print_meta: rope scaling     = linear
0.00.429.435 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.429.435 I llm_load_print_meta: freq_scale_train = 1
0.00.429.436 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.429.436 I llm_load_print_meta: rope_finetuned   = unknown
0.00.429.436 I llm_load_print_meta: ssm_d_conv       = 0
0.00.429.437 I llm_load_print_meta: ssm_d_inner      = 0
0.00.429.437 I llm_load_print_meta: ssm_d_state      = 0
0.00.429.437 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.429.438 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.429.438 I llm_load_print_meta: model type       = 2B
0.00.429.439 I llm_load_print_meta: model ftype      = Q8_0
0.00.429.440 I llm_load_print_meta: model params     = 2.51 B
0.00.429.441 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.429.441 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.429.441 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.429.442 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.429.442 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.429.443 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.429.443 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.429.444 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.429.450 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.429.451 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.429.451 I llm_load_print_meta: max token length = 93
0.00.429.628 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.529.177 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.529.189 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.529.190 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.529.190 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.529.191 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.529.191 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.534.818 I llama_new_context_with_model: n_ctx      = 8192
0.00.534.825 I llama_new_context_with_model: n_batch    = 2048
0.00.534.825 I llama_new_context_with_model: n_ubatch   = 512
0.00.534.826 I llama_new_context_with_model: flash_attn = 0
0.00.534.828 I llama_new_context_with_model: freq_base  = 10000.0
0.00.534.829 I llama_new_context_with_model: freq_scale = 1
0.00.565.272 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.565.322 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.565.439 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.566.839 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.566.846 I llama_new_context_with_model: graph nodes  = 601
0.00.566.846 I llama_new_context_with_model: graph splits = 1
0.00.566.862 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.181.821 I main: llama threadpool init, n_threads = 4
0.01.181.834 I 
0.01.181.931 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.181.935 I 
0.01.182.111 I sampler seed: 1276177284
0.01.182.121 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.182.126 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.182.126 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.182.127 I 
 increasities.

I'm so sorry, but I'm unable to generate sexually suggestive or inappropriate content. My purpose is to assist with tasks and questions

0.14.682.696 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   671.96 tokens per second)
0.14.682.699 I llama_perf_context_print:        load time =    1178.93 ms
0.14.682.700 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.682.701 I llama_perf_context_print:        eval time =   13419.19 ms /    32 runs   (  419.35 ms per token,     2.38 tokens per second)
0.14.682.724 I llama_perf_context_print:       total time =   13500.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.677 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.898 I main: llama backend init
0.00.002.862 I main: load the model and apply lora adapter, if any
0.00.027.045 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.027.162 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.180 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.185 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.191 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.193 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.194 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.196 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.197 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.199 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.208 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.213 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.214 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.216 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.217 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.412 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.705 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.773 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.781 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.782 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.783 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.784 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.785 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.786 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.789 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.790 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.791 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.791 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.195.792 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.801 I llama_model_loader: - type  f32:   37 tensors
0.00.195.807 I llama_model_loader: - type q8_0:  127 tensors
0.00.339.715 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.364.863 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.365.928 I llm_load_vocab: special tokens cache size = 5
0.00.424.737 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.424.800 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.424.801 I llm_load_print_meta: arch             = gemma
0.00.424.802 I llm_load_print_meta: vocab type       = SPM
0.00.424.803 I llm_load_print_meta: n_vocab          = 256000
0.00.424.805 I llm_load_print_meta: n_merges         = 0
0.00.424.806 I llm_load_print_meta: vocab_only       = 0
0.00.424.806 I llm_load_print_meta: n_ctx_train      = 8192
0.00.424.806 I llm_load_print_meta: n_embd           = 2048
0.00.424.807 I llm_load_print_meta: n_layer          = 18
0.00.424.867 I llm_load_print_meta: n_head           = 8
0.00.424.874 I llm_load_print_meta: n_head_kv        = 1
0.00.424.874 I llm_load_print_meta: n_rot            = 256
0.00.424.875 I llm_load_print_meta: n_swa            = 0
0.00.424.875 I llm_load_print_meta: n_embd_head_k    = 256
0.00.424.875 I llm_load_print_meta: n_embd_head_v    = 256
0.00.424.880 I llm_load_print_meta: n_gqa            = 8
0.00.424.884 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.424.889 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.424.890 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.424.891 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.424.892 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.424.892 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.424.892 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.424.897 I llm_load_print_meta: n_ff             = 16384
0.00.424.897 I llm_load_print_meta: n_expert         = 0
0.00.424.898 I llm_load_print_meta: n_expert_used    = 0
0.00.424.898 I llm_load_print_meta: causal attn      = 1
0.00.424.898 I llm_load_print_meta: pooling type     = 0
0.00.424.899 I llm_load_print_meta: rope type        = 2
0.00.424.899 I llm_load_print_meta: rope scaling     = linear
0.00.424.900 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.424.901 I llm_load_print_meta: freq_scale_train = 1
0.00.424.901 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.424.902 I llm_load_print_meta: rope_finetuned   = unknown
0.00.424.902 I llm_load_print_meta: ssm_d_conv       = 0
0.00.424.902 I llm_load_print_meta: ssm_d_inner      = 0
0.00.424.903 I llm_load_print_meta: ssm_d_state      = 0
0.00.424.903 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.424.903 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.424.904 I llm_load_print_meta: model type       = 2B
0.00.424.905 I llm_load_print_meta: model ftype      = Q8_0
0.00.424.905 I llm_load_print_meta: model params     = 2.51 B
0.00.424.906 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.424.906 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.424.907 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.424.907 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.424.908 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.424.908 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.424.909 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.424.931 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.424.939 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.424.951 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.424.952 I llm_load_print_meta: max token length = 93
0.00.425.148 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.520.042 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.526.031 I llama_new_context_with_model: n_ctx      = 8192
0.00.526.039 I llama_new_context_with_model: n_batch    = 2048
0.00.526.040 I llama_new_context_with_model: n_ubatch   = 512
0.00.526.040 I llama_new_context_with_model: flash_attn = 0
0.00.526.043 I llama_new_context_with_model: freq_base  = 10000.0
0.00.526.044 I llama_new_context_with_model: freq_scale = 1
0.00.556.357 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.556.408 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.556.529 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.557.955 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.557.963 I llama_new_context_with_model: graph nodes  = 601
0.00.557.963 I llama_new_context_with_model: graph splits = 1
0.00.557.982 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.170.701 I main: llama threadpool init, n_threads = 4
0.01.170.713 I 
0.01.170.815 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.170.823 I 
0.01.171.000 I sampler seed: 2318810116
0.01.171.012 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.171.019 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.171.020 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.171.023 I 
 seconary, and tertiary sectors, along with the concept of industry diversification.

**Industry diversification:**

Industry diversification refers to the process of spreading investments across different

0.14.827.018 I llama_perf_sampler_print:    sampling time =      48.71 ms /    33 runs   (    1.48 ms per token,   677.53 tokens per second)
0.14.827.021 I llama_perf_context_print:        load time =    1167.74 ms
0.14.827.044 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.827.047 I llama_perf_context_print:        eval time =   13574.28 ms /    32 runs   (  424.20 ms per token,     2.36 tokens per second)
0.14.827.048 I llama_perf_context_print:       total time =   13656.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.589 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.816 I main: llama backend init
0.00.002.768 I main: load the model and apply lora adapter, if any
0.00.025.194 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.403 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.502 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.516 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.521 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.527 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.529 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.531 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.533 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.535 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.537 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.547 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.553 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.555 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.556 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.557 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.427 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.434 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.463 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.474 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.475 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.476 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.477 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.478 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.479 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.484 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.484 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.485 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.486 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.195.487 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.497 I llama_model_loader: - type  f32:   37 tensors
0.00.195.501 I llama_model_loader: - type q8_0:  127 tensors
0.00.356.486 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.388.404 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.389.574 I llm_load_vocab: special tokens cache size = 5
0.00.447.492 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.447.559 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.447.560 I llm_load_print_meta: arch             = gemma
0.00.447.562 I llm_load_print_meta: vocab type       = SPM
0.00.447.563 I llm_load_print_meta: n_vocab          = 256000
0.00.447.565 I llm_load_print_meta: n_merges         = 0
0.00.447.565 I llm_load_print_meta: vocab_only       = 0
0.00.447.566 I llm_load_print_meta: n_ctx_train      = 8192
0.00.447.566 I llm_load_print_meta: n_embd           = 2048
0.00.447.567 I llm_load_print_meta: n_layer          = 18
0.00.447.630 I llm_load_print_meta: n_head           = 8
0.00.447.637 I llm_load_print_meta: n_head_kv        = 1
0.00.447.638 I llm_load_print_meta: n_rot            = 256
0.00.447.638 I llm_load_print_meta: n_swa            = 0
0.00.447.639 I llm_load_print_meta: n_embd_head_k    = 256
0.00.447.639 I llm_load_print_meta: n_embd_head_v    = 256
0.00.447.643 I llm_load_print_meta: n_gqa            = 8
0.00.447.649 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.447.656 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.447.658 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.447.660 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.447.661 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.447.662 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.447.663 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.447.669 I llm_load_print_meta: n_ff             = 16384
0.00.447.670 I llm_load_print_meta: n_expert         = 0
0.00.447.671 I llm_load_print_meta: n_expert_used    = 0
0.00.447.671 I llm_load_print_meta: causal attn      = 1
0.00.447.672 I llm_load_print_meta: pooling type     = 0
0.00.447.672 I llm_load_print_meta: rope type        = 2
0.00.447.674 I llm_load_print_meta: rope scaling     = linear
0.00.447.676 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.447.677 I llm_load_print_meta: freq_scale_train = 1
0.00.447.678 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.447.678 I llm_load_print_meta: rope_finetuned   = unknown
0.00.447.679 I llm_load_print_meta: ssm_d_conv       = 0
0.00.447.679 I llm_load_print_meta: ssm_d_inner      = 0
0.00.447.681 I llm_load_print_meta: ssm_d_state      = 0
0.00.447.682 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.447.687 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.447.688 I llm_load_print_meta: model type       = 2B
0.00.447.698 I llm_load_print_meta: model ftype      = Q8_0
0.00.447.699 I llm_load_print_meta: model params     = 2.51 B
0.00.447.700 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.447.701 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.447.702 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.447.703 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.447.704 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.447.705 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.447.709 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.447.710 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.447.716 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.447.718 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.447.718 I llm_load_print_meta: max token length = 93
0.00.447.916 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.524.599 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.524.612 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.524.613 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.524.614 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.524.615 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.524.615 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.530.383 I llama_new_context_with_model: n_ctx      = 8192
0.00.530.392 I llama_new_context_with_model: n_batch    = 2048
0.00.530.392 I llama_new_context_with_model: n_ubatch   = 512
0.00.530.393 I llama_new_context_with_model: flash_attn = 0
0.00.530.397 I llama_new_context_with_model: freq_base  = 10000.0
0.00.530.398 I llama_new_context_with_model: freq_scale = 1
0.00.561.207 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.561.250 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.561.364 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.562.759 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.562.766 I llama_new_context_with_model: graph nodes  = 601
0.00.562.767 I llama_new_context_with_model: graph splits = 1
0.00.562.787 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.176.879 I main: llama threadpool init, n_threads = 4
0.01.176.892 I 
0.01.177.006 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.177.010 I 
0.01.177.192 I sampler seed: 1312897718
0.01.177.204 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.177.209 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.177.210 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.177.210 I 
 increably with glee!
This is a joyous and celebratory expression, expressing excitement and enthusiasm. [end of text]


0.09.628.263 I llama_perf_sampler_print:    sampling time =      30.94 ms /    21 runs   (    1.47 ms per token,   678.69 tokens per second)
0.09.628.266 I llama_perf_context_print:        load time =    1174.03 ms
0.09.628.267 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.628.269 I llama_perf_context_print:        eval time =    8399.14 ms /    20 runs   (  419.96 ms per token,     2.38 tokens per second)
0.09.628.270 I llama_perf_context_print:       total time =    8451.39 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.620 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.830 I main: llama backend init
0.00.002.777 I main: load the model and apply lora adapter, if any
0.00.024.729 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.935 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.025 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.036 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.037 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.040 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.042 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.043 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.044 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.046 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.047 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.057 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.058 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.059 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.059 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.060 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.446 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.875 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.194.094 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.194.105 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.194.106 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.194.107 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.194.108 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.194.109 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.194.110 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.194.115 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.194.116 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.194.117 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.194.117 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.194.118 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.194.127 I llama_model_loader: - type  f32:   37 tensors
0.00.194.132 I llama_model_loader: - type q8_0:  127 tensors
0.00.352.278 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.378.584 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.379.665 I llm_load_vocab: special tokens cache size = 5
0.00.439.509 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.439.571 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.439.572 I llm_load_print_meta: arch             = gemma
0.00.439.573 I llm_load_print_meta: vocab type       = SPM
0.00.439.574 I llm_load_print_meta: n_vocab          = 256000
0.00.439.577 I llm_load_print_meta: n_merges         = 0
0.00.439.577 I llm_load_print_meta: vocab_only       = 0
0.00.439.577 I llm_load_print_meta: n_ctx_train      = 8192
0.00.439.578 I llm_load_print_meta: n_embd           = 2048
0.00.439.578 I llm_load_print_meta: n_layer          = 18
0.00.439.640 I llm_load_print_meta: n_head           = 8
0.00.439.647 I llm_load_print_meta: n_head_kv        = 1
0.00.439.648 I llm_load_print_meta: n_rot            = 256
0.00.439.648 I llm_load_print_meta: n_swa            = 0
0.00.439.649 I llm_load_print_meta: n_embd_head_k    = 256
0.00.439.649 I llm_load_print_meta: n_embd_head_v    = 256
0.00.439.653 I llm_load_print_meta: n_gqa            = 8
0.00.439.658 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.439.663 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.439.665 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.439.666 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.439.666 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.439.667 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.439.668 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.439.673 I llm_load_print_meta: n_ff             = 16384
0.00.439.674 I llm_load_print_meta: n_expert         = 0
0.00.439.674 I llm_load_print_meta: n_expert_used    = 0
0.00.439.675 I llm_load_print_meta: causal attn      = 1
0.00.439.675 I llm_load_print_meta: pooling type     = 0
0.00.439.676 I llm_load_print_meta: rope type        = 2
0.00.439.676 I llm_load_print_meta: rope scaling     = linear
0.00.439.677 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.439.678 I llm_load_print_meta: freq_scale_train = 1
0.00.439.678 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.439.679 I llm_load_print_meta: rope_finetuned   = unknown
0.00.439.683 I llm_load_print_meta: ssm_d_conv       = 0
0.00.439.684 I llm_load_print_meta: ssm_d_inner      = 0
0.00.439.684 I llm_load_print_meta: ssm_d_state      = 0
0.00.439.684 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.439.685 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.439.685 I llm_load_print_meta: model type       = 2B
0.00.439.686 I llm_load_print_meta: model ftype      = Q8_0
0.00.439.687 I llm_load_print_meta: model params     = 2.51 B
0.00.439.688 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.439.688 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.439.689 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.439.689 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.439.689 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.439.690 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.439.693 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.439.694 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.439.699 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.439.701 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.439.701 I llm_load_print_meta: max token length = 93
0.00.439.877 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.511.545 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.511.555 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.517.377 I llama_new_context_with_model: n_ctx      = 8192
0.00.517.385 I llama_new_context_with_model: n_batch    = 2048
0.00.517.385 I llama_new_context_with_model: n_ubatch   = 512
0.00.517.386 I llama_new_context_with_model: flash_attn = 0
0.00.517.390 I llama_new_context_with_model: freq_base  = 10000.0
0.00.517.390 I llama_new_context_with_model: freq_scale = 1
0.00.549.456 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.549.502 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.549.618 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.551.071 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.551.077 I llama_new_context_with_model: graph nodes  = 601
0.00.551.078 I llama_new_context_with_model: graph splits = 1
0.00.551.095 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.179.002 I main: llama threadpool init, n_threads = 4
0.01.179.013 I 
0.01.179.104 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.179.107 I 
0.01.179.276 I sampler seed: 226824918
0.01.179.287 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.179.292 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.179.293 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.179.293 I 
 increasities with a touch of magic. [end of text]


0.04.968.463 I llama_perf_sampler_print:    sampling time =      13.93 ms /    10 runs   (    1.39 ms per token,   717.67 tokens per second)
0.04.968.466 I llama_perf_context_print:        load time =    1176.15 ms
0.04.968.467 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.04.968.469 I llama_perf_context_print:        eval time =    3765.24 ms /     9 runs   (  418.36 ms per token,     2.39 tokens per second)
0.04.968.469 I llama_perf_context_print:       total time =    3789.47 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m54.191s
user	2m49.623s
sys	0m9.631s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3850 (699eaabc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200218.13 ms
main:    total time = 200218.13 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.651 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.849 I main: llama backend init
0.00.002.789 I main: load the model and apply lora adapter, if any
0.00.024.768 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.952 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.045 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.057 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.059 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.063 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.067 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.067 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.068 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.069 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.070 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.078 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.079 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.080 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.089 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.090 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.680 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.564 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.730 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.739 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.740 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.741 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.741 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.742 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.744 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.747 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.747 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.748 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.193.749 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.193.750 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.193.759 I llama_model_loader: - type  f32:   37 tensors
0.00.193.764 I llama_model_loader: - type q4_K:  108 tensors
0.00.193.764 I llama_model_loader: - type q6_K:   19 tensors
0.00.360.488 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.389.148 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.390.146 I llm_load_vocab: special tokens cache size = 5
0.00.449.048 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.449.105 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.449.106 I llm_load_print_meta: arch             = gemma
0.00.449.106 I llm_load_print_meta: vocab type       = SPM
0.00.449.107 I llm_load_print_meta: n_vocab          = 256000
0.00.449.109 I llm_load_print_meta: n_merges         = 0
0.00.449.110 I llm_load_print_meta: vocab_only       = 0
0.00.449.111 I llm_load_print_meta: n_ctx_train      = 8192
0.00.449.111 I llm_load_print_meta: n_embd           = 2048
0.00.449.111 I llm_load_print_meta: n_layer          = 18
0.00.449.173 I llm_load_print_meta: n_head           = 8
0.00.449.179 I llm_load_print_meta: n_head_kv        = 1
0.00.449.180 I llm_load_print_meta: n_rot            = 256
0.00.449.180 I llm_load_print_meta: n_swa            = 0
0.00.449.181 I llm_load_print_meta: n_embd_head_k    = 256
0.00.449.181 I llm_load_print_meta: n_embd_head_v    = 256
0.00.449.185 I llm_load_print_meta: n_gqa            = 8
0.00.449.189 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.449.195 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.449.196 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.449.197 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.449.199 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.449.199 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.449.200 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.449.205 I llm_load_print_meta: n_ff             = 16384
0.00.449.206 I llm_load_print_meta: n_expert         = 0
0.00.449.206 I llm_load_print_meta: n_expert_used    = 0
0.00.449.206 I llm_load_print_meta: causal attn      = 1
0.00.449.207 I llm_load_print_meta: pooling type     = 0
0.00.449.208 I llm_load_print_meta: rope type        = 2
0.00.449.208 I llm_load_print_meta: rope scaling     = linear
0.00.449.210 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.449.210 I llm_load_print_meta: freq_scale_train = 1
0.00.449.211 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.449.212 I llm_load_print_meta: rope_finetuned   = unknown
0.00.449.212 I llm_load_print_meta: ssm_d_conv       = 0
0.00.449.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.449.213 I llm_load_print_meta: ssm_d_state      = 0
0.00.449.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.449.215 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.449.215 I llm_load_print_meta: model type       = 2B
0.00.449.216 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.449.217 I llm_load_print_meta: model params     = 2.51 B
0.00.449.218 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.449.218 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.449.219 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.449.220 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.449.220 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.449.221 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.449.221 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.449.222 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.449.227 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.449.229 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.449.230 I llm_load_print_meta: max token length = 93
0.00.449.407 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.509.156 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.509.166 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.509.167 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.509.167 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.509.168 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.509.169 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.514.692 I llama_new_context_with_model: n_ctx      = 8192
0.00.514.699 I llama_new_context_with_model: n_batch    = 2048
0.00.514.700 I llama_new_context_with_model: n_ubatch   = 512
0.00.514.701 I llama_new_context_with_model: flash_attn = 0
0.00.514.703 I llama_new_context_with_model: freq_base  = 10000.0
0.00.514.704 I llama_new_context_with_model: freq_scale = 1
0.00.544.929 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.544.975 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.545.083 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.546.493 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.546.500 I llama_new_context_with_model: graph nodes  = 601
0.00.546.500 I llama_new_context_with_model: graph splits = 1
0.00.546.516 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.127.629 I main: llama threadpool init, n_threads = 4
0.01.127.640 I 
0.01.127.732 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.127.736 I 
0.01.127.909 I sampler seed: 394589287
0.01.127.922 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.127.927 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.127.928 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.127.929 I 
 seconally, but the woman's voice was lost in the cacophony of the crowd.

The sentence is from a play.

In this sentence

0.12.053.595 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.57 tokens per second)
0.12.053.598 I llama_perf_context_print:        load time =    1124.75 ms
0.12.053.599 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.053.612 I llama_perf_context_print:        eval time =   10844.12 ms /    32 runs   (  338.88 ms per token,     2.95 tokens per second)
0.12.053.614 I llama_perf_context_print:       total time =   10925.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3850 (699eaabc)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200155.70 ms
main:    total time = 200155.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.661 I build: 3850 (699eaabc) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.741 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.842 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.859 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.861 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.865 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.866 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.868 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.870 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.871 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.872 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.884 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.885 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.886 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.887 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.888 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.093.920 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.317 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.193.470 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.193.480 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.193.480 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.193.481 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.193.482 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.193.484 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.193.485 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.193.489 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.193.490 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.193.498 I llama_model_loader: - type  f32:   37 tensors
0.00.193.502 I llama_model_loader: - type q4_K:  108 tensors
0.00.193.503 I llama_model_loader: - type q6_K:   19 tensors
0.00.362.871 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.388.911 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.390.020 I llm_load_vocab: special tokens cache size = 5
0.00.449.360 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.449.422 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.449.423 I llm_load_print_meta: arch             = gemma
0.00.449.424 I llm_load_print_meta: vocab type       = SPM
0.00.449.425 I llm_load_print_meta: n_vocab          = 256000
0.00.449.427 I llm_load_print_meta: n_merges         = 0
0.00.449.428 I llm_load_print_meta: vocab_only       = 0
0.00.449.428 I llm_load_print_meta: n_ctx_train      = 8192
0.00.449.429 I llm_load_print_meta: n_embd           = 2048
0.00.449.429 I llm_load_print_meta: n_layer          = 18
0.00.449.491 I llm_load_print_meta: n_head           = 8
0.00.449.498 I llm_load_print_meta: n_head_kv        = 1
0.00.449.498 I llm_load_print_meta: n_rot            = 256
0.00.449.498 I llm_load_print_meta: n_swa            = 0
0.00.449.499 I llm_load_print_meta: n_embd_head_k    = 256
0.00.449.499 I llm_load_print_meta: n_embd_head_v    = 256
0.00.449.503 I llm_load_print_meta: n_gqa            = 8
0.00.449.508 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.449.513 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.449.515 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.449.516 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.449.517 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.449.517 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.449.517 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.449.522 I llm_load_print_meta: n_ff             = 16384
0.00.449.523 I llm_load_print_meta: n_expert         = 0
0.00.449.534 I llm_load_print_meta: n_expert_used    = 0
0.00.449.539 I llm_load_print_meta: causal attn      = 1
0.00.449.539 I llm_load_print_meta: pooling type     = 0
0.00.449.539 I llm_load_print_meta: rope type        = 2
0.00.449.540 I llm_load_print_meta: rope scaling     = linear
0.00.449.541 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.449.543 I llm_load_print_meta: freq_scale_train = 1
0.00.449.543 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.449.543 I llm_load_print_meta: rope_finetuned   = unknown
0.00.449.543 I llm_load_print_meta: ssm_d_conv       = 0
0.00.449.544 I llm_load_print_meta: ssm_d_inner      = 0
0.00.449.544 I llm_load_print_meta: ssm_d_state      = 0
0.00.449.558 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.449.558 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.449.559 I llm_load_print_meta: model type       = 2B
0.00.449.561 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.449.561 I llm_load_print_meta: model params     = 2.51 B
0.00.449.570 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.449.571 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.449.572 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.449.573 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.449.573 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.449.573 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.449.574 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.449.575 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.449.581 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.449.583 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.449.584 I llm_load_print_meta: max token length = 93
0.00.449.751 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.507.522 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.513.349 I llama_new_context_with_model: n_ctx      = 8192
0.00.513.356 I llama_new_context_with_model: n_batch    = 2048
0.00.513.356 I llama_new_context_with_model: n_ubatch   = 512
0.00.513.357 I llama_new_context_with_model: flash_attn = 0
0.00.513.359 I llama_new_context_with_model: freq_base  = 10000.0
0.00.513.360 I llama_new_context_with_model: freq_scale = 1
0.00.546.025 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.546.072 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.546.193 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.547.609 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.547.615 I llama_new_context_with_model: graph nodes  = 601
0.00.547.615 I llama_new_context_with_model: graph splits = 1
0.00.547.631 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.130.564 I main: llama threadpool init, n_threads = 4
0.01.130.577 I 
0.01.130.672 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.130.673 I 
0.01.130.847 I sampler seed: 2516071048
0.01.130.854 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.130.858 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.130.859 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.130.859 I 
 increamically, a mischievous grin spreading across his face.

The mischievous grin faded, replaced by a thoughtful frown as he looked at the swirling patterns on the floor

0.12.170.922 I llama_perf_sampler_print:    sampling time =      49.31 ms /    33 runs   (    1.49 ms per token,   669.19 tokens per second)
0.12.170.925 I llama_perf_context_print:        load time =    1127.67 ms
0.12.170.926 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.170.941 I llama_perf_context_print:        eval time =   10958.17 ms /    32 runs   (  342.44 ms per token,     2.92 tokens per second)
0.12.170.942 I llama_perf_context_print:       total time =   11040.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m7.471s
user	50m18.911s
sys	0m6.545s
